.. py:class:: RefocusedEcho2DAnalysis(dataset, sequence = None)


   

   Analysis and calculation of Refocused Echo 2D data. 


   :Parameters:

       **dataset**
           The dataset to be analyzed.

       **sequence** : Sequence, optional
           The sequence object describing the experiment. (not currently used)














   ..
       !! processed by numpydoc !!

   .. py:method:: _smooth(elements=3)

      
      Used SVD to smooth the 2D data.


      :Parameters:

          **elements** : int, optional
              The number of elements to use in the smoothing, by default 3

      :Returns:

          np.ndarray
              The smoothed data.













      ..
          !! processed by numpydoc !!

   .. py:method:: plot2D(contour=True, smooth=False, norm='Normal', axs=None, fig=None)

      
      Create a 2D plot of the 2D relaxation data.


      :Parameters:

          **contour** : bool, optional
              Plot the contour of the data, by default True

          **norm** : str, optional
              Normalise the data, by default 'Normal'. Options are 'Normal' and 'tau2'. With 'tau2' normalisation, the data is normalised to the maximum of each row.

          **axs** : Axes, optional
              The axes to plot to, by default None

          **fig** : Figure, optional
              The figure to plot to, by default None














      ..
          !! processed by numpydoc !!

   .. py:method:: plot1D(axs=None, fig=None)

      
      Create a 1D plot of the 2D relaxation data.


      :Parameters:

          **axs** : Axes, optional
              The axes to plot to, by default None

          **fig** : Figure, optional
              The figure to plot to, by default None














      ..
          !! processed by numpydoc !!

   .. py:method:: find_optimal(type, SNR_target, target_time, target_step, averages=None)

      
      Calculate the optimal inter pulse delay for a given total measurment time, using either 4pulse or 5pulse data.


      :Parameters:

          **type** : str
              The type of data to use, either '4pDEER' or '5pDEER'

          **SNR_target** : float
              The Signal to Noise ratio target.

          **target_time** : float
              The target time in hours

          **target_step: float**
              The target step size in ns.

          **averages** : int, optional
              The total number of shots taken, by default None. If None, the
              number of shots will be calculated from the dataset.

      :Returns:

          tau1: float
              The calculated optimal tau1 in us

          tau2: float
              The calculated optimal tau2 in us













      ..
          !! processed by numpydoc !!

   .. py:method:: optimal_tau1(tau2=None)


