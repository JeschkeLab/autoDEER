.. py:class:: CarrPurcellAnalysis(dataset, sequence = None)


   

   Analysis and calculation of Carr Purcell decay. 


   :Parameters:

       **dataset**
           _description_














   ..
       !! processed by numpydoc !!

   .. py:attribute:: dataset

      

   .. py:attribute:: data

      

   .. py:method:: fit(type = 'mono')

      
      Fit the experimental CP decay


      :Parameters:

          **type** : str, optional
              Either a mono or double exponential decay model, by default "mono"














      ..
          !! processed by numpydoc !!

   .. py:method:: plot(norm = True, axs=None, fig=None)

      
      Plot the carr purcell decay with fit, if avaliable.


      :Parameters:

          **norm** : bool, optional
              Normalise the fit to a maximum of 1, by default True



      :Returns:

          Figure
              The figure.











      ..
          !! processed by numpydoc !!

   .. py:method:: check_decay(level=0.05)

      
      Checks that the data has decayed by over 5% in the entire length and less than 5% in the first 30% of the data.


      :Parameters:

          **level** : float, optional
              The level to check the decay, by default 0.05



      :Returns:

          int
              0 if both conditions are met, 1 if the decay is less than 5% in the first 30% of the data, and -1 if the decay is less than 5% in the entire length.











      ..
          !! processed by numpydoc !!

   .. py:method:: find_optimal(SNR_target, target_time, target_step, averages=None)

      
      Calculate the optimal inter pulse delay for a given total measurment
      time. 


      :Parameters:

          **SNR_target: float,**
              The Signal to Noise ratio target.

          **target_time** : float
              The target time in hours

          **target_shrt** : float
              The shot repettition time of target in seconds

          **target_step: float**
              The target step size in ns.

          **averages** : int, optional
              The total number of shots taken, by default None. If None, the
              number of shots will be calculated from the dataset.



      :Returns:

          float
              The calculated optimal time in us











      ..
          !! processed by numpydoc !!

