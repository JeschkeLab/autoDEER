:py:mod:`autodeer.hardware.ETH_awg_load`
========================================

.. py:module:: autodeer.hardware.ETH_awg_load



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   autodeer.hardware.ETH_awg_load.uwb_load
   autodeer.hardware.ETH_awg_load.uwb_eval_match
   autodeer.hardware.ETH_awg_load.find_max_pulse_length
   autodeer.hardware.ETH_awg_load.digitally_upconvert
   autodeer.hardware.ETH_awg_load.calc_percieved_freq
   autodeer.hardware.ETH_awg_load.match_filter_dc
   autodeer.hardware.ETH_awg_load.scipy_filter_dc



.. py:function:: uwb_load(matfile, options = dict(), verbosity=0, compress = True, mask=None, sequence=None)

   
   uwb_load This function is based upon the uwb_eval matlab function 
   developed by Andrin Doll. This is mostly a Python version of this software,
    for loading data generated by Doll style spectrometers.


   :Parameters:

       **matfile** : np.ndarray
           _description_

       **options** : dict, optional
           _description_, by default None

       **compress** : bool, optional
           Compresses all the scans into a single scan.














   ..
       !! processed by numpydoc !!

.. py:function:: uwb_eval_match(matfile, sequence=None, scans=None, mask=None, filter_pulse=None, filter_type='match', filter_width=None, verbosity=0, **kwargs)

   



   :Parameters:

       **matfile** : np.ndarray
           The data file to be loaded.

       **sequence** : ad.Sequence, optional
           The sequence used to generate the data.

       **scans** : list, optional
           The scans to be loaded.

       **mask** : list, optional
           The mask to be used.

       **filter_pulse** : ad.Pulse, optional
           The pulse to be used as a matched filter. If None, the maximum pulse width will be used. This is only used if filter_type is 'match'

       **filter_type** : str, optional
           The type of filter to be used. Options are 'match', 'cheby2' and 'butter. Default is 'match'

       **filter_width** : float, optional
           The width of the filter to be used. This is only used if filter_type is 'cheby2' or 'butter'

       **verbosity** : int, optional
           The verbosity of the function. Default is 0.














   ..
       !! processed by numpydoc !!

.. py:function:: find_max_pulse_length(estr)


.. py:function:: digitally_upconvert(t, complex, fc)


.. py:function:: calc_percieved_freq(sampling_freq, fc)


.. py:function:: match_filter_dc(pulse, t, win, offset_freq)


.. py:function:: scipy_filter_dc(dta, t, filter_width, offset_freq, filter_type='cheby2')


