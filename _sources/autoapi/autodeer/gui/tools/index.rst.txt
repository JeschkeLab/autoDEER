:py:mod:`autodeer.gui.tools`
============================

.. py:module:: autodeer.gui.tools



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   autodeer.gui.tools.WorkerSignals
   autodeer.gui.tools.Worker



Functions
~~~~~~~~~

.. autoapisummary::

   autodeer.gui.tools.create_save_name
   autodeer.gui.tools.getCIstring
   autodeer.gui.tools.load_epr_file
   autodeer.gui.tools.get_sequence_rows
   autodeer.gui.tools.fill_table
   autodeer.gui.tools.read_table
   autodeer.gui.tools.list_str_to_type
   autodeer.gui.tools.str_to_list_type
   autodeer.gui.tools.pyqt_table_from_dict
   autodeer.gui.tools.param_in_us
   autodeer.gui.tools.param_in_MHz
   autodeer.gui.tools.test_SNR



.. py:function:: create_save_name(SampleName, experiment, timestamp=True, ProjectName=None, Comment=None)


.. py:function:: getCIstring(Uncert, precision=2)


.. py:function:: load_epr_file(Object, store_location)


.. py:function:: get_sequence_rows(Sequence, names)


.. py:function:: fill_table(table, headers, rows, rowcount=None)


.. py:function:: read_table(table)


.. py:function:: list_str_to_type(list, type=int)


.. py:function:: str_to_list_type(string, type=int)


.. py:function:: pyqt_table_from_dict(table, dict)


.. py:function:: param_in_us(param)


.. py:function:: param_in_MHz(param)


.. py:function:: test_SNR(Application, data)

   
   Raises an error box if the SNR of the signal is less than 1.


   :Parameters:

       **data** : _type_
           _description_














   ..
       !! processed by numpydoc !!

.. py:class:: WorkerSignals


   Bases: :py:obj:`PyQt6.QtCore.QObject`

   
   Defines the signals available from a running worker thread.

   Supported signals are:

   finished
       No data

   error
       tuple (exctype, value, traceback.format_exc() )

   result
       object data returned from processing, anything

   progress
       int indicating % progress















   ..
       !! processed by numpydoc !!
   .. py:attribute:: finished

      

   .. py:attribute:: error

      

   .. py:attribute:: result

      


.. py:class:: Worker(fn, *args, **kwargs)


   Bases: :py:obj:`PyQt6.QtCore.QRunnable`

   
   Worker thread

   Inherits from QRunnable to handler worker thread setup, signals and wrap-up.

   :param callback: The function callback to run on this worker thread. Supplied args and
                    kwargs will be passed through to the runner.
   :type callback: function
   :param args: Arguments to pass to the callback function
   :param kwargs: Keywords to pass to the callback function















   ..
       !! processed by numpydoc !!
   .. py:attribute:: fn

      

   .. py:attribute:: args

      

   .. py:attribute:: kwargs

      

   .. py:attribute:: signals

      

   .. py:method:: run()

      
      Initialise the runner function with passed args, kwargs.
















      ..
          !! processed by numpydoc !!


