Search.setIndex({"alltitles": {"1. Connecting to the spectrometer": [[67, "connecting-to-the-spectrometer"]], "1. Defining the sequence": [[60, "defining-the-sequence"]], "1. User Inputs": [[50, "user-inputs"]], "2. Fieldsweep": [[50, "fieldsweep"]], "2. Starting an autoDEER Experiment": [[67, "starting-an-autodeer-experiment"]], "2. Tuning for the sequence": [[60, "tuning-for-the-sequence"]], "3. SRT Scan": [[50, "srt-scan"]], "3. Starting the sequence": [[60, "starting-the-sequence"]], "3. Viewing the analysis": [[67, "viewing-the-analysis"]], "4-pulse DEER": [[54, "pulse-deer"]], "4. Printing a PDF lab-report": [[67, "printing-a-pdf-lab-report"]], "4. Resonator Profile": [[50, "resonator-profile"]], "4. Stopping the sequence": [[60, "stopping-the-sequence"]], "5-pulse DEER": [[54, "id1"]], "5. Data analysis": [[60, "data-analysis"]], "5. Relaxation Studies": [[50, "relaxation-studies"]], "6. Optimising DEER Sequence Parameters": [[50, "optimising-deer-sequence-parameters"]], "7-pulse DEER": [[54, "id2"]], "7. Initial DEER Experiment": [[50, "initial-deer-experiment"]], "8. Final DEER Experiment": [[50, "final-deer-experiment"]], "API Reference": [[1, "api-reference"], [47, "api-reference"]], "API doc": [[49, "api-doc"]], "Advanced Mode": [[55, "advanced-mode"], [67, "advanced-mode"]], "After an Experiment": [[55, "after-an-experiment"]], "Analysis Modules": [[49, "analysis-modules"]], "Attributes": [[12, "attributes"], [15, "attributes"], [21, "attributes"], [26, "attributes"], [27, "attributes"], [28, "attributes"], [32, "attributes"], [33, "attributes"], [34, "attributes"], [36, "attributes"], [37, "attributes"], [38, "attributes"], [40, "attributes"], [41, "attributes"], [43, "attributes"], [45, "attributes"]], "Bruker Interface": [[58, "bruker-interface"], [61, "bruker-interface"]], "BrukerMPFU": [[56, "brukermpfu"]], "Building docs": [[0, "building-docs"]], "Building the documentation": [[0, "building-the-documentation"]], "Calling a Logger": [[65, "calling-a-logger"]], "Chirped pulses": [[62, "chirped-pulses"]], "Classes": [[13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [19, "classes"], [21, "classes"], [22, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [49, "classes"]], "Configuration File": [[56, "configuration-file"]], "Configuration file": [[58, "configuration-file"]], "Connecting to a spectrometer": [[55, "connecting-to-a-spectrometer"]], "Contributing Guide": [[64, "contributing-guide"]], "Creating a Custom Sequence": [[62, "creating-a-custom-sequence"]], "Creating a custom interface": [[59, "creating-a-custom-interface"]], "Creating your first sequence": [[62, "creating-your-first-sequence"]], "Custom Interface": [[61, "custom-interface"]], "Custom pulses": [[62, "custom-pulses"]], "DEER": [[53, "deer"]], "DEER Variants": [[54, "deer-variants"]], "DEER versions": [[54, "deer-versions"]], "Developing": [[66, "developing"]], "During an Experiment": [[55, "during-an-experiment"]], "ETHAWG": [[56, "ethawg"]], "Examples": [[56, "examples"]], "FAQs": [[52, "faqs"]], "Features included in autoEPR:": [[63, "features-included-in-autoepr"]], "Field Sweep": [[53, "field-sweep"]], "Fully automatic experiment (recommended)": [[55, "fully-automatic-experiment-recommended"]], "Functions": [[12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [22, "functions"], [25, "functions"], [27, "functions"], [28, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [33, "functions"], [34, "functions"], [35, "functions"], [37, "functions"], [40, "functions"], [41, "functions"], [42, "functions"], [43, "functions"], [45, "functions"], [46, "functions"], [49, "functions"]], "GUI Interface": [[55, "gui-interface"]], "Getting Started": [[60, "getting-started"]], "Getting started": [[58, "getting-started"]], "I/O": [[49, "i-o"]], "Installation": [[51, "installation"]], "Installing Python": [[52, "installing-python"]], "Installing Python CentOS 7": [[52, "installing-python-centos-7"]], "Installing Python Windows": [[52, "installing-python-windows"]], "Installing from source": [[51, "installing-from-source"]], "Installing packages": [[0, "installing-packages"]], "Interfaces": [[49, "interfaces"], [61, "interfaces"]], "Jupyter Interface": [[53, "jupyter-interface"]], "Limitations": [[50, "limitations"]], "Logging Levels": [[65, "logging-levels"]], "Logging:": [[65, "logging"]], "Logs": [[65, "logs"]], "Main Classes": [[49, "main-classes"]], "Methods": [[12, "methods"], [41, "methods"]], "Module Contents": [[12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [40, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"]], "Next Steps": [[60, "next-steps"]], "Optimisation": [[49, "optimisation"]], "Overview": [[56, "overview"]], "Package Contents": [[25, "package-contents"], [41, "package-contents"]], "Parameter": [[50, "parameter"]], "Plotting": [[49, "plotting"]], "Posting a log message": [[65, "posting-a-log-message"]], "Pulses": [[49, "pulses"]], "References": [[54, "references"]], "References:": [[41, "references"], [42, "references"], [46, "references"]], "Release Notes": [[68, "release-notes"]], "Resonator Profile": [[53, "resonator-profile"]], "Returns": [[12, "returns"], [41, "returns"]], "Rollover": [[65, "rollover"]], "Selecting a phase cycle": [[54, "selecting-a-phase-cycle"]], "Selecting a version": [[54, "selecting-a-version"]], "Sequences": [[49, "sequences"]], "Setting up your script": [[60, "setting-up-your-script"]], "Setup": [[53, "setup"]], "Starting an experiment": [[55, "starting-an-experiment"]], "Starting the logger": [[65, "starting-the-logger"]], "Steps Explained": [[50, "steps-explained"]], "Submodules": [[25, "submodules"], [39, "submodules"], [41, "submodules"]], "Subpackages": [[41, "subpackages"]], "Termination Criteria": [[49, "termination-criteria"]], "The Automated Algorithum": [[50, "the-automated-algorithum"]], "The solution": [[52, "the-solution"]], "Tutorial": [[69, "tutorial"]], "Using Shaped and Chirped pulses": [[62, "using-shaped-and-chirped-pulses"]], "Utilities": [[49, "utilities"], [49, "id4"]], "Version 0.7.0 (2024-04-01):": [[68, "version-0-7-0-2024-04-01"]], "Version 0.8.0 (TBA):": [[68, "version-0-8-0-tba"]], "Welcome to autoDEER!": [[48, "welcome-to-autodeer"]], "What is not currently supported?": [[62, "what-is-not-currently-supported"]], "autoDEER": [[57, "autodeer"]], "autoDEER GUI": [[67, "autodeer-gui"]], "autoDEER\u2019s Key Features": [[48, "autodeer-s-key-features"]], "autoEPR": [[63, "autoepr"]], "autodeer": [[41, "module-autodeer"]], "autodeer.DEER_analysis": [[12, "module-autodeer.DEER_analysis"]], "autodeer.FieldSweep": [[13, "module-autodeer.FieldSweep"]], "autodeer.Logging": [[14, "module-autodeer.Logging"]], "autodeer.Relaxation": [[15, "module-autodeer.Relaxation"]], "autodeer.ResPro": [[16, "module-autodeer.ResPro"]], "autodeer.TwoD_Experiment": [[17, "module-autodeer.TwoD_Experiment"]], "autodeer._version": [[18, "module-autodeer._version"]], "autodeer.classes": [[19, "module-autodeer.classes"]], "autodeer.colors": [[20, "module-autodeer.colors"]], "autodeer.criteria": [[21, "module-autodeer.criteria"]], "autodeer.dataset": [[22, "module-autodeer.dataset"]], "autodeer.gui": [[25, "module-autodeer.gui"]], "autodeer.gui.__main__": [[23, "module-autodeer.gui.__main__"]], "autodeer.gui.autoDEER_worker": [[24, "module-autodeer.gui.autoDEER_worker"]], "autodeer.gui.log": [[26, "module-autodeer.gui.log"]], "autodeer.gui.main": [[27, "module-autodeer.gui.main"]], "autodeer.gui.quickdeer": [[28, "module-autodeer.gui.quickdeer"]], "autodeer.gui.test_main": [[29, "module-autodeer.gui.test_main"]], "autodeer.gui.tools": [[30, "module-autodeer.gui.tools"]], "autodeer.hardware": [[39, "module-autodeer.hardware"]], "autodeer.hardware.Bruker_AWG": [[31, "module-autodeer.hardware.Bruker_AWG"]], "autodeer.hardware.Bruker_MPFU": [[32, "module-autodeer.hardware.Bruker_MPFU"]], "autodeer.hardware.Bruker_tools": [[33, "module-autodeer.hardware.Bruker_tools"]], "autodeer.hardware.ETH_awg": [[34, "module-autodeer.hardware.ETH_awg"]], "autodeer.hardware.ETH_awg_load": [[35, "module-autodeer.hardware.ETH_awg_load"]], "autodeer.hardware.XeprAPI_link": [[36, "module-autodeer.hardware.XeprAPI_link"]], "autodeer.hardware.dummy": [[37, "module-autodeer.hardware.dummy"]], "autodeer.hardware.dummy_xepr": [[38, "module-autodeer.hardware.dummy_xepr"]], "autodeer.hardware.xepr_experiments": [[40, "module-autodeer.hardware.xepr_experiments"]], "autodeer.pulses": [[42, "module-autodeer.pulses"]], "autodeer.reporter": [[43, "module-autodeer.reporter"]], "autodeer.sequences": [[44, "module-autodeer.sequences"]], "autodeer.tools": [[45, "module-autodeer.tools"]], "autodeer.utils": [[46, "module-autodeer.utils"]], "nDEER": [[54, "ndeer"]]}, "docnames": ["README", "_templates/autoapi/index", "_templates/autoapi/python/attribute", "_templates/autoapi/python/class", "_templates/autoapi/python/data", "_templates/autoapi/python/exception", "_templates/autoapi/python/function", "_templates/autoapi/python/method", "_templates/autoapi/python/module", "_templates/autoapi/python/package", "_templates/autoapi/python/property", "_templates/custom_class_template", "autoapi/autodeer/DEER_analysis/index", "autoapi/autodeer/FieldSweep/index", "autoapi/autodeer/Logging/index", "autoapi/autodeer/Relaxation/index", "autoapi/autodeer/ResPro/index", "autoapi/autodeer/TwoD_Experiment/index", "autoapi/autodeer/_version/index", "autoapi/autodeer/classes/index", "autoapi/autodeer/colors/index", "autoapi/autodeer/criteria/index", "autoapi/autodeer/dataset/index", "autoapi/autodeer/gui/__main__/index", "autoapi/autodeer/gui/autoDEER_worker/index", "autoapi/autodeer/gui/index", "autoapi/autodeer/gui/log/index", "autoapi/autodeer/gui/main/index", "autoapi/autodeer/gui/quickdeer/index", "autoapi/autodeer/gui/test_main/index", "autoapi/autodeer/gui/tools/index", "autoapi/autodeer/hardware/Bruker_AWG/index", "autoapi/autodeer/hardware/Bruker_MPFU/index", "autoapi/autodeer/hardware/Bruker_tools/index", "autoapi/autodeer/hardware/ETH_awg/index", "autoapi/autodeer/hardware/ETH_awg_load/index", "autoapi/autodeer/hardware/XeprAPI_link/index", "autoapi/autodeer/hardware/dummy/index", "autoapi/autodeer/hardware/dummy_xepr/index", "autoapi/autodeer/hardware/index", "autoapi/autodeer/hardware/xepr_experiments/index", "autoapi/autodeer/index", "autoapi/autodeer/pulses/index", "autoapi/autodeer/reporter/index", "autoapi/autodeer/sequences/index", "autoapi/autodeer/tools/index", "autoapi/autodeer/utils/index", "autoapi/index", "index", "source/API_docs", "source/Algorithum", "source/Install", "source/Install_python", "source/Jupyter_interface", "source/autoDEER/DEER_variants", "source/autoDEER/GUI_interface", "source/autoDEER/config_file", "source/autoDEER/index", "source/autoEPR/Bruker_interface", "source/autoEPR/Custom_interface", "source/autoEPR/Getting_Started", "source/autoEPR/Interface", "source/autoEPR/Sequencer", "source/autoEPR/index", "source/contributing", "source/dev_guide/Logging", "source/dev_guide/index", "source/gui_guide", "source/releasenotes", "source/tutorial"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["README.md", "_templates/autoapi/index.rst", "_templates/autoapi/python/attribute.rst", "_templates/autoapi/python/class.rst", "_templates/autoapi/python/data.rst", "_templates/autoapi/python/exception.rst", "_templates/autoapi/python/function.rst", "_templates/autoapi/python/method.rst", "_templates/autoapi/python/module.rst", "_templates/autoapi/python/package.rst", "_templates/autoapi/python/property.rst", "_templates/custom_class_template.rst", "autoapi/autodeer/DEER_analysis/index.rst", "autoapi/autodeer/FieldSweep/index.rst", "autoapi/autodeer/Logging/index.rst", "autoapi/autodeer/Relaxation/index.rst", "autoapi/autodeer/ResPro/index.rst", "autoapi/autodeer/TwoD_Experiment/index.rst", "autoapi/autodeer/_version/index.rst", "autoapi/autodeer/classes/index.rst", "autoapi/autodeer/colors/index.rst", "autoapi/autodeer/criteria/index.rst", "autoapi/autodeer/dataset/index.rst", "autoapi/autodeer/gui/__main__/index.rst", "autoapi/autodeer/gui/autoDEER_worker/index.rst", "autoapi/autodeer/gui/index.rst", "autoapi/autodeer/gui/log/index.rst", "autoapi/autodeer/gui/main/index.rst", "autoapi/autodeer/gui/quickdeer/index.rst", "autoapi/autodeer/gui/test_main/index.rst", "autoapi/autodeer/gui/tools/index.rst", "autoapi/autodeer/hardware/Bruker_AWG/index.rst", "autoapi/autodeer/hardware/Bruker_MPFU/index.rst", "autoapi/autodeer/hardware/Bruker_tools/index.rst", "autoapi/autodeer/hardware/ETH_awg/index.rst", "autoapi/autodeer/hardware/ETH_awg_load/index.rst", "autoapi/autodeer/hardware/XeprAPI_link/index.rst", "autoapi/autodeer/hardware/dummy/index.rst", "autoapi/autodeer/hardware/dummy_xepr/index.rst", "autoapi/autodeer/hardware/index.rst", "autoapi/autodeer/hardware/xepr_experiments/index.rst", "autoapi/autodeer/index.rst", "autoapi/autodeer/pulses/index.rst", "autoapi/autodeer/reporter/index.rst", "autoapi/autodeer/sequences/index.rst", "autoapi/autodeer/tools/index.rst", "autoapi/autodeer/utils/index.rst", "autoapi/index.rst", "index.rst", "source/API_docs.rst", "source/Algorithum.rst", "source/Install.rst", "source/Install_python.rst", "source/Jupyter_interface.rst", "source/autoDEER/DEER_variants.rst", "source/autoDEER/GUI_interface.rst", "source/autoDEER/config_file.rst", "source/autoDEER/index.rst", "source/autoEPR/Bruker_interface.rst", "source/autoEPR/Custom_interface.rst", "source/autoEPR/Getting_Started.rst", "source/autoEPR/Interface.rst", "source/autoEPR/Sequencer.rst", "source/autoEPR/index.rst", "source/contributing.rst", "source/dev_guide/Logging.md", "source/dev_guide/index.rst", "source/gui_guide.rst", "source/releasenotes.rst", "source/tutorial.rst"], "indexentries": {"__add__() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter.__add__", false]], "__add__() (autodeer.criteria method)": [[41, "autodeer.Criteria.__add__", false]], "__add__() (autodeer.criteria.criteria method)": [[21, "autodeer.criteria.Criteria.__add__", false]], "__eq__() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter.__eq__", false]], "__getitem__() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[38, "autodeer.hardware.dummy_xepr.dummy_cur_exp.__getitem__", false]], "__getitem__() (autodeer.hardware.dummy_xepr.dummy_hidden method)": [[38, "autodeer.hardware.dummy_xepr.dummy_hidden.__getitem__", false]], "__mul__() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter.__mul__", false]], "__rmul__() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter.__rmul__", false]], "__str__() (autodeer.hardware.bruker_tools.psphasecycle method)": [[33, "autodeer.hardware.Bruker_tools.PSPhaseCycle.__str__", false]], "__str__() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel.__str__", false]], "__str__() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse.__str__", false]], "__str__() (autodeer.sequence method)": [[41, "autodeer.Sequence.__str__", false], [41, "id17", false], [41, "id42", false]], "__str__() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence.__str__", false]], "__sub__() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter.__sub__", false]], "__version__ (in module autodeer)": [[41, "autodeer.__version__", false]], "__version__ (in module autodeer._version)": [[18, "autodeer._version.__version__", false]], "_addawgpulse() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._addAWGPulse", false]], "_addawgpulse() (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools._addAWGPulse", false]], "_adddef() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._addDef", false]], "_addexp() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._addExp", false]], "_addphasecycle() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._addPhaseCycle", false]], "_addphasecycle() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse._addPhaseCycle", false]], "_addscanloop() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._addScanLoop", false]], "_build() (autodeer.reporter method)": [[41, "autodeer.Reporter._build", false]], "_build() (autodeer.reporter.reporter method)": [[43, "autodeer.reporter.Reporter._build", false]], "_build_exp_struct() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_exp_struct", false]], "_build_methods() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker._build_methods", false]], "_build_parvar() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_parvar", false]], "_build_phase_cycle() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_phase_cycle", false]], "_build_pulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_pulse", false]], "_build_sequence() (autodeer.carrpurcellsequence method)": [[41, "autodeer.CarrPurcellSequence._build_sequence", false]], "_build_sequence() (autodeer.refocusedecho2dsequence method)": [[41, "autodeer.RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (autodeer.resonatorprofilesequence method)": [[41, "autodeer.ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.carrpurcellsequence method)": [[44, "autodeer.sequences.CarrPurcellSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.refocusedecho2dsequence method)": [[44, "autodeer.sequences.RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.resonatorprofilesequence method)": [[44, "autodeer.sequences.ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.twtprofilesequence method)": [[44, "autodeer.sequences.TWTProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.twtprofilesequence method)": [[41, "autodeer.TWTProfileSequence._build_sequence", false]], "_buildfmam() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse._buildFMAM", false]], "_buildphasecycle() (autodeer.sequence method)": [[41, "autodeer.Sequence._buildPhaseCycle", false], [41, "id33", false], [41, "id8", false]], "_buildphasecycle() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence._buildPhaseCycle", false]], "_calc_fft() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse._calc_fft", false]], "_check_sequence() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._check_sequence", false]], "_checkrect() (autodeer.sequence method)": [[41, "autodeer.Sequence._checkRect", false], [41, "id16", false], [41, "id41", false]], "_checkrect() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence._checkRect", false]], "_cmpl_def() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._cmpl_def", false]], "_cmpl_exp() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._cmpl_Exp", false]], "_convert_to_delay() (autodeer.sequence method)": [[41, "autodeer.Sequence._convert_to_delay", false], [41, "id14", false], [41, "id39", false]], "_convert_to_delay() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence._convert_to_delay", false]], "_convert_to_pulses() (autodeer.sequence method)": [[41, "autodeer.Sequence._convert_to_pulses", false], [41, "id15", false], [41, "id40", false]], "_convert_to_pulses() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence._convert_to_pulses", false]], "_data_transpose() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis._data_transpose", false]], "_detect() (autodeer.hardware.bruker_tools.psphasecycle method)": [[33, "autodeer.hardware.Bruker_tools.PSPhaseCycle._detect", false]], "_estimate_time() (autodeer.sequence method)": [[41, "autodeer.Sequence._estimate_time", false], [41, "id32", false], [41, "id7", false]], "_estimate_time() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence._estimate_time", false]], "_expdefs() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._ExpDefs", false]], "_freq_sweep() (autodeer.hardware.xepr_experiments.pulseprofile method)": [[40, "autodeer.hardware.xepr_experiments.PulseProfile._freq_sweep", false]], "_from_dict() (autodeer.classes.parameter static method)": [[19, "autodeer.classes.Parameter._from_dict", false]], "_from_dict() (autodeer.pulses.pulse class method)": [[42, "autodeer.pulses.Pulse._from_dict", false]], "_from_dict() (autodeer.sequence class method)": [[41, "autodeer.Sequence._from_dict", false], [41, "id22", false], [41, "id47", false]], "_from_dict() (autodeer.sequences.sequence class method)": [[44, "autodeer.sequences.Sequence._from_dict", false]], "_from_json() (autodeer.classes.parameter class method)": [[19, "autodeer.classes.Parameter._from_json", false]], "_from_json() (autodeer.pulses.pulse class method)": [[42, "autodeer.pulses.Pulse._from_json", false]], "_from_json() (autodeer.sequence class method)": [[41, "autodeer.Sequence._from_json", false], [41, "id23", false], [41, "id48", false]], "_from_json() (autodeer.sequences.sequence class method)": [[44, "autodeer.sequences.Sequence._from_json", false]], "_gen_eseem() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy._gen_ESEEM", false]], "_get_cur_exp_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink._get_cur_exp_global", false]], "_get_exp() (autodeer.hardware.xepr_experiments.eldortune method)": [[40, "autodeer.hardware.xepr_experiments.ELDORtune._get_exp", false]], "_get_xepr_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink._get_Xepr_global", false]], "_launch_complex_thread() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG._launch_complex_thread", false]], "_launch_complex_thread() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU._launch_complex_thread", false]], "_main() (autodeer.hardware.bruker_tools.psphasecycle method)": [[33, "autodeer.hardware.Bruker_tools.PSPhaseCycle._main", false]], "_mpfu() (autodeer.hardware.bruker_tools.psphasecycle method)": [[33, "autodeer.hardware.Bruker_tools.PSPhaseCycle._MPFU", false]], "_mpfu_channels() (in module autodeer.hardware.bruker_mpfu)": [[32, "autodeer.hardware.Bruker_MPFU._MPFU_channels", false]], "_new_delay() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._new_delay", false]], "_new_pulse() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._new_pulse", false]], "_new_var() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel._new_var", false]], "_pcyc_str() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse._pcyc_str", false]], "_process_fit() (autodeer.resonatorprofileanalysis method)": [[41, "autodeer.ResonatorProfileAnalysis._process_fit", false]], "_process_fit() (autodeer.respro.resonatorprofileanalysis method)": [[16, "autodeer.ResPro.ResonatorProfileAnalysis._process_fit", false]], "_set_cur_exp_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_cur_exp_global", false]], "_set_cur_exp_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_cur_exp_param", false]], "_set_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_hidden_param", false]], "_set_xepr_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_Xepr_global", false]], "_setup_echo() (autodeer.hardware.xepr_experiments.mpfutune method)": [[40, "autodeer.hardware.xepr_experiments.MPFUtune._setup_echo", false]], "_setup_exp() (autodeer.hardware.xepr_experiments.eldortune method)": [[40, "autodeer.hardware.xepr_experiments.ELDORtune._setup_exp", false]], "_setup_exp() (autodeer.hardware.xepr_experiments.pulseprofile method)": [[40, "autodeer.hardware.xepr_experiments.PulseProfile._setup_exp", false]], "_similate_respro() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy._similate_respro", false]], "_simulate_2d_relax() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy._simulate_2D_relax", false]], "_simulate_cp() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy._simulate_CP", false]], "_simulate_deer() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy._simulate_deer", false]], "_simulate_field_sweep() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy._simulate_field_sweep", false]], "_simulate_reptimescan() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy._simulate_reptimescan", false]], "_simulate_t2() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy._simulate_T2", false]], "_stability_check() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis._stability_check", false]], "_to_dict() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter._to_dict", false]], "_to_dict() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse._to_dict", false]], "_to_dict() (autodeer.sequence method)": [[41, "autodeer.Sequence._to_dict", false], [41, "id19", false], [41, "id44", false]], "_to_dict() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence._to_dict", false]], "_to_json() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter._to_json", false]], "_to_json() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse._to_json", false]], "_to_json() (autodeer.sequence method)": [[41, "autodeer.Sequence._to_json", false], [41, "id20", false], [41, "id45", false]], "_to_json() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence._to_json", false]], "_xepr_retry() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink._xepr_retry", false]], "abort_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[38, "autodeer.hardware.dummy_xepr.dummy_api.abort_exp", false]], "abort_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.abort_exp", false]], "acquire_dataset() (autodeer.classes.interface method)": [[19, "autodeer.classes.Interface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.dummy.dummyinterface method)": [[37, "autodeer.hardware.dummy.dummyInterface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_dataset", false]], "acquire_dataset_from_matlab() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.acquire_dataset_from_matlab", false]], "acquire_scan() (autodeer.hardware.dummy_xepr.dummy_api method)": [[38, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan", false]], "acquire_scan() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan", false]], "acquire_scan_2d() (autodeer.hardware.dummy_xepr.dummy_api method)": [[38, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan_2d", false]], "acquire_scan_2d() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan_2d", false]], "acquire_scan_at() (autodeer.hardware.dummy_xepr.dummy_api method)": [[38, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan_at", false]], "acquire_scan_at() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan_at", false]], "add_axis() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter.add_axis", false]], "add_code_block() (autodeer.reporter method)": [[41, "autodeer.Reporter.add_code_block", false]], "add_code_block() (autodeer.reporter.reporter method)": [[43, "autodeer.reporter.Reporter.add_code_block", false]], "add_eseem_avg() (autodeer.deersequence method)": [[41, "autodeer.DEERSequence.add_ESEEM_avg", false]], "add_eseem_avg() (autodeer.sequences.deersequence method)": [[44, "autodeer.sequences.DEERSequence.add_ESEEM_avg", false]], "add_figure() (autodeer.reporter method)": [[41, "autodeer.Reporter.add_figure", false]], "add_figure() (autodeer.reporter.reporter method)": [[43, "autodeer.reporter.Reporter.add_figure", false]], "add_new_entry() (autodeer.gui.log.logdialog method)": [[26, "autodeer.gui.log.LogDialog.add_new_entry", false]], "add_new_section() (autodeer.reporter method)": [[41, "autodeer.Reporter.add_new_section", false]], "add_new_section() (autodeer.reporter.reporter method)": [[43, "autodeer.reporter.Reporter.add_new_section", false]], "add_noise() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy.add_noise", false]], "add_page_break() (autodeer.reporter method)": [[41, "autodeer.Reporter.add_page_break", false]], "add_page_break() (autodeer.reporter.reporter method)": [[43, "autodeer.reporter.Reporter.add_page_break", false]], "add_phaseshift() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy.add_phaseshift", false]], "add_space() (autodeer.reporter method)": [[41, "autodeer.Reporter.add_space", false]], "add_space() (autodeer.reporter.reporter method)": [[43, "autodeer.reporter.Reporter.add_space", false]], "add_table() (autodeer.reporter method)": [[41, "autodeer.Reporter.add_table", false]], "add_table() (autodeer.reporter.reporter method)": [[43, "autodeer.reporter.Reporter.add_table", false]], "add_text() (autodeer.reporter method)": [[41, "autodeer.Reporter.add_text", false]], "add_text() (autodeer.reporter.reporter method)": [[43, "autodeer.reporter.Reporter.add_text", false]], "add_title() (autodeer.reporter method)": [[41, "autodeer.Reporter.add_title", false]], "add_title() (autodeer.reporter.reporter method)": [[43, "autodeer.reporter.Reporter.add_title", false]], "addpulse() (autodeer.sequence method)": [[41, "autodeer.Sequence.addPulse", false], [41, "id31", false], [41, "id6", false]], "addpulse() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence.addPulse", false]], "advanced_mode_inputs() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.advanced_mode_inputs", false]], "advanced_mode_inputs() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.advanced_mode_inputs", false]], "app (in module autodeer.gui.__main__)": [[23, "autodeer.gui.__main__.app", false]], "app (in module autodeer.gui.main)": [[27, "autodeer.gui.main.app", false]], "app (in module autodeer.gui.quickdeer)": [[28, "autodeer.gui.quickdeer.app", false]], "aqexprun() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[38, "autodeer.hardware.dummy_xepr.dummy_cur_exp.aqExpRun", false]], "aqexpselect() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqExpSelect", false]], "aqpgcompile() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgCompile", false]], "aqpgdefload() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgDefLoad", false]], "aqpgdefsaveas() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgDefSaveAs", false]], "aqpgload() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgLoad", false]], "aqpgsaveas() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgSaveAs", false]], "aqpgshowprg() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgShowPrg", false]], "autodeer": [[41, "module-autodeer", false]], "autodeer._version": [[18, "module-autodeer._version", false]], "autodeer.classes": [[19, "module-autodeer.classes", false]], "autodeer.colors": [[20, "module-autodeer.colors", false]], "autodeer.criteria": [[21, "module-autodeer.criteria", false]], "autodeer.dataset": [[22, "module-autodeer.dataset", false]], "autodeer.deer_analysis": [[12, "module-autodeer.DEER_analysis", false]], "autodeer.fieldsweep": [[13, "module-autodeer.FieldSweep", false]], "autodeer.gui": [[25, "module-autodeer.gui", false]], "autodeer.gui.__main__": [[23, "module-autodeer.gui.__main__", false]], "autodeer.gui.autodeer_worker": [[24, "module-autodeer.gui.autoDEER_worker", false]], "autodeer.gui.log": [[26, "module-autodeer.gui.log", false]], "autodeer.gui.main": [[27, "module-autodeer.gui.main", false]], "autodeer.gui.quickdeer": [[28, "module-autodeer.gui.quickdeer", false]], "autodeer.gui.test_main": [[29, "module-autodeer.gui.test_main", false]], "autodeer.gui.tools": [[30, "module-autodeer.gui.tools", false]], "autodeer.hardware": [[39, "module-autodeer.hardware", false]], "autodeer.hardware.bruker_awg": [[31, "module-autodeer.hardware.Bruker_AWG", false]], "autodeer.hardware.bruker_mpfu": [[32, "module-autodeer.hardware.Bruker_MPFU", false]], "autodeer.hardware.bruker_tools": [[33, "module-autodeer.hardware.Bruker_tools", false]], "autodeer.hardware.dummy": [[37, "module-autodeer.hardware.dummy", false]], "autodeer.hardware.dummy_xepr": [[38, "module-autodeer.hardware.dummy_xepr", false]], "autodeer.hardware.eth_awg": [[34, "module-autodeer.hardware.ETH_awg", false]], "autodeer.hardware.eth_awg_load": [[35, "module-autodeer.hardware.ETH_awg_load", false]], "autodeer.hardware.xepr_experiments": [[40, "module-autodeer.hardware.xepr_experiments", false]], "autodeer.hardware.xeprapi_link": [[36, "module-autodeer.hardware.XeprAPI_link", false]], "autodeer.logging": [[14, "module-autodeer.Logging", false]], "autodeer.pulses": [[42, "module-autodeer.pulses", false]], "autodeer.relaxation": [[15, "module-autodeer.Relaxation", false]], "autodeer.reporter": [[43, "module-autodeer.reporter", false]], "autodeer.respro": [[16, "module-autodeer.ResPro", false]], "autodeer.sequences": [[44, "module-autodeer.sequences", false]], "autodeer.tools": [[45, "module-autodeer.tools", false]], "autodeer.twod_experiment": [[17, "module-autodeer.TwoD_Experiment", false]], "autodeer.utils": [[46, "module-autodeer.utils", false]], "autodeersignals (class in autodeer.gui.autodeer_worker)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals", false]], "autodeerui (class in autodeer.gui)": [[25, "autodeer.gui.autoDEERUI", false]], "autodeerui (class in autodeer.gui.main)": [[27, "autodeer.gui.main.autoDEERUI", false]], "autodeerworker (class in autodeer.gui.autodeer_worker)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker", false]], "autoeprdecoder() (in module autodeer)": [[41, "autodeer.autoEPRDecoder", false], [41, "id1", false], [41, "id26", false]], "autoeprdecoder() (in module autodeer.utils)": [[46, "autodeer.utils.autoEPRDecoder", false]], "background_func() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.background_func", false]], "bg_thread() (in module autodeer.hardware.eth_awg)": [[34, "autodeer.hardware.ETH_awg.bg_thread", false]], "brukerawg (class in autodeer.hardware.bruker_awg)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG", false]], "brukermpfu (class in autodeer.hardware.bruker_mpfu)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU", false]], "bspline_extra() (in module autodeer.respro)": [[16, "autodeer.ResPro.BSpline_extra", false]], "build__lowpass_butter_filter() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.build__lowpass_butter_filter", false]], "build_default_pulses() (in module autodeer.pulses)": [[42, "autodeer.pulses.build_default_pulses", false]], "build_shape() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse.build_shape", false]], "build_spectrum() (in module autodeer.fieldsweep)": [[13, "autodeer.FieldSweep.build_spectrum", false]], "build_table() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse.build_table", false]], "build_table() (in module autodeer)": [[41, "autodeer.build_table", false], [41, "id0", false]], "build_table() (in module autodeer.utils)": [[46, "autodeer.utils.build_table", false]], "build_unique_progtable() (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.build_unique_progtable", false]], "calc_correction_factor() (in module autodeer)": [[41, "autodeer.calc_correction_factor", false]], "calc_correction_factor() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.calc_correction_factor", false]], "calc_d0() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG.calc_d0", false]], "calc_d0() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.calc_d0", false]], "calc_d0() (autodeer.hardware.xepr_experiments.mpfutune method)": [[40, "autodeer.hardware.xepr_experiments.MPFUtune.calc_d0", false]], "calc_d0_from_hahn_echo() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.calc_d0_from_Hahn_Echo", false]], "calc_deer_settings() (in module autodeer)": [[41, "autodeer.calc_deer_settings", false]], "calc_deer_settings() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.calc_deer_settings", false]], "calc_gyro() (autodeer.fieldsweep.fieldsweepanalysis method)": [[13, "autodeer.FieldSweep.FieldSweepAnalysis.calc_gyro", false]], "calc_gyro() (autodeer.fieldsweepanalysis method)": [[41, "autodeer.FieldSweepAnalysis.calc_gyro", false]], "calc_identifiability() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.calc_identifiability", false]], "calc_noise_level() (autodeer.fieldsweep.fieldsweepanalysis method)": [[13, "autodeer.FieldSweep.FieldSweepAnalysis.calc_noise_level", false]], "calc_noise_level() (autodeer.fieldsweepanalysis method)": [[41, "autodeer.FieldSweepAnalysis.calc_noise_level", false]], "calc_optimal_reptime() (autodeer.relaxation.reptimeanalysis method)": [[15, "autodeer.Relaxation.ReptimeAnalysis.calc_optimal_reptime", false]], "calc_optimal_reptime() (autodeer.reptimeanalysis method)": [[41, "autodeer.ReptimeAnalysis.calc_optimal_reptime", false]], "calc_overlap() (in module autodeer.respro)": [[16, "autodeer.ResPro.calc_overlap", false]], "calc_percieved_freq() (in module autodeer.hardware.eth_awg_load)": [[35, "autodeer.hardware.ETH_awg_load.calc_percieved_freq", false]], "calc_rel_positions() (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.calc_rel_positions", false]], "calculate_noise_level() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_noise_level", false]], "calculate_optimal() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_optimal", false]], "calculate_snr_threshold() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_snr_threshold", false]], "calibratefreq() (in module autodeer.hardware.xepr_experiments)": [[40, "autodeer.hardware.xepr_experiments.CalibrateFreq", false]], "carrpurcellanalysis (class in autodeer)": [[41, "autodeer.CarrPurcellAnalysis", false]], "carrpurcellanalysis (class in autodeer.relaxation)": [[15, "autodeer.Relaxation.CarrPurcellAnalysis", false]], "carrpurcellsequence (class in autodeer)": [[41, "autodeer.CarrPurcellSequence", false]], "carrpurcellsequence (class in autodeer.sequences)": [[44, "autodeer.sequences.CarrPurcellSequence", false]], "ceil() (in module autodeer.respro)": [[16, "autodeer.ResPro.ceil", false]], "change_dimensions() (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.change_dimensions", false]], "change_lo() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.change_LO", false]], "change_lo() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.change_LO", false]], "change_log_level() (in module autodeer.logging)": [[14, "autodeer.Logging.change_log_level", false]], "check_cp() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.check_CP", false]], "check_cp() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.check_CP", false]], "check_decay() (autodeer.carrpurcellanalysis method)": [[41, "autodeer.CarrPurcellAnalysis.check_decay", false]], "check_decay() (autodeer.relaxation.carrpurcellanalysis method)": [[15, "autodeer.Relaxation.CarrPurcellAnalysis.check_decay", false]], "check_t2() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.check_T2", false]], "check_t2() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.check_T2", false]], "check_variable() (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.check_variable", false]], "checkpulsespel() (autodeer.hardware.bruker_tools.psparvar method)": [[33, "autodeer.hardware.Bruker_tools.PSparvar.checkPulseSpel", false]], "chirppulse (class in autodeer.pulses)": [[42, "autodeer.pulses.ChirpPulse", false]], "clear_log() (autodeer.gui.log.logdialog method)": [[26, "autodeer.gui.log.LogDialog.clear_log", false]], "clearlayout() (autodeer.gui.quickdeer.deerplot method)": [[28, "autodeer.gui.quickdeer.DEERplot.clearLayout", false]], "cmap (in module autodeer)": [[41, "autodeer.cmap", false]], "cmap (in module autodeer.relaxation)": [[15, "autodeer.Relaxation.cmap", false]], "combo_figure() (in module autodeer)": [[41, "autodeer.combo_figure", false]], "combo_figure() (in module autodeer.reporter)": [[43, "autodeer.reporter.combo_figure", false]], "compile_pulsespel_def() (autodeer.hardware.dummy_xepr.dummy_api method)": [[38, "autodeer.hardware.dummy_xepr.dummy_api.compile_PulseSpel_def", false]], "compile_pulsespel_def() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.compile_PulseSpel_def", false]], "compile_pulsespel_prg() (autodeer.hardware.dummy_xepr.dummy_api method)": [[38, "autodeer.hardware.dummy_xepr.dummy_api.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.compile_PulseSpel_prg", false]], "connect() (autodeer.classes.interface method)": [[19, "autodeer.classes.Interface.connect", false]], "connect() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG.connect", false]], "connect() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.connect", false]], "connect() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.connect", false]], "connect() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.connect", false]], "connect_spectrometer() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.connect_spectrometer", false]], "connect_spectrometer() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.connect_spectrometer", false]], "convert() (autodeer.sequence method)": [[41, "autodeer.Sequence.convert", false], [41, "id13", false], [41, "id38", false]], "convert() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence.convert", false]], "convert_progtable() (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.convert_progtable", false]], "copy() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter.copy", false]], "copy() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse.copy", false]], "copy() (autodeer.sequence method)": [[41, "autodeer.Sequence.copy", false], [41, "id18", false], [41, "id43", false]], "copy() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence.copy", false]], "correctphase (autodeer.dataset.epraccessor property)": [[22, "autodeer.dataset.EPRAccessor.correctphase", false]], "correctphase (autodeer.epraccessor property)": [[41, "autodeer.EPRAccessor.correctphase", false]], "correctphasefull (autodeer.dataset.epraccessor property)": [[22, "autodeer.dataset.EPRAccessor.correctphasefull", false]], "correctphasefull (autodeer.epraccessor property)": [[41, "autodeer.EPRAccessor.correctphasefull", false]], "cp_run() (in module autodeer.hardware.xepr_experiments)": [[40, "autodeer.hardware.xepr_experiments.CP_run", false]], "create_bahrenberg_plots() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_bahrenberg_plots", false]], "create_dataset_from_axes() (in module autodeer)": [[41, "autodeer.create_dataset_from_axes", false]], "create_dataset_from_axes() (in module autodeer.dataset)": [[22, "autodeer.dataset.create_dataset_from_axes", false]], "create_dataset_from_bruker() (in module autodeer)": [[41, "autodeer.create_dataset_from_bruker", false]], "create_dataset_from_bruker() (in module autodeer.dataset)": [[22, "autodeer.dataset.create_dataset_from_bruker", false]], "create_dataset_from_sequence() (in module autodeer)": [[41, "autodeer.create_dataset_from_sequence", false]], "create_dataset_from_sequence() (in module autodeer.dataset)": [[22, "autodeer.dataset.create_dataset_from_sequence", false]], "create_fieldsweep_figure() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.create_fieldsweep_figure", false]], "create_fieldsweep_figure() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.create_fieldsweep_figure", false]], "create_figure() (autodeer.gui.quickdeer.deerplot method)": [[28, "autodeer.gui.quickdeer.DEERplot.create_figure", false]], "create_nmodel() (in module autodeer.fieldsweep)": [[13, "autodeer.FieldSweep.create_Nmodel", false]], "create_relax_figure() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.create_relax_figure", false]], "create_relax_figure() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.create_relax_figure", false]], "create_report() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.create_report", false]], "create_report() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.create_report", false]], "create_report() (in module autodeer.reporter)": [[43, "autodeer.reporter.create_report", false]], "create_respro_figure() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.create_respro_figure", false]], "create_respro_figure() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.create_respro_figure", false]], "create_slice_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_slice_plot", false]], "create_twod_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_twoD_plot", false]], "criteria (class in autodeer)": [[41, "autodeer.Criteria", false]], "criteria (class in autodeer.criteria)": [[21, "autodeer.criteria.Criteria", false]], "deer (class in autodeer.hardware.xepr_experiments)": [[40, "autodeer.hardware.xepr_experiments.DEER", false]], "deer5p_run() (in module autodeer.hardware.xepr_experiments)": [[40, "autodeer.hardware.xepr_experiments.DEER5p_run", false]], "deeranalysis() (in module autodeer)": [[41, "autodeer.DEERanalysis", false], [41, "id25", false]], "deeranalysis() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.DEERanalysis", false]], "deeranalysis_plot() (in module autodeer)": [[41, "autodeer.DEERanalysis_plot", false]], "deeranalysis_plot() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.DEERanalysis_plot", false]], "deeranalysis_plot_pub() (in module autodeer)": [[41, "autodeer.DEERanalysis_plot_pub", false]], "deeranalysis_plot_pub() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.DEERanalysis_plot_pub", false]], "deeranalysis_process() (in module autodeer.gui.quickdeer)": [[28, "autodeer.gui.quickdeer.deeranalysis_process", false]], "deercriteria (class in autodeer)": [[41, "autodeer.DEERCriteria", false]], "deercriteria (class in autodeer.criteria)": [[21, "autodeer.criteria.DEERCriteria", false]], "deerplot (class in autodeer.gui.quickdeer)": [[28, "autodeer.gui.quickdeer.DEERplot", false]], "deersequence (class in autodeer)": [[41, "autodeer.DEERSequence", false]], "deersequence (class in autodeer.sequences)": [[44, "autodeer.sequences.DEERSequence", false]], "delay (class in autodeer.pulses)": [[42, "autodeer.pulses.Delay", false]], "detect_eseem() (in module autodeer)": [[41, "autodeer.detect_ESEEM", false]], "detect_eseem() (in module autodeer.relaxation)": [[15, "autodeer.Relaxation.detect_ESEEM", false]], "detection (class in autodeer.pulses)": [[42, "autodeer.pulses.Detection", false]], "dictformater (class in autodeer.logging)": [[14, "autodeer.Logging.DictFormater", false]], "digitally_upconvert() (in module autodeer.hardware.eth_awg_load)": [[35, "autodeer.hardware.ETH_awg_load.digitally_upconvert", false]], "dim (autodeer.classes.parameter property)": [[19, "autodeer.classes.Parameter.dim", false]], "draw() (autodeer.reporter.svgflowable method)": [[43, "autodeer.reporter.SvgFlowable.draw", false]], "dummy_api (class in autodeer.hardware.dummy_xepr)": [[38, "autodeer.hardware.dummy_xepr.dummy_api", false]], "dummy_cur_exp (class in autodeer.hardware.dummy_xepr)": [[38, "autodeer.hardware.dummy_xepr.dummy_cur_exp", false]], "dummy_dataset (class in autodeer.hardware.dummy_xepr)": [[38, "autodeer.hardware.dummy_xepr.dummy_dataset", false]], "dummy_hidden (class in autodeer.hardware.dummy_xepr)": [[38, "autodeer.hardware.dummy_xepr.dummy_hidden", false]], "dummy_param (class in autodeer.hardware.dummy_xepr)": [[38, "autodeer.hardware.dummy_xepr.dummy_param", false]], "dummy_xepr (class in autodeer.hardware.dummy_xepr)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr", false]], "dummy_xepr.xeprcmds (class in autodeer.hardware.dummy_xepr)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds", false]], "dummyinterface (class in autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy.dummyInterface", false]], "eldortune (class in autodeer.hardware.xepr_experiments)": [[40, "autodeer.hardware.xepr_experiments.ELDORtune", false]], "eldortune() (in module autodeer.hardware.bruker_mpfu)": [[32, "autodeer.hardware.Bruker_MPFU.ELDORtune", false]], "emit() (autodeer.logging.qtloghandler method)": [[14, "autodeer.Logging.QtLogHandler.emit", false]], "epraccessor (class in autodeer)": [[41, "autodeer.EPRAccessor", false]], "epraccessor (class in autodeer.dataset)": [[22, "autodeer.dataset.EPRAccessor", false]], "eprload() (in module autodeer)": [[41, "autodeer.eprload", false]], "eprload() (in module autodeer.tools)": [[45, "autodeer.tools.eprload", false]], "erot() (in module autodeer.fieldsweep)": [[13, "autodeer.FieldSweep.erot", false]], "error (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.error", false]], "error (autodeer.gui.main.workersignals attribute)": [[27, "autodeer.gui.main.WorkerSignals.error", false]], "error (autodeer.gui.tools.workersignals attribute)": [[30, "autodeer.gui.tools.WorkerSignals.error", false]], "error (autodeer.gui.workersignals attribute)": [[25, "autodeer.gui.WorkerSignals.error", false]], "estimated_snr() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.estimated_snr", false]], "eth_awg_interface (class in autodeer.hardware.eth_awg)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface", false]], "evolution() (autodeer.sequence method)": [[41, "autodeer.Sequence.evolution", false], [41, "id34", false], [41, "id9", false]], "evolution() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence.evolution", false]], "exciteprofile() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse.exciteprofile", false]], "eyekron() (in module autodeer.fieldsweep)": [[13, "autodeer.FieldSweep.eyekron", false]], "fft (autodeer.dataset.epraccessor property)": [[22, "autodeer.dataset.EPRAccessor.fft", false]], "fft (autodeer.epraccessor property)": [[41, "autodeer.EPRAccessor.fft", false]], "fieldsweep_fit() (in module autodeer.gui.main)": [[27, "autodeer.gui.main.fieldsweep_fit", false]], "fieldsweepanalysis (class in autodeer)": [[41, "autodeer.FieldSweepAnalysis", false]], "fieldsweepanalysis (class in autodeer.fieldsweep)": [[13, "autodeer.FieldSweep.FieldSweepAnalysis", false]], "fieldsweepsequence (class in autodeer)": [[41, "autodeer.FieldSweepSequence", false]], "fieldsweepsequence (class in autodeer.sequences)": [[44, "autodeer.sequences.FieldSweepSequence", false]], "fill_table() (in module autodeer.gui)": [[25, "autodeer.gui.fill_table", false]], "fill_table() (in module autodeer.gui.tools)": [[30, "autodeer.gui.tools.fill_table", false]], "find_cur_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_cur_exp", false]], "find_hidden() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_hidden", false]], "find_longest_pulse() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.find_longest_pulse", false]], "find_max() (autodeer.fieldsweep.fieldsweepanalysis method)": [[13, "autodeer.FieldSweep.FieldSweepAnalysis.find_max", false]], "find_max() (autodeer.fieldsweepanalysis method)": [[41, "autodeer.FieldSweepAnalysis.find_max", false]], "find_max_pulse_length() (in module autodeer.hardware.eth_awg_load)": [[35, "autodeer.hardware.ETH_awg_load.find_max_pulse_length", false]], "find_min() (autodeer.hardware.xepr_experiments.eldortune method)": [[40, "autodeer.hardware.xepr_experiments.ELDORtune.find_min", false]], "find_optimal() (autodeer.carrpurcellanalysis method)": [[41, "autodeer.CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (autodeer.refocusedecho2danalysis method)": [[41, "autodeer.RefocusedEcho2DAnalysis.find_optimal", false]], "find_optimal() (autodeer.relaxation.carrpurcellanalysis method)": [[15, "autodeer.Relaxation.CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (autodeer.relaxation.refocusedecho2danalysis method)": [[15, "autodeer.Relaxation.RefocusedEcho2DAnalysis.find_optimal", false]], "find_xepr() (autodeer.hardware.dummy_xepr.dummy_api method)": [[38, "autodeer.hardware.dummy_xepr.dummy_api.find_Xepr", false]], "find_xepr() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_Xepr", false]], "finished (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.finished", false]], "finished (autodeer.gui.main.workersignals attribute)": [[27, "autodeer.gui.main.WorkerSignals.finished", false]], "finished (autodeer.gui.tools.workersignals attribute)": [[30, "autodeer.gui.tools.WorkerSignals.finished", false]], "finished (autodeer.gui.workersignals attribute)": [[25, "autodeer.gui.WorkerSignals.finished", false]], "fit() (autodeer.carrpurcellanalysis method)": [[41, "autodeer.CarrPurcellAnalysis.fit", false]], "fit() (autodeer.fieldsweep.fieldsweepanalysis method)": [[13, "autodeer.FieldSweep.FieldSweepAnalysis.fit", false]], "fit() (autodeer.fieldsweepanalysis method)": [[41, "autodeer.FieldSweepAnalysis.fit", false]], "fit() (autodeer.relaxation.carrpurcellanalysis method)": [[15, "autodeer.Relaxation.CarrPurcellAnalysis.fit", false]], "fit() (autodeer.relaxation.reptimeanalysis method)": [[15, "autodeer.Relaxation.ReptimeAnalysis.fit", false]], "fit() (autodeer.reptimeanalysis method)": [[41, "autodeer.ReptimeAnalysis.fit", false]], "fit() (autodeer.resonatorprofileanalysis method)": [[41, "autodeer.ResonatorProfileAnalysis.fit", false]], "fit() (autodeer.respro.resonatorprofileanalysis method)": [[16, "autodeer.ResPro.ResonatorProfileAnalysis.fit", false]], "five_pulse() (autodeer.deersequence method)": [[41, "autodeer.DEERSequence.five_pulse", false]], "five_pulse() (autodeer.sequences.deersequence method)": [[44, "autodeer.sequences.DEERSequence.five_pulse", false]], "floor() (in module autodeer.respro)": [[16, "autodeer.ResPro.floor", false]], "footer() (autodeer.reporter method)": [[41, "autodeer.Reporter.footer", false]], "footer() (autodeer.reporter.reporter method)": [[43, "autodeer.reporter.Reporter.footer", false]], "format() (autodeer.logging.dictformater method)": [[14, "autodeer.Logging.DictFormater.format", false]], "four_pulse() (autodeer.deersequence method)": [[41, "autodeer.DEERSequence.four_pulse", false]], "four_pulse() (autodeer.sequences.deersequence method)": [[44, "autodeer.sequences.DEERSequence.four_pulse", false]], "fsweep_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.fsweep_result", false]], "fsweep_toolbar() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.fsweep_toolbar", false]], "fsweep_toolbar() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.fsweep_toolbar", false]], "func() (autodeer.pulses.chirppulse method)": [[42, "autodeer.pulses.ChirpPulse.func", false]], "func() (autodeer.pulses.gaussianpulse method)": [[42, "autodeer.pulses.GaussianPulse.func", false]], "func() (autodeer.pulses.hspulse method)": [[42, "autodeer.pulses.HSPulse.func", false]], "func() (autodeer.pulses.rectpulse method)": [[42, "autodeer.pulses.RectPulse.func", false]], "func() (autodeer.pulses.sincpulse method)": [[42, "autodeer.pulses.SincPulse.func", false]], "functional() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.functional", false]], "gaussianpulse (class in autodeer.pulses)": [[42, "autodeer.pulses.GaussianPulse", false]], "gcd() (in module autodeer)": [[41, "autodeer.gcd", false]], "gcd() (in module autodeer.utils)": [[46, "autodeer.utils.gcd", false]], "get_acquisition_mode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_Acquisition_mode", false]], "get_all_axes() (in module autodeer)": [[41, "autodeer.get_all_axes", false]], "get_all_axes() (in module autodeer.dataset)": [[22, "autodeer.dataset.get_all_axes", false]], "get_all_fixed_param() (in module autodeer)": [[41, "autodeer.get_all_fixed_param", false]], "get_all_fixed_param() (in module autodeer.dataset)": [[22, "autodeer.dataset.get_all_fixed_param", false]], "get_arange() (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.get_arange", false]], "get_attenuator() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_attenuator", false]], "get_axis() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter.get_axis", false]], "get_config_file() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_config_file", false]], "get_counterfreq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_counterfreq", false]], "get_eldor_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_ELDOR_freq", false]], "get_field() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_field", false]], "get_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_freq", false]], "get_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_hidden_param", false]], "get_mw_amp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_MW_amp", false]], "get_nutations() (in module autodeer.hardware.xepr_experiments)": [[40, "autodeer.hardware.xepr_experiments.get_nutations", false]], "get_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_param", false]], "get_phase() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_phase", false]], "get_phasecycle() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PhaseCycle", false]], "get_pulsespel_def_filename() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_def_filename", false]], "get_pulsespel_def_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_def_filepath", false]], "get_pulsespel_exp_filename() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_exp_filename", false]], "get_pulsespel_exp_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_exp_filepath", false]], "get_pulsespel_experiment() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_experiment", false]], "get_pulsespel_phase_cycling() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_phase_cycling", false]], "get_replacemode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_ReplaceMode", false]], "get_sequence_rows() (in module autodeer.gui)": [[25, "autodeer.gui.get_sequence_rows", false]], "get_sequence_rows() (in module autodeer.gui.tools)": [[30, "autodeer.gui.tools.get_sequence_rows", false]], "get_spec_config() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_spec_config", false]], "get_specjet_data() (in module autodeer.hardware.bruker_awg)": [[31, "autodeer.hardware.Bruker_AWG.get_specjet_data", false]], "get_specjet_data() (in module autodeer.hardware.bruker_mpfu)": [[32, "autodeer.hardware.Bruker_MPFU.get_specjet_data", false]], "get_sweep_width() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_sweep_width", false]], "get_vexp() (in module autodeer.gui.quickdeer)": [[28, "autodeer.gui.quickdeer.get_Vexp", false]], "get_video_bandwidth() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_video_bandwidth", false]], "get_video_gain() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_video_gain", false]], "getcistring() (in module autodeer.gui)": [[25, "autodeer.gui.getCIstring", false]], "getcistring() (in module autodeer.gui.tools)": [[30, "autodeer.gui.tools.getCIstring", false]], "getparam() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[38, "autodeer.hardware.dummy_xepr.dummy_cur_exp.getParam", false]], "getparam() (autodeer.hardware.dummy_xepr.dummy_hidden method)": [[38, "autodeer.hardware.dummy_xepr.dummy_hidden.getParam", false]], "hahnechosequence (class in autodeer)": [[41, "autodeer.HahnEchoSequence", false]], "hahnechosequence (class in autodeer.sequences)": [[44, "autodeer.sequences.HahnEchoSequence", false]], "ham() (in module autodeer.fieldsweep)": [[13, "autodeer.FieldSweep.ham", false]], "ham_ez() (in module autodeer.fieldsweep)": [[13, "autodeer.FieldSweep.ham_ez", false]], "ham_nz() (in module autodeer.fieldsweep)": [[13, "autodeer.FieldSweep.ham_nz", false]], "hardware_meta (in module autodeer.hardware.dummy_xepr)": [[38, "autodeer.hardware.dummy_xepr.hardware_meta", false]], "header (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.header", false]], "header() (autodeer.reporter method)": [[41, "autodeer.Reporter.header", false]], "header() (autodeer.reporter.reporter method)": [[43, "autodeer.reporter.Reporter.header", false]], "hspulse (class in autodeer.pulses)": [[42, "autodeer.pulses.HSPulse", false]], "hw_log (in module autodeer.hardware.bruker_mpfu)": [[32, "autodeer.hardware.Bruker_MPFU.hw_log", false]], "hw_log (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy.hw_log", false]], "hw_log (in module autodeer.hardware.dummy_xepr)": [[38, "autodeer.hardware.dummy_xepr.hw_log", false]], "hw_log (in module autodeer.hardware.xeprapi_link)": [[36, "autodeer.hardware.XeprAPI_link.hw_log", false]], "identifyroi() (in module autodeer)": [[41, "autodeer.IdentifyROI", false]], "identifyroi() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.IdentifyROI", false]], "import_data() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.import_data", false]], "import_dataset() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.import_dataset", false]], "interface (class in autodeer.classes)": [[19, "autodeer.classes.Interface", false]], "invert_signal() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.invert_signal", false]], "is_exp_running() (autodeer.hardware.dummy_xepr.dummy_api method)": [[38, "autodeer.hardware.dummy_xepr.dummy_api.is_exp_running", false]], "is_exp_running() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.is_exp_running", false]], "is_static() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter.is_static", false]], "is_static() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse.is_static", false]], "isdelayfocused() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse.isDelayFocused", false]], "isdelayfocused() (autodeer.sequence method)": [[41, "autodeer.Sequence.isDelayFocused", false], [41, "id12", false], [41, "id37", false]], "isdelayfocused() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence.isDelayFocused", false]], "ispulsefocused() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse.isPulseFocused", false]], "ispulsefocused() (autodeer.sequence method)": [[41, "autodeer.Sequence.isPulseFocused", false], [41, "id11", false], [41, "id36", false]], "ispulsefocused() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence.isPulseFocused", false]], "isrunning() (autodeer.classes.interface method)": [[19, "autodeer.classes.Interface.isrunning", false]], "isrunning() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG.isrunning", false]], "isrunning() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.isrunning", false]], "isrunning() (autodeer.hardware.dummy.dummyinterface method)": [[37, "autodeer.hardware.dummy.dummyInterface.isrunning", false]], "isrunning() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.isrunning", false]], "kroneye() (in module autodeer.fieldsweep)": [[13, "autodeer.FieldSweep.kroneye", false]], "launch() (autodeer.classes.interface method)": [[19, "autodeer.classes.Interface.launch", false]], "launch() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG.launch", false]], "launch() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.launch", false]], "launch() (autodeer.hardware.dummy.dummyinterface method)": [[37, "autodeer.hardware.dummy.dummyInterface.launch", false]], "launch() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch", false]], "launch_long() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_long", false]], "launch_normal() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_normal", false]], "list_str_to_type() (in module autodeer.gui)": [[25, "autodeer.gui.list_str_to_type", false]], "list_str_to_type() (in module autodeer.gui.tools)": [[30, "autodeer.gui.tools.list_str_to_type", false]], "load() (autodeer.classes.parameter class method)": [[19, "autodeer.classes.Parameter.load", false]], "load() (autodeer.pulses.pulse class method)": [[42, "autodeer.pulses.Pulse.load", false]], "load() (autodeer.sequence class method)": [[41, "autodeer.Sequence.load", false], [41, "id24", false], [41, "id49", false]], "load() (autodeer.sequences.sequence class method)": [[44, "autodeer.sequences.Sequence.load", false]], "load() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.load", false]], "load_epr_file() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.load_epr_file", false]], "load_epr_file() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.load_epr_file", false]], "load_epr_file() (in module autodeer.gui)": [[25, "autodeer.gui.load_epr_file", false]], "load_epr_file() (in module autodeer.gui.tools)": [[30, "autodeer.gui.tools.load_epr_file", false]], "load_folder() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.load_folder", false]], "load_folder() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.load_folder", false]], "load_spectrometer_config() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.load_spectrometer_config", false]], "load_spectrometer_config() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.load_spectrometer_config", false]], "log (in module autodeer)": [[41, "autodeer.log", false]], "log (in module autodeer.criteria)": [[21, "autodeer.criteria.log", false]], "log (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.log", false]], "log (in module autodeer.hardware.eth_awg)": [[34, "autodeer.hardware.ETH_awg.log", false]], "log (in module autodeer.tools)": [[45, "autodeer.tools.log", false]], "logdialog (class in autodeer.gui.log)": [[26, "autodeer.gui.log.LogDialog", false]], "longdeer_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.longdeer_result", false]], "longdeer_update (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.longdeer_update", false]], "match_filter_dc() (in module autodeer.hardware.eth_awg_load)": [[35, "autodeer.hardware.ETH_awg_load.match_filter_dc", false]], "module": [[12, "module-autodeer.DEER_analysis", false], [13, "module-autodeer.FieldSweep", false], [14, "module-autodeer.Logging", false], [15, "module-autodeer.Relaxation", false], [16, "module-autodeer.ResPro", false], [17, "module-autodeer.TwoD_Experiment", false], [18, "module-autodeer._version", false], [19, "module-autodeer.classes", false], [20, "module-autodeer.colors", false], [21, "module-autodeer.criteria", false], [22, "module-autodeer.dataset", false], [23, "module-autodeer.gui.__main__", false], [24, "module-autodeer.gui.autoDEER_worker", false], [25, "module-autodeer.gui", false], [26, "module-autodeer.gui.log", false], [27, "module-autodeer.gui.main", false], [28, "module-autodeer.gui.quickdeer", false], [29, "module-autodeer.gui.test_main", false], [30, "module-autodeer.gui.tools", false], [31, "module-autodeer.hardware.Bruker_AWG", false], [32, "module-autodeer.hardware.Bruker_MPFU", false], [33, "module-autodeer.hardware.Bruker_tools", false], [34, "module-autodeer.hardware.ETH_awg", false], [35, "module-autodeer.hardware.ETH_awg_load", false], [36, "module-autodeer.hardware.XeprAPI_link", false], [37, "module-autodeer.hardware.dummy", false], [38, "module-autodeer.hardware.dummy_xepr", false], [39, "module-autodeer.hardware", false], [40, "module-autodeer.hardware.xepr_experiments", false], [41, "module-autodeer", false], [42, "module-autodeer.pulses", false], [43, "module-autodeer.reporter", false], [44, "module-autodeer.sequences", false], [45, "module-autodeer.tools", false], [46, "module-autodeer.utils", false]], "module_dir (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.MODULE_DIR", false]], "module_dir (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.MODULE_DIR", false]], "module_dir (in module autodeer.hardware.xepr_experiments)": [[40, "autodeer.hardware.xepr_experiments.MODULE_DIR", false]], "mpfutune (class in autodeer.hardware.xepr_experiments)": [[40, "autodeer.hardware.xepr_experiments.MPFUtune", false]], "mpfutune() (in module autodeer.hardware.bruker_mpfu)": [[32, "autodeer.hardware.Bruker_MPFU.MPFUtune", false]], "ndeer_cp() (autodeer.deersequence method)": [[41, "autodeer.DEERSequence.nDEER_CP", false]], "ndeer_cp() (autodeer.sequences.deersequence method)": [[44, "autodeer.sequences.DEERSequence.nDEER_CP", false]], "new_data() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.new_data", false]], "new_pulses() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.new_pulses", false]], "normalise (autodeer.dataset.epraccessor property)": [[22, "autodeer.dataset.EPRAccessor.normalise", false]], "normalise (autodeer.epraccessor property)": [[41, "autodeer.EPRAccessor.normalise", false]], "normalise_01() (in module autodeer)": [[41, "autodeer.normalise_01", false]], "normalise_01() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.normalise_01", false]], "optimal_slice_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.optimal_slice_plot", false]], "optimal_tau1() (autodeer.refocusedecho2danalysis method)": [[41, "autodeer.RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimal_tau1() (autodeer.relaxation.refocusedecho2danalysis method)": [[15, "autodeer.Relaxation.RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimise_pulses() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.optimise_pulses", false]], "optimise_pulses() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.optimise_pulses", false]], "optimise_pulses() (in module autodeer)": [[41, "autodeer.optimise_pulses", false]], "optimise_pulses() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.optimise_pulses", false]], "optimise_pulses_button() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.optimise_pulses_button", false]], "optimise_pulses_button() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.optimise_pulses_button", false]], "optimise_spectra_position() (in module autodeer)": [[41, "autodeer.optimise_spectra_position", false]], "optimise_spectra_position() (in module autodeer.respro)": [[16, "autodeer.ResPro.optimise_spectra_position", false]], "package_dir (in module autodeer.reporter)": [[43, "autodeer.reporter.package_dir", false]], "package_directory (in module autodeer.gui.log)": [[26, "autodeer.gui.log.package_directory", false]], "package_directory (in module autodeer.gui.main)": [[27, "autodeer.gui.main.package_directory", false]], "package_directory (in module autodeer.gui.quickdeer)": [[28, "autodeer.gui.quickdeer.package_directory", false]], "param_in_mhz() (in module autodeer.gui)": [[25, "autodeer.gui.param_in_MHz", false]], "param_in_mhz() (in module autodeer.gui.tools)": [[30, "autodeer.gui.tools.param_in_MHz", false]], "param_in_us() (in module autodeer.gui)": [[25, "autodeer.gui.param_in_us", false]], "param_in_us() (in module autodeer.gui.tools)": [[30, "autodeer.gui.tools.param_in_us", false]], "parameter (class in autodeer.classes)": [[19, "autodeer.classes.Parameter", false]], "pause_and_wait() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.pause_and_wait", false]], "pause_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.pause_exp", false]], "plot() (autodeer.carrpurcellanalysis method)": [[41, "autodeer.CarrPurcellAnalysis.plot", false]], "plot() (autodeer.fieldsweep.fieldsweepanalysis method)": [[13, "autodeer.FieldSweep.FieldSweepAnalysis.plot", false]], "plot() (autodeer.fieldsweepanalysis method)": [[41, "autodeer.FieldSweepAnalysis.plot", false]], "plot() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse.plot", false]], "plot() (autodeer.relaxation.carrpurcellanalysis method)": [[15, "autodeer.Relaxation.CarrPurcellAnalysis.plot", false]], "plot() (autodeer.relaxation.reptimeanalysis method)": [[15, "autodeer.Relaxation.ReptimeAnalysis.plot", false]], "plot() (autodeer.reptimeanalysis method)": [[41, "autodeer.ReptimeAnalysis.plot", false]], "plot() (autodeer.resonatorprofileanalysis method)": [[41, "autodeer.ResonatorProfileAnalysis.plot", false]], "plot() (autodeer.respro.resonatorprofileanalysis method)": [[16, "autodeer.ResPro.ResonatorProfileAnalysis.plot", false]], "plot() (autodeer.sequence method)": [[41, "autodeer.Sequence.plot", false], [41, "id29", false], [41, "id4", false]], "plot() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence.plot", false]], "plot1d() (autodeer.refocusedecho2danalysis method)": [[41, "autodeer.RefocusedEcho2DAnalysis.plot1D", false]], "plot1d() (autodeer.relaxation.refocusedecho2danalysis method)": [[15, "autodeer.Relaxation.RefocusedEcho2DAnalysis.plot1D", false]], "plot2d() (autodeer.refocusedecho2danalysis method)": [[41, "autodeer.RefocusedEcho2DAnalysis.plot2D", false]], "plot2d() (autodeer.relaxation.refocusedecho2danalysis method)": [[15, "autodeer.Relaxation.RefocusedEcho2DAnalysis.plot2D", false]], "plot_1drelax() (in module autodeer)": [[41, "autodeer.plot_1Drelax", false]], "plot_1drelax() (in module autodeer.relaxation)": [[15, "autodeer.Relaxation.plot_1Drelax", false]], "plot_fft() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse.plot_fft", false]], "plot_overlap() (in module autodeer)": [[41, "autodeer.plot_overlap", false]], "plot_overlap() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.plot_overlap", false]], "plot_pulse_exc() (autodeer.sequence method)": [[41, "autodeer.Sequence.plot_pulse_exc", false], [41, "id30", false], [41, "id5", false]], "plot_pulse_exc() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence.plot_pulse_exc", false]], "possible_delays (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.possible_delays", false]], "possible_pulses (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.possible_pulses", false]], "possible_vars (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.possible_vars", false]], "primary_colors (in module autodeer)": [[41, "autodeer.primary_colors", false]], "primary_colors (in module autodeer.colors)": [[20, "autodeer.colors.primary_colors", false]], "process_deeranalysis() (autodeer.gui.quickdeer.deerplot method)": [[28, "autodeer.gui.quickdeer.DEERplot.process_deeranalysis", false]], "process_nutations() (autodeer.resonatorprofileanalysis method)": [[41, "autodeer.ResonatorProfileAnalysis.process_nutations", false]], "process_nutations() (autodeer.respro.resonatorprofileanalysis method)": [[16, "autodeer.ResPro.ResonatorProfileAnalysis.process_nutations", false]], "progress (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.progress", false]], "progress (autodeer.gui.main.workersignals attribute)": [[27, "autodeer.gui.main.WorkerSignals.progress", false]], "progress_bar() (in module autodeer.tools)": [[45, "autodeer.tools.progress_bar", false]], "progress_bar_frac() (in module autodeer.tools)": [[45, "autodeer.tools.progress_bar_frac", false]], "psparvar (class in autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.PSparvar", false]], "psphasecycle (class in autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.PSPhaseCycle", false]], "pulse (class in autodeer.pulses)": [[42, "autodeer.pulses.Pulse", false]], "pulseprofile (class in autodeer.hardware.xepr_experiments)": [[40, "autodeer.hardware.xepr_experiments.PulseProfile", false]], "pulsespel (class in autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel", false]], "pyqt_table_from_dict() (in module autodeer.gui)": [[25, "autodeer.gui.pyqt_table_from_dict", false]], "pyqt_table_from_dict() (in module autodeer.gui.tools)": [[30, "autodeer.gui.tools.pyqt_table_from_dict", false]], "qtloghandler (class in autodeer.logging)": [[14, "autodeer.Logging.QtLogHandler", false]], "quickdeer_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.quickdeer_result", false]], "quickdeer_update (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.quickdeer_update", false]], "raise_warning() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.raise_warning", false]], "raise_warning() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.raise_warning", false]], "read_table() (in module autodeer.gui)": [[25, "autodeer.gui.read_table", false]], "read_table() (in module autodeer.gui.tools)": [[30, "autodeer.gui.tools.read_table", false]], "rectpulse (class in autodeer.pulses)": [[42, "autodeer.pulses.RectPulse", false]], "refocusedecho2danalysis (class in autodeer)": [[41, "autodeer.RefocusedEcho2DAnalysis", false]], "refocusedecho2danalysis (class in autodeer.relaxation)": [[15, "autodeer.Relaxation.RefocusedEcho2DAnalysis", false]], "refocusedecho2dsequence (class in autodeer)": [[41, "autodeer.RefocusedEcho2DSequence", false]], "refocusedecho2dsequence (class in autodeer.sequences)": [[44, "autodeer.sequences.RefocusedEcho2DSequence", false]], "refresh_deer() (autodeer.gui.quickdeer.deerplot method)": [[28, "autodeer.gui.quickdeer.DEERplot.refresh_deer", false]], "refresh_fieldsweep_after_fit() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_fieldsweep_after_fit() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_relax() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.refresh_relax", false]], "refresh_relax() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.refresh_relax", false]], "refresh_relax_figure() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.refresh_relax_figure", false]], "refresh_relax_figure() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.refresh_relax_figure", false]], "refresh_respro() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.refresh_respro", false]], "refresh_respro() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.refresh_respro", false]], "refresh_t2() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.refresh_T2", false]], "refresh_t2() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.refresh_T2", false]], "reim_colors (in module autodeer.colors)": [[20, "autodeer.colors.ReIm_colors", false]], "relax2d_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.Relax2D_result", false]], "relax_process() (in module autodeer.gui.main)": [[27, "autodeer.gui.main.relax_process", false]], "relax_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.relax_result", false]], "relax_toolbar() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.relax_toolbar", false]], "relax_toolbar() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.relax_toolbar", false]], "remove_dynamic() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter.remove_dynamic", false]], "remove_echo() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.remove_echo", false]], "reporter (class in autodeer)": [[41, "autodeer.Reporter", false]], "reporter (class in autodeer.reporter)": [[43, "autodeer.reporter.Reporter", false]], "reptime_scan_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.reptime_scan_result", false]], "reptimeanalysis (class in autodeer)": [[41, "autodeer.ReptimeAnalysis", false]], "reptimeanalysis (class in autodeer.relaxation)": [[15, "autodeer.Relaxation.ReptimeAnalysis", false]], "reptimescan (class in autodeer)": [[41, "autodeer.ReptimeScan", false]], "reptimescan (class in autodeer.sequences)": [[44, "autodeer.sequences.ReptimeScan", false]], "rerun_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.rerun_exp", false]], "resample_and_shift_vector() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.resample_and_shift_vector", false]], "resfields() (in module autodeer.fieldsweep)": [[13, "autodeer.FieldSweep.resfields", false]], "resonatorprofileanalysis (class in autodeer)": [[41, "autodeer.ResonatorProfileAnalysis", false]], "resonatorprofileanalysis (class in autodeer.respro)": [[16, "autodeer.ResPro.ResonatorProfileAnalysis", false]], "resonatorprofilesequence (class in autodeer)": [[41, "autodeer.ResonatorProfileSequence", false]], "resonatorprofilesequence (class in autodeer.sequences)": [[44, "autodeer.sequences.ResonatorProfileSequence", false]], "respro_process() (in module autodeer.gui.main)": [[27, "autodeer.gui.main.respro_process", false]], "respro_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.respro_result", false]], "respro_toolbar() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.respro_toolbar", false]], "respro_toolbar() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.respro_toolbar", false]], "result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.result", false]], "result (autodeer.gui.main.workersignals attribute)": [[27, "autodeer.gui.main.WorkerSignals.result", false]], "result (autodeer.gui.tools.workersignals attribute)": [[30, "autodeer.gui.tools.WorkerSignals.result", false]], "result (autodeer.gui.workersignals attribute)": [[25, "autodeer.gui.WorkerSignals.result", false]], "rng (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy.rng", false]], "round_step() (in module autodeer)": [[41, "autodeer.round_step", false]], "round_step() (in module autodeer.utils)": [[46, "autodeer.utils.round_step", false]], "run() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.run", false]], "run() (autodeer.gui.main.worker method)": [[27, "autodeer.gui.main.Worker.run", false]], "run() (autodeer.gui.tools.worker method)": [[30, "autodeer.gui.tools.Worker.run", false]], "run() (autodeer.gui.worker method)": [[25, "autodeer.gui.Worker.run", false]], "run_2d_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_2D_relax", false]], "run_4p() (autodeer.hardware.xepr_experiments.deer method)": [[40, "autodeer.hardware.xepr_experiments.DEER.run_4p", false]], "run_5p() (autodeer.hardware.xepr_experiments.deer method)": [[40, "autodeer.hardware.xepr_experiments.DEER.run_5p", false]], "run_cp() (autodeer.hardware.xepr_experiments.deer method)": [[40, "autodeer.hardware.xepr_experiments.DEER.run_CP", false]], "run_cp_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_CP_relax", false]], "run_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_deer", false]], "run_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[38, "autodeer.hardware.dummy_xepr.dummy_api.run_exp", false]], "run_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.run_exp", false]], "run_fsweep() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_fsweep", false]], "run_general() (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.run_general", false]], "run_long_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_long_deer", false]], "run_quick_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_quick_deer", false]], "run_reptime_opt() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_reptime_opt", false]], "run_respro() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_respro", false]], "run_t2_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_T2_relax", false]], "runadvancedautodeer() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.RunAdvancedAutoDEER", false]], "runadvancedautodeer() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.RunAdvancedAutoDEER", false]], "runautodeer() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.RunAutoDEER", false]], "runautodeer() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.RunAutoDEER", false]], "runfullyautodeer() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.RunFullyAutoDEER", false]], "runfullyautodeer() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.RunFullyAutoDEER", false]], "sampleconccombobox_opts (in module autodeer.gui.main)": [[27, "autodeer.gui.main.SampleConcComboBox_opts", false]], "save (autodeer.dataset.epraccessor property)": [[22, "autodeer.dataset.EPRAccessor.save", false]], "save (autodeer.epraccessor property)": [[41, "autodeer.EPRAccessor.save", false]], "save() (autodeer.classes.parameter method)": [[19, "autodeer.classes.Parameter.save", false]], "save() (autodeer.hardware.bruker_tools.pulsespel method)": [[33, "autodeer.hardware.Bruker_tools.PulseSpel.save", false]], "save() (autodeer.pulses.pulse method)": [[42, "autodeer.pulses.Pulse.save", false]], "save() (autodeer.sequence method)": [[41, "autodeer.Sequence.save", false], [41, "id21", false], [41, "id46", false]], "save() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence.save", false]], "save_data() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.save_data", false]], "save_data() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.save_data", false]], "save_file() (in module autodeer)": [[41, "autodeer.save_file", false]], "save_file() (in module autodeer.utils)": [[46, "autodeer.utils.save_file", false]], "save_log_to_file() (autodeer.gui.log.logdialog method)": [[26, "autodeer.gui.log.LogDialog.save_log_to_file", false]], "save_pulsespel_def() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.save_PulseSpel_def", false]], "save_pulsespel_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.save_PulseSpel_exp", false]], "savefolder (autodeer.hardware.eth_awg.eth_awg_interface property)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.savefolder", false]], "scipy_filter_dc() (in module autodeer.hardware.eth_awg_load)": [[35, "autodeer.hardware.ETH_awg_load.scipy_filter_dc", false]], "select_pcyc() (autodeer.deersequence method)": [[41, "autodeer.DEERSequence.select_pcyc", false]], "select_pcyc() (autodeer.sequences.deersequence method)": [[44, "autodeer.sequences.DEERSequence.select_pcyc", false]], "select_resonator() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.select_resonator", false]], "select_resonator() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.select_resonator", false]], "seqtable_steps (autodeer.sequence property)": [[41, "autodeer.Sequence.seqtable_steps", false], [41, "id28", false], [41, "id3", false]], "seqtable_steps (autodeer.sequences.sequence property)": [[44, "autodeer.sequences.Sequence.seqtable_steps", false]], "sequence (autodeer.dataset.epraccessor property)": [[22, "autodeer.dataset.EPRAccessor.sequence", false]], "sequence (autodeer.epraccessor property)": [[41, "autodeer.EPRAccessor.sequence", false]], "sequence (class in autodeer)": [[41, "autodeer.Sequence", false], [41, "id2", false], [41, "id27", false]], "sequence (class in autodeer.sequences)": [[44, "autodeer.sequences.Sequence", false]], "set_2d_max_tau() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.set_2D_max_tau", false]], "set_acquisition_mode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_Acquisition_mode", false]], "set_attenuator() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_attenuator", false]], "set_config_file() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_config_file", false]], "set_eldor_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_ELDOR_freq", false]], "set_field() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_field", false]], "set_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_freq", false]], "set_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_hidden_param", false]], "set_mw_amp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_MW_amp", false]], "set_noise_mode() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.set_noise_mode", false]], "set_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_param", false]], "set_phase() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_phase", false]], "set_phasecycle() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PhaseCycle", false]], "set_pulsespel_def_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_def_filepath", false]], "set_pulsespel_exp_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_exp_filepath", false]], "set_pulsespel_experiment() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_experiment", false]], "set_pulsespel_phase_cycling() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_phase_cycling", false]], "set_pulsespel_var() (autodeer.hardware.dummy_xepr.dummy_api method)": [[38, "autodeer.hardware.dummy_xepr.dummy_api.set_PulseSpel_var", false]], "set_pulsespel_var() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_var", false]], "set_replacemode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_ReplaceMode", false]], "set_snr_target() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_snr_target", false]], "set_snr_threshold() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_snr_threshold", false]], "set_spectrometer_connected_light() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.set_spectrometer_connected_light", false]], "set_spectrometer_connected_light() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.set_spectrometer_connected_light", false]], "set_sweep_width() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_sweep_width", false]], "set_time_target() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_time_target", false]], "set_video_bandwidth() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_video_bandwidth", false]], "set_video_gain() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_video_gain", false]], "setup() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG.setup", false]], "setup() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.setup", false]], "setup_inputs() (autodeer.gui.quickdeer.deerplot method)": [[28, "autodeer.gui.quickdeer.DEERplot.setup_inputs", false]], "setup_logs() (in module autodeer.logging)": [[14, "autodeer.Logging.setup_logs", false]], "seven_pulse() (autodeer.deersequence method)": [[41, "autodeer.DEERSequence.seven_pulse", false]], "seven_pulse() (autodeer.sequences.deersequence method)": [[44, "autodeer.sequences.DEERSequence.seven_pulse", false]], "shade_colors (in module autodeer.colors)": [[20, "autodeer.colors.shade_colors", false]], "shift_detfreq_to_zero() (autodeer.sequence method)": [[41, "autodeer.Sequence.shift_detfreq_to_zero", false], [41, "id10", false], [41, "id35", false]], "shift_detfreq_to_zero() (autodeer.sequences.sequence method)": [[44, "autodeer.sequences.Sequence.shift_detfreq_to_zero", false]], "shift_pulse_freq() (in module autodeer.deer_analysis)": [[12, "autodeer.DEER_analysis.shift_pulse_freq", false]], "signal (autodeer.logging.qtloghandler attribute)": [[14, "autodeer.Logging.QtLogHandler.signal", false]], "simulate() (autodeer.deersequence method)": [[41, "autodeer.DEERSequence.simulate", false]], "simulate() (autodeer.sequences.deersequence method)": [[44, "autodeer.sequences.DEERSequence.simulate", false]], "sincpulse (class in autodeer.pulses)": [[42, "autodeer.pulses.SincPulse", false]], "snr (autodeer.dataset.epraccessor property)": [[22, "autodeer.dataset.EPRAccessor.SNR", false]], "snr (autodeer.epraccessor property)": [[41, "autodeer.EPRAccessor.SNR", false]], "snr_normalize() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.snr_normalize", false]], "snrcriteria (class in autodeer)": [[41, "autodeer.SNRCriteria", false]], "snrcriteria (class in autodeer.criteria)": [[21, "autodeer.criteria.SNRCriteria", false]], "sop() (in module autodeer)": [[41, "autodeer.sop", false]], "sop() (in module autodeer.utils)": [[46, "autodeer.utils.sop", false]], "spinsystem (class in autodeer.fieldsweep)": [[13, "autodeer.FieldSweep.SpinSystem", false]], "status (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.status", false]], "step_parameters() (in module autodeer.hardware.bruker_mpfu)": [[32, "autodeer.hardware.Bruker_MPFU.step_parameters", false]], "stop() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.stop", false]], "stop_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[38, "autodeer.hardware.dummy_xepr.dummy_api.stop_exp", false]], "stop_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.stop_exp", false]], "str_to_list_type() (in module autodeer.gui)": [[25, "autodeer.gui.str_to_list_type", false]], "str_to_list_type() (in module autodeer.gui.tools)": [[30, "autodeer.gui.tools.str_to_list_type", false]], "styles (in module autodeer.reporter)": [[43, "autodeer.reporter.styles", false]], "svgflowable (class in autodeer.reporter)": [[43, "autodeer.reporter.SvgFlowable", false]], "t2_process() (in module autodeer.gui.main)": [[27, "autodeer.gui.main.T2_process", false]], "t2_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.T2_result", false]], "t2relaxationsequence (class in autodeer)": [[41, "autodeer.T2RelaxationSequence", false]], "t2relaxationsequence (class in autodeer.sequences)": [[44, "autodeer.sequences.T2RelaxationSequence", false]], "terminate() (autodeer.classes.interface method)": [[19, "autodeer.classes.Interface.terminate", false]], "terminate() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG.terminate", false]], "terminate() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.terminate", false]], "terminate() (autodeer.hardware.dummy.dummyinterface method)": [[37, "autodeer.hardware.dummy.dummyInterface.terminate", false]], "terminate() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.terminate", false]], "terminate_at() (autodeer.classes.interface method)": [[19, "autodeer.classes.Interface.terminate_at", false]], "test_if_mpfu_compatability() (in module autodeer.hardware.bruker_awg)": [[31, "autodeer.hardware.Bruker_AWG.test_if_MPFU_compatability", false]], "test_if_mpfu_compatability() (in module autodeer.hardware.bruker_mpfu)": [[32, "autodeer.hardware.Bruker_MPFU.test_if_MPFU_compatability", false]], "test_snr() (in module autodeer.gui)": [[25, "autodeer.gui.test_SNR", false]], "test_snr() (in module autodeer.gui.tools)": [[30, "autodeer.gui.tools.test_SNR", false]], "three_pulse() (autodeer.deersequence method)": [[41, "autodeer.DEERSequence.three_pulse", false]], "three_pulse() (autodeer.sequences.deersequence method)": [[44, "autodeer.sequences.DEERSequence.three_pulse", false]], "timecriteria (class in autodeer)": [[41, "autodeer.TimeCriteria", false]], "timecriteria (class in autodeer.criteria)": [[21, "autodeer.criteria.TimeCriteria", false]], "timeout (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[24, "autodeer.gui.autoDEER_worker.autoDEERSignals.timeout", false]], "timeout() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.timeout", false]], "timeout() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.timeout", false]], "toolbar() (autodeer.gui.quickdeer.deerplot method)": [[28, "autodeer.gui.quickdeer.DEERplot.toolbar", false]], "transpose_dict_of_list() (in module autodeer)": [[41, "autodeer.transpose_dict_of_list", false]], "transpose_dict_of_list() (in module autodeer.utils)": [[46, "autodeer.utils.transpose_dict_of_list", false]], "transpose_list_of_dicts() (in module autodeer)": [[41, "autodeer.transpose_list_of_dicts", false]], "transpose_list_of_dicts() (in module autodeer.utils)": [[46, "autodeer.utils.transpose_list_of_dicts", false]], "tune() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune", false]], "tune() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune", false]], "tune() (autodeer.hardware.xepr_experiments.eldortune method)": [[40, "autodeer.hardware.xepr_experiments.ELDORtune.tune", false]], "tune() (autodeer.hardware.xepr_experiments.mpfutune method)": [[40, "autodeer.hardware.xepr_experiments.MPFUtune.tune", false]], "tune_nutation() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_nutation", false]], "tune_phase() (autodeer.hardware.xepr_experiments.mpfutune method)": [[40, "autodeer.hardware.xepr_experiments.MPFUtune.tune_phase", false]], "tune_phase() (in module autodeer.hardware.bruker_mpfu)": [[32, "autodeer.hardware.Bruker_MPFU.tune_phase", false]], "tune_power() (autodeer.hardware.xepr_experiments.mpfutune method)": [[40, "autodeer.hardware.xepr_experiments.MPFUtune.tune_power", false]], "tune_power() (in module autodeer.hardware.bruker_mpfu)": [[32, "autodeer.hardware.Bruker_MPFU.tune_power", false]], "tune_pulse() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_pulse", false]], "tune_pulse() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune_pulse", false]], "tune_pulse() (autodeer.hardware.dummy.dummyinterface method)": [[37, "autodeer.hardware.dummy.dummyInterface.tune_pulse", false]], "tune_pulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune_pulse", false]], "tune_pulses() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.tune_pulses", false]], "tune_rectpulse() (autodeer.hardware.bruker_awg.brukerawg method)": [[31, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[32, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.dummy.dummyinterface method)": [[37, "autodeer.hardware.dummy.dummyInterface.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[34, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune_rectpulse", false]], "twodexperimentanalysis (class in autodeer.twod_experiment)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis", false]], "twtprofilesequence (class in autodeer)": [[41, "autodeer.TWTProfileSequence", false]], "twtprofilesequence (class in autodeer.sequences)": [[44, "autodeer.sequences.TWTProfileSequence", false]], "update_analysis_table() (autodeer.gui.quickdeer.deerplot method)": [[28, "autodeer.gui.quickdeer.DEERplot.update_analysis_table", false]], "update_deersettings() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_deersettings", false]], "update_fieldsweep() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.update_fieldsweep", false]], "update_fieldsweep() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.update_fieldsweep", false]], "update_figure() (autodeer.gui.quickdeer.deerplot method)": [[28, "autodeer.gui.quickdeer.DEERplot.update_figure", false]], "update_fit_result() (autodeer.gui.quickdeer.deerplot method)": [[28, "autodeer.gui.quickdeer.DEERplot.update_fit_result", false]], "update_gyro() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_gyro", false]], "update_inputs_from_dataset() (autodeer.gui.quickdeer.deerplot method)": [[28, "autodeer.gui.quickdeer.DEERplot.update_inputs_from_dataset", false]], "update_lo() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_LO", false]], "update_log_text() (autodeer.gui.log.logdialog method)": [[26, "autodeer.gui.log.LogDialog.update_log_text", false]], "update_longdeer() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.update_longdeer", false]], "update_longdeer() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.update_longdeer", false]], "update_optimise_pulses_figure() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.update_optimise_pulses_figure", false]], "update_optimise_pulses_figure() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.update_optimise_pulses_figure", false]], "update_quickdeer() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.update_quickdeer", false]], "update_quickdeer() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.update_quickdeer", false]], "update_relax() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.update_relax", false]], "update_relax() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.update_relax", false]], "update_relax2d() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.update_relax2D", false]], "update_relax2d() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.update_relax2D", false]], "update_reptime() (autodeer.gui.autodeer_worker.autodeerworker method)": [[24, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_reptime", false]], "update_reptime() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.update_reptime", false]], "update_reptime() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.update_reptime", false]], "update_respro() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.update_respro", false]], "update_respro() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.update_respro", false]], "update_t2() (autodeer.gui.autodeerui method)": [[25, "autodeer.gui.autoDEERUI.update_T2", false]], "update_t2() (autodeer.gui.main.autodeerui method)": [[27, "autodeer.gui.main.autoDEERUI.update_T2", false]], "uwb_eval_match() (in module autodeer.hardware.eth_awg_load)": [[35, "autodeer.hardware.ETH_awg_load.uwb_eval_match", false]], "uwb_load() (in module autodeer.hardware.eth_awg_load)": [[35, "autodeer.hardware.ETH_awg_load.uwb_load", false]], "val_in_ns() (in module autodeer)": [[41, "autodeer.val_in_ns", false]], "val_in_ns() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy.val_in_ns", false]], "val_in_ns() (in module autodeer.utils)": [[46, "autodeer.utils.val_in_ns", false]], "val_in_us() (in module autodeer)": [[41, "autodeer.val_in_us", false]], "val_in_us() (in module autodeer.hardware.dummy)": [[37, "autodeer.hardware.dummy.val_in_us", false]], "val_in_us() (in module autodeer.utils)": [[46, "autodeer.utils.val_in_us", false]], "value (autodeer.hardware.dummy_xepr.dummy_param property)": [[38, "autodeer.hardware.dummy_xepr.dummy_param.value", false]], "value_at_pos() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.value_at_pos", false]], "value_at_time() (autodeer.twod_experiment.twodexperimentanalysis method)": [[17, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.value_at_time", false]], "vpsave() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.vpSave", false]], "window (in module autodeer.gui.__main__)": [[23, "autodeer.gui.__main__.window", false]], "worker (class in autodeer.gui)": [[25, "autodeer.gui.Worker", false]], "worker (class in autodeer.gui.main)": [[27, "autodeer.gui.main.Worker", false]], "worker (class in autodeer.gui.tools)": [[30, "autodeer.gui.tools.Worker", false]], "workersignals (class in autodeer.gui)": [[25, "autodeer.gui.WorkerSignals", false]], "workersignals (class in autodeer.gui.main)": [[27, "autodeer.gui.main.WorkerSignals", false]], "workersignals (class in autodeer.gui.tools)": [[30, "autodeer.gui.tools.WorkerSignals", false]], "wrap() (autodeer.reporter.svgflowable method)": [[43, "autodeer.reporter.SvgFlowable.wrap", false]], "write_pulsespel_file() (in module autodeer.hardware.bruker_tools)": [[33, "autodeer.hardware.Bruker_tools.write_pulsespel_file", false]], "xepr_path (in module autodeer.hardware.xeprapi_link)": [[36, "autodeer.hardware.XeprAPI_link.xepr_path", false]], "xepr_save() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink.xepr_save", false]], "xeprapilink (class in autodeer.hardware.xeprapi_link)": [[36, "autodeer.hardware.XeprAPI_link.XeprAPILink", false]], "xeprdataset() (autodeer.hardware.dummy_xepr.dummy_xepr method)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprDataset", false]], "xeprexperiment() (autodeer.hardware.dummy_xepr.dummy_xepr method)": [[38, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprExperiment", false]]}, "objects": {"": [[41, 0, 0, "-", "autodeer"]], "autodeer": [[41, 1, 1, "", "CarrPurcellAnalysis"], [41, 1, 1, "", "CarrPurcellSequence"], [41, 1, 1, "", "Criteria"], [41, 1, 1, "", "DEERCriteria"], [41, 1, 1, "", "DEERSequence"], [12, 0, 0, "-", "DEER_analysis"], [41, 3, 1, "id25", "DEERanalysis"], [41, 3, 1, "", "DEERanalysis_plot"], [41, 3, 1, "", "DEERanalysis_plot_pub"], [41, 1, 1, "", "EPRAccessor"], [13, 0, 0, "-", "FieldSweep"], [41, 1, 1, "", "FieldSweepAnalysis"], [41, 1, 1, "", "FieldSweepSequence"], [41, 1, 1, "", "HahnEchoSequence"], [41, 3, 1, "", "IdentifyROI"], [14, 0, 0, "-", "Logging"], [41, 1, 1, "", "RefocusedEcho2DAnalysis"], [41, 1, 1, "", "RefocusedEcho2DSequence"], [15, 0, 0, "-", "Relaxation"], [41, 1, 1, "", "Reporter"], [41, 1, 1, "", "ReptimeAnalysis"], [41, 1, 1, "", "ReptimeScan"], [16, 0, 0, "-", "ResPro"], [41, 1, 1, "", "ResonatorProfileAnalysis"], [41, 1, 1, "", "ResonatorProfileSequence"], [41, 1, 1, "", "SNRCriteria"], [41, 1, 1, "id27", "Sequence"], [41, 1, 1, "", "T2RelaxationSequence"], [41, 1, 1, "", "TWTProfileSequence"], [41, 1, 1, "", "TimeCriteria"], [17, 0, 0, "-", "TwoD_Experiment"], [41, 4, 1, "", "__version__"], [18, 0, 0, "-", "_version"], [41, 3, 1, "id26", "autoEPRDecoder"], [41, 3, 1, "id0", "build_table"], [41, 3, 1, "", "calc_correction_factor"], [41, 3, 1, "", "calc_deer_settings"], [19, 0, 0, "-", "classes"], [41, 4, 1, "", "cmap"], [20, 0, 0, "-", "colors"], [41, 3, 1, "", "combo_figure"], [41, 3, 1, "", "create_dataset_from_axes"], [41, 3, 1, "", "create_dataset_from_bruker"], [41, 3, 1, "", "create_dataset_from_sequence"], [21, 0, 0, "-", "criteria"], [22, 0, 0, "-", "dataset"], [41, 3, 1, "", "detect_ESEEM"], [41, 3, 1, "", "eprload"], [41, 3, 1, "", "gcd"], [41, 3, 1, "", "get_all_axes"], [41, 3, 1, "", "get_all_fixed_param"], [25, 0, 0, "-", "gui"], [39, 0, 0, "-", "hardware"], [41, 4, 1, "", "log"], [41, 3, 1, "", "normalise_01"], [41, 3, 1, "", "optimise_pulses"], [41, 3, 1, "", "optimise_spectra_position"], [41, 3, 1, "", "plot_1Drelax"], [41, 3, 1, "", "plot_overlap"], [41, 4, 1, "", "primary_colors"], [42, 0, 0, "-", "pulses"], [43, 0, 0, "-", "reporter"], [41, 3, 1, "", "round_step"], [41, 3, 1, "", "save_file"], [44, 0, 0, "-", "sequences"], [41, 3, 1, "", "sop"], [45, 0, 0, "-", "tools"], [41, 3, 1, "", "transpose_dict_of_list"], [41, 3, 1, "", "transpose_list_of_dicts"], [46, 0, 0, "-", "utils"], [41, 3, 1, "", "val_in_ns"], [41, 3, 1, "", "val_in_us"]], "autodeer.CarrPurcellAnalysis": [[41, 2, 1, "", "check_decay"], [41, 2, 1, "", "find_optimal"], [41, 2, 1, "", "fit"], [41, 2, 1, "", "plot"]], "autodeer.CarrPurcellSequence": [[41, 2, 1, "", "_build_sequence"]], "autodeer.Criteria": [[41, 2, 1, "", "__add__"]], "autodeer.DEERSequence": [[41, 2, 1, "", "add_ESEEM_avg"], [41, 2, 1, "", "five_pulse"], [41, 2, 1, "", "four_pulse"], [41, 2, 1, "", "nDEER_CP"], [41, 2, 1, "", "select_pcyc"], [41, 2, 1, "", "seven_pulse"], [41, 2, 1, "", "simulate"], [41, 2, 1, "", "three_pulse"]], "autodeer.DEER_analysis": [[12, 3, 1, "", "DEERanalysis"], [12, 3, 1, "", "DEERanalysis_plot"], [12, 3, 1, "", "DEERanalysis_plot_pub"], [12, 3, 1, "", "IdentifyROI"], [12, 4, 1, "", "MODULE_DIR"], [12, 3, 1, "", "background_func"], [12, 3, 1, "", "build__lowpass_butter_filter"], [12, 3, 1, "", "calc_correction_factor"], [12, 3, 1, "", "calc_deer_settings"], [12, 3, 1, "", "calc_identifiability"], [12, 3, 1, "", "find_longest_pulse"], [12, 3, 1, "", "functional"], [12, 4, 1, "", "log"], [12, 3, 1, "", "normalise_01"], [12, 3, 1, "", "optimise_pulses"], [12, 3, 1, "", "plot_overlap"], [12, 3, 1, "", "remove_echo"], [12, 3, 1, "", "resample_and_shift_vector"], [12, 3, 1, "", "shift_pulse_freq"]], "autodeer.EPRAccessor": [[41, 5, 1, "", "SNR"], [41, 5, 1, "", "correctphase"], [41, 5, 1, "", "correctphasefull"], [41, 5, 1, "", "fft"], [41, 5, 1, "", "normalise"], [41, 5, 1, "", "save"], [41, 5, 1, "", "sequence"]], "autodeer.FieldSweep": [[13, 1, 1, "", "FieldSweepAnalysis"], [13, 1, 1, "", "SpinSystem"], [13, 3, 1, "", "build_spectrum"], [13, 3, 1, "", "create_Nmodel"], [13, 3, 1, "", "erot"], [13, 3, 1, "", "eyekron"], [13, 3, 1, "", "ham"], [13, 3, 1, "", "ham_ez"], [13, 3, 1, "", "ham_nz"], [13, 3, 1, "", "kroneye"], [13, 3, 1, "", "resfields"]], "autodeer.FieldSweep.FieldSweepAnalysis": [[13, 2, 1, "", "calc_gyro"], [13, 2, 1, "", "calc_noise_level"], [13, 2, 1, "", "find_max"], [13, 2, 1, "", "fit"], [13, 2, 1, "", "plot"]], "autodeer.FieldSweepAnalysis": [[41, 2, 1, "", "calc_gyro"], [41, 2, 1, "", "calc_noise_level"], [41, 2, 1, "", "find_max"], [41, 2, 1, "", "fit"], [41, 2, 1, "", "plot"]], "autodeer.Logging": [[14, 1, 1, "", "DictFormater"], [14, 1, 1, "", "QtLogHandler"], [14, 3, 1, "", "change_log_level"], [14, 3, 1, "", "setup_logs"]], "autodeer.Logging.DictFormater": [[14, 2, 1, "", "format"]], "autodeer.Logging.QtLogHandler": [[14, 2, 1, "", "emit"], [14, 6, 1, "", "signal"]], "autodeer.RefocusedEcho2DAnalysis": [[41, 2, 1, "", "find_optimal"], [41, 2, 1, "", "optimal_tau1"], [41, 2, 1, "", "plot1D"], [41, 2, 1, "", "plot2D"]], "autodeer.RefocusedEcho2DSequence": [[41, 2, 1, "", "_build_sequence"]], "autodeer.Relaxation": [[15, 1, 1, "", "CarrPurcellAnalysis"], [15, 1, 1, "", "RefocusedEcho2DAnalysis"], [15, 1, 1, "", "ReptimeAnalysis"], [15, 4, 1, "", "cmap"], [15, 3, 1, "", "detect_ESEEM"], [15, 3, 1, "", "plot_1Drelax"]], "autodeer.Relaxation.CarrPurcellAnalysis": [[15, 2, 1, "", "check_decay"], [15, 2, 1, "", "find_optimal"], [15, 2, 1, "", "fit"], [15, 2, 1, "", "plot"]], "autodeer.Relaxation.RefocusedEcho2DAnalysis": [[15, 2, 1, "", "find_optimal"], [15, 2, 1, "", "optimal_tau1"], [15, 2, 1, "", "plot1D"], [15, 2, 1, "", "plot2D"]], "autodeer.Relaxation.ReptimeAnalysis": [[15, 2, 1, "", "calc_optimal_reptime"], [15, 2, 1, "", "fit"], [15, 2, 1, "", "plot"]], "autodeer.Reporter": [[41, 2, 1, "", "_build"], [41, 2, 1, "", "add_code_block"], [41, 2, 1, "", "add_figure"], [41, 2, 1, "", "add_new_section"], [41, 2, 1, "", "add_page_break"], [41, 2, 1, "", "add_space"], [41, 2, 1, "", "add_table"], [41, 2, 1, "", "add_text"], [41, 2, 1, "", "add_title"], [41, 2, 1, "", "footer"], [41, 2, 1, "", "header"]], "autodeer.ReptimeAnalysis": [[41, 2, 1, "", "calc_optimal_reptime"], [41, 2, 1, "", "fit"], [41, 2, 1, "", "plot"]], "autodeer.ResPro": [[16, 3, 1, "", "BSpline_extra"], [16, 1, 1, "", "ResonatorProfileAnalysis"], [16, 3, 1, "", "calc_overlap"], [16, 3, 1, "", "ceil"], [16, 3, 1, "", "floor"], [16, 3, 1, "", "optimise_spectra_position"]], "autodeer.ResPro.ResonatorProfileAnalysis": [[16, 2, 1, "", "_process_fit"], [16, 2, 1, "", "fit"], [16, 2, 1, "", "plot"], [16, 2, 1, "", "process_nutations"]], "autodeer.ResonatorProfileAnalysis": [[41, 2, 1, "", "_process_fit"], [41, 2, 1, "", "fit"], [41, 2, 1, "", "plot"], [41, 2, 1, "", "process_nutations"]], "autodeer.ResonatorProfileSequence": [[41, 2, 1, "", "_build_sequence"]], "autodeer.Sequence": [[41, 2, 1, "id42", "__str__"], [41, 2, 1, "id33", "_buildPhaseCycle"], [41, 2, 1, "id41", "_checkRect"], [41, 2, 1, "id39", "_convert_to_delay"], [41, 2, 1, "id40", "_convert_to_pulses"], [41, 2, 1, "id32", "_estimate_time"], [41, 2, 1, "id47", "_from_dict"], [41, 2, 1, "id48", "_from_json"], [41, 2, 1, "id44", "_to_dict"], [41, 2, 1, "id45", "_to_json"], [41, 2, 1, "id31", "addPulse"], [41, 2, 1, "id38", "convert"], [41, 2, 1, "id43", "copy"], [41, 2, 1, "id34", "evolution"], [41, 2, 1, "id37", "isDelayFocused"], [41, 2, 1, "id36", "isPulseFocused"], [41, 2, 1, "id49", "load"], [41, 2, 1, "id29", "plot"], [41, 2, 1, "id30", "plot_pulse_exc"], [41, 2, 1, "id46", "save"], [41, 5, 1, "id28", "seqtable_steps"], [41, 2, 1, "id35", "shift_detfreq_to_zero"]], "autodeer.TWTProfileSequence": [[41, 2, 1, "", "_build_sequence"]], "autodeer.TwoD_Experiment": [[17, 1, 1, "", "TwoDExperimentAnalysis"]], "autodeer.TwoD_Experiment.TwoDExperimentAnalysis": [[17, 2, 1, "", "_data_transpose"], [17, 2, 1, "", "_stability_check"], [17, 2, 1, "", "calculate_noise_level"], [17, 2, 1, "", "calculate_optimal"], [17, 2, 1, "", "calculate_snr_threshold"], [17, 2, 1, "", "create_bahrenberg_plots"], [17, 2, 1, "", "create_slice_plot"], [17, 2, 1, "", "create_twoD_plot"], [17, 2, 1, "", "estimated_snr"], [17, 2, 1, "", "import_data"], [17, 2, 1, "", "import_dataset"], [17, 2, 1, "", "invert_signal"], [17, 2, 1, "", "load"], [17, 2, 1, "", "optimal_slice_plot"], [17, 2, 1, "", "set_snr_target"], [17, 2, 1, "", "set_snr_threshold"], [17, 2, 1, "", "set_time_target"], [17, 2, 1, "", "snr_normalize"], [17, 2, 1, "", "value_at_pos"], [17, 2, 1, "", "value_at_time"]], "autodeer._version": [[18, 4, 1, "", "__version__"]], "autodeer.classes": [[19, 1, 1, "", "Interface"], [19, 1, 1, "", "Parameter"]], "autodeer.classes.Interface": [[19, 2, 1, "", "acquire_dataset"], [19, 2, 1, "", "connect"], [19, 2, 1, "", "isrunning"], [19, 2, 1, "", "launch"], [19, 2, 1, "", "terminate"], [19, 2, 1, "", "terminate_at"]], "autodeer.classes.Parameter": [[19, 2, 1, "", "__add__"], [19, 2, 1, "", "__eq__"], [19, 2, 1, "", "__mul__"], [19, 2, 1, "", "__rmul__"], [19, 2, 1, "", "__sub__"], [19, 2, 1, "", "_from_dict"], [19, 2, 1, "", "_from_json"], [19, 2, 1, "", "_to_dict"], [19, 2, 1, "", "_to_json"], [19, 2, 1, "", "add_axis"], [19, 2, 1, "", "copy"], [19, 5, 1, "", "dim"], [19, 2, 1, "", "get_axis"], [19, 2, 1, "", "is_static"], [19, 2, 1, "", "load"], [19, 2, 1, "", "remove_dynamic"], [19, 2, 1, "", "save"]], "autodeer.colors": [[20, 4, 1, "", "ReIm_colors"], [20, 4, 1, "", "primary_colors"], [20, 4, 1, "", "shade_colors"]], "autodeer.criteria": [[21, 1, 1, "", "Criteria"], [21, 1, 1, "", "DEERCriteria"], [21, 1, 1, "", "SNRCriteria"], [21, 1, 1, "", "TimeCriteria"], [21, 4, 1, "", "log"]], "autodeer.criteria.Criteria": [[21, 2, 1, "", "__add__"]], "autodeer.dataset": [[22, 1, 1, "", "EPRAccessor"], [22, 3, 1, "", "create_dataset_from_axes"], [22, 3, 1, "", "create_dataset_from_bruker"], [22, 3, 1, "", "create_dataset_from_sequence"], [22, 3, 1, "", "get_all_axes"], [22, 3, 1, "", "get_all_fixed_param"]], "autodeer.dataset.EPRAccessor": [[22, 5, 1, "", "SNR"], [22, 5, 1, "", "correctphase"], [22, 5, 1, "", "correctphasefull"], [22, 5, 1, "", "fft"], [22, 5, 1, "", "normalise"], [22, 5, 1, "", "save"], [22, 5, 1, "", "sequence"]], "autodeer.gui": [[25, 1, 1, "", "Worker"], [25, 1, 1, "", "WorkerSignals"], [23, 0, 0, "-", "__main__"], [25, 1, 1, "", "autoDEERUI"], [24, 0, 0, "-", "autoDEER_worker"], [25, 3, 1, "", "fill_table"], [25, 3, 1, "", "getCIstring"], [25, 3, 1, "", "get_sequence_rows"], [25, 3, 1, "", "list_str_to_type"], [25, 3, 1, "", "load_epr_file"], [26, 0, 0, "-", "log"], [27, 0, 0, "-", "main"], [25, 3, 1, "", "param_in_MHz"], [25, 3, 1, "", "param_in_us"], [25, 3, 1, "", "pyqt_table_from_dict"], [28, 0, 0, "-", "quickdeer"], [25, 3, 1, "", "read_table"], [25, 3, 1, "", "str_to_list_type"], [25, 3, 1, "", "test_SNR"], [29, 0, 0, "-", "test_main"], [30, 0, 0, "-", "tools"]], "autodeer.gui.Worker": [[25, 2, 1, "", "run"]], "autodeer.gui.WorkerSignals": [[25, 6, 1, "", "error"], [25, 6, 1, "", "finished"], [25, 6, 1, "", "result"]], "autodeer.gui.__main__": [[23, 4, 1, "", "app"], [23, 4, 1, "", "window"]], "autodeer.gui.autoDEERUI": [[25, 2, 1, "", "RunAdvancedAutoDEER"], [25, 2, 1, "", "RunAutoDEER"], [25, 2, 1, "", "RunFullyAutoDEER"], [25, 2, 1, "", "advanced_mode_inputs"], [25, 2, 1, "", "change_LO"], [25, 2, 1, "", "check_CP"], [25, 2, 1, "", "check_T2"], [25, 2, 1, "", "connect_spectrometer"], [25, 2, 1, "", "create_fieldsweep_figure"], [25, 2, 1, "", "create_relax_figure"], [25, 2, 1, "", "create_report"], [25, 2, 1, "", "create_respro_figure"], [25, 2, 1, "", "fsweep_toolbar"], [25, 2, 1, "", "load_epr_file"], [25, 2, 1, "", "load_folder"], [25, 2, 1, "", "load_spectrometer_config"], [25, 2, 1, "", "optimise_pulses"], [25, 2, 1, "", "optimise_pulses_button"], [25, 2, 1, "", "raise_warning"], [25, 2, 1, "", "refresh_T2"], [25, 2, 1, "", "refresh_fieldsweep_after_fit"], [25, 2, 1, "", "refresh_relax"], [25, 2, 1, "", "refresh_relax_figure"], [25, 2, 1, "", "refresh_respro"], [25, 2, 1, "", "relax_toolbar"], [25, 2, 1, "", "respro_toolbar"], [25, 2, 1, "", "save_data"], [25, 2, 1, "", "select_resonator"], [25, 2, 1, "", "set_spectrometer_connected_light"], [25, 2, 1, "", "timeout"], [25, 2, 1, "", "update_T2"], [25, 2, 1, "", "update_fieldsweep"], [25, 2, 1, "", "update_longdeer"], [25, 2, 1, "", "update_optimise_pulses_figure"], [25, 2, 1, "", "update_quickdeer"], [25, 2, 1, "", "update_relax"], [25, 2, 1, "", "update_relax2D"], [25, 2, 1, "", "update_reptime"], [25, 2, 1, "", "update_respro"]], "autodeer.gui.autoDEER_worker": [[24, 1, 1, "", "autoDEERSignals"], [24, 1, 1, "", "autoDEERWorker"]], "autodeer.gui.autoDEER_worker.autoDEERSignals": [[24, 6, 1, "", "Relax2D_result"], [24, 6, 1, "", "T2_result"], [24, 6, 1, "", "error"], [24, 6, 1, "", "finished"], [24, 6, 1, "", "fsweep_result"], [24, 6, 1, "", "longdeer_result"], [24, 6, 1, "", "longdeer_update"], [24, 6, 1, "", "progress"], [24, 6, 1, "", "quickdeer_result"], [24, 6, 1, "", "quickdeer_update"], [24, 6, 1, "", "relax_result"], [24, 6, 1, "", "reptime_scan_result"], [24, 6, 1, "", "respro_result"], [24, 6, 1, "", "result"], [24, 6, 1, "", "status"], [24, 6, 1, "", "timeout"]], "autodeer.gui.autoDEER_worker.autoDEERWorker": [[24, 2, 1, "", "_build_methods"], [24, 2, 1, "", "new_data"], [24, 2, 1, "", "new_pulses"], [24, 2, 1, "", "pause_and_wait"], [24, 2, 1, "", "run"], [24, 2, 1, "", "run_2D_relax"], [24, 2, 1, "", "run_CP_relax"], [24, 2, 1, "", "run_T2_relax"], [24, 2, 1, "", "run_deer"], [24, 2, 1, "", "run_fsweep"], [24, 2, 1, "", "run_long_deer"], [24, 2, 1, "", "run_quick_deer"], [24, 2, 1, "", "run_reptime_opt"], [24, 2, 1, "", "run_respro"], [24, 2, 1, "", "set_2D_max_tau"], [24, 2, 1, "", "set_noise_mode"], [24, 2, 1, "", "stop"], [24, 2, 1, "", "tune_pulses"], [24, 2, 1, "", "update_LO"], [24, 2, 1, "", "update_deersettings"], [24, 2, 1, "", "update_gyro"], [24, 2, 1, "", "update_reptime"]], "autodeer.gui.log": [[26, 1, 1, "", "LogDialog"], [26, 4, 1, "", "package_directory"]], "autodeer.gui.log.LogDialog": [[26, 2, 1, "", "add_new_entry"], [26, 2, 1, "", "clear_log"], [26, 2, 1, "", "save_log_to_file"], [26, 2, 1, "", "update_log_text"]], "autodeer.gui.main": [[27, 4, 1, "", "SampleConcComboBox_opts"], [27, 3, 1, "", "T2_process"], [27, 1, 1, "", "Worker"], [27, 1, 1, "", "WorkerSignals"], [27, 4, 1, "", "app"], [27, 1, 1, "", "autoDEERUI"], [27, 3, 1, "", "fieldsweep_fit"], [27, 4, 1, "", "package_directory"], [27, 3, 1, "", "relax_process"], [27, 3, 1, "", "respro_process"]], "autodeer.gui.main.Worker": [[27, 2, 1, "", "run"]], "autodeer.gui.main.WorkerSignals": [[27, 6, 1, "", "error"], [27, 6, 1, "", "finished"], [27, 6, 1, "", "progress"], [27, 6, 1, "", "result"]], "autodeer.gui.main.autoDEERUI": [[27, 2, 1, "", "RunAdvancedAutoDEER"], [27, 2, 1, "", "RunAutoDEER"], [27, 2, 1, "", "RunFullyAutoDEER"], [27, 2, 1, "", "advanced_mode_inputs"], [27, 2, 1, "", "change_LO"], [27, 2, 1, "", "check_CP"], [27, 2, 1, "", "check_T2"], [27, 2, 1, "", "connect_spectrometer"], [27, 2, 1, "", "create_fieldsweep_figure"], [27, 2, 1, "", "create_relax_figure"], [27, 2, 1, "", "create_report"], [27, 2, 1, "", "create_respro_figure"], [27, 2, 1, "", "fsweep_toolbar"], [27, 2, 1, "", "load_epr_file"], [27, 2, 1, "", "load_folder"], [27, 2, 1, "", "load_spectrometer_config"], [27, 2, 1, "", "optimise_pulses"], [27, 2, 1, "", "optimise_pulses_button"], [27, 2, 1, "", "raise_warning"], [27, 2, 1, "", "refresh_T2"], [27, 2, 1, "", "refresh_fieldsweep_after_fit"], [27, 2, 1, "", "refresh_relax"], [27, 2, 1, "", "refresh_relax_figure"], [27, 2, 1, "", "refresh_respro"], [27, 2, 1, "", "relax_toolbar"], [27, 2, 1, "", "respro_toolbar"], [27, 2, 1, "", "save_data"], [27, 2, 1, "", "select_resonator"], [27, 2, 1, "", "set_spectrometer_connected_light"], [27, 2, 1, "", "timeout"], [27, 2, 1, "", "update_T2"], [27, 2, 1, "", "update_fieldsweep"], [27, 2, 1, "", "update_longdeer"], [27, 2, 1, "", "update_optimise_pulses_figure"], [27, 2, 1, "", "update_quickdeer"], [27, 2, 1, "", "update_relax"], [27, 2, 1, "", "update_relax2D"], [27, 2, 1, "", "update_reptime"], [27, 2, 1, "", "update_respro"]], "autodeer.gui.quickdeer": [[28, 1, 1, "", "DEERplot"], [28, 4, 1, "", "app"], [28, 3, 1, "", "deeranalysis_process"], [28, 3, 1, "", "get_Vexp"], [28, 4, 1, "", "package_directory"]], "autodeer.gui.quickdeer.DEERplot": [[28, 2, 1, "", "clearLayout"], [28, 2, 1, "", "create_figure"], [28, 2, 1, "", "process_deeranalysis"], [28, 2, 1, "", "refresh_deer"], [28, 2, 1, "", "setup_inputs"], [28, 2, 1, "", "toolbar"], [28, 2, 1, "", "update_analysis_table"], [28, 2, 1, "", "update_figure"], [28, 2, 1, "", "update_fit_result"], [28, 2, 1, "", "update_inputs_from_dataset"]], "autodeer.gui.tools": [[30, 1, 1, "", "Worker"], [30, 1, 1, "", "WorkerSignals"], [30, 3, 1, "", "fill_table"], [30, 3, 1, "", "getCIstring"], [30, 3, 1, "", "get_sequence_rows"], [30, 3, 1, "", "list_str_to_type"], [30, 3, 1, "", "load_epr_file"], [30, 3, 1, "", "param_in_MHz"], [30, 3, 1, "", "param_in_us"], [30, 3, 1, "", "pyqt_table_from_dict"], [30, 3, 1, "", "read_table"], [30, 3, 1, "", "str_to_list_type"], [30, 3, 1, "", "test_SNR"]], "autodeer.gui.tools.Worker": [[30, 2, 1, "", "run"]], "autodeer.gui.tools.WorkerSignals": [[30, 6, 1, "", "error"], [30, 6, 1, "", "finished"], [30, 6, 1, "", "result"]], "autodeer.hardware": [[31, 0, 0, "-", "Bruker_AWG"], [32, 0, 0, "-", "Bruker_MPFU"], [33, 0, 0, "-", "Bruker_tools"], [34, 0, 0, "-", "ETH_awg"], [35, 0, 0, "-", "ETH_awg_load"], [36, 0, 0, "-", "XeprAPI_link"], [37, 0, 0, "-", "dummy"], [38, 0, 0, "-", "dummy_xepr"], [40, 0, 0, "-", "xepr_experiments"]], "autodeer.hardware.Bruker_AWG": [[31, 1, 1, "", "BrukerAWG"], [31, 3, 1, "", "get_specjet_data"], [31, 3, 1, "", "test_if_MPFU_compatability"]], "autodeer.hardware.Bruker_AWG.BrukerAWG": [[31, 2, 1, "", "_launch_complex_thread"], [31, 2, 1, "", "acquire_dataset"], [31, 2, 1, "", "calc_d0"], [31, 2, 1, "", "calc_d0_from_Hahn_Echo"], [31, 2, 1, "", "connect"], [31, 2, 1, "", "isrunning"], [31, 2, 1, "", "launch"], [31, 2, 1, "", "setup"], [31, 2, 1, "", "terminate"], [31, 2, 1, "", "tune_nutation"], [31, 2, 1, "", "tune_pulse"], [31, 2, 1, "", "tune_rectpulse"]], "autodeer.hardware.Bruker_MPFU": [[32, 1, 1, "", "BrukerMPFU"], [32, 3, 1, "", "ELDORtune"], [32, 3, 1, "", "MPFUtune"], [32, 3, 1, "", "_MPFU_channels"], [32, 3, 1, "", "get_specjet_data"], [32, 4, 1, "", "hw_log"], [32, 3, 1, "", "step_parameters"], [32, 3, 1, "", "test_if_MPFU_compatability"], [32, 3, 1, "", "tune_phase"], [32, 3, 1, "", "tune_power"]], "autodeer.hardware.Bruker_MPFU.BrukerMPFU": [[32, 2, 1, "", "_launch_complex_thread"], [32, 2, 1, "", "acquire_dataset"], [32, 2, 1, "", "calc_d0"], [32, 2, 1, "", "calc_d0_from_Hahn_Echo"], [32, 2, 1, "", "connect"], [32, 2, 1, "", "isrunning"], [32, 2, 1, "", "launch"], [32, 2, 1, "", "setup"], [32, 2, 1, "", "terminate"], [32, 2, 1, "", "tune"], [32, 2, 1, "", "tune_pulse"], [32, 2, 1, "", "tune_rectpulse"]], "autodeer.hardware.Bruker_tools": [[33, 4, 1, "", "MODULE_DIR"], [33, 1, 1, "", "PSPhaseCycle"], [33, 1, 1, "", "PSparvar"], [33, 1, 1, "", "PulseSpel"], [33, 3, 1, "", "_addAWGPulse"], [33, 3, 1, "", "build_unique_progtable"], [33, 3, 1, "", "calc_rel_positions"], [33, 3, 1, "", "change_dimensions"], [33, 3, 1, "", "check_variable"], [33, 3, 1, "", "convert_progtable"], [33, 3, 1, "", "get_arange"], [33, 4, 1, "", "header"], [33, 4, 1, "", "possible_delays"], [33, 4, 1, "", "possible_pulses"], [33, 4, 1, "", "possible_vars"], [33, 3, 1, "", "run_general"], [33, 3, 1, "", "write_pulsespel_file"]], "autodeer.hardware.Bruker_tools.PSPhaseCycle": [[33, 2, 1, "", "_MPFU"], [33, 2, 1, "", "__str__"], [33, 2, 1, "", "_detect"], [33, 2, 1, "", "_main"]], "autodeer.hardware.Bruker_tools.PSparvar": [[33, 2, 1, "", "checkPulseSpel"]], "autodeer.hardware.Bruker_tools.PulseSpel": [[33, 2, 1, "", "_ExpDefs"], [33, 2, 1, "", "__str__"], [33, 2, 1, "", "_addAWGPulse"], [33, 2, 1, "", "_addDef"], [33, 2, 1, "", "_addExp"], [33, 2, 1, "", "_addPhaseCycle"], [33, 2, 1, "", "_addScanLoop"], [33, 2, 1, "", "_check_sequence"], [33, 2, 1, "", "_cmpl_Exp"], [33, 2, 1, "", "_cmpl_def"], [33, 2, 1, "", "_new_delay"], [33, 2, 1, "", "_new_pulse"], [33, 2, 1, "", "_new_var"], [33, 2, 1, "", "save"]], "autodeer.hardware.ETH_awg": [[34, 1, 1, "", "ETH_awg_interface"], [34, 3, 1, "", "bg_thread"], [34, 4, 1, "", "log"]], "autodeer.hardware.ETH_awg.ETH_awg_interface": [[34, 2, 1, "", "_build_exp_struct"], [34, 2, 1, "", "_build_parvar"], [34, 2, 1, "", "_build_phase_cycle"], [34, 2, 1, "", "_build_pulse"], [34, 2, 1, "", "acquire_dataset"], [34, 2, 1, "", "acquire_dataset_from_matlab"], [34, 2, 1, "", "connect"], [34, 2, 1, "", "isrunning"], [34, 2, 1, "", "launch"], [34, 2, 1, "", "launch_long"], [34, 2, 1, "", "launch_normal"], [34, 5, 1, "", "savefolder"], [34, 2, 1, "", "terminate"], [34, 2, 1, "", "tune"], [34, 2, 1, "", "tune_pulse"], [34, 2, 1, "", "tune_rectpulse"]], "autodeer.hardware.ETH_awg_load": [[35, 3, 1, "", "calc_percieved_freq"], [35, 3, 1, "", "digitally_upconvert"], [35, 3, 1, "", "find_max_pulse_length"], [35, 3, 1, "", "match_filter_dc"], [35, 3, 1, "", "scipy_filter_dc"], [35, 3, 1, "", "uwb_eval_match"], [35, 3, 1, "", "uwb_load"]], "autodeer.hardware.XeprAPI_link": [[36, 1, 1, "", "XeprAPILink"], [36, 4, 1, "", "hw_log"], [36, 4, 1, "", "xepr_path"]], "autodeer.hardware.XeprAPI_link.XeprAPILink": [[36, 2, 1, "", "_get_Xepr_global"], [36, 2, 1, "", "_get_cur_exp_global"], [36, 2, 1, "", "_set_Xepr_global"], [36, 2, 1, "", "_set_cur_exp_global"], [36, 2, 1, "", "_set_cur_exp_param"], [36, 2, 1, "", "_set_hidden_param"], [36, 2, 1, "", "_xepr_retry"], [36, 2, 1, "", "abort_exp"], [36, 2, 1, "", "acquire_dataset"], [36, 2, 1, "", "acquire_scan"], [36, 2, 1, "", "acquire_scan_2d"], [36, 2, 1, "", "acquire_scan_at"], [36, 2, 1, "", "compile_PulseSpel_def"], [36, 2, 1, "", "compile_PulseSpel_prg"], [36, 2, 1, "", "connect"], [36, 2, 1, "", "find_Xepr"], [36, 2, 1, "", "find_cur_exp"], [36, 2, 1, "", "find_hidden"], [36, 2, 1, "", "get_Acquisition_mode"], [36, 2, 1, "", "get_ELDOR_freq"], [36, 2, 1, "", "get_MW_amp"], [36, 2, 1, "", "get_PhaseCycle"], [36, 2, 1, "", "get_PulseSpel_def_filename"], [36, 2, 1, "", "get_PulseSpel_def_filepath"], [36, 2, 1, "", "get_PulseSpel_exp_filename"], [36, 2, 1, "", "get_PulseSpel_exp_filepath"], [36, 2, 1, "", "get_PulseSpel_experiment"], [36, 2, 1, "", "get_PulseSpel_phase_cycling"], [36, 2, 1, "", "get_ReplaceMode"], [36, 2, 1, "", "get_attenuator"], [36, 2, 1, "", "get_config_file"], [36, 2, 1, "", "get_counterfreq"], [36, 2, 1, "", "get_field"], [36, 2, 1, "", "get_freq"], [36, 2, 1, "", "get_hidden_param"], [36, 2, 1, "", "get_param"], [36, 2, 1, "", "get_phase"], [36, 2, 1, "", "get_spec_config"], [36, 2, 1, "", "get_sweep_width"], [36, 2, 1, "", "get_video_bandwidth"], [36, 2, 1, "", "get_video_gain"], [36, 2, 1, "", "is_exp_running"], [36, 2, 1, "", "pause_exp"], [36, 2, 1, "", "rerun_exp"], [36, 2, 1, "", "run_exp"], [36, 2, 1, "", "save_PulseSpel_def"], [36, 2, 1, "", "save_PulseSpel_exp"], [36, 2, 1, "", "set_Acquisition_mode"], [36, 2, 1, "", "set_ELDOR_freq"], [36, 2, 1, "", "set_MW_amp"], [36, 2, 1, "", "set_PhaseCycle"], [36, 2, 1, "", "set_PulseSpel_def_filepath"], [36, 2, 1, "", "set_PulseSpel_exp_filepath"], [36, 2, 1, "", "set_PulseSpel_experiment"], [36, 2, 1, "", "set_PulseSpel_phase_cycling"], [36, 2, 1, "", "set_PulseSpel_var"], [36, 2, 1, "", "set_ReplaceMode"], [36, 2, 1, "", "set_attenuator"], [36, 2, 1, "", "set_config_file"], [36, 2, 1, "", "set_field"], [36, 2, 1, "", "set_freq"], [36, 2, 1, "", "set_hidden_param"], [36, 2, 1, "", "set_param"], [36, 2, 1, "", "set_phase"], [36, 2, 1, "", "set_sweep_width"], [36, 2, 1, "", "set_video_bandwidth"], [36, 2, 1, "", "set_video_gain"], [36, 2, 1, "", "stop_exp"], [36, 2, 1, "", "xepr_save"]], "autodeer.hardware.dummy": [[37, 3, 1, "", "_gen_ESEEM"], [37, 3, 1, "", "_similate_respro"], [37, 3, 1, "", "_simulate_2D_relax"], [37, 3, 1, "", "_simulate_CP"], [37, 3, 1, "", "_simulate_T2"], [37, 3, 1, "", "_simulate_deer"], [37, 3, 1, "", "_simulate_field_sweep"], [37, 3, 1, "", "_simulate_reptimescan"], [37, 3, 1, "", "add_noise"], [37, 3, 1, "", "add_phaseshift"], [37, 1, 1, "", "dummyInterface"], [37, 4, 1, "", "hw_log"], [37, 4, 1, "", "rng"], [37, 3, 1, "", "val_in_ns"], [37, 3, 1, "", "val_in_us"]], "autodeer.hardware.dummy.dummyInterface": [[37, 2, 1, "", "acquire_dataset"], [37, 2, 1, "", "isrunning"], [37, 2, 1, "", "launch"], [37, 2, 1, "", "terminate"], [37, 2, 1, "", "tune_pulse"], [37, 2, 1, "", "tune_rectpulse"]], "autodeer.hardware.dummy_xepr": [[38, 1, 1, "", "dummy_api"], [38, 1, 1, "", "dummy_cur_exp"], [38, 1, 1, "", "dummy_dataset"], [38, 1, 1, "", "dummy_hidden"], [38, 1, 1, "", "dummy_param"], [38, 1, 1, "", "dummy_xepr"], [38, 4, 1, "", "hardware_meta"], [38, 4, 1, "", "hw_log"]], "autodeer.hardware.dummy_xepr.dummy_api": [[38, 2, 1, "", "abort_exp"], [38, 2, 1, "", "acquire_scan"], [38, 2, 1, "", "acquire_scan_2d"], [38, 2, 1, "", "acquire_scan_at"], [38, 2, 1, "", "compile_PulseSpel_def"], [38, 2, 1, "", "compile_PulseSpel_prg"], [38, 2, 1, "", "find_Xepr"], [38, 2, 1, "", "is_exp_running"], [38, 2, 1, "", "run_exp"], [38, 2, 1, "", "set_PulseSpel_var"], [38, 2, 1, "", "stop_exp"]], "autodeer.hardware.dummy_xepr.dummy_cur_exp": [[38, 2, 1, "", "__getitem__"], [38, 2, 1, "", "aqExpRun"], [38, 2, 1, "", "getParam"]], "autodeer.hardware.dummy_xepr.dummy_hidden": [[38, 2, 1, "", "__getitem__"], [38, 2, 1, "", "getParam"]], "autodeer.hardware.dummy_xepr.dummy_param": [[38, 5, 1, "", "value"]], "autodeer.hardware.dummy_xepr.dummy_xepr": [[38, 1, 1, "", "XeprCmds"], [38, 2, 1, "", "XeprDataset"], [38, 2, 1, "", "XeprExperiment"]], "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds": [[38, 2, 1, "", "aqExpSelect"], [38, 2, 1, "", "aqPgCompile"], [38, 2, 1, "", "aqPgDefLoad"], [38, 2, 1, "", "aqPgDefSaveAs"], [38, 2, 1, "", "aqPgLoad"], [38, 2, 1, "", "aqPgSaveAs"], [38, 2, 1, "", "aqPgShowPrg"], [38, 2, 1, "", "vpSave"]], "autodeer.hardware.xepr_experiments": [[40, 3, 1, "", "CP_run"], [40, 3, 1, "", "CalibrateFreq"], [40, 1, 1, "", "DEER"], [40, 3, 1, "", "DEER5p_run"], [40, 1, 1, "", "ELDORtune"], [40, 4, 1, "", "MODULE_DIR"], [40, 1, 1, "", "MPFUtune"], [40, 1, 1, "", "PulseProfile"], [40, 3, 1, "", "get_nutations"]], "autodeer.hardware.xepr_experiments.DEER": [[40, 2, 1, "", "run_4p"], [40, 2, 1, "", "run_5p"], [40, 2, 1, "", "run_CP"]], "autodeer.hardware.xepr_experiments.ELDORtune": [[40, 2, 1, "", "_get_exp"], [40, 2, 1, "", "_setup_exp"], [40, 2, 1, "", "find_min"], [40, 2, 1, "", "tune"]], "autodeer.hardware.xepr_experiments.MPFUtune": [[40, 2, 1, "", "_setup_echo"], [40, 2, 1, "", "calc_d0"], [40, 2, 1, "", "tune"], [40, 2, 1, "", "tune_phase"], [40, 2, 1, "", "tune_power"]], "autodeer.hardware.xepr_experiments.PulseProfile": [[40, 2, 1, "", "_freq_sweep"], [40, 2, 1, "", "_setup_exp"]], "autodeer.pulses": [[42, 1, 1, "", "ChirpPulse"], [42, 1, 1, "", "Delay"], [42, 1, 1, "", "Detection"], [42, 1, 1, "", "GaussianPulse"], [42, 1, 1, "", "HSPulse"], [42, 1, 1, "", "Pulse"], [42, 1, 1, "", "RectPulse"], [42, 1, 1, "", "SincPulse"], [42, 3, 1, "", "build_default_pulses"]], "autodeer.pulses.ChirpPulse": [[42, 2, 1, "", "func"]], "autodeer.pulses.GaussianPulse": [[42, 2, 1, "", "func"]], "autodeer.pulses.HSPulse": [[42, 2, 1, "", "func"]], "autodeer.pulses.Pulse": [[42, 2, 1, "", "__str__"], [42, 2, 1, "", "_addPhaseCycle"], [42, 2, 1, "", "_buildFMAM"], [42, 2, 1, "", "_calc_fft"], [42, 2, 1, "", "_from_dict"], [42, 2, 1, "", "_from_json"], [42, 2, 1, "", "_pcyc_str"], [42, 2, 1, "", "_to_dict"], [42, 2, 1, "", "_to_json"], [42, 2, 1, "", "build_shape"], [42, 2, 1, "", "build_table"], [42, 2, 1, "", "copy"], [42, 2, 1, "", "exciteprofile"], [42, 2, 1, "", "isDelayFocused"], [42, 2, 1, "", "isPulseFocused"], [42, 2, 1, "", "is_static"], [42, 2, 1, "", "load"], [42, 2, 1, "", "plot"], [42, 2, 1, "", "plot_fft"], [42, 2, 1, "", "save"]], "autodeer.pulses.RectPulse": [[42, 2, 1, "", "func"]], "autodeer.pulses.SincPulse": [[42, 2, 1, "", "func"]], "autodeer.reporter": [[43, 1, 1, "", "Reporter"], [43, 1, 1, "", "SvgFlowable"], [43, 3, 1, "", "combo_figure"], [43, 3, 1, "", "create_report"], [43, 4, 1, "", "package_dir"], [43, 4, 1, "", "styles"]], "autodeer.reporter.Reporter": [[43, 2, 1, "", "_build"], [43, 2, 1, "", "add_code_block"], [43, 2, 1, "", "add_figure"], [43, 2, 1, "", "add_new_section"], [43, 2, 1, "", "add_page_break"], [43, 2, 1, "", "add_space"], [43, 2, 1, "", "add_table"], [43, 2, 1, "", "add_text"], [43, 2, 1, "", "add_title"], [43, 2, 1, "", "footer"], [43, 2, 1, "", "header"]], "autodeer.reporter.SvgFlowable": [[43, 2, 1, "", "draw"], [43, 2, 1, "", "wrap"]], "autodeer.sequences": [[44, 1, 1, "", "CarrPurcellSequence"], [44, 1, 1, "", "DEERSequence"], [44, 1, 1, "", "FieldSweepSequence"], [44, 1, 1, "", "HahnEchoSequence"], [44, 1, 1, "", "RefocusedEcho2DSequence"], [44, 1, 1, "", "ReptimeScan"], [44, 1, 1, "", "ResonatorProfileSequence"], [44, 1, 1, "", "Sequence"], [44, 1, 1, "", "T2RelaxationSequence"], [44, 1, 1, "", "TWTProfileSequence"]], "autodeer.sequences.CarrPurcellSequence": [[44, 2, 1, "", "_build_sequence"]], "autodeer.sequences.DEERSequence": [[44, 2, 1, "", "add_ESEEM_avg"], [44, 2, 1, "", "five_pulse"], [44, 2, 1, "", "four_pulse"], [44, 2, 1, "", "nDEER_CP"], [44, 2, 1, "", "select_pcyc"], [44, 2, 1, "", "seven_pulse"], [44, 2, 1, "", "simulate"], [44, 2, 1, "", "three_pulse"]], "autodeer.sequences.RefocusedEcho2DSequence": [[44, 2, 1, "", "_build_sequence"]], "autodeer.sequences.ResonatorProfileSequence": [[44, 2, 1, "", "_build_sequence"]], "autodeer.sequences.Sequence": [[44, 2, 1, "", "__str__"], [44, 2, 1, "", "_buildPhaseCycle"], [44, 2, 1, "", "_checkRect"], [44, 2, 1, "", "_convert_to_delay"], [44, 2, 1, "", "_convert_to_pulses"], [44, 2, 1, "", "_estimate_time"], [44, 2, 1, "", "_from_dict"], [44, 2, 1, "", "_from_json"], [44, 2, 1, "", "_to_dict"], [44, 2, 1, "", "_to_json"], [44, 2, 1, "", "addPulse"], [44, 2, 1, "", "convert"], [44, 2, 1, "", "copy"], [44, 2, 1, "", "evolution"], [44, 2, 1, "", "isDelayFocused"], [44, 2, 1, "", "isPulseFocused"], [44, 2, 1, "", "load"], [44, 2, 1, "", "plot"], [44, 2, 1, "", "plot_pulse_exc"], [44, 2, 1, "", "save"], [44, 5, 1, "", "seqtable_steps"], [44, 2, 1, "", "shift_detfreq_to_zero"]], "autodeer.sequences.TWTProfileSequence": [[44, 2, 1, "", "_build_sequence"]], "autodeer.tools": [[45, 3, 1, "", "eprload"], [45, 4, 1, "", "log"], [45, 3, 1, "", "progress_bar"], [45, 3, 1, "", "progress_bar_frac"]], "autodeer.utils": [[46, 3, 1, "", "autoEPRDecoder"], [46, 3, 1, "", "build_table"], [46, 3, 1, "", "gcd"], [46, 3, 1, "", "round_step"], [46, 3, 1, "", "save_file"], [46, 3, 1, "", "sop"], [46, 3, 1, "", "transpose_dict_of_list"], [46, 3, 1, "", "transpose_list_of_dicts"], [46, 3, 1, "", "val_in_ns"], [46, 3, 1, "", "val_in_us"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property", "6": "py:attribute"}, "terms": {"": [13, 14, 19, 34, 42, 50, 56], "0": [8, 12, 13, 15, 16, 17, 18, 19, 21, 28, 32, 34, 35, 36, 40, 41, 42, 44, 53, 54, 56, 58, 60, 62], "00": 56, "0028087": 53, "00bbd6": 20, "01": 60, "015": 53, "02": [53, 56], "025": 53, "03": [16, 41, 56, 58], "05": [15, 16, 41], "08": [13, 53], "08737812e": 56, "1": [3, 4, 8, 12, 13, 15, 16, 17, 19, 21, 25, 27, 30, 31, 32, 34, 36, 40, 41, 42, 44, 46, 52, 53, 54, 57, 58, 61, 62], "10": [19, 53, 56, 60], "100": [4, 32, 40, 41, 44, 50, 53, 60, 62], "1000": [13, 16, 24, 41, 42, 53, 54], "10000": 42, "100000000": 13, "100n": 62, "10400": 53, "11": [41, 42, 46, 53], "119": 42, "12": [42, 53, 56], "120": 53, "1201": 53, "12181": 53, "12182": 53, "12183": 53, "12220": [60, 62], "12220g": 65, "128": [40, 42, 53, 62], "13": 53, "13570": 42, "13582": 42, "14": 53, "15": [53, 54, 56], "16": [17, 24, 32, 40, 41, 42, 44, 50, 53, 54, 56, 62], "168": 58, "16n": [41, 44], "16step_4p": [41, 44, 54], "16step_5p": [41, 44, 53, 54], "17400": 53, "178": [41, 42, 46], "180": 60, "19": [13, 52, 54], "192": 58, "1d": [15, 41], "1e": [13, 53, 56], "1e3": [53, 54, 60], "1e4": 56, "1e8": 56, "1mhz": 58, "1st": [41, 44], "2": [12, 14, 16, 19, 25, 30, 31, 32, 33, 34, 36, 40, 41, 42, 44, 46, 53, 54, 56, 58, 61, 62], "20": [12, 36, 41, 42, 50, 53, 56], "200": [24, 36, 40, 41, 44, 53, 62], "2000": [41, 44, 53], "2006": [41, 42, 46], "2008": [21, 41], "2009": [41, 42, 46], "200n": 62, "2013": [52, 54], "2014": 52, "2015": [42, 54], "2017": 54, "2021": 52, "2024": 52, "203": 58, "2050": 58, "217": 53, "2172": 53, "23200": 53, "24": 53, "2400": 53, "24000": 53, "25": [12, 13, 41], "2500": 53, "256": 40, "2600": 53, "265": 56, "2800": 53, "2d": [12, 15, 17, 33, 36, 38, 41, 44, 50, 68], "2e2": 62, "2e3": [53, 54], "2x2": [41, 43], "3": [3, 4, 6, 7, 8, 10, 12, 14, 32, 33, 36, 40, 41, 42, 44, 52, 53, 54, 56, 62], "30": [12, 13, 21, 32, 40, 41, 53, 60], "3000": 53, "30th": 52, "31": 53, "32": [16, 41, 42, 44, 53, 54, 62], "320": 53, "32000": 53, "32e3": 53, "32step_7p": [41, 44, 54], "33": [16, 41, 53, 56, 58], "332": 53, "3339": 14, "34": [16, 41, 53, 56, 60, 62], "35": [16, 41, 56, 58], "36": [16, 41, 53], "38": 53, "3e3": [60, 62], "3ghz": [41, 44], "4": [12, 17, 21, 40, 41, 44, 53, 56, 65], "40": [41, 44, 53], "400": [31, 34, 37, 40, 62], "4000000": 40, "4095": [40, 58], "42": [41, 42, 46], "42a399": [15, 20, 41], "49": 53, "4_dev": 53, "4pdeer": [12, 15, 41, 50], "4puls": [15, 17, 41], "4u": [12, 41], "5": [15, 16, 17, 34, 40, 41, 43, 44, 53, 55, 56, 58], "50": [24, 40, 41, 44, 53, 54], "500": [41, 44, 53], "501": 53, "50k": 53, "512": 53, "52260651e": 56, "55": [41, 42, 46], "550": 32, "5600": 53, "5800": 53, "5e3": 53, "5pdeer": [12, 15, 41, 50], "5puls": [15, 17, 41], "5u": [12, 41], "6": [42, 53, 54, 56], "60": 24, "6000": 53, "6000000": 40, "650": 56, "6614": [41, 42, 46], "6625": [41, 42, 46], "67652": 58, "680": 40, "6e3": 62, "6u": 62, "7": [18, 41, 44, 53], "70": 58, "700": 40, "747": 53, "770": 53, "7800": 53, "8": [4, 41, 44, 53, 54, 56, 58, 65], "80": [40, 53, 56], "800": 53, "8000": 53, "82": 56, "85625754e": 56, "8n": [41, 44], "8step_3p": [41, 44, 54], "9": [15, 41, 52, 53], "90": [50, 60], "91334739e": 56, "92378391e": 56, "976": 56, "99": [12, 41], "A": [12, 13, 17, 19, 21, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 67], "As": [55, 56, 67], "At": [50, 51, 55], "BE": 42, "By": [14, 19, 41, 44], "For": [12, 41, 50, 53, 57, 58, 60, 61, 62, 63, 67], "IF": 34, "If": [12, 14, 15, 16, 17, 19, 31, 32, 33, 34, 35, 36, 41, 42, 44, 50, 54, 60, 67], "In": [52, 53, 58, 60, 62], "It": [16, 34, 41, 48, 50, 53, 54, 55, 62, 63, 65, 67], "No": [24, 25, 27, 30, 32, 62], "On": [52, 55, 56, 60, 61, 65, 67], "One": [52, 54, 58, 65], "That": 65, "The": [0, 12, 13, 14, 15, 16, 17, 19, 21, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 51, 53, 54, 55, 56, 58, 60, 61, 62, 65, 69], "There": [17, 36, 53, 57, 60, 62, 64, 65, 69], "These": [36, 38, 50, 58, 60, 65], "To": [0, 17, 51, 52, 62, 65], "WILL": 42, "With": [15, 41, 54], "_": 60, "__add__": [19, 21, 41], "__eq__": 19, "__getitem__": 38, "__init__": 62, "__main__": [25, 41, 47], "__mul__": 19, "__o": [19, 21, 41], "__rmul__": 19, "__str__": [33, 41, 42, 44], "__sub__": 19, "__version__": [18, 41], "_addawgpuls": 33, "_adddef": 33, "_addexp": 33, "_addphasecycl": [33, 42], "_addscanloop": 33, "_arg": 43, "_build": [41, 43], "_build_exp_struct": 34, "_build_method": 24, "_build_parvar": 34, "_build_phase_cycl": 34, "_build_puls": 34, "_build_sequ": [41, 44], "_buildfmam": [42, 62], "_buildphasecycl": [41, 44], "_calc_fft": 42, "_check_sequ": 33, "_checkrect": [41, 44], "_cmpl_def": 33, "_cmpl_exp": 33, "_convert_to_delai": [41, 44], "_convert_to_puls": [41, 44], "_data_transpos": 17, "_description_": [12, 13, 15, 17, 21, 25, 30, 33, 34, 35, 36, 40, 41, 44, 45, 46], "_detect": 33, "_estimate_tim": [41, 44], "_expdef": 33, "_freq_sweep": 40, "_from_dict": [19, 41, 42, 44], "_from_json": [19, 41, 42, 44], "_gen_eseem": 37, "_get_cur_exp_glob": 36, "_get_exp": 40, "_get_xepr_glob": 36, "_launch_complex_thread": [31, 32], "_main": 33, "_mpfu": 33, "_mpfu_channel": 32, "_new_delai": 33, "_new_puls": 33, "_new_var": 33, "_pcyc_str": 42, "_process_fit": [16, 41], "_set_cur_exp_glob": 36, "_set_cur_exp_param": 36, "_set_hidden_param": 36, "_set_xepr_glob": 36, "_setup_echo": 40, "_setup_exp": 40, "_similate_respro": 37, "_simulate_2d_relax": 37, "_simulate_cp": 37, "_simulate_d": 37, "_simulate_field_sweep": 37, "_simulate_reptimescan": 37, "_simulate_t2": 37, "_stability_check": 17, "_summary_": 36, "_to_dict": [19, 41, 42, 44], "_to_json": [19, 41, 42, 44], "_type_": [12, 17, 19, 21, 25, 30, 33, 34, 40, 41, 42, 44], "_version": [41, 47], "_xepr_retri": 36, "a4": [41, 43], "a_shift": 12, "ab": 32, "abil": [55, 57], "abl": 51, "abort": [36, 38], "abort_exp": [36, 38], "about": [42, 53, 60, 62], "abov": [14, 16, 17, 41, 44, 51, 54, 62], "absolut": [21, 41], "accept": 65, "acces": 60, "access": [60, 65, 69], "accumul": [41, 44], "accur": 60, "achiev": [12, 41, 50], "acquir": [19, 31, 32, 34, 36, 37, 38, 60], "acquire_dataset": [19, 31, 32, 34, 36, 37, 53, 60], "acquire_dataset_from_matlab": 34, "acquire_scan": [36, 38], "acquire_scan_2d": [36, 38], "acquire_scan_at": [36, 38], "acquisit": 33, "acquisition_mod": 33, "across": [41, 44, 50, 58], "act": 14, "activ": [48, 57, 60, 63], "actual": [14, 38, 60], "ad": [12, 14, 15, 19, 31, 32, 35, 37, 41, 42, 43, 44, 53, 54, 57, 60, 62, 65, 68], "add": [41, 42, 44, 52, 62, 65], "add_axi": 19, "add_code_block": [41, 43], "add_eseem_avg": [41, 44], "add_figur": [41, 43], "add_new_entri": 26, "add_new_sect": [41, 43], "add_nois": 37, "add_page_break": [41, 43], "add_phaseshift": 37, "add_spac": [41, 43], "add_tabl": [41, 43], "add_text": [41, 43], "add_titl": [41, 43], "addit": [54, 56, 60, 61, 62], "addition": [48, 50, 55, 67], "addpuls": [41, 44, 62], "addpulsesprog": 62, "adjust": [36, 50, 55, 60], "administr": 65, "advanc": [25, 27, 53, 57, 60, 68], "advanced_mode_input": [25, 27], "advantag": [54, 62], "advent": 54, "after": [12, 31, 32, 36, 38, 41, 52, 54, 57, 60, 65], "again": 50, "aic": 56, "aim": [51, 65], "aim_mnr": [12, 41], "aim_tim": [12, 41], "aimtim": [12, 41], "akin": 55, "al": [21, 41, 54], "alert": 65, "algorithm": [21, 41, 68], "algorithum": 48, "align": 17, "all": [8, 14, 17, 33, 34, 35, 40, 41, 42, 44, 50, 51, 53, 54, 55, 60, 61, 62, 63, 65, 67], "allow": [14, 38, 50, 53, 54, 55, 57, 60, 61, 62, 69], "alogoithm": 53, "along": [12, 17, 41, 55, 60], "alreadi": 36, "also": [33, 50, 51, 55, 57, 60, 62, 63, 65, 69], "alwai": [50, 51, 54, 60, 65], "am": [42, 62], "amount": 12, "amp_hahn": 34, "amp_nut": [53, 60], "amp_var": 33, "amplifi": [36, 65], "amplitud": [42, 57, 60], "an": [12, 14, 15, 17, 19, 25, 30, 31, 32, 33, 34, 38, 41, 42, 44, 48, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 65], "analogu": [58, 61], "analys": [55, 57, 60, 63, 67], "analysi": [12, 13, 14, 15, 16, 21, 41, 42, 43, 46, 57, 63], "analyz": [12, 15, 41], "andrin": [34, 35, 42], "angl": 42, "ani": [17, 19, 34, 36, 38, 51, 52, 55, 65], "annot": [4, 10], "anoth": [42, 58, 65], "anyth": [24, 25, 27, 30, 48, 52, 65], "api": [33, 40, 53, 68], "api_doc": 60, "app": [23, 27, 28], "appear": 55, "append": 14, "appli": [17, 32, 50, 57], "applic": [12, 14, 25, 30, 41], "appraoch": 50, "approach": [60, 61, 62, 63], "appropri": [60, 65], "approxim": [12, 40, 50], "aqexprun": 38, "aqexpselect": 38, "aqpgcompil": 38, "aqpgdefload": 38, "aqpgdefsavea": 38, "aqpgload": 38, "aqpgsavea": 38, "aqpgshowprg": 38, "ar": [12, 14, 15, 17, 24, 25, 27, 30, 32, 33, 35, 41, 42, 44, 46, 50, 52, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 67, 69], "arang": [19, 62], "arbitari": 42, "arg": [3, 6, 7, 12, 13, 15, 24, 25, 27, 30, 32, 36, 41, 42], "argument": [14, 24, 25, 27, 30, 42, 60], "aris": 65, "around": [34, 48, 53], "arrai": [17, 33, 42], "arthur": [41, 42, 46], "ascii": 65, "asctim": 14, "asp": [21, 41], "associ": 40, "assum": [16, 17, 41], "astronom": [21, 41], "attempt": 52, "attenu": [32, 40, 65], "attribut": [3, 8, 14, 19, 31, 62], "auto": [1, 12, 17, 41, 47, 61], "autoapi": [3, 8, 68], "autoapi_opt": [3, 8], "autod": [0, 47, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 65, 69], "autodeer_4hr": 53, "autodeer_fieldsweep": 53, "autodeer_work": [25, 41, 47], "autodeersign": 24, "autodeerui": [25, 27], "autodeerwork": 24, "autoepr": [19, 37, 48, 54, 60, 61, 62], "autoeprdecod": [41, 46], "autom": [48, 57, 60, 63, 68], "automat": [17, 57, 60, 67], "autosav": [19, 31, 32, 37, 65], "avail": [14, 24, 25, 27, 30, 60], "availi": [12, 41, 68], "avali": [12, 15, 41, 50], "averag": [12, 13, 15, 24, 34, 41, 44, 53, 54, 60, 62], "awai": [57, 63], "awg": [24, 31, 33, 34, 42, 50, 53, 54, 56, 57, 58, 61, 62, 63, 65, 68], "awg_freq": 34, "ax": [12, 13, 15, 16, 22, 41, 42, 53, 60, 62], "ax_id": 19, "axes_label": [22, 41], "axi": [12, 13, 16, 17, 19, 33, 41, 42, 44, 46, 53, 62], "axid": [31, 32, 34], "axis_id": [19, 62], "b": [12, 13, 31, 32, 33, 34, 37, 41, 42, 44, 53, 54, 60, 62], "b0": [31, 32, 34, 41, 44, 53, 62], "b_shift": 12, "back": [63, 64, 65], "backend": 48, "background": [12, 31, 32, 34, 41, 53], "background_func": 12, "backup": 52, "bahrenberg": 17, "banana": 56, "band": [50, 57], "bandwidth": [36, 62], "base": [3, 12, 14, 15, 21, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 38, 41, 42, 43, 44, 50, 51, 52, 57, 58, 60, 61, 63, 68], "bashrc": 52, "basic": [14, 54, 60, 61, 65], "becaus": [50, 52], "becom": [52, 65], "been": [34, 36, 38, 50, 52, 54, 57, 58, 60, 61, 63, 65], "befor": [14, 19, 50, 52, 53, 54, 58, 60, 61, 65, 67], "begin": [36, 38], "being": [19, 34, 50, 62], "beliv": 36, "below": [54, 55], "best": [12, 41], "beta": [42, 48], "better": [31, 32, 65], "between": [12, 16, 40, 41, 44, 52, 53, 54, 57, 58, 60, 62], "beyond": 53, "bg_thread": [31, 32, 34], "bic": 56, "big": 65, "biolog": 57, "biomolecul": 54, "bit": [17, 56, 58], "blank": [4, 55], "block": [8, 60], "book": 55, "bool": [12, 13, 15, 17, 19, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 44], "borbat": 54, "both": [12, 16, 17, 33, 36, 40, 41, 44, 50, 55, 57, 58, 60, 61, 62, 63, 65], "bottom": [41, 43, 55], "bound": [32, 40], "box": [25, 27, 30, 55], "branch": 51, "bridg": [36, 56, 58, 61], "bridge12": 56, "brief": 19, "britt": [41, 42, 46], "bruker": [17, 31, 32, 33, 34, 38, 51, 52, 56, 57, 60, 63, 67, 68], "bruker_awg": [39, 41, 47], "bruker_mpfu": [39, 41, 47], "bruker_tool": [39, 41, 47], "brukerawg": [31, 58, 60], "brukermpfu": [32, 58], "brute": [12, 41], "bspline_extra": 16, "bug": 64, "build": [12, 13, 41, 42, 44, 48, 54, 58, 61, 62, 65], "build__lowpass_butter_filt": 12, "build_default_puls": 42, "build_shap": 42, "build_spectrum": 13, "build_tabl": [41, 42, 46], "build_unique_progt": 33, "built": [0, 48, 53, 57, 60, 61, 62, 63, 65], "butter": 35, "butterworth": 12, "button": [48, 50, 55, 57, 60, 63, 64, 67], "bw": [56, 62], "bwidth": [41, 44, 53], "byte": 43, "bytesio": 43, "c": 33, "c243": [56, 58], "ca": 52, "cach": [31, 34, 60], "caclul": 17, "cal": [56, 58], "calc_correction_factor": [12, 41], "calc_d0": [31, 32, 40], "calc_d0_from_hahn_echo": [31, 32], "calc_deer_set": [12, 41, 68], "calc_gyro": [13, 41, 53], "calc_identifi": 12, "calc_noise_level": [13, 41], "calc_optimal_deer_frq": 53, "calc_optimal_reptim": [15, 41], "calc_overlap": 16, "calc_percieved_freq": 35, "calc_rel_posit": 33, "calcat": [12, 41], "calcuat": [16, 33], "calcul": [12, 13, 15, 16, 17, 36, 41, 44, 50, 53, 55, 65, 68], "calculate_noise_level": 17, "calculate_optim": 17, "calculate_snr_threshold": 17, "calibr": [56, 58, 61], "calibratefreq": 40, "call": [14, 34, 54, 62, 69], "callback": [24, 25, 27, 30], "can": [14, 17, 19, 31, 32, 33, 36, 38, 40, 42, 48, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 69], "cannot": [17, 19, 41, 42, 44], "canva": [41, 43], "carefulli": 65, "cari": 50, "carr": [12, 15, 41, 44, 50, 54], "carri": [14, 50], "carrpurcel": 53, "carrpurcellanalysi": [12, 15, 41, 53, 60], "carrpurcellsequ": [41, 44, 53], "case": [14, 17, 52], "caus": [52, 61, 65], "caution": 42, "caveat": 61, "cd": 52, "ceil": 16, "center": [55, 56], "centr": [42, 57], "central": [31, 34, 41, 44, 53], "certif": 52, "chage": 42, "challeng": [52, 54], "chang": [14, 33, 34, 36, 38, 54, 58, 60, 62, 63, 64, 65], "change_dimens": 33, "change_lo": [25, 27], "change_log_level": 14, "channel": [14, 32, 33, 36, 40, 56, 58, 65], "characteris": 50, "charecteris": 50, "chart": 43, "cheby2": 35, "check": [15, 17, 21, 33, 41, 42, 44, 52, 54, 60, 65], "check_cp": [25, 27], "check_decai": [15, 41], "check_t2": [25, 27], "check_vari": 33, "checkpulsespel": 33, "chem": [41, 42, 46, 54], "children": 8, "chip": 62, "chirp": [50, 54, 63], "chirppuls": [42, 62], "chnannel": 36, "choos": [33, 34, 41, 44, 55], "chose": 50, "chosen": [32, 40, 54, 55], "clarifi": 50, "class": [3, 5, 8, 47, 60, 61, 62, 68], "classmethod": [19, 41, 42, 44], "clean": 0, "clear": [42, 60], "clear_cach": 60, "clear_log": 26, "clearlayout": 28, "click": [55, 64, 67], "clone": 51, "close": 52, "closest": 17, "cmap": [15, 17, 41], "code": [38, 41, 43, 44, 48, 54, 60], "coeffic": 36, "coher": [42, 62], "collect": 40, "color": [15, 41, 47], "colormap": 17, "com": [51, 58, 59], "combin": 60, "combo_figur": [41, 43], "come": [50, 52, 60, 62], "command": [14, 32, 36, 54, 62], "common": [41, 46, 50, 52, 60], "commonli": 34, "commun": [55, 65], "comp": [41, 46], "compact": [12, 41, 53], "compat": 33, "compens": [50, 63], "compil": 33, "compile_pulsespel_def": [36, 38], "compile_pulsespel_prg": [36, 38], "complet": [17, 48, 50, 52, 55, 56, 58, 60, 67], "complex": 35, "complic": 60, "compon": 61, "comprehens": [41, 42, 46], "compress": 35, "comput": [13, 14, 21, 41, 42, 52, 58], "computefreq2field": 13, "computeintens": 13, "condit": 19, "conduct": 60, "confer": [21, 41], "config": [52, 55, 58, 67], "config_fil": [31, 32, 36, 37], "configur": [31, 32, 36, 67], "conflict": 52, "connect": [19, 31, 32, 34, 36, 37, 53, 61, 65], "connect_spectromet": [25, 27], "consid": [48, 61, 62], "consist": [60, 62], "consol": 52, "constant": [17, 19, 33], "construct": 14, "consum": 54, "conta": 33, "contact": [48, 59, 61], "contain": [1, 16, 19, 33, 41, 42, 43, 44, 47, 54, 55, 60, 62, 67], "content": 8, "continu": [21, 41, 52], "contour": [15, 17, 41], "control": [34, 53, 57, 61, 63], "convers": 36, "convert": [14, 33, 40, 41, 43, 44, 46, 58, 61, 62], "convert_progt": 33, "coordin": 17, "copi": [19, 41, 42, 44], "core": [14, 16, 27, 28, 41, 56, 65], "core_logg": 65, "corespond": 52, "corner": [17, 55], "correct": [12, 32, 36, 41, 54, 60], "correctli": 52, "correctphas": [22, 41], "correctphaseful": [22, 41], "correspond": [38, 42], "could": [65, 67], "count": 4, "counter": 36, "coupl": [14, 61], "cours": 61, "cp": [12, 15, 41, 50], "cp_data": 53, "cp_run": 40, "cpdecai": [12, 41], "cpseq": 53, "creat": [12, 13, 14, 15, 17, 19, 25, 27, 31, 32, 34, 41, 42, 43, 44, 46, 54, 60, 65], "create_bahrenberg_plot": 17, "create_dataset_from_ax": [22, 41], "create_dataset_from_bruk": [22, 41], "create_dataset_from_sequ": [22, 41], "create_fieldsweep_figur": [25, 27], "create_figur": 28, "create_nmodel": 13, "create_relax_figur": [25, 27], "create_report": [25, 27, 43], "create_respro_figur": [25, 27], "create_slice_plot": 17, "create_twod_plot": 17, "creation": 14, "criteria": [12, 19, 33, 41, 47, 53, 60, 63], "criterion": [12, 19, 41], "critic": [14, 65], "cross": 12, "csv": 17, "cur_exp_inst": 36, "current": [14, 15, 33, 34, 36, 38, 41, 44, 51, 54, 55, 58, 61, 63], "custom": [53, 69], "customis": 55, "cutoff": [12, 41], "cvx": 56, "cycl": [17, 33, 41, 42, 44, 53, 62], "d": [14, 21, 33, 41, 46], "d0": [31, 32, 33, 40, 56, 67], "d1": 33, "d10": 33, "d11": 33, "d12": 33, "d13": 33, "d14": 33, "d15": 33, "d2": 33, "d3": 33, "d4": 33, "d5": 33, "d6": 33, "d61b00": 20, "d7": 33, "d8": 33, "d95b6f": [15, 20, 41], "dai": 65, "daili": 65, "danger": 65, "data": [2, 8, 12, 15, 17, 19, 21, 22, 24, 25, 27, 30, 35, 36, 37, 38, 41, 42, 43, 45, 50, 53, 55, 57, 63, 67, 68], "dataarrai": [13, 15, 41, 45], "datafil": 17, "dataset": [12, 13, 15, 16, 17, 19, 25, 27, 28, 31, 32, 34, 36, 37, 38, 40, 41, 47, 53, 60], "date": [14, 51, 52, 63, 65], "datefmt": 14, "david": [41, 42, 46], "db": 36, "dc": [41, 44, 54, 62], "dct": [41, 42, 44, 46], "deadtim": [40, 54], "debug": [14, 56, 65], "decai": [12, 15, 17, 41, 50], "decid": 60, "decim": 16, "declar": 62, "decoher": [17, 68], "decoupl": [41, 44], "decreas": 62, "deep": 42, "deer": [12, 17, 21, 40, 41, 43, 44, 48, 55, 57, 58, 63, 67, 68], "deer5p_run": 40, "deer_analysi": [41, 47], "deer_set": 24, "deeranalysi": [12, 41, 53], "deeranalysis_plot": [12, 41, 53], "deeranalysis_plot_pub": [12, 41], "deeranalysis_process": 28, "deercriteria": [21, 41, 53], "deerlab": [12, 17, 21, 41, 43, 50, 51, 56, 57], "deerload": 17, "deerplot": 28, "deersequ": [41, 44, 53, 54], "def": [33, 62], "default": [12, 13, 14, 15, 16, 17, 19, 21, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 52, 53, 56, 60, 65], "defenc": 65, "defin": [14, 21, 24, 25, 27, 30, 41, 53, 62], "definit": [33, 53, 58], "deg": 40, "degre": [40, 65], "delai": [15, 17, 33, 41, 42, 44, 50, 53, 54, 57, 62, 67], "delat": 12, "demonstr": 62, "den": 45, "denot": 34, "depend": [12, 14, 41, 44, 51, 52, 54, 61, 62], "dependeci": 52, "deprec": 42, "depth": [37, 54], "dersnr": [21, 41], "describ": [14, 15, 41, 44, 62], "descript": [19, 21, 41, 53, 54], "design": [0, 50, 57, 61, 63], "desir": [12, 14, 41], "desktop": 65, "destin": 14, "det": [56, 58, 62], "det_ev": [53, 54], "det_frq": [13, 40, 41], "det_window": 53, "detail": [17, 40, 50, 60, 69], "detect": [13, 15, 34, 36, 38, 41, 42, 43, 50, 53, 62, 65], "detect_eseem": [15, 41], "determin": [14, 50, 57], "deuteron": [15, 41, 44], "dev": 51, "devel": 52, "develop": [35, 38, 48, 50, 51, 52, 54, 60, 61, 62, 64, 69], "deviat": [12, 17], "diagnal": 17, "diagram": [3, 43], "dict": [12, 19, 22, 24, 25, 26, 30, 33, 34, 35, 40, 41, 42, 43], "dictat": 17, "dictformat": 14, "dictionari": [14, 33, 34, 40, 41, 42, 43, 46, 60, 62], "didn": 65, "differ": [16, 19, 41, 52, 54, 58, 60, 63, 65], "differenti": 58, "dig_rat": 34, "digit": [58, 61], "digitally_upconvert": 35, "digits": 34, "dim": [19, 32, 33, 41, 44, 53], "dimens": [33, 65], "dimension": 19, "dimesnion": 33, "diod": [40, 58], "dip": 53, "dipolar": [12, 41, 54], "direct": [17, 42], "directli": [17, 19, 21, 41, 58], "directori": [52, 67], "disadvantag": 54, "discontinu": 52, "discuss": [64, 65], "dispatch": 14, "displai": [3, 4, 6, 7, 8, 10, 55, 67], "distanc": [12, 41, 50, 54, 57, 60], "distribut": [12, 41, 50, 60], "dividor": [41, 46], "dnp": 62, "do": [14, 51, 52, 53, 58, 61, 62], "doc": [41, 43, 51, 68], "docstr": [3, 4, 6, 7, 8, 10], "document": [1, 17, 41, 42, 46, 47, 48, 68], "doe": [19, 34, 41, 42, 44, 55, 61], "doesn": 17, "doll": [34, 35, 42, 54, 56], "dolla": 42, "domain": [12, 41, 42, 50, 60], "don": 55, "done": [17, 33, 36, 38, 52, 54, 55, 58, 60, 61, 62, 63, 67], "doubl": [15, 41, 54, 57], "down": [58, 62, 65], "download": 51, "draw": 43, "dsc": 17, "dsl": 60, "dstribut": 52, "dt": [24, 40, 41, 44, 50, 53, 54, 56, 58], "dta": 35, "due": [17, 61], "dummi": [38, 39, 41, 47], "dummy_api": 38, "dummy_cur_exp": 38, "dummy_dataset": 38, "dummy_hidden": 38, "dummy_param": 38, "dummy_xepr": [39, 41, 47], "dummyinterfac": 37, "durand": [21, 41], "durat": [12, 60], "dure": 57, "dynam": [19, 41, 44, 52, 60], "e": [14, 17, 33, 34, 40, 41, 42, 44, 46, 51, 54, 58, 60, 62, 65], "e1ae38": [20, 41], "e580": [56, 58], "each": [12, 15, 19, 32, 33, 41, 42, 46, 60, 62, 65, 69], "earlier": 65, "easi": [57, 58, 63], "easier": 65, "easiest": 69, "easili": [52, 55, 60], "easyspin": [41, 42, 46], "echo": [12, 15, 17, 32, 40, 41, 43, 44, 50, 52, 53, 54, 60, 62], "edf": [41, 43, 44, 50, 53], "edit": 51, "effect": [12, 36, 38, 54], "effic": 50, "effici": [41, 42, 46], "eith": 19, "either": [12, 13, 14, 15, 32, 34, 40, 41, 44, 48, 50, 60, 63, 65, 67], "eldor": [36, 40], "eldortun": [32, 40], "electron": [42, 54, 57], "element": [19, 34, 58, 60], "elexsi": [31, 32, 57, 61, 63], "elif": 8, "els": [3, 4, 7, 8], "elspin": 13, "email": 65, "emin": 52, "emit": 14, "empti": 14, "enabl": 48, "encod": 65, "encrypt": 52, "end": [36, 38, 40, 63, 65], "end_criteria": 24, "end_sign": [21, 41], "end_tim": [21, 41], "endblock": 8, "endfor": [3, 6, 7, 8, 10], "endif": [3, 4, 6, 7, 8, 10], "endor": 62, "engin": 34, "enough": 17, "enter": 55, "enterpris": 52, "entir": 57, "entri": [26, 55], "enviro": 52, "epoch": [21, 41], "epr": [38, 41, 42, 46, 57, 60, 62, 63], "epraccessor": [22, 41], "eprload": [41, 45], "equal": [60, 61, 65], "equalto": 8, "equip": 65, "equival": [36, 62], "erot": 13, "error": [14, 19, 24, 25, 27, 30, 65], "escap": 11, "eseem": [15, 41, 44], "eseem_avg": [41, 44], "eseem_depth": 37, "espin": 13, "establish": [48, 50], "estim": [21, 31, 32, 41, 44, 53, 67], "estimated_snr": 17, "estr": 35, "et": [21, 41, 54], "etc": [41, 44, 52, 53, 56, 63, 65], "eth": [34, 53, 56], "eth_awg": [39, 41, 47, 53], "eth_awg_interfac": [34, 53], "eth_awg_load": [39, 41, 47], "even": [54, 63, 65], "event": [14, 42, 53, 62], "everi": [42, 58, 60, 61], "everyth": [14, 65], "evo": 50, "evolut": [12, 41, 44, 54], "exampl": [19, 51, 53, 58, 60, 62], "exc": [12, 41], "exc_limit": 53, "exc_puls": [12, 41, 53, 54], "exce": 50, "except": [14, 17, 55, 65], "exciat": [12, 42], "excit": [12, 41, 42, 53, 54, 57, 62], "exciteprofil": 42, "exclud": [16, 41], "exctyp": [24, 25, 27, 30], "excut": 51, "exeperi": 38, "exist": [19, 41, 42, 44, 51, 57, 63], "exp": [17, 33], "exp_typ": [12, 37, 41], "expand": [51, 54, 61, 63], "experi": [12, 13, 15, 17, 19, 21, 25, 27, 31, 32, 33, 34, 36, 37, 38, 40, 41, 44, 45, 52, 53, 56, 57, 60, 62, 63, 65], "experienc": 57, "experiment": [15, 41, 42, 44, 60, 63], "explantori": 69, "exponenti": [15, 41], "export": 52, "express": [41, 44], "exptyp": [12, 41], "extend": [2, 5, 9, 54], "extens": 0, "extent": 12, "extern": 14, "extra": [12, 17, 34, 41, 52, 60, 62, 65], "extra_param": [22, 41], "extract": [16, 38, 41, 54], "eyekron": 13, "f": [12, 14, 21, 41], "f243_awg": 56, "f_axi": 12, "f_diff_threshold": [16, 41], "f_lim": [16, 41], "fact": 14, "factor": [12, 41], "fals": [12, 15, 16, 17, 19, 25, 27, 31, 32, 33, 36, 41, 42, 44, 53, 56, 58, 62], "far": [16, 41, 62], "fashion": 61, "fc": 35, "fc_guess": [16, 41], "featur": [38, 55, 57, 61, 64, 65], "fedora": 52, "feel": [48, 65], "fet": 58, "few": [52, 53, 60, 61], "fft": [16, 22, 41], "field": [12, 13, 31, 32, 34, 36, 40, 41, 43, 44, 50, 55, 62, 63, 65], "fieldsweep": [12, 16, 27, 41, 44, 47, 53], "fieldsweep_fit": 27, "fieldsweepanalysi": [12, 13, 16, 41, 43, 53], "fieldsweepsequ": [41, 44, 53], "fig": [12, 13, 15, 16, 41], "figur": [12, 13, 15, 16, 17, 41, 43], "file": [14, 17, 19, 31, 32, 33, 34, 35, 36, 41, 42, 44, 45, 55, 60, 63, 65, 67], "filenam": [14, 19, 25, 27, 41, 42, 44], "filenotfounderror": [19, 41, 42, 44], "filepath": [22, 33, 41, 43], "fill": [17, 62, 64], "fill_tabl": [25, 30], "filter": [12, 14, 35, 41], "filter_puls": 35, "filter_typ": 35, "filter_width": 35, "final": [41, 43, 53, 62, 63, 67], "final_freq": 62, "find": [12, 17, 36, 53, 65], "find_cur_exp": 36, "find_hidden": 36, "find_longest_puls": 12, "find_max": [13, 41], "find_max_pulse_length": 35, "find_min": 40, "find_optim": [15, 41, 53], "find_xepr": [36, 38], "finish": [19, 21, 24, 25, 27, 30, 36, 38, 41, 55], "first": [16, 19, 34, 41, 44, 50, 52, 53, 54, 55, 60, 65, 67], "fit": [12, 13, 15, 16, 17, 40, 41, 43, 48, 50, 53, 56, 58, 60], "fit_result": [12, 41], "fitresult": [12, 25, 27, 28, 41, 43], "fitter": 50, "five": [41, 44, 53, 54, 57, 65], "five_puls": [41, 44, 53, 54], "fix": [54, 64], "flaot": 42, "flavour": 61, "flip": [17, 42], "flipangl": [42, 53, 62], "float": [12, 13, 15, 16, 17, 19, 21, 31, 32, 34, 35, 36, 40, 41, 42, 44, 46], "floor": 16, "flowabl": [41, 43], "fm": [42, 62], "fmt": 14, "fn": [25, 27, 30], "fob": 53, "focus": [41, 42, 44, 62], "folder": [14, 55, 65, 67], "folder_path": [25, 27], "follow": [0, 42, 50, 56, 65], "foot": 61, "footer": [41, 43], "fork": 64, "form": [53, 54, 57, 60, 62, 63, 64], "format": [14, 55, 56, 65], "format_exc": [24, 25, 27, 30], "formatexcept": 14, "formatt": 14, "formattim": 14, "found": [31, 32, 51, 62, 67], "four": [41, 44, 57, 65], "four_puls": [41, 44, 54], "fpump": 53, "fraction": [12, 41], "fraquelli": [21, 41], "free": [48, 50, 52, 54, 60], "freed": 54, "freq": [13, 32, 36, 37, 41, 42, 53, 56, 58, 60, 62], "frequenc": [12, 13, 16, 31, 34, 36, 40, 41, 42, 44, 50, 53, 54, 55, 56, 58, 61, 62], "frequneci": [41, 44], "freudl": [21, 41], "freuenci": 36, "friendli": 48, "from": [0, 12, 15, 17, 19, 24, 25, 27, 30, 33, 36, 37, 38, 40, 41, 42, 43, 44, 46, 50, 53, 54, 55, 57, 58, 60, 62, 63, 65, 68], "front": 38, "fsweep": 53, "fsweep_analysi": [27, 53], "fsweep_result": 24, "fsweep_toolbar": [25, 27], "ftol": 56, "ftp": 52, "full": [12, 14, 17, 33, 36, 38, 41, 42, 50, 52, 60, 61, 62, 63], "full_nam": 3, "full_output": [12, 41], "fulli": [48, 50, 57, 63, 67], "fullnam": 11, "fullpath": 36, "func": [36, 42, 62], "func1": 16, "func2": 16, "funcnam": 14, "function": [6, 8, 17, 24, 36, 38, 50, 60, 62, 65, 68, 69], "fundament": [52, 61], "furo": 0, "further": [38, 54, 61], "futur": [12, 41, 55, 63], "fwhm": 42, "fwidth": [41, 44], "g": [13, 14, 40, 41, 42, 54, 60], "gain": [34, 36], "galleri": 0, "gap": 56, "gate": 53, "gauss": [12, 31, 34, 36, 41, 44, 53], "gaussian": [12, 41, 42], "gaussianpuls": 42, "gcc": 52, "gcd": [41, 46], "gener": [1, 12, 13, 14, 17, 19, 21, 31, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 54, 55, 58, 60, 61, 62, 65, 67], "generalis": 63, "georgieva": 54, "get": [14, 34, 36, 62, 64, 65], "get_acquisition_mod": 36, "get_all_ax": [22, 41], "get_all_fixed_param": [22, 41], "get_arang": 33, "get_attenu": 36, "get_axi": 19, "get_config_fil": 36, "get_counterfreq": 36, "get_eldor_freq": 36, "get_field": 36, "get_freq": 36, "get_hidden_param": 36, "get_mw_amp": 36, "get_nut": 40, "get_param": 36, "get_phas": 36, "get_phasecycl": 36, "get_pulsespel_def_filenam": 36, "get_pulsespel_def_filepath": 36, "get_pulsespel_exp_filenam": 36, "get_pulsespel_exp_filepath": 36, "get_pulsespel_experi": 36, "get_pulsespel_phase_cycl": 36, "get_replacemod": 36, "get_sequence_row": [25, 30], "get_spec_config": 36, "get_specjet_data": [31, 32], "get_sweep_width": 36, "get_vexp": 28, "get_video_bandwidth": 36, "get_video_gain": 36, "getcistr": [25, 30], "getlogg": 65, "getmessag": 14, "getparam": 38, "ghz": [12, 13, 16, 31, 34, 36, 40, 41, 44, 53, 56, 58, 62], "gig": 51, "git": [51, 58], "github": [51, 54, 58, 64], "give": [16, 33, 41, 50, 54, 57, 61], "given": [12, 13, 15, 16, 17, 21, 31, 32, 33, 34, 38, 40, 41, 42, 54, 60, 67], "gn": 13, "go": [61, 64], "gone": 65, "graph": [55, 58], "graphic": [48, 50, 68, 69], "greatest": [41, 46], "green": [55, 67], "grid": [12, 41], "gsa": [34, 56], "guass": [41, 44], "guass_broaden": 13, "guess": [31, 32, 53, 55], "gui": [41, 47, 48, 53, 68, 69], "guid": 61, "gunn": [40, 58], "gunnar": 42, "gyro": [24, 34, 40], "gyro_exp": [53, 54], "gyro_n": 53, "gyromagnet": [13, 40, 41, 53], "gz": 52, "h": [50, 54], "h5": 55, "ha": [15, 19, 25, 27, 34, 36, 38, 41, 50, 52, 53, 55, 57, 58, 60, 61, 65], "haas": [21, 41], "hahn": [17, 32, 40, 41, 44, 50, 60, 62], "hahnecho": 62, "hahnechosequ": [41, 44, 60, 62], "half": 42, "ham": 13, "ham_ez": 13, "ham_nz": 13, "hand": [17, 55], "handl": 33, "handler": [14, 24, 25, 27, 30], "happen": 65, "hard": 50, "hard_logg": 65, "hardwar": [14, 41, 47, 51, 53, 57, 58, 60, 63, 65], "hardware_meta": 38, "hardware_wait": 32, "harwar": [14, 65], "hat": 52, "have": [16, 38, 41, 50, 52, 53, 54, 58, 60, 62, 63, 65], "hdf5": 55, "header": [25, 30, 33, 41, 43], "height": [41, 43], "hello": 65, "here": [31, 32, 52, 53, 58, 60, 61, 62, 65], "hh": 53, "hidden": 38, "high": [48, 54, 65], "higher": [50, 54, 58], "hold": 36, "holder": 56, "home": [57, 61, 63], "hook": [21, 41], "host": 51, "hour": [12, 15, 41, 50], "how": [12, 14, 17, 19, 21, 32, 34, 41, 50, 52, 53, 61, 62, 65], "howev": [52, 57, 60, 61, 62, 65], "hspuls": 42, "html": [0, 41, 42, 46], "http": [41, 42, 46, 51, 52, 58], "hugo": 38, "human": [14, 58], "hw_log": [32, 36, 37, 38], "hybrid": [56, 58], "hyperboilc": 42, "hyperbol": 50, "i": [0, 4, 6, 7, 8, 12, 13, 14, 15, 16, 17, 19, 21, 25, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 67, 69], "id": [8, 14, 33, 34, 53], "ideal": 40, "idenitifi": 32, "ident": 13, "identifi": [12, 36, 38, 41, 50, 65], "identifyroi": [12, 41], "ifgain": [34, 53], "ignor": 12, "ii": [31, 32, 57, 61, 63], "imaginari": [12, 32, 40], "immedi": [19, 31, 32, 37, 60, 65], "implement": [14, 57, 62], "import": [8, 12, 17, 41, 50, 53, 58, 60, 62, 65, 67], "import_data": 17, "import_dataset": 17, "improv": [54, 68], "includ": [12, 13, 17, 33, 41, 50, 54, 56, 57, 62, 67], "incoher": 40, "incompat": 58, "increas": [41, 42, 44, 50, 52, 62], "indent": [3, 4, 6, 7, 8, 10], "independ": [48, 56, 57, 60, 63], "index": 8, "indic": [24, 25, 27, 30, 55], "individu": [62, 65], "info": [14, 56, 65], "infom": [12, 17, 32, 41, 56, 60, 61, 62, 67], "inform": [14, 60, 61, 62], "inherit": [3, 19, 24, 25, 27, 30, 62], "init": 62, "init_d": [41, 43], "init_freq": 62, "initi": [14, 19, 31, 32, 41, 43, 53, 54, 55, 56, 61, 62, 65, 68], "initialis": [19, 24, 25, 27, 30, 31, 32, 37, 53], "initializt": 43, "input": [12, 17, 33, 41, 55], "insatl": 52, "insid": 53, "instal": 58, "instanc": [14, 38, 62], "instead": [12, 41, 54, 62], "instruct": [0, 52, 69], "int": [12, 13, 15, 16, 17, 19, 21, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 44], "integ": 33, "integr": [48, 57, 63, 65], "intellig": 63, "intend": 14, "intens": 13, "inter": [15, 41, 42, 50, 54, 57, 67], "interced": 53, "interest": [12, 41, 50, 59], "interfac": [14, 19, 24, 31, 32, 34, 37, 48, 50, 56, 60, 62, 68, 69], "intergr": [12, 41], "intern": 17, "interpret": [14, 34], "interpuls": [41, 44], "interv": 60, "intial": 19, "introduc": [41, 44], "intuit": 48, "invers": 54, "invert": 17, "invert_sign": 17, "investig": 65, "involv": [54, 60], "inward": 54, "io": 43, "ip": [52, 58], "is_exp_run": [36, 38], "is_stat": [19, 42], "isdelayfocus": [41, 42, 44], "iso8601": 14, "ispulsefocus": [41, 42, 44], "isrun": [19, 31, 32, 34, 37, 53], "issu": [14, 34, 52, 61, 64, 65], "iter": [32, 40], "itn": [41, 44], "its": [41, 46, 52, 62], "itself": [19, 63], "j": [21, 41, 42, 46, 54], "jeschk": [42, 54], "jeschkelab": 51, "join": 64, "json": [19, 41, 42, 44], "jsonstr": [19, 41, 42, 44], "june": 52, "just": [14, 16, 33, 41, 53, 61, 62], "k": [21, 41], "kamp": [21, 41], "kara": 38, "keep": [54, 60], "keep_run": 19, "kei": [12, 33, 41, 42, 43, 60, 61], "kept": [55, 65], "keyword": [17, 24, 25, 27, 30, 42], "kimbal": [21, 41], "klass": [3, 8], "knot": 13, "know": [14, 50], "knowledg": 14, "known": [34, 57, 60], "knownledg": 55, "kroneck": 13, "kroney": 13, "kummel": [21, 41], "kwarg": [12, 13, 15, 17, 19, 21, 24, 25, 27, 30, 31, 32, 34, 35, 36, 37, 41, 42, 44, 45], "lab": 55, "label": [50, 57], "languag": [58, 60], "larg": [63, 65], "larger": 42, "last": [3, 65], "later": [50, 51, 60, 63, 65], "latest": [51, 58], "launch": [19, 31, 32, 34, 37, 53, 60], "launch_long": 34, "launch_norm": 34, "layout": 28, "ld_library_path": 52, "least": 58, "leav": 19, "left": [41, 43, 55], "lenght": [15, 41], "length": [3, 8, 16, 31, 33, 34, 40, 41, 42, 44, 50, 53, 56, 62], "less": [12, 25, 30, 41, 50, 54, 60], "lett": 54, "levai": [21, 41], "level": [14, 15, 17, 19, 24, 41, 62], "levelnam": 14, "levelno": 14, "lib": 52, "lib64": 52, "libdir": 52, "light": [55, 67], "like": [14, 41, 44, 53, 54, 61, 62, 63, 65], "limit": [16, 41, 62], "lin_maxit": 56, "lin_tol": 56, "line": 14, "linear": [42, 61, 62], "linearli": 42, "lineno": 14, "link_obj": 3, "linux": 52, "list": [3, 8, 12, 14, 15, 19, 25, 30, 33, 35, 36, 40, 41, 42, 43, 46, 56, 60, 62], "list_str_to_typ": [25, 30], "live": 67, "lo": [13, 16, 24, 31, 32, 34, 37, 41, 44, 53, 54, 60, 61, 62], "load": [14, 17, 19, 35, 41, 42, 44, 45, 55, 60, 67], "load_epr_fil": [25, 27, 30], "load_fold": [25, 27], "load_spectrometer_config": [25, 27], "lobe": 62, "loc": 12, "local": [21, 31, 34, 41, 52, 53, 56, 58], "locat": [12, 50], "log": [12, 19, 21, 25, 34, 41, 45, 47, 56], "logdialog": 26, "logger": 14, "logrecord": 14, "lombardi": [21, 41], "long": [17, 21, 34, 41, 52, 54], "long_deer": [41, 43], "longdeer_result": 24, "longdeer_upd": 24, "longer": [36, 38, 54, 65, 67], "longest": 12, "look": [60, 62], "loop": [3, 34, 56], "lorentzian": [16, 41], "lower": [40, 62], "lowest": 65, "lowpass": 12, "lt": 52, "m": [13, 21, 41, 51, 58], "m8190a": 58, "maco": 51, "made": 53, "mag_logg": 65, "magent": [36, 65], "magentis": 42, "magn": [41, 42, 46], "magnet": [31, 34, 36, 41, 44, 50, 65], "mai": 17, "main": [17, 25, 41, 47, 51, 60, 61, 62, 64, 65, 69], "major": 68, "make": [0, 14, 52, 54, 62, 64], "manag": 52, "mani": [12, 17, 32, 34, 54, 60, 61, 62], "manufactu": 38, "manufactur": [56, 58], "map": [15, 41], "markup": 58, "mask": [12, 35], "match": [12, 35, 41, 68], "match_filter_dc": 35, "matfil": 35, "math": [40, 50], "matlab": [34, 35, 51, 55, 61], "matplotlib": [12, 13, 15, 16, 17, 41, 53], "matrici": [41, 46], "matrix": [13, 41, 46], "max": [13, 38, 41, 55, 56, 58], "max_nfev": 56, "max_tau": 24, "maxdepth": 8, "maximis": [12, 32, 40, 41], "maximum": [12, 13, 15, 32, 35, 40, 41, 42, 44, 50, 55, 65, 67], "maxit": [32, 40], "mayb": 65, "me": 38, "mean": [61, 65], "meanwhil": 60, "measur": [15, 17, 19, 21, 31, 32, 37, 40, 41, 44, 50, 54, 55, 57, 58, 60, 61, 63, 67, 68], "member": 3, "memori": 42, "mention": 14, "merg": [16, 41], "messag": [14, 25, 27], "met": 19, "metadata": 17, "method": [3, 7, 17, 31, 34, 38, 42, 60, 61, 62], "mhz": [13, 36, 42], "micol": [21, 41], "microsecond": [12, 41, 46], "microwav": [13, 36], "might": [60, 65], "millisecond": 14, "mimimum": [21, 41], "min": [38, 56, 58], "min_tp": 56, "minim": 50, "minimis": [32, 40], "minimum": [12, 41, 61], "minor": 55, "minut": [19, 60], "miss": 65, "mm": 53, "mnr": [12, 41, 54], "mock": 32, "mode": [21, 31, 34, 36, 37, 41, 51, 53, 57, 60, 68], "model": [12, 13, 15, 21, 38, 41, 50, 56, 58, 63], "moder": 54, "modern": [52, 57, 63], "modif": [53, 54], "modifi": [60, 69], "modul": [8, 9, 41, 51, 54, 60, 65], "module_dir": [12, 33, 40], "moment": 50, "mono": [15, 41], "monochromat": [42, 62], "more": [17, 33, 34, 48, 52, 53, 54, 60, 61, 65], "most": [34, 38, 50, 52, 53, 61, 62, 65], "mostli": [35, 54, 69], "motor": 36, "move": [33, 54, 62, 65], "mpfu": [32, 33, 40, 56, 57, 58, 61, 63], "mpfu_overwrit": [31, 32], "mpfutun": [32, 40], "msec": 14, "mt": 13, "mu": 50, "much": [48, 50, 52, 60, 65], "multi": 60, "multi_mod": [16, 41], "multilin": 4, "multipl": [12, 16, 41, 51, 52, 54, 57, 60, 63, 65], "multipli": [13, 62], "must": [12, 13, 16, 41, 50, 53, 55, 58, 60, 65, 67], "mutex": 24, "mutlipl": 60, "mw": 62, "mwfreq": 13, "mx": 42, "my": [42, 56, 60, 61], "myst": 0, "mz": 42, "n": [12, 13, 15, 19, 31, 34, 41, 42, 44, 50, 53, 56, 58], "name": [4, 8, 14, 19, 21, 25, 30, 33, 34, 36, 38, 41, 42, 44, 50, 53, 54, 55, 56, 58, 60, 62, 65, 67], "nanosecond": [41, 46], "narrow": 54, "nativ": [55, 60, 61], "ndarrai": [12, 13, 16, 19, 35, 41, 42, 44, 46], "ndeer": [12, 41, 44, 57], "ndeer_cp": [41, 44, 54], "nearli": [50, 61, 62], "necessari": [52, 53, 55, 56], "need": [14, 17, 31, 32, 33, 34, 38, 50, 51, 52, 54, 55, 56, 58, 60, 61, 62, 63, 65, 67], "nest": 8, "never": [19, 65], "new": [12, 33, 36, 41, 48, 52, 57, 62, 64, 68], "new_data": 24, "new_length": 33, "new_puls": [24, 62], "new_tau": 53, "newer": 58, "newli": 52, "next": [36, 38, 41, 44, 50, 62, 67], "nfft": [16, 41], "nitroxid": [13, 50], "nnlssolver": 56, "nois": [12, 15, 16, 17, 21, 41, 60], "noise_level": 37, "noisedens": [16, 41], "nomarlis": [13, 41], "nome": 17, "non": [12, 41, 42, 54, 61, 62], "none": [4, 6, 7, 8, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 53, 62], "nonetheless": [58, 61], "norm": [13, 15, 17, 41], "normal": [12, 15, 17, 34, 41, 44, 53, 54, 57, 60, 68], "normaldc": [41, 44], "normalis": [13, 15, 17, 21, 22, 41], "normalise_01": [12, 41], "note": [12, 36, 41, 65], "notebook": 53, "noth": 36, "notimplementederror": 14, "notset": 14, "now": [31, 32, 34, 50, 52, 53, 55, 60, 62], "np": [12, 13, 16, 19, 35, 41, 42, 44, 53, 62], "npoint": 13, "nspin": 13, "nu": 40, "nu_fin": 40, "nu_init": 40, "nuanc": 17, "nucspin": 13, "num": 45, "num_point": [40, 53], "num_puls": 40, "num_ref_puls": [12, 41], "number": [12, 13, 14, 15, 16, 17, 19, 31, 32, 33, 34, 36, 38, 40, 41, 42, 44, 46, 53, 54, 60], "numer": 14, "numpi": [12, 13, 35, 41, 46, 53, 58, 62], "numpydoc": 0, "nut": 53, "nutat": [16, 40, 41, 44, 50, 60], "nx": [40, 62], "o": 52, "ob": [41, 44], "obj": [3, 4, 6, 7, 8, 10, 19, 41, 42, 44], "obj_item": 8, "object": [3, 12, 15, 16, 17, 19, 21, 24, 25, 27, 30, 31, 34, 40, 41, 42, 44, 60, 62, 63], "obsdc": [41, 44], "observ": [41, 44], "occur": [54, 65], "oe": 58, "off": [16, 41, 65], "offici": 52, "offset": [41, 44, 62], "offset_freq": 35, "often": [19, 52, 54, 61, 62, 65, 69], "old": 52, "omit": 14, "onc": [36, 38, 52, 55, 63, 67], "one": [14, 16, 34, 41, 54, 60, 62, 63, 65], "ones": [52, 62], "onli": [12, 19, 21, 31, 32, 33, 34, 35, 36, 41, 44, 50, 51, 54, 58, 60, 62, 63, 65, 68], "onlydet": 33, "open": [34, 55], "openssl": 52, "openssldir": 52, "oper": [14, 34, 41, 46, 52], "operand": 14, "optim": [12, 15, 17, 32, 40, 41, 50], "optimal_slice_plot": 17, "optimal_tau1": [15, 41], "optimis": [12, 32, 40, 41, 43, 48, 53, 54, 57], "optimise_puls": [12, 25, 27, 41], "optimise_pulses_button": [25, 27], "optimise_spectra_posit": [16, 41], "option": [12, 13, 14, 15, 16, 17, 19, 21, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 62, 67, 68], "order": [42, 58], "order1": 42, "order2": 42, "org": [41, 42, 46, 52], "orient": 13, "origin": [12, 51, 54, 63], "orphan": 8, "oscil": [31, 34, 53], "oss": 52, "other": [19, 54, 62, 63, 67], "otherwis": [12, 41, 42, 44, 50, 60], "our": [52, 53, 62], "out": [14, 17, 25, 27, 50, 52, 62, 64], "output": [12, 17, 41], "outsid": [52, 65], "over": [17, 53, 54], "overlai": [16, 41], "overlap": [12, 16, 41, 43], "overload": [3, 6, 7], "own": [57, 60, 61, 69], "p": [12, 41, 44, 54, 60], "p0": 33, "p1": 33, "p10": 33, "p180": [31, 34, 53], "p2": 33, "p3": [33, 41, 44, 54], "p4": 33, "p5": [21, 33, 41], "p6": 33, "p7": 33, "p8": 33, "p9": 33, "p90": [31, 34, 53], "p90_12_34": 60, "packag": [8, 42, 46, 48, 52, 53, 54, 60, 63], "package_dir": 43, "package_directori": [26, 27, 28], "pad": [16, 41, 42], "page": [1, 47, 64], "pages": [41, 43], "pair": [17, 32, 53], "par": 38, "par1": 19, "par2": 19, "param": [22, 25, 30, 37, 41, 44, 46], "param_in_mhz": [25, 30], "param_in_u": [25, 30], "param_nam": 36, "paramagnet": 42, "paramat": [17, 60, 62], "paramet": [12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 53, 55, 57, 62, 63, 65, 67, 69], "params_width": [41, 46], "paramt": [19, 38], "paremet": [17, 38], "parent": [26, 28, 62], "parmet": 17, "pars": 8, "parser": 0, "part": [3, 12], "particular": 17, "parvar": [33, 34], "pass": [19, 24, 25, 27, 30, 60, 62, 65], "passag": 42, "passiv": 13, "path": [17, 19, 31, 32, 33, 36, 38, 41, 42, 44, 45, 46, 52, 55, 58], "pathnam": 14, "pathwai": [54, 62], "patient": 48, "paus": [36, 61], "pause_and_wait": 24, "pause_exp": 36, "pcre": 52, "pcyc": [41, 42, 44, 62], "pcyc_str": 33, "pdf": [48, 55, 68], "pe12": [41, 44, 54], "pe12rp": [41, 44, 54], "pe12rpr3": [41, 44, 54], "pe1p0r2r3b": [41, 44, 54], "peak": [16, 41], "peldor": [41, 44, 57], "pent": 56, "pep02r3": [41, 44, 54], "per": [17, 36, 38, 41, 44, 53, 65], "perfom": [41, 44, 52], "perform": [12, 41, 53, 61], "period": 60, "perl": 52, "phase": [12, 17, 32, 33, 37, 40, 41, 42, 44, 53, 62], "phasecycl": 33, "phy": [41, 42, 46, 54], "physcial": 34, "physic": 62, "pi": [17, 31, 34, 40, 53, 54, 60, 62], "pi2_puls": [53, 60], "pi_puls": [53, 60], "piec": [60, 65], "pip": [0, 51, 58], "placehold": 14, "plan": 51, "platypu": 43, "pleas": [0, 48, 54, 59, 61], "plot": [12, 13, 15, 16, 17, 32, 41, 42, 43, 44, 53, 60], "plot1d": [15, 41], "plot2d": [15, 41], "plot_1drelax": [15, 41], "plot_fft": 42, "plot_optimal_deer_frq": 53, "plot_overlap": [12, 41], "plot_pulse_exc": [41, 44], "plt": 53, "plu": 51, "po": 17, "point": [12, 13, 17, 40, 41, 42, 44, 65], "pol": 36, "polynom": [36, 56], "polynomi": [40, 58], "pop": [25, 27, 65], "porgram": 55, "port": [41, 42, 46], "portion": 14, "posit": [12, 19, 31, 32, 33, 34, 36, 40, 41, 42, 44, 62], "possibl": [12, 17, 33, 41, 50, 60, 62, 63, 64], "possible_delai": 33, "possible_puls": 33, "possible_var": 33, "possibli": 38, "post": 45, "potenti": 58, "power": [16, 40, 41, 50, 56, 60, 62, 65], "pre": [14, 52, 54, 62], "precis": [12, 25, 30, 36, 41, 53, 57], "predict": 50, "prefer": [17, 55, 56, 58, 67], "prefix": 52, "premis": 54, "preparatori": 14, "present": [52, 54], "press": [50, 55, 63], "pretend": 38, "prevent": 65, "previou": 33, "pribitz": 42, "primari": 54, "primarili": [50, 65], "primary_color": [20, 41], "print": [53, 60, 62, 65], "pritn": 60, "privat": [3, 17], "privileg": 52, "problem": [52, 65], "procedur": 63, "process": [14, 17, 24, 25, 27, 30, 48, 55, 57, 60, 63, 69], "process_deeranalysi": 28, "process_nut": [16, 41, 53], "product": 13, "prof_data": [16, 41], "prof_frq": [16, 41], "profil": [12, 16, 24, 40, 41, 42, 43, 44, 60, 61, 63], "prog": [19, 53], "program": [19, 48, 54, 55, 65, 69], "progress": [19, 24, 25, 27, 30, 34, 41, 44, 45, 48, 53, 57, 62, 67], "progress_bar": 45, "progress_bar_frac": 45, "progtabl": 33, "project": [48, 61, 64], "properti": [3, 6, 7, 10, 19, 22, 34, 38, 41, 44], "propos": 65, "protein": 57, "protocol": 69, "proton": [15, 41, 44, 54], "provid": [12, 16, 38, 41, 50, 51, 53, 61, 69], "ps_file": 33, "ps_length": 40, "psparvar": 33, "psphasecycl": 33, "public": [12, 41], "pull": [51, 54, 64], "puls": [12, 15, 17, 19, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 50, 53, 56, 57, 58, 60, 61, 63, 65, 67], "pulse0_tp": [16, 41], "pulse_num": 33, "pulseprofil": 40, "pulsespel": [33, 57, 60, 61, 62, 63], "pump": [12, 41, 44, 50, 53, 54], "pump_frq": 40, "pump_puls": [12, 41, 53, 54], "purcel": [12, 15, 41, 44, 50, 54], "push": [48, 57, 60], "py": [3, 4, 6, 7, 10], "pydata": 0, "pyenv": 52, "pypi": [51, 58], "pyplot": 53, "pyqt6": [14, 24, 25, 26, 28, 30], "pyqt_table_from_dict": [25, 30], "pytest": 51, "python": [0, 2, 5, 9, 17, 35, 48, 51, 55, 57, 58, 60, 61, 62, 63, 65], "python2": 52, "q": [50, 56], "qdialog": 26, "qmainwindow": [25, 27], "qmutex": 24, "qobject": [14, 24, 25, 27, 30], "qrunnabl": [24, 25, 27, 30], "qtcore": [14, 24, 25, 27, 30], "qtloghandl": 14, "qtwidget": [26, 28], "qualiti": [48, 60], "quick": 17, "quickdeer": [25, 41, 47], "quickdeer_result": 24, "quickdeer_upd": 24, "qunatum": [41, 46], "qwaitcondit": 24, "qwidget": [26, 28], "r": [4, 12, 21, 32, 40, 41, 42, 46, 54], "r_limit": [16, 41], "radian": 42, "rais": [14, 19, 25, 30, 33, 41, 42, 44, 45], "raise_warn": [25, 27], "rang": [13, 31, 34, 50, 55, 57], "rate": 56, "ratio": [12, 13, 15, 21, 40, 41, 53], "raw": 14, "re": [36, 42, 56, 58], "re_dim": [41, 44], "re_step": [41, 44], "reach": [50, 60], "read": [36, 55, 61], "read_tabl": [25, 30], "readabl": 58, "readi": [12, 41], "readili": 63, "real": [12, 32, 40], "reason": [52, 53], "recent": [34, 36, 38], "reciev": 55, "recomend": 34, "recommen": 55, "recommend": [12, 41, 52, 58, 61, 62, 69], "record": [14, 65], "recoveri": [15, 41, 50], "rectangular": [31, 34, 41, 42, 44, 50, 53, 60, 62], "rectpuls": [31, 32, 34, 41, 42, 44, 53, 62], "red": 52, "reduc": [41, 44, 54, 62], "reduced_seq": 32, "ref": [41, 44, 54, 62], "ref_puls": [12, 41, 53, 54], "refer": [21, 55], "refocus": [12, 15, 17, 40, 41, 44, 50, 54], "refocused2d": [12, 41], "refocusedecho2d": 68, "refocusedecho2danalysi": [12, 15, 41, 68], "refocusedecho2dsequ": [41, 44, 68], "reformat": 33, "reforuml": 68, "refoucs": 50, "refous": 53, "refresh_d": 28, "refresh_fieldsweep_after_fit": [25, 27], "refresh_relax": [25, 27], "refresh_relax_figur": [25, 27], "refresh_respro": [25, 27], "refresh_t2": [25, 27], "refresh_tim": 56, "region": [12, 41, 50, 65], "regparam": 56, "regular": 60, "reim_color": 20, "rejectattr": [3, 8], "rejectionratio": 13, "rel": [14, 33], "relat": [14, 65], "relativecr": 14, "relax": [12, 24, 41, 43, 44, 47, 54, 68], "relax2d_result": 24, "relax_process": 27, "relax_result": 24, "relax_toolbar": [25, 27], "releas": [48, 52], "releat": 14, "reliabl": 68, "relib": 38, "remain": [41, 44, 54, 57], "rememb": 60, "remov": [12, 42, 62], "remove_dynam": 19, "remove_echo": 12, "render": [3, 8, 43], "repet": [31, 34], "repetit": [17, 41, 44, 50, 53, 62], "repettit": [15, 41], "replacemod": 33, "report": [41, 47, 48, 55, 64, 65, 68], "reportlab": [41, 43], "repositori": 52, "repres": [19, 31, 32, 34, 37, 41, 42, 44, 58], "represent": 42, "reptim": [15, 24, 31, 34, 37, 41, 44, 53, 54, 60, 62], "reptime_max": [41, 44], "reptime_scan_result": 24, "reptimeanalysi": [15, 41], "reptimescan": [41, 44], "request": [54, 64], "requir": [12, 17, 36, 38, 41, 44, 50, 52, 55, 58, 60, 61, 62, 65, 67], "requr": [16, 41], "rerun_exp": 36, "resampl": 12, "resample_and_shift_vector": 12, "reset_bg_data": [31, 32], "reset_cur_exp": [31, 32, 34], "resfield": 13, "reson": [12, 16, 24, 41, 42, 43, 44, 46, 54, 55, 56, 57, 60, 61, 63], "resonator_profil": [16, 41, 53], "resonatorprofil": [41, 44], "resonatorprofileanalysi": [12, 16, 41, 43, 53], "resonatorprofilesequ": [41, 44, 53], "respect": 32, "respons": [14, 50, 52], "respro": [12, 41, 43, 47, 53], "respro_process": 27, "respro_result": 24, "respro_toolbar": [25, 27], "restart": 65, "result": [12, 14, 24, 25, 27, 30, 41, 43, 67], "retrospect": 65, "return": [13, 14, 15, 16, 17, 19, 21, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 42, 43, 44, 45, 46, 54, 60, 62], "return_annot": [3, 6, 7], "rewrit": 33, "rf": 62, "rfc": 14, "rhel": 52, "right": [17, 41, 43, 55], "risen": 65, "risk": 52, "rml": 43, "rng": 37, "roger": [21, 41], "roi": [12, 41, 50, 53], "root": 52, "rotat": 13, "roughli": 65, "round_step": [41, 46], "row": [15, 25, 30, 41], "rowcount": [25, 30], "rpseq": 53, "rst": [2, 5, 8, 9], "run": [0, 21, 24, 25, 27, 30, 33, 34, 36, 38, 40, 41, 50, 53, 55, 57, 60, 63, 65, 67], "run_2d_relax": 24, "run_4p": 40, "run_5p": 40, "run_cp": 40, "run_cp_relax": 24, "run_deer": 24, "run_exp": [36, 38], "run_fsweep": 24, "run_gener": 33, "run_long_d": 24, "run_quick_d": 24, "run_reptime_opt": 24, "run_respro": 24, "run_t2_relax": 24, "runadvancedautod": [25, 27], "runautod": [25, 27], "runfullyautod": [25, 27], "runner": [24, 25, 27, 30], "runtimeerror": [41, 45], "safe": 65, "safeti": 65, "same": [13, 54], "samepl": 17, "sampl": [50, 54, 55, 56, 60, 67], "sampleconccombobox_opt": 27, "sampling_freq": 35, "sat": 38, "satisfi": 63, "satisifi": 19, "satur": [15, 41], "save": [19, 22, 32, 33, 34, 36, 38, 41, 42, 44, 55, 65, 67], "save_data": [25, 27], "save_fil": [41, 46], "save_log_to_fil": 26, "save_path": 43, "save_pulsespel_def": 36, "save_pulsespel_exp": 36, "savefold": 34, "savenam": [19, 31, 32, 34, 37, 53, 60], "sbin": 52, "scale": [32, 42, 53, 58, 60], "scan": [17, 35, 36, 38, 40, 41, 44, 53, 60], "scan_num": [36, 38], "scenario": 60, "schweiger": [41, 42, 46], "scientif": 55, "scipi": [32, 40], "scipy_filter_dc": 35, "scope": 8, "screen": 55, "script": [17, 32, 36, 38, 40, 57, 61, 62, 65], "se": [41, 44, 54], "search": [12, 38, 41], "secant": [42, 50], "second": [15, 16, 21, 41, 44, 54], "section": 55, "secur": 52, "see": [41, 44, 60], "seen": 60, "select": [17, 41, 44, 55, 57, 60, 65], "select_pcyc": [41, 44, 53, 54], "select_reson": [25, 27], "selectattr": [3, 8], "self": [19, 33, 41, 42, 44, 62, 69], "sensit": [50, 54], "sent": 65, "separ": [61, 62, 65], "seper": [40, 53], "seq": [31, 32, 33, 34, 53], "seqtable_step": [41, 44], "sequec": 62, "sequenc": [12, 15, 19, 22, 25, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 47, 53, 54, 57, 58, 61, 63, 67], "sequr": [12, 41], "seri": [16, 21, 41, 50], "serial": [19, 41, 42, 44], "seriou": 65, "session": [34, 61], "set": [3, 8, 12, 14, 17, 28, 32, 33, 36, 38, 41, 50, 52, 54, 58, 63, 65, 68], "set_2d_max_tau": 24, "set_acquisition_mod": 36, "set_attenu": 36, "set_config_fil": 36, "set_eldor_freq": 36, "set_field": 36, "set_freq": 36, "set_hidden_param": 36, "set_mw_amp": 36, "set_noise_mod": 24, "set_param": 36, "set_phas": 36, "set_phasecycl": 36, "set_pulsespel_def_filepath": 36, "set_pulsespel_exp_filepath": 36, "set_pulsespel_experi": 36, "set_pulsespel_phase_cycl": 36, "set_pulsespel_var": [36, 38], "set_replacemod": 36, "set_snr_target": 17, "set_snr_threshold": 17, "set_spectrometer_connected_light": [25, 27], "set_sweep_width": 36, "set_time_target": 17, "set_video_bandwidth": 36, "set_video_gain": 36, "setup": [14, 24, 25, 27, 30, 31, 32, 40, 50, 60, 65], "setup_input": 28, "setup_log": [14, 65], "seven": [41, 44, 57], "seven_puls": [41, 44, 54], "shade_color": 20, "shape": [42, 50, 54, 63], "share": 52, "shell": 51, "shift": [12, 68], "shift_detfreq_to_zero": [41, 44], "shift_pulse_freq": 12, "short": [41, 44, 54, 61], "short_nam": [3, 6, 7, 8, 10], "shortest": 50, "shot": [15, 17, 24, 31, 34, 37, 41, 44, 50, 53, 54, 60, 62], "should": [12, 17, 19, 21, 33, 40, 41, 45, 50, 52, 53, 55, 61, 65, 67], "shouldn": 65, "show": [3, 4, 8, 12, 41, 53], "shrt": 17, "side": [12, 55, 62], "sign": [42, 62], "signal": [12, 14, 15, 17, 21, 24, 25, 27, 30, 41, 50, 54, 60], "signific": [58, 61], "similar": 61, "simpl": [21, 41, 55, 56, 57, 58, 60, 62], "simplest": 62, "simpli": [60, 62], "simplifi": 57, "simplist": 62, "simul": [41, 42, 44, 46], "simultan": 58, "sinc": [21, 41, 42, 58, 62, 65], "sincpuls": 42, "singl": [16, 31, 34, 35, 41, 54, 61, 62, 63, 67], "site": 57, "size": [13, 15, 41, 43, 50], "slack": 65, "sleep": 53, "slice": 17, "slightli": [58, 67], "small": [41, 44, 54], "smallest": [41, 44], "smith": [21, 41], "snr": [15, 17, 21, 22, 25, 30, 41, 50, 54, 60], "snr_normal": 17, "snr_target": [13, 15, 21, 41, 53], "snr_threshold": 17, "snrcriteria": [21, 41, 60], "snrpshot": 17, "so": [14, 16, 17, 41, 42, 50, 53, 58, 60, 62, 65], "softwar": [21, 35, 41, 42, 46, 48, 52, 57, 65], "solv": 60, "some": [17, 34, 50, 52, 65], "someth": 65, "somewhat": 55, "soon": [42, 59, 60, 64], "sop": [41, 42, 46], "sourc": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 52, 58, 61], "space": [17, 42], "special": [14, 61], "specif": [14, 19, 21, 34, 36, 38, 41, 52, 55, 57, 58, 60, 61, 62, 63, 67], "specifi": [14, 17, 41, 42, 44, 50, 54, 56, 60, 67], "spectra": [41, 42, 46], "spectral": [41, 42, 46], "spectromet": [19, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 48, 52, 53, 56, 57, 58, 60, 61, 62, 63], "spectrometerinfo": 43, "spectrometr": 40, "spectrometrist": 62, "spectromt": 38, "spectroscop": [21, 41], "spectroscopi": [42, 54], "spectrum": [13, 50], "speed": [21, 34, 41, 53, 54], "spel": [33, 36], "spell": [36, 38], "sphere": 52, "sphinx": 0, "sphinx_copybutton": 0, "sphinx_toolbox": 0, "spin": [13, 41, 46, 53, 54, 57], "spindler": 54, "spinsystem": 13, "spintyp": [13, 41], "spinx": 0, "split": 61, "splitlin": 4, "srt": 40, "ss": 53, "ssl": 52, "stabil": 61, "stabl": [17, 36], "stage": 42, "stand": 65, "standard": [17, 32, 40, 60, 62, 65], "standardis": 55, "start": [31, 32, 33, 34, 36, 40, 42, 50, 53, 61], "startup": 14, "state": [25, 27, 36, 41, 44, 65], "static": [19, 41, 42, 44, 53, 62], "statment": 62, "statu": [24, 55, 67], "std": [12, 17], "stefan": [41, 42, 46], "step": [14, 15, 17, 33, 36, 38, 40, 41, 44, 46, 52, 53, 54, 57, 62], "step_paramet": 32, "stepper": [36, 40], "still": [36, 38, 48, 55, 57, 60, 61, 63], "stoehr": [21, 41], "stoher": [21, 41], "stoll": [41, 42, 46], "stop": [24, 34, 36, 38, 65], "stop_exp": [36, 38], "stop_flag": 34, "stope": 65, "store": [31, 32, 34], "store_loc": [25, 27, 30], "str": [12, 13, 14, 15, 17, 19, 21, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46], "str_to_list_typ": [25, 30], "streasm": 43, "string": [4, 12, 14, 17, 25, 30, 33, 34, 38, 41], "strongli": 61, "structur": 65, "stuck": 52, "style": [14, 34, 35, 43, 60, 68], "sub": 61, "subclass": [14, 21, 41, 61], "sublogg": 65, "submit": 64, "submodul": 8, "subpackag": 8, "subplot": 17, "success": 67, "sudo": 52, "suggest": [52, 65], "suit": 55, "sum": [16, 41, 42, 44], "summari": [8, 41, 43, 55], "superimpos": [15, 41], "suppli": [14, 24, 25, 27, 30, 33], "support": [24, 25, 27, 30, 42, 52, 54, 57, 60, 61, 63, 68], "svg": 43, "svgflowabl": 43, "sweep": [12, 13, 31, 32, 36, 38, 40, 41, 43, 44, 50, 60, 63], "swept": [42, 54], "switch": 65, "symetr": 42, "sypport": [12, 41], "system": [13, 14, 21, 41, 50, 52, 57, 63, 65], "t": [12, 17, 21, 35, 37, 38, 41, 42, 53, 55, 62, 65], "t2": [41, 44], "t2_process": 27, "t2_result": 24, "t2relaxationsequ": [41, 44], "tab": 55, "tabl": [25, 30, 34, 36, 41, 42, 43, 44, 54, 62], "take": [14, 34, 36, 38, 42, 52, 53, 62, 67], "taken": [15, 41], "tar": 52, "target": [12, 15, 17, 32, 40, 41], "target_mnr": [12, 41], "target_shrt": [15, 41, 53], "target_step": [15, 41, 53], "target_tim": [12, 15, 41, 53], "tau": [40, 41, 44, 53, 54], "tau1": [12, 15, 17, 21, 40, 41, 44, 53, 54], "tau2": [12, 15, 17, 21, 40, 41, 44, 53, 54], "tau3": [12, 21, 41, 44, 53, 54], "tau4": [41, 44, 54], "tau_": 50, "tau_1": 50, "tau_2": 50, "tau_valu": 32, "tck_": 16, "tcl": 52, "team": [52, 61], "techniqu": 57, "teleport": 65, "temperatur": [55, 65], "templat": 14, "term": [52, 62], "termin": [19, 21, 31, 32, 34, 37, 41, 60], "terminate_at": [19, 53, 60], "test": [19, 21, 41, 48, 52, 60], "test_if_mpfu_compat": [31, 32], "test_interv": [19, 60], "test_main": [25, 41, 47], "test_puls": [31, 62], "test_snr": [25, 30], "test_tp": 32, "text": [12, 14, 41, 43, 55], "textual": 14, "than": [12, 25, 30, 33, 34, 40, 41, 50, 54, 60, 65], "thei": [14, 16, 17, 41, 50, 54, 60, 62, 63], "them": [41, 42, 44, 54, 61], "theme": 0, "thi": [1, 12, 14, 17, 19, 21, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 46, 47, 48, 50, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 69], "think": [53, 62], "third": [54, 58], "thompson": [21, 41], "thre": 24, "thread": [14, 24, 25, 27, 30, 31, 32], "threadnam": 14, "three": [53, 54, 56, 64], "three_puls": [41, 44], "threshold": [13, 15, 16, 17, 41, 53, 60], "through": [17, 24, 25, 27, 30, 33, 36, 54, 57, 61], "thrown": 17, "ti": 52, "time": [12, 14, 15, 17, 21, 25, 27, 31, 34, 41, 42, 44, 50, 53, 54, 55, 58, 60, 61, 62, 65, 67], "timecriteria": [21, 41], "timei": 17, "timeout": [24, 25, 27], "timestamp": [19, 31, 32, 37], "timex": 17, "titl": [8, 17, 36, 38, 41, 43], "titlesonli": 8, "tk": 52, "tmin": 28, "tmp": 65, "toctre": 8, "todai": 65, "togeth": [54, 60], "tol": [32, 40], "toler": [32, 40], "too": [34, 65], "tool": [25, 27, 34, 41, 47, 56], "toolbar": 28, "toolbox": [57, 63], "top": [17, 41, 43, 55], "total": [12, 15, 17, 41, 42, 44, 53, 54], "total_shot": 17, "tp": [31, 32, 34, 37, 41, 42, 44, 53, 60, 62], "trace": [16, 41, 44], "traceback": [24, 25, 27, 30], "tradit": [57, 63], "train": 62, "transfer": [42, 63], "transient": 36, "transpose_dict_of_list": [41, 46], "transpose_list_of_dict": [41, 46], "trival": 60, "trivial": 60, "true": [4, 12, 13, 14, 15, 19, 24, 31, 32, 33, 34, 35, 36, 40, 41, 42, 44, 46, 53, 56, 58], "truli": 60, "truncat": 4, "try": [36, 64], "tun": [31, 34, 40, 63], "tune": [31, 32, 34, 40, 41, 44, 53, 57], "tune_nut": 31, "tune_phas": [32, 40], "tune_pow": [32, 40], "tune_puls": [24, 31, 32, 34, 37, 53, 60], "tune_rect": 60, "tune_rectpuls": [31, 32, 34, 37, 53], "tupl": [12, 16, 17, 24, 25, 27, 30, 33, 41], "turn": [41, 46, 52, 67], "two": [12, 14, 16, 19, 33, 41, 42, 54, 58, 61, 62, 65, 69], "twod_experi": [41, 47], "twodexperimentanalysi": 17, "twt": [41, 44, 61, 63], "twtprofilesequ": [41, 44], "txt": 17, "type": [3, 4, 8, 10, 12, 13, 15, 19, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 52, 53, 56, 58, 61, 62, 67], "typeerror": [19, 41, 42, 44], "typic": 14, "u": [12, 15, 17, 19, 31, 34, 41, 44, 53, 54, 59], "uncert": [25, 30], "uncertainti": 65, "unchang": 32, "unclear": 48, "underlin": 11, "uniqu": 32, "unit": [19, 53, 57, 63], "unitless": [19, 56], "unix": 65, "unknown": 50, "unless": [50, 65], "unlik": 62, "unnecessari": 65, "until": [36, 50, 52], "unwant": 62, "up": [24, 25, 27, 30, 54, 62, 63, 65, 68], "updat": [17, 52, 67, 68], "update_analysis_t": 28, "update_deerset": 24, "update_fieldsweep": [25, 27], "update_figur": 28, "update_fit_result": 28, "update_func": [21, 28, 41], "update_gyro": 24, "update_inputs_from_dataset": 28, "update_lo": 24, "update_log_text": 26, "update_longd": [25, 27], "update_optimise_pulses_figur": [25, 27], "update_pulsespel": [31, 32], "update_quickd": [25, 27], "update_relax": [25, 27], "update_relax2d": [25, 27], "update_reptim": [24, 25, 27], "update_respro": [25, 27], "update_t2": [25, 27], "upgrad": [0, 58], "upon": [12, 19, 35, 41, 42, 61], "uprog": 33, "us": [0, 12, 14, 15, 16, 17, 19, 21, 31, 32, 34, 35, 36, 38, 40, 41, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 67, 69], "useful": 17, "user": [14, 17, 48, 53, 55, 56, 57, 60, 63, 65, 67, 68, 69], "user_input": 24, "userinput": 43, "usestim": 14, "usr": 52, "usual": 14, "utf": 65, "util": [41, 47], "uuid": 42, "uwb_ev": 35, "uwb_eval_match": 35, "uwb_load": 35, "v": 38, "val": 36, "val_in_n": [37, 41, 46], "val_in_u": [37, 41, 46], "valid": 14, "valu": [4, 12, 14, 17, 19, 21, 24, 25, 27, 30, 31, 32, 34, 36, 37, 38, 40, 41, 42, 44, 46, 53, 60], "value_at_po": 17, "value_at_tim": 17, "valueerror": [33, 41, 45], "var": 33, "vari": [17, 19, 50], "variabl": [17, 32, 33, 36, 38, 42, 62], "variant": 57, "varieti": [57, 63], "vector": [12, 41], "verbos": [12, 16, 19, 21, 34, 35, 41, 53], "veri": [17, 48, 58], "version": [14, 35, 41, 45, 51, 52, 53, 58], "vertic": [12, 41], "via": 48, "video": [36, 56], "view": 62, "vim": 12, "virtual": 19, "visible_attribut": [3, 8], "visible_children": 8, "visible_class": [3, 8], "visible_funct": 8, "visible_method": 3, "visible_properti": 3, "visible_submodul": 8, "visible_subpackag": 8, "vol": [21, 41], "voltag": 58, "vpsave": 38, "vre": 12, "w": [21, 41, 56], "wa": [14, 17, 52, 54, 63, 65], "wai": [51, 52, 55, 58, 60, 62, 64, 69], "wait": [24, 36], "wait_condit": 28, "walk": [57, 63], "want": [14, 52, 53, 60, 62], "warn": [14, 17, 42, 65], "waveform": [12, 41], "waveform_precis": [12, 41], "we": [50, 51, 52, 53, 58, 60, 61, 62, 64, 65, 67], "wee": 17, "week": 65, "weekli": 65, "well": [12, 41, 48, 53, 55, 62], "wget": 52, "what": [12, 41, 50, 51, 53, 61, 65], "whatev": 14, "when": [14, 50, 51, 53, 57, 58, 60, 61, 62, 65], "where": [14, 41, 44, 50, 54, 60], "which": [12, 14, 16, 17, 21, 41, 44, 50, 52, 54, 55, 60, 61, 62], "while": 53, "whilst": [14, 36, 38, 54, 57, 58, 60, 63], "white": [21, 41], "whole": 60, "whose": 12, "wide": [14, 55, 57], "wideband": 62, "wider": 62, "width": [4, 35, 36, 41, 42, 44, 53], "win": 35, "window": [23, 42], "wish": 55, "within": [53, 55], "without": [38, 62], "work": [21, 34, 36, 38, 41, 44, 48, 50, 60, 61, 63, 67], "worker": [24, 25, 27, 30], "workersign": [25, 27, 30], "world": 38, "would": [41, 44, 54, 60], "wrap": [24, 25, 27, 30, 43], "write": [33, 57, 58, 60, 61, 62, 63], "write_pulsespel_fil": 33, "writen": 58, "written": [57, 63, 65], "wrong": [33, 65], "x": [16, 17, 32, 40, 41, 42, 44, 46, 53, 54, 56, 58], "xarrai": [13, 16, 41, 45], "xarray_obj": [22, 41], "xaxi": 13, "xepr": [33, 36, 38, 40, 58, 61], "xepr_experi": [39, 41, 47], "xepr_inst": 36, "xepr_path": 36, "xepr_sav": 36, "xeprapi": [52, 57, 58, 61, 63], "xeprapi_link": [38, 39, 41, 47], "xeprapilink": [36, 38, 40], "xeprcmd": 38, "xeprdataset": 38, "xeprexperi": 38, "xp": [41, 44, 54], "xr": [15, 16, 41], "xthe": 65, "xtol": 56, "xvf": 52, "xvii": [21, 41], "y": [13, 17, 32, 40, 41, 42, 44, 46, 52, 53, 54, 56, 58], "yaml": [31, 32, 56, 58, 67], "year": 54, "yet": [48, 58], "yield": 14, "you": [14, 41, 44, 51, 52, 54, 55, 58, 59, 60, 61, 62, 64, 65, 67], "your": [14, 53, 55, 58, 61, 64], "yum": 52, "z": [41, 42, 46], "zero": [16, 41, 42, 44, 62], "zlib": 52, "zsh": 51, "z\u00fcrich": 34, "\u03c0": 53}, "titles": ["Building the documentation", "API Reference", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.DEER_analysis</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.FieldSweep</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.Logging</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.Relaxation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.ResPro</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.TwoD_Experiment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer._version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.colors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.criteria</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.autoDEER_worker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.log</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.quickdeer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.tools</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_AWG</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_MPFU</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_tools</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.ETH_awg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.ETH_awg_load</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.XeprAPI_link</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.dummy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.dummy_xepr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.xepr_experiments</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.pulses</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.reporter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.sequences</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.tools</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.utils</span></code>", "API Reference", "Welcome to autoDEER!", "API doc", "The Automated Algorithum", "Installation", "Installing Python", "Jupyter Interface", "DEER Variants", "GUI Interface", "Configuration File", "autoDEER", "Bruker Interface", "Creating a custom interface", "Getting Started", "Interfaces", "Creating a Custom Sequence", "autoEPR", "Contributing Guide", "Logging:", "Developing", "autoDEER GUI", "Release Notes", "Tutorial"], "titleterms": {"": 48, "0": 68, "01": 68, "04": 68, "1": [50, 60, 67], "2": [50, 60, 67], "2024": 68, "3": [50, 60, 67], "4": [50, 54, 60, 67], "5": [50, 54, 60], "6": 50, "7": [50, 52, 54, 68], "8": [50, 68], "The": [50, 52], "__main__": 23, "_version": 18, "advanc": [55, 67], "after": 55, "algorithum": 50, "an": [55, 67], "analysi": [49, 60, 67], "api": [1, 47, 49], "attribut": [12, 15, 21, 26, 27, 28, 32, 33, 34, 36, 37, 38, 40, 41, 43, 45], "autod": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 57, 67], "autodeer_work": 24, "autoepr": 63, "autom": 50, "automat": 55, "bruker": [58, 61], "bruker_awg": 31, "bruker_mpfu": 32, "bruker_tool": 33, "brukermpfu": 56, "build": 0, "call": 65, "cento": 52, "chirp": 62, "class": [13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 49], "color": 20, "configur": [56, 58], "connect": [55, 67], "content": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46], "contribut": 64, "creat": [59, 62], "criteria": [21, 49], "current": 62, "custom": [59, 61, 62], "cycl": 54, "data": 60, "dataset": 22, "deer": [50, 53, 54], "deer_analysi": 12, "defin": 60, "develop": 66, "doc": [0, 49], "document": 0, "dummi": 37, "dummy_xepr": 38, "dure": 55, "eth_awg": 34, "eth_awg_load": 35, "ethawg": 56, "exampl": 56, "experi": [50, 55, 67], "explain": 50, "faq": 52, "featur": [48, 63], "field": 53, "fieldsweep": [13, 50], "file": [56, 58], "final": 50, "first": 62, "from": 51, "fulli": 55, "function": [12, 13, 14, 15, 16, 22, 25, 27, 28, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 45, 46, 49], "get": [58, 60], "gui": [23, 24, 25, 26, 27, 28, 29, 30, 55, 67], "guid": 64, "hardwar": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "i": [49, 62], "includ": 63, "initi": 50, "input": 50, "instal": [0, 51, 52], "interfac": [49, 53, 55, 58, 59, 61], "jupyt": 53, "kei": 48, "lab": 67, "level": 65, "limit": 50, "log": [14, 26, 65], "logger": 65, "main": [27, 49], "messag": 65, "method": [12, 41], "mode": [55, 67], "modul": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 49], "ndeer": 54, "next": 60, "note": 68, "o": 49, "optimis": [49, 50], "overview": 56, "packag": [0, 25, 41], "paramet": 50, "pdf": 67, "phase": 54, "plot": 49, "post": 65, "print": 67, "profil": [50, 53], "puls": [42, 49, 54, 62], "python": 52, "quickdeer": 28, "recommend": 55, "refer": [1, 41, 42, 46, 47, 54], "relax": [15, 50], "releas": 68, "report": [43, 67], "reson": [50, 53], "respro": 16, "return": [12, 41], "rollov": 65, "scan": 50, "script": 60, "select": 54, "sequenc": [44, 49, 50, 60, 62], "set": 60, "setup": 53, "shape": 62, "solut": 52, "sourc": 51, "spectromet": [55, 67], "srt": 50, "start": [55, 58, 60, 65, 67], "step": [50, 60], "stop": 60, "studi": 50, "submodul": [25, 39, 41], "subpackag": 41, "support": 62, "sweep": 53, "tba": 68, "termin": 49, "test_main": 29, "tool": [30, 45], "tune": 60, "tutori": 69, "twod_experi": 17, "up": 60, "us": 62, "user": 50, "util": [46, 49], "variant": 54, "version": [54, 68], "view": 67, "welcom": 48, "what": 62, "window": 52, "xepr_experi": 40, "xeprapi_link": 36, "your": [60, 62]}})