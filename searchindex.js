Search.setIndex({"alltitles": {"1. Connecting to the spectrometer": [[169, "connecting-to-the-spectrometer"]], "1. Defining the sequence": [[162, "defining-the-sequence"]], "1. User Inputs": [[152, "user-inputs"]], "2. Fieldsweep": [[152, "fieldsweep"]], "2. Starting an autoDEER Experiment": [[169, "starting-an-autodeer-experiment"]], "2. Tuning for the sequence": [[162, "tuning-for-the-sequence"]], "3. SRT Scan": [[152, "srt-scan"]], "3. Starting the sequence": [[162, "starting-the-sequence"]], "3. Viewing the analysis": [[169, "viewing-the-analysis"]], "4-pulse DEER": [[156, "pulse-deer"]], "4. Printing a PDF lab-report": [[169, "printing-a-pdf-lab-report"]], "4. Resonator Profile": [[152, "resonator-profile"]], "4. Stopping the sequence": [[162, "stopping-the-sequence"]], "5-pulse DEER": [[156, "id1"]], "5. Data analysis": [[162, "data-analysis"]], "5. Relaxation Studies": [[152, "relaxation-studies"]], "6. Optimising DEER Sequence Parameters": [[152, "optimising-deer-sequence-parameters"]], "7-pulse DEER": [[156, "id2"]], "7. Initial DEER Experiment": [[152, "initial-deer-experiment"]], "8. Final DEER Experiment": [[152, "final-deer-experiment"]], "API Reference": [[1, null], [149, null]], "API doc": [[151, null]], "Advanced Mode": [[157, "advanced-mode"], [169, "advanced-mode"]], "After an Experiment": [[157, "after-an-experiment"]], "Analysis Modules": [[151, "analysis-modules"]], "Attributes": [[18, "attributes"], [42, "attributes"], [67, "attributes"], [79, "attributes"], [83, "attributes"], [86, "attributes"], [88, "attributes"], [96, "attributes"], [100, "attributes"], [102, "attributes"], [105, "attributes"], [107, "attributes"], [115, "attributes"], [121, "attributes"], [122, "attributes"], [135, "attributes"], [147, "attributes"]], "Bruker Interface": [[160, null], [163, "bruker-interface"]], "BrukerMPFU": [[158, "brukermpfu"]], "Building docs": [[0, "building-docs"]], "Building the documentation": [[0, null]], "Calling a Logger": [[167, "calling-a-logger"]], "Chirped pulses": [[164, "chirped-pulses"]], "Classes": [[23, "classes"], [33, "classes"], [42, "classes"], [47, "classes"], [57, "classes"], [61, "classes"], [67, "classes"], [69, "classes"], [76, "classes"], [77, "classes"], [79, "classes"], [83, "classes"], [86, "classes"], [88, "classes"], [92, "classes"], [94, "classes"], [96, "classes"], [100, "classes"], [102, "classes"], [105, "classes"], [107, "classes"], [115, "classes"], [121, "classes"], [122, "classes"], [132, "classes"], [135, "classes"], [146, "classes"], [151, "classes"]], "Configuration File": [[158, null]], "Configuration file": [[160, "configuration-file"]], "Connecting to a spectrometer": [[157, "connecting-to-a-spectrometer"]], "Contributing Guide": [[166, null]], "Creating a Custom Sequence": [[164, null]], "Creating a custom interface": [[161, null]], "Creating your first sequence": [[164, "creating-your-first-sequence"]], "Custom Interface": [[163, "custom-interface"]], "Custom pulses": [[164, "custom-pulses"]], "DEER": [[155, "deer"]], "DEER Variants": [[156, null]], "DEER versions": [[156, "deer-versions"]], "Developing": [[168, null]], "During an Experiment": [[157, "during-an-experiment"]], "ETHAWG": [[158, "ethawg"]], "Examples": [[158, "examples"]], "FAQs": [[154, "faqs"]], "Features included in autoEPR:": [[165, "features-included-in-autoepr"]], "Field Sweep": [[155, "field-sweep"]], "Fully automatic experiment (recommended)": [[157, "fully-automatic-experiment-recommended"]], "Functions": [[18, "functions"], [23, "functions"], [33, "functions"], [42, "functions"], [47, "functions"], [69, "functions"], [77, "functions"], [83, "functions"], [86, "functions"], [88, "functions"], [92, "functions"], [94, "functions"], [96, "functions"], [100, "functions"], [102, "functions"], [103, "functions"], [107, "functions"], [121, "functions"], [122, "functions"], [132, "functions"], [135, "functions"], [147, "functions"], [148, "functions"], [151, "functions"]], "GUI Interface": [[157, null]], "Getting Started": [[162, null]], "Getting started": [[160, "getting-started"]], "I/O": [[151, "i-o"]], "Installation": [[153, null]], "Installing Python": [[154, null]], "Installing Python CentOS 7": [[154, "installing-python-centos-7"]], "Installing Python Windows": [[154, "installing-python-windows"]], "Installing from source": [[153, "installing-from-source"]], "Installing packages": [[0, "installing-packages"]], "Interfaces": [[151, "interfaces"], [163, null]], "Jupyter Interface": [[155, null]], "Limitations": [[152, "limitations"]], "Logging Levels": [[167, "logging-levels"]], "Logging:": [[167, null]], "Logs": [[167, "logs"]], "Main Classes": [[151, "main-classes"]], "Methods": [[18, "methods"], [122, "methods"]], "Module Contents": [[18, "module-contents"], [23, "module-contents"], [33, "module-contents"], [42, "module-contents"], [47, "module-contents"], [57, "module-contents"], [58, "module-contents"], [61, "module-contents"], [62, "module-contents"], [67, "module-contents"], [69, "module-contents"], [72, "module-contents"], [76, "module-contents"], [79, "module-contents"], [83, "module-contents"], [86, "module-contents"], [88, "module-contents"], [92, "module-contents"], [94, "module-contents"], [96, "module-contents"], [100, "module-contents"], [102, "module-contents"], [103, "module-contents"], [105, "module-contents"], [107, "module-contents"], [115, "module-contents"], [121, "module-contents"], [132, "module-contents"], [135, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"]], "Next Steps": [[162, "next-steps"]], "Optimisation": [[151, "optimisation"]], "Overview": [[158, "overview"]], "Package Contents": [[77, "package-contents"], [122, "package-contents"]], "Parameter": [[152, "parameter"]], "Plotting": [[151, "plotting"]], "Posting a log message": [[167, "posting-a-log-message"]], "Pulses": [[151, "pulses"]], "References": [[156, "references"]], "References:": [[35, null], [122, "references"], [122, "id40"], [122, "id109"], [122, "id126"], [129, null], [132, "references"], [148, "references"]], "Release Notes": [[170, null]], "Resonator Profile": [[155, "resonator-profile"]], "Returns": [[18, "returns"], [122, "returns"]], "Rollover": [[167, "rollover"]], "Selecting a phase cycle": [[156, "selecting-a-phase-cycle"]], "Selecting a version": [[156, "selecting-a-version"]], "Sequences": [[151, "sequences"]], "Setting up your script": [[162, "setting-up-your-script"]], "Setup": [[155, "setup"]], "Starting an experiment": [[157, "starting-an-experiment"]], "Starting the logger": [[167, "starting-the-logger"]], "Steps Explained": [[152, "steps-explained"]], "Submodules": [[77, "submodules"], [116, "submodules"], [122, "submodules"]], "Subpackages": [[122, "subpackages"]], "Termination Criteria": [[151, "termination-criteria"]], "The Automated Algorithum": [[152, null]], "The solution": [[154, "the-solution"]], "Tutorial": [[171, null]], "Using Shaped and Chirped pulses": [[164, "using-shaped-and-chirped-pulses"]], "Utilities": [[151, "utilities"], [151, "id4"]], "Version 0.7.0 (2024-04-01):": [[170, "version-0-7-0-2024-04-01"]], "Version 0.8.0 (TBA):": [[170, "version-0-8-0-tba"]], "Welcome to autoDEER!": [[150, null]], "What is not currently supported?": [[164, "what-is-not-currently-supported"]], "autoDEER": [[159, null]], "autoDEER GUI": [[169, null]], "autoDEER\u2019s Key Features": [[150, "autodeer-s-key-features"]], "autoEPR": [[165, null]], "autodeer": [[122, null]], "autodeer.DEER_analysis": [[18, null]], "autodeer.FieldSweep": [[23, null]], "autodeer.Logging": [[33, null]], "autodeer.Relaxation": [[42, null]], "autodeer.ResPro": [[47, null]], "autodeer.TwoD_Experiment": [[57, null]], "autodeer._version": [[58, null]], "autodeer.classes": [[61, null]], "autodeer.colors": [[62, null]], "autodeer.criteria": [[67, null]], "autodeer.dataset": [[69, null]], "autodeer.gui": [[77, null]], "autodeer.gui.__main__": [[72, null]], "autodeer.gui.autoDEER_worker": [[76, null]], "autodeer.gui.log": [[79, null]], "autodeer.gui.main": [[83, null]], "autodeer.gui.modetune": [[86, null]], "autodeer.gui.quickdeer": [[88, null]], "autodeer.gui.test_main": [[89, null]], "autodeer.gui.tools": [[92, null]], "autodeer.hardware": [[116, null]], "autodeer.hardware.Bruker_AWG": [[94, null]], "autodeer.hardware.Bruker_MPFU": [[96, null]], "autodeer.hardware.Bruker_tools": [[100, null]], "autodeer.hardware.ETH_awg": [[102, null]], "autodeer.hardware.ETH_awg_load": [[103, null]], "autodeer.hardware.XeprAPI_link": [[105, null]], "autodeer.hardware.dummy": [[107, null]], "autodeer.hardware.dummy_xepr": [[115, null]], "autodeer.hardware.xepr_experiments": [[121, null]], "autodeer.pulses": [[132, null]], "autodeer.reporter": [[135, null]], "autodeer.sequences": [[146, null]], "autodeer.tools": [[147, null]], "autodeer.utils": [[148, null]], "nDEER": [[156, "ndeer"]]}, "docnames": ["README", "_templates/autoapi/index", "_templates/autoapi/python/attribute", "_templates/autoapi/python/class", "_templates/autoapi/python/data", "_templates/autoapi/python/exception", "_templates/autoapi/python/function", "_templates/autoapi/python/method", "_templates/autoapi/python/module", "_templates/autoapi/python/package", "_templates/autoapi/python/property", "_templates/custom_class_template", "autoapi/autodeer/CarrPurcellAnalysis", "autoapi/autodeer/CarrPurcellSequence", "autoapi/autodeer/ChirpPulse", "autoapi/autodeer/Criteria", "autoapi/autodeer/DEERCriteria", "autoapi/autodeer/DEERSequence", "autoapi/autodeer/DEER_analysis/index", "autoapi/autodeer/Delay", "autoapi/autodeer/Detection", "autoapi/autodeer/FieldSweep/FieldSweepAnalysis", "autoapi/autodeer/FieldSweep/SpinSystem", "autoapi/autodeer/FieldSweep/index", "autoapi/autodeer/FieldSweepAnalysis", "autoapi/autodeer/FieldSweepSequence", "autoapi/autodeer/FrequencySweptPulse", "autoapi/autodeer/GaussianPulse", "autoapi/autodeer/HSPulse", "autoapi/autodeer/HahnEchoSequence", "autoapi/autodeer/Interface", "autoapi/autodeer/Logging/DictFormater", "autoapi/autodeer/Logging/QtLogHandler", "autoapi/autodeer/Logging/index", "autoapi/autodeer/Parameter", "autoapi/autodeer/Pulse", "autoapi/autodeer/RectPulse", "autoapi/autodeer/RefocusedEcho2DAnalysis", "autoapi/autodeer/RefocusedEcho2DSequence", "autoapi/autodeer/Relaxation/CarrPurcellAnalysis", "autoapi/autodeer/Relaxation/RefocusedEcho2DAnalysis", "autoapi/autodeer/Relaxation/ReptimeAnalysis", "autoapi/autodeer/Relaxation/index", "autoapi/autodeer/Reporter", "autoapi/autodeer/ReptimeAnalysis", "autoapi/autodeer/ReptimeScan", "autoapi/autodeer/ResPro/ResonatorProfileAnalysis", "autoapi/autodeer/ResPro/index", "autoapi/autodeer/ResonatorProfileAnalysis", "autoapi/autodeer/ResonatorProfileSequence", "autoapi/autodeer/SNRCriteria", "autoapi/autodeer/Sequence", "autoapi/autodeer/SincPulse", "autoapi/autodeer/T2RelaxationSequence", "autoapi/autodeer/TWTProfileSequence", "autoapi/autodeer/TimeCriteria", "autoapi/autodeer/TwoD_Experiment/TwoDExperimentAnalysis", "autoapi/autodeer/TwoD_Experiment/index", "autoapi/autodeer/_version/index", "autoapi/autodeer/classes/Interface", "autoapi/autodeer/classes/Parameter", "autoapi/autodeer/classes/index", "autoapi/autodeer/colors/index", "autoapi/autodeer/criteria/Criteria", "autoapi/autodeer/criteria/DEERCriteria", "autoapi/autodeer/criteria/SNRCriteria", "autoapi/autodeer/criteria/TimeCriteria", "autoapi/autodeer/criteria/index", "autoapi/autodeer/dataset/EPRAccessor", "autoapi/autodeer/dataset/index", "autoapi/autodeer/gui/Worker", "autoapi/autodeer/gui/WorkerSignals", "autoapi/autodeer/gui/__main__/index", "autoapi/autodeer/gui/autoDEERUI", "autoapi/autodeer/gui/autoDEER_worker/autoDEERSignals", "autoapi/autodeer/gui/autoDEER_worker/autoDEERWorker", "autoapi/autodeer/gui/autoDEER_worker/index", "autoapi/autodeer/gui/index", "autoapi/autodeer/gui/log/LogDialog", "autoapi/autodeer/gui/log/index", "autoapi/autodeer/gui/main/Worker", "autoapi/autodeer/gui/main/WorkerSignals", "autoapi/autodeer/gui/main/autoDEERUI", "autoapi/autodeer/gui/main/index", "autoapi/autodeer/gui/modetune/ModeTune", "autoapi/autodeer/gui/modetune/get_dataWorker", "autoapi/autodeer/gui/modetune/index", "autoapi/autodeer/gui/quickdeer/DEERplot", "autoapi/autodeer/gui/quickdeer/index", "autoapi/autodeer/gui/test_main/index", "autoapi/autodeer/gui/tools/Worker", "autoapi/autodeer/gui/tools/WorkerSignals", "autoapi/autodeer/gui/tools/index", "autoapi/autodeer/hardware/Bruker_AWG/BrukerAWG", "autoapi/autodeer/hardware/Bruker_AWG/index", "autoapi/autodeer/hardware/Bruker_MPFU/BrukerMPFU", "autoapi/autodeer/hardware/Bruker_MPFU/index", "autoapi/autodeer/hardware/Bruker_tools/PSPhaseCycle", "autoapi/autodeer/hardware/Bruker_tools/PSparvar", "autoapi/autodeer/hardware/Bruker_tools/PulseSpel", "autoapi/autodeer/hardware/Bruker_tools/index", "autoapi/autodeer/hardware/ETH_awg/ETH_awg_interface", "autoapi/autodeer/hardware/ETH_awg/index", "autoapi/autodeer/hardware/ETH_awg_load/index", "autoapi/autodeer/hardware/XeprAPI_link/XeprAPILink", "autoapi/autodeer/hardware/XeprAPI_link/index", "autoapi/autodeer/hardware/dummy/dummyInterface", "autoapi/autodeer/hardware/dummy/index", "autoapi/autodeer/hardware/dummy_xepr/dummy_api", "autoapi/autodeer/hardware/dummy_xepr/dummy_cur_exp", "autoapi/autodeer/hardware/dummy_xepr/dummy_dataset", "autoapi/autodeer/hardware/dummy_xepr/dummy_hidden", "autoapi/autodeer/hardware/dummy_xepr/dummy_param", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.XeprCmds", "autoapi/autodeer/hardware/dummy_xepr/index", "autoapi/autodeer/hardware/index", "autoapi/autodeer/hardware/xepr_experiments/DEER", "autoapi/autodeer/hardware/xepr_experiments/ELDORtune", "autoapi/autodeer/hardware/xepr_experiments/MPFUtune", "autoapi/autodeer/hardware/xepr_experiments/PulseProfile", "autoapi/autodeer/hardware/xepr_experiments/index", "autoapi/autodeer/index", "autoapi/autodeer/pulses/ChirpPulse", "autoapi/autodeer/pulses/Delay", "autoapi/autodeer/pulses/Detection", "autoapi/autodeer/pulses/FrequencySweptPulse", "autoapi/autodeer/pulses/GaussianPulse", "autoapi/autodeer/pulses/HSPulse", "autoapi/autodeer/pulses/Pulse", "autoapi/autodeer/pulses/RectPulse", "autoapi/autodeer/pulses/SincPulse", "autoapi/autodeer/pulses/index", "autoapi/autodeer/reporter/Reporter", "autoapi/autodeer/reporter/SvgFlowable", "autoapi/autodeer/reporter/index", "autoapi/autodeer/sequences/CarrPurcellSequence", "autoapi/autodeer/sequences/DEERSequence", "autoapi/autodeer/sequences/FieldSweepSequence", "autoapi/autodeer/sequences/HahnEchoSequence", "autoapi/autodeer/sequences/RefocusedEcho2DSequence", "autoapi/autodeer/sequences/ReptimeScan", "autoapi/autodeer/sequences/ResonatorProfileSequence", "autoapi/autodeer/sequences/Sequence", "autoapi/autodeer/sequences/T2RelaxationSequence", "autoapi/autodeer/sequences/TWTProfileSequence", "autoapi/autodeer/sequences/index", "autoapi/autodeer/tools/index", "autoapi/autodeer/utils/index", "autoapi/index", "index", "source/API_docs", "source/Algorithum", "source/Install", "source/Install_python", "source/Jupyter_interface", "source/autoDEER/DEER_variants", "source/autoDEER/GUI_interface", "source/autoDEER/config_file", "source/autoDEER/index", "source/autoEPR/Bruker_interface", "source/autoEPR/Custom_interface", "source/autoEPR/Getting_Started", "source/autoEPR/Interface", "source/autoEPR/Sequencer", "source/autoEPR/index", "source/contributing", "source/dev_guide/Logging", "source/dev_guide/index", "source/gui_guide", "source/releasenotes", "source/tutorial"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["README.md", "_templates/autoapi/index.rst", "_templates/autoapi/python/attribute.rst", "_templates/autoapi/python/class.rst", "_templates/autoapi/python/data.rst", "_templates/autoapi/python/exception.rst", "_templates/autoapi/python/function.rst", "_templates/autoapi/python/method.rst", "_templates/autoapi/python/module.rst", "_templates/autoapi/python/package.rst", "_templates/autoapi/python/property.rst", "_templates/custom_class_template.rst", "autoapi/autodeer/CarrPurcellAnalysis.rst", "autoapi/autodeer/CarrPurcellSequence.rst", "autoapi/autodeer/ChirpPulse.rst", "autoapi/autodeer/Criteria.rst", "autoapi/autodeer/DEERCriteria.rst", "autoapi/autodeer/DEERSequence.rst", "autoapi/autodeer/DEER_analysis/index.rst", "autoapi/autodeer/Delay.rst", "autoapi/autodeer/Detection.rst", "autoapi/autodeer/FieldSweep/FieldSweepAnalysis.rst", "autoapi/autodeer/FieldSweep/SpinSystem.rst", "autoapi/autodeer/FieldSweep/index.rst", "autoapi/autodeer/FieldSweepAnalysis.rst", "autoapi/autodeer/FieldSweepSequence.rst", "autoapi/autodeer/FrequencySweptPulse.rst", "autoapi/autodeer/GaussianPulse.rst", "autoapi/autodeer/HSPulse.rst", "autoapi/autodeer/HahnEchoSequence.rst", "autoapi/autodeer/Interface.rst", "autoapi/autodeer/Logging/DictFormater.rst", "autoapi/autodeer/Logging/QtLogHandler.rst", "autoapi/autodeer/Logging/index.rst", "autoapi/autodeer/Parameter.rst", "autoapi/autodeer/Pulse.rst", "autoapi/autodeer/RectPulse.rst", "autoapi/autodeer/RefocusedEcho2DAnalysis.rst", "autoapi/autodeer/RefocusedEcho2DSequence.rst", "autoapi/autodeer/Relaxation/CarrPurcellAnalysis.rst", "autoapi/autodeer/Relaxation/RefocusedEcho2DAnalysis.rst", "autoapi/autodeer/Relaxation/ReptimeAnalysis.rst", "autoapi/autodeer/Relaxation/index.rst", "autoapi/autodeer/Reporter.rst", "autoapi/autodeer/ReptimeAnalysis.rst", "autoapi/autodeer/ReptimeScan.rst", "autoapi/autodeer/ResPro/ResonatorProfileAnalysis.rst", "autoapi/autodeer/ResPro/index.rst", "autoapi/autodeer/ResonatorProfileAnalysis.rst", "autoapi/autodeer/ResonatorProfileSequence.rst", "autoapi/autodeer/SNRCriteria.rst", "autoapi/autodeer/Sequence.rst", "autoapi/autodeer/SincPulse.rst", "autoapi/autodeer/T2RelaxationSequence.rst", "autoapi/autodeer/TWTProfileSequence.rst", "autoapi/autodeer/TimeCriteria.rst", "autoapi/autodeer/TwoD_Experiment/TwoDExperimentAnalysis.rst", "autoapi/autodeer/TwoD_Experiment/index.rst", "autoapi/autodeer/_version/index.rst", "autoapi/autodeer/classes/Interface.rst", "autoapi/autodeer/classes/Parameter.rst", "autoapi/autodeer/classes/index.rst", "autoapi/autodeer/colors/index.rst", "autoapi/autodeer/criteria/Criteria.rst", "autoapi/autodeer/criteria/DEERCriteria.rst", "autoapi/autodeer/criteria/SNRCriteria.rst", "autoapi/autodeer/criteria/TimeCriteria.rst", "autoapi/autodeer/criteria/index.rst", "autoapi/autodeer/dataset/EPRAccessor.rst", "autoapi/autodeer/dataset/index.rst", "autoapi/autodeer/gui/Worker.rst", "autoapi/autodeer/gui/WorkerSignals.rst", "autoapi/autodeer/gui/__main__/index.rst", "autoapi/autodeer/gui/autoDEERUI.rst", "autoapi/autodeer/gui/autoDEER_worker/autoDEERSignals.rst", "autoapi/autodeer/gui/autoDEER_worker/autoDEERWorker.rst", "autoapi/autodeer/gui/autoDEER_worker/index.rst", "autoapi/autodeer/gui/index.rst", "autoapi/autodeer/gui/log/LogDialog.rst", "autoapi/autodeer/gui/log/index.rst", "autoapi/autodeer/gui/main/Worker.rst", "autoapi/autodeer/gui/main/WorkerSignals.rst", "autoapi/autodeer/gui/main/autoDEERUI.rst", "autoapi/autodeer/gui/main/index.rst", "autoapi/autodeer/gui/modetune/ModeTune.rst", "autoapi/autodeer/gui/modetune/get_dataWorker.rst", "autoapi/autodeer/gui/modetune/index.rst", "autoapi/autodeer/gui/quickdeer/DEERplot.rst", "autoapi/autodeer/gui/quickdeer/index.rst", "autoapi/autodeer/gui/test_main/index.rst", "autoapi/autodeer/gui/tools/Worker.rst", "autoapi/autodeer/gui/tools/WorkerSignals.rst", "autoapi/autodeer/gui/tools/index.rst", "autoapi/autodeer/hardware/Bruker_AWG/BrukerAWG.rst", "autoapi/autodeer/hardware/Bruker_AWG/index.rst", "autoapi/autodeer/hardware/Bruker_MPFU/BrukerMPFU.rst", "autoapi/autodeer/hardware/Bruker_MPFU/index.rst", "autoapi/autodeer/hardware/Bruker_tools/PSPhaseCycle.rst", "autoapi/autodeer/hardware/Bruker_tools/PSparvar.rst", "autoapi/autodeer/hardware/Bruker_tools/PulseSpel.rst", "autoapi/autodeer/hardware/Bruker_tools/index.rst", "autoapi/autodeer/hardware/ETH_awg/ETH_awg_interface.rst", "autoapi/autodeer/hardware/ETH_awg/index.rst", "autoapi/autodeer/hardware/ETH_awg_load/index.rst", "autoapi/autodeer/hardware/XeprAPI_link/XeprAPILink.rst", "autoapi/autodeer/hardware/XeprAPI_link/index.rst", "autoapi/autodeer/hardware/dummy/dummyInterface.rst", "autoapi/autodeer/hardware/dummy/index.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_api.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_cur_exp.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_dataset.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_hidden.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_param.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.XeprCmds.rst", "autoapi/autodeer/hardware/dummy_xepr/index.rst", "autoapi/autodeer/hardware/index.rst", "autoapi/autodeer/hardware/xepr_experiments/DEER.rst", "autoapi/autodeer/hardware/xepr_experiments/ELDORtune.rst", "autoapi/autodeer/hardware/xepr_experiments/MPFUtune.rst", "autoapi/autodeer/hardware/xepr_experiments/PulseProfile.rst", "autoapi/autodeer/hardware/xepr_experiments/index.rst", "autoapi/autodeer/index.rst", "autoapi/autodeer/pulses/ChirpPulse.rst", "autoapi/autodeer/pulses/Delay.rst", "autoapi/autodeer/pulses/Detection.rst", "autoapi/autodeer/pulses/FrequencySweptPulse.rst", "autoapi/autodeer/pulses/GaussianPulse.rst", "autoapi/autodeer/pulses/HSPulse.rst", "autoapi/autodeer/pulses/Pulse.rst", "autoapi/autodeer/pulses/RectPulse.rst", "autoapi/autodeer/pulses/SincPulse.rst", "autoapi/autodeer/pulses/index.rst", "autoapi/autodeer/reporter/Reporter.rst", "autoapi/autodeer/reporter/SvgFlowable.rst", "autoapi/autodeer/reporter/index.rst", "autoapi/autodeer/sequences/CarrPurcellSequence.rst", "autoapi/autodeer/sequences/DEERSequence.rst", "autoapi/autodeer/sequences/FieldSweepSequence.rst", "autoapi/autodeer/sequences/HahnEchoSequence.rst", "autoapi/autodeer/sequences/RefocusedEcho2DSequence.rst", "autoapi/autodeer/sequences/ReptimeScan.rst", "autoapi/autodeer/sequences/ResonatorProfileSequence.rst", "autoapi/autodeer/sequences/Sequence.rst", "autoapi/autodeer/sequences/T2RelaxationSequence.rst", "autoapi/autodeer/sequences/TWTProfileSequence.rst", "autoapi/autodeer/sequences/index.rst", "autoapi/autodeer/tools/index.rst", "autoapi/autodeer/utils/index.rst", "autoapi/index.rst", "index.rst", "source/API_docs.rst", "source/Algorithum.rst", "source/Install.rst", "source/Install_python.rst", "source/Jupyter_interface.rst", "source/autoDEER/DEER_variants.rst", "source/autoDEER/GUI_interface.rst", "source/autoDEER/config_file.rst", "source/autoDEER/index.rst", "source/autoEPR/Bruker_interface.rst", "source/autoEPR/Custom_interface.rst", "source/autoEPR/Getting_Started.rst", "source/autoEPR/Interface.rst", "source/autoEPR/Sequencer.rst", "source/autoEPR/index.rst", "source/contributing.rst", "source/dev_guide/Logging.md", "source/dev_guide/index.rst", "source/gui_guide.rst", "source/releasenotes.rst", "source/tutorial.rst"], "indexentries": {"__add__() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter.__add__", false]], "__add__() (autodeer.criteria method)": [[122, "autodeer.Criteria.__add__", false]], "__add__() (autodeer.criteria.criteria method)": [[67, "autodeer.criteria.Criteria.__add__", false]], "__add__() (autodeer.parameter method)": [[122, "autodeer.Parameter.__add__", false], [122, "id29", false], [122, "id96", false]], "__add__() (criteria method)": [[15, "Criteria.__add__", false], [63, "Criteria.__add__", false]], "__add__() (parameter method)": [[34, "Parameter.__add__", false], [60, "Parameter.__add__", false]], "__eq__() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter.__eq__", false]], "__eq__() (autodeer.parameter method)": [[122, "autodeer.Parameter.__eq__", false], [122, "id28", false], [122, "id95", false]], "__eq__() (parameter method)": [[34, "Parameter.__eq__", false], [60, "Parameter.__eq__", false]], "__getitem__() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.__getitem__", false]], "__getitem__() (autodeer.hardware.dummy_xepr.dummy_hidden method)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden.__getitem__", false]], "__getitem__() (dummy_cur_exp method)": [[109, "dummy_cur_exp.__getitem__", false]], "__getitem__() (dummy_hidden method)": [[111, "dummy_hidden.__getitem__", false]], "__mul__() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter.__mul__", false]], "__mul__() (autodeer.parameter method)": [[122, "autodeer.Parameter.__mul__", false], [122, "id31", false], [122, "id98", false]], "__mul__() (parameter method)": [[34, "Parameter.__mul__", false], [60, "Parameter.__mul__", false]], "__rmul__() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter.__rmul__", false]], "__rmul__() (autodeer.parameter method)": [[122, "autodeer.Parameter.__rmul__", false], [122, "id32", false], [122, "id99", false]], "__rmul__() (parameter method)": [[34, "Parameter.__rmul__", false], [60, "Parameter.__rmul__", false]], "__str__() (autodeer.hardware.bruker_tools.psphasecycle method)": [[100, "autodeer.hardware.Bruker_tools.PSPhaseCycle.__str__", false]], "__str__() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.__str__", false]], "__str__() (autodeer.pulse method)": [[122, "autodeer.Pulse.__str__", false], [122, "id129", false]], "__str__() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse.__str__", false]], "__str__() (autodeer.sequence method)": [[122, "autodeer.Sequence.__str__", false], [122, "id67", false]], "__str__() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence.__str__", false]], "__str__() (psphasecycle method)": [[97, "PSPhaseCycle.__str__", false]], "__str__() (pulse method)": [[35, "Pulse.__str__", false], [129, "Pulse.__str__", false]], "__str__() (pulsespel method)": [[99, "PulseSpel.__str__", false]], "__str__() (sequence method)": [[51, "Sequence.__str__", false], [143, "Sequence.__str__", false]], "__sub__() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter.__sub__", false]], "__sub__() (autodeer.parameter method)": [[122, "autodeer.Parameter.__sub__", false], [122, "id30", false], [122, "id97", false]], "__sub__() (parameter method)": [[34, "Parameter.__sub__", false], [60, "Parameter.__sub__", false]], "__version__ (in module autodeer)": [[122, "autodeer.__version__", false]], "__version__ (in module autodeer._version)": [[58, "autodeer._version.__version__", false]], "_addawgpulse() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._addAWGPulse", false]], "_addawgpulse() (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools._addAWGPulse", false]], "_addawgpulse() (pulsespel method)": [[99, "PulseSpel._addAWGPulse", false]], "_adddef() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._addDef", false]], "_adddef() (pulsespel method)": [[99, "PulseSpel._addDef", false]], "_addexp() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._addExp", false]], "_addexp() (pulsespel method)": [[99, "PulseSpel._addExp", false]], "_addphasecycle() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._addPhaseCycle", false]], "_addphasecycle() (autodeer.pulse method)": [[122, "autodeer.Pulse._addPhaseCycle", false], [122, "id116", false]], "_addphasecycle() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse._addPhaseCycle", false]], "_addphasecycle() (pulse method)": [[35, "Pulse._addPhaseCycle", false], [129, "Pulse._addPhaseCycle", false]], "_addphasecycle() (pulsespel method)": [[99, "PulseSpel._addPhaseCycle", false]], "_addscanloop() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._addScanLoop", false]], "_addscanloop() (pulsespel method)": [[99, "PulseSpel._addScanLoop", false]], "_build() (autodeer.reporter method)": [[122, "autodeer.Reporter._build", false]], "_build() (autodeer.reporter.reporter method)": [[135, "autodeer.reporter.Reporter._build", false]], "_build() (reporter method)": [[43, "Reporter._build", false], [133, "Reporter._build", false]], "_build_exp_struct() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_exp_struct", false]], "_build_exp_struct() (eth_awg_interface method)": [[101, "ETH_awg_interface._build_exp_struct", false]], "_build_methods() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker._build_methods", false]], "_build_methods() (autodeerworker method)": [[75, "autoDEERWorker._build_methods", false]], "_build_parvar() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_parvar", false]], "_build_parvar() (eth_awg_interface method)": [[101, "ETH_awg_interface._build_parvar", false]], "_build_phase_cycle() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_phase_cycle", false]], "_build_phase_cycle() (eth_awg_interface method)": [[101, "ETH_awg_interface._build_phase_cycle", false]], "_build_pulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_pulse", false]], "_build_pulse() (eth_awg_interface method)": [[101, "ETH_awg_interface._build_pulse", false]], "_build_sequence() (autodeer.carrpurcellsequence method)": [[122, "autodeer.CarrPurcellSequence._build_sequence", false]], "_build_sequence() (autodeer.refocusedecho2dsequence method)": [[122, "autodeer.RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (autodeer.resonatorprofilesequence method)": [[122, "autodeer.ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.carrpurcellsequence method)": [[146, "autodeer.sequences.CarrPurcellSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.refocusedecho2dsequence method)": [[146, "autodeer.sequences.RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.resonatorprofilesequence method)": [[146, "autodeer.sequences.ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.twtprofilesequence method)": [[146, "autodeer.sequences.TWTProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.twtprofilesequence method)": [[122, "autodeer.TWTProfileSequence._build_sequence", false]], "_build_sequence() (carrpurcellsequence method)": [[13, "CarrPurcellSequence._build_sequence", false], [136, "CarrPurcellSequence._build_sequence", false]], "_build_sequence() (refocusedecho2dsequence method)": [[38, "RefocusedEcho2DSequence._build_sequence", false], [140, "RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (resonatorprofilesequence method)": [[49, "ResonatorProfileSequence._build_sequence", false], [142, "ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (twtprofilesequence method)": [[54, "TWTProfileSequence._build_sequence", false], [145, "TWTProfileSequence._build_sequence", false]], "_buildfmam() (autodeer.pulse method)": [[122, "autodeer.Pulse._buildFMAM", false], [122, "id117", false]], "_buildfmam() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse._buildFMAM", false]], "_buildfmam() (pulse method)": [[35, "Pulse._buildFMAM", false], [129, "Pulse._buildFMAM", false]], "_buildphasecycle() (autodeer.sequence method)": [[122, "autodeer.Sequence._buildPhaseCycle", false], [122, "id58", false]], "_buildphasecycle() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence._buildPhaseCycle", false]], "_buildphasecycle() (sequence method)": [[51, "Sequence._buildPhaseCycle", false], [143, "Sequence._buildPhaseCycle", false]], "_calc_fft() (autodeer.pulse method)": [[122, "autodeer.Pulse._calc_fft", false], [122, "id124", false]], "_calc_fft() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse._calc_fft", false]], "_calc_fft() (pulse method)": [[35, "Pulse._calc_fft", false], [129, "Pulse._calc_fft", false]], "_check_sequence() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._check_sequence", false]], "_check_sequence() (pulsespel method)": [[99, "PulseSpel._check_sequence", false]], "_checkrect() (autodeer.sequence method)": [[122, "autodeer.Sequence._checkRect", false], [122, "id66", false]], "_checkrect() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence._checkRect", false]], "_checkrect() (sequence method)": [[51, "Sequence._checkRect", false], [143, "Sequence._checkRect", false]], "_cmpl_def() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._cmpl_def", false]], "_cmpl_def() (pulsespel method)": [[99, "PulseSpel._cmpl_def", false]], "_cmpl_exp() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._cmpl_Exp", false]], "_cmpl_exp() (pulsespel method)": [[99, "PulseSpel._cmpl_Exp", false]], "_convert_to_delay() (autodeer.sequence method)": [[122, "autodeer.Sequence._convert_to_delay", false], [122, "id64", false]], "_convert_to_delay() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence._convert_to_delay", false]], "_convert_to_delay() (sequence method)": [[51, "Sequence._convert_to_delay", false], [143, "Sequence._convert_to_delay", false]], "_convert_to_pulses() (autodeer.sequence method)": [[122, "autodeer.Sequence._convert_to_pulses", false], [122, "id65", false]], "_convert_to_pulses() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence._convert_to_pulses", false]], "_convert_to_pulses() (sequence method)": [[51, "Sequence._convert_to_pulses", false], [143, "Sequence._convert_to_pulses", false]], "_data_transpose() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis._data_transpose", false]], "_data_transpose() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis._data_transpose", false]], "_detect() (autodeer.hardware.bruker_tools.psphasecycle method)": [[100, "autodeer.hardware.Bruker_tools.PSPhaseCycle._detect", false]], "_detect() (psphasecycle method)": [[97, "PSPhaseCycle._detect", false]], "_estimate_time() (autodeer.sequence method)": [[122, "autodeer.Sequence._estimate_time", false], [122, "id57", false]], "_estimate_time() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence._estimate_time", false]], "_estimate_time() (sequence method)": [[51, "Sequence._estimate_time", false], [143, "Sequence._estimate_time", false]], "_expdefs() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._ExpDefs", false]], "_expdefs() (pulsespel method)": [[99, "PulseSpel._ExpDefs", false]], "_freq_sweep() (autodeer.hardware.xepr_experiments.pulseprofile method)": [[121, "autodeer.hardware.xepr_experiments.PulseProfile._freq_sweep", false]], "_freq_sweep() (pulseprofile method)": [[120, "PulseProfile._freq_sweep", false]], "_from_dict() (autodeer.classes.parameter static method)": [[61, "autodeer.classes.Parameter._from_dict", false]], "_from_dict() (autodeer.parameter static method)": [[122, "autodeer.Parameter._from_dict", false], [122, "id104", false], [122, "id37", false]], "_from_dict() (autodeer.pulse class method)": [[122, "autodeer.Pulse._from_dict", false], [122, "id134", false]], "_from_dict() (autodeer.pulses.pulse class method)": [[132, "autodeer.pulses.Pulse._from_dict", false]], "_from_dict() (autodeer.sequence class method)": [[122, "autodeer.Sequence._from_dict", false], [122, "id72", false]], "_from_dict() (autodeer.sequences.sequence class method)": [[146, "autodeer.sequences.Sequence._from_dict", false]], "_from_dict() (parameter static method)": [[34, "Parameter._from_dict", false], [60, "Parameter._from_dict", false]], "_from_dict() (pulse class method)": [[35, "Pulse._from_dict", false], [129, "Pulse._from_dict", false]], "_from_dict() (sequence class method)": [[51, "Sequence._from_dict", false], [143, "Sequence._from_dict", false]], "_from_json() (autodeer.classes.parameter class method)": [[61, "autodeer.classes.Parameter._from_json", false]], "_from_json() (autodeer.parameter class method)": [[122, "autodeer.Parameter._from_json", false], [122, "id105", false], [122, "id38", false]], "_from_json() (autodeer.pulse class method)": [[122, "autodeer.Pulse._from_json", false], [122, "id135", false]], "_from_json() (autodeer.pulses.pulse class method)": [[132, "autodeer.pulses.Pulse._from_json", false]], "_from_json() (autodeer.sequence class method)": [[122, "autodeer.Sequence._from_json", false], [122, "id73", false]], "_from_json() (autodeer.sequences.sequence class method)": [[146, "autodeer.sequences.Sequence._from_json", false]], "_from_json() (parameter class method)": [[34, "Parameter._from_json", false], [60, "Parameter._from_json", false]], "_from_json() (pulse class method)": [[35, "Pulse._from_json", false], [129, "Pulse._from_json", false]], "_from_json() (sequence class method)": [[51, "Sequence._from_json", false], [143, "Sequence._from_json", false]], "_gen_eseem() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy._gen_ESEEM", false]], "_get_cur_exp_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink._get_cur_exp_global", false]], "_get_cur_exp_global() (xeprapilink method)": [[104, "XeprAPILink._get_cur_exp_global", false]], "_get_exp() (autodeer.hardware.xepr_experiments.eldortune method)": [[121, "autodeer.hardware.xepr_experiments.ELDORtune._get_exp", false]], "_get_exp() (eldortune method)": [[118, "ELDORtune._get_exp", false]], "_get_xepr_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink._get_Xepr_global", false]], "_get_xepr_global() (xeprapilink method)": [[104, "XeprAPILink._get_Xepr_global", false]], "_launch_complex_thread() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG._launch_complex_thread", false]], "_launch_complex_thread() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU._launch_complex_thread", false]], "_launch_complex_thread() (brukerawg method)": [[93, "BrukerAWG._launch_complex_thread", false]], "_launch_complex_thread() (brukermpfu method)": [[95, "BrukerMPFU._launch_complex_thread", false]], "_main() (autodeer.hardware.bruker_tools.psphasecycle method)": [[100, "autodeer.hardware.Bruker_tools.PSPhaseCycle._main", false]], "_main() (psphasecycle method)": [[97, "PSPhaseCycle._main", false]], "_mpfu() (autodeer.hardware.bruker_tools.psphasecycle method)": [[100, "autodeer.hardware.Bruker_tools.PSPhaseCycle._MPFU", false]], "_mpfu() (psphasecycle method)": [[97, "PSPhaseCycle._MPFU", false]], "_mpfu_channels() (in module autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU._MPFU_channels", false]], "_new_delay() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._new_delay", false]], "_new_delay() (pulsespel method)": [[99, "PulseSpel._new_delay", false]], "_new_pulse() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._new_pulse", false]], "_new_pulse() (pulsespel method)": [[99, "PulseSpel._new_pulse", false]], "_new_var() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel._new_var", false]], "_new_var() (pulsespel method)": [[99, "PulseSpel._new_var", false]], "_obj (autodeer.dataset.epraccessor attribute)": [[69, "autodeer.dataset.EPRAccessor._obj", false]], "_obj (epraccessor attribute)": [[68, "EPRAccessor._obj", false]], "_pcyc_str() (autodeer.pulse method)": [[122, "autodeer.Pulse._pcyc_str", false], [122, "id128", false]], "_pcyc_str() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse._pcyc_str", false]], "_pcyc_str() (pulse method)": [[35, "Pulse._pcyc_str", false], [129, "Pulse._pcyc_str", false]], "_process_fit() (autodeer.resonatorprofileanalysis method)": [[122, "autodeer.ResonatorProfileAnalysis._process_fit", false]], "_process_fit() (autodeer.respro.resonatorprofileanalysis method)": [[47, "autodeer.ResPro.ResonatorProfileAnalysis._process_fit", false]], "_process_fit() (resonatorprofileanalysis method)": [[46, "ResonatorProfileAnalysis._process_fit", false], [48, "ResonatorProfileAnalysis._process_fit", false]], "_set_cur_exp_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_cur_exp_global", false]], "_set_cur_exp_global() (xeprapilink method)": [[104, "XeprAPILink._set_cur_exp_global", false]], "_set_cur_exp_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_cur_exp_param", false]], "_set_cur_exp_param() (xeprapilink method)": [[104, "XeprAPILink._set_cur_exp_param", false]], "_set_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_hidden_param", false]], "_set_hidden_param() (xeprapilink method)": [[104, "XeprAPILink._set_hidden_param", false]], "_set_xepr_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_Xepr_global", false]], "_set_xepr_global() (xeprapilink method)": [[104, "XeprAPILink._set_Xepr_global", false]], "_setup_echo() (autodeer.hardware.xepr_experiments.mpfutune method)": [[121, "autodeer.hardware.xepr_experiments.MPFUtune._setup_echo", false]], "_setup_echo() (mpfutune method)": [[119, "MPFUtune._setup_echo", false]], "_setup_exp() (autodeer.hardware.xepr_experiments.eldortune method)": [[121, "autodeer.hardware.xepr_experiments.ELDORtune._setup_exp", false]], "_setup_exp() (autodeer.hardware.xepr_experiments.pulseprofile method)": [[121, "autodeer.hardware.xepr_experiments.PulseProfile._setup_exp", false]], "_setup_exp() (eldortune method)": [[118, "ELDORtune._setup_exp", false]], "_setup_exp() (pulseprofile method)": [[120, "PulseProfile._setup_exp", false]], "_similate_respro() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy._similate_respro", false]], "_simulate_2d_relax() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy._simulate_2D_relax", false]], "_simulate_cp() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy._simulate_CP", false]], "_simulate_deer() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy._simulate_deer", false]], "_simulate_field_sweep() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy._simulate_field_sweep", false]], "_simulate_reptimescan() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy._simulate_reptimescan", false]], "_simulate_t2() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy._simulate_T2", false]], "_smooth() (autodeer.refocusedecho2danalysis method)": [[122, "autodeer.RefocusedEcho2DAnalysis._smooth", false]], "_smooth() (autodeer.relaxation.refocusedecho2danalysis method)": [[42, "autodeer.Relaxation.RefocusedEcho2DAnalysis._smooth", false]], "_smooth() (refocusedecho2danalysis method)": [[37, "RefocusedEcho2DAnalysis._smooth", false], [40, "RefocusedEcho2DAnalysis._smooth", false]], "_spfu_channels() (in module autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU._SPFU_channels", false]], "_stability_check() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis._stability_check", false]], "_stability_check() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis._stability_check", false]], "_tmp_dir (autodeer.hardware.dummy_xepr.dummy_api attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_api._tmp_dir", false]], "_tmp_dir (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink._tmp_dir", false]], "_tmp_dir (dummy_api attribute)": [[108, "dummy_api._tmp_dir", false]], "_tmp_dir (xeprapilink attribute)": [[104, "XeprAPILink._tmp_dir", false]], "_to_dict() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter._to_dict", false]], "_to_dict() (autodeer.parameter method)": [[122, "autodeer.Parameter._to_dict", false], [122, "id101", false], [122, "id34", false]], "_to_dict() (autodeer.pulse method)": [[122, "autodeer.Pulse._to_dict", false], [122, "id131", false]], "_to_dict() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse._to_dict", false]], "_to_dict() (autodeer.sequence method)": [[122, "autodeer.Sequence._to_dict", false], [122, "id69", false]], "_to_dict() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence._to_dict", false]], "_to_dict() (parameter method)": [[34, "Parameter._to_dict", false], [60, "Parameter._to_dict", false]], "_to_dict() (pulse method)": [[35, "Pulse._to_dict", false], [129, "Pulse._to_dict", false]], "_to_dict() (sequence method)": [[51, "Sequence._to_dict", false], [143, "Sequence._to_dict", false]], "_to_json() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter._to_json", false]], "_to_json() (autodeer.parameter method)": [[122, "autodeer.Parameter._to_json", false], [122, "id102", false], [122, "id35", false]], "_to_json() (autodeer.pulse method)": [[122, "autodeer.Pulse._to_json", false], [122, "id132", false]], "_to_json() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse._to_json", false]], "_to_json() (autodeer.sequence method)": [[122, "autodeer.Sequence._to_json", false], [122, "id70", false]], "_to_json() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence._to_json", false]], "_to_json() (parameter method)": [[34, "Parameter._to_json", false], [60, "Parameter._to_json", false]], "_to_json() (pulse method)": [[35, "Pulse._to_json", false], [129, "Pulse._to_json", false]], "_to_json() (sequence method)": [[51, "Sequence._to_json", false], [143, "Sequence._to_json", false]], "_xepr_retry() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink._xepr_retry", false]], "_xepr_retry() (xeprapilink method)": [[104, "XeprAPILink._xepr_retry", false]], "a (autodeer.fieldsweep.spinsystem attribute)": [[23, "autodeer.FieldSweep.SpinSystem.A", false]], "a (spinsystem attribute)": [[22, "SpinSystem.A", false]], "abort_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.abort_exp", false]], "abort_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.abort_exp", false]], "abort_exp() (dummy_api method)": [[108, "dummy_api.abort_exp", false]], "abort_exp() (xeprapilink method)": [[104, "XeprAPILink.abort_exp", false]], "acquire_dataset() (autodeer.classes.interface method)": [[61, "autodeer.classes.Interface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.dummy.dummyinterface method)": [[107, "autodeer.hardware.dummy.dummyInterface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_dataset", false]], "acquire_dataset() (autodeer.interface method)": [[122, "autodeer.Interface.acquire_dataset", false]], "acquire_dataset() (brukerawg method)": [[93, "BrukerAWG.acquire_dataset", false]], "acquire_dataset() (brukermpfu method)": [[95, "BrukerMPFU.acquire_dataset", false]], "acquire_dataset() (dummyinterface method)": [[106, "dummyInterface.acquire_dataset", false]], "acquire_dataset() (eth_awg_interface method)": [[101, "ETH_awg_interface.acquire_dataset", false]], "acquire_dataset() (interface method)": [[30, "Interface.acquire_dataset", false], [59, "Interface.acquire_dataset", false]], "acquire_dataset() (xeprapilink method)": [[104, "XeprAPILink.acquire_dataset", false]], "acquire_dataset_from_matlab() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.acquire_dataset_from_matlab", false]], "acquire_dataset_from_matlab() (eth_awg_interface method)": [[101, "ETH_awg_interface.acquire_dataset_from_matlab", false]], "acquire_scan() (autodeer.hardware.dummy_xepr.dummy_api method)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan", false]], "acquire_scan() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan", false]], "acquire_scan() (dummy_api method)": [[108, "dummy_api.acquire_scan", false]], "acquire_scan() (xeprapilink method)": [[104, "XeprAPILink.acquire_scan", false]], "acquire_scan_2d() (autodeer.hardware.dummy_xepr.dummy_api method)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan_2d", false]], "acquire_scan_2d() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan_2d", false]], "acquire_scan_2d() (dummy_api method)": [[108, "dummy_api.acquire_scan_2d", false]], "acquire_scan_2d() (xeprapilink method)": [[104, "XeprAPILink.acquire_scan_2d", false]], "acquire_scan_at() (autodeer.hardware.dummy_xepr.dummy_api method)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan_at", false]], "acquire_scan_at() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan_at", false]], "acquire_scan_at() (dummy_api method)": [[108, "dummy_api.acquire_scan_at", false]], "acquire_scan_at() (xeprapilink method)": [[104, "XeprAPILink.acquire_scan_at", false]], "add_axis() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter.add_axis", false]], "add_axis() (autodeer.parameter method)": [[122, "autodeer.Parameter.add_axis", false], [122, "id24", false], [122, "id91", false]], "add_axis() (parameter method)": [[34, "Parameter.add_axis", false], [60, "Parameter.add_axis", false]], "add_code_block() (autodeer.reporter method)": [[122, "autodeer.Reporter.add_code_block", false]], "add_code_block() (autodeer.reporter.reporter method)": [[135, "autodeer.reporter.Reporter.add_code_block", false]], "add_code_block() (reporter method)": [[43, "Reporter.add_code_block", false], [133, "Reporter.add_code_block", false]], "add_eseem_avg() (autodeer.deersequence method)": [[122, "autodeer.DEERSequence.add_ESEEM_avg", false]], "add_eseem_avg() (autodeer.sequences.deersequence method)": [[146, "autodeer.sequences.DEERSequence.add_ESEEM_avg", false]], "add_eseem_avg() (deersequence method)": [[17, "DEERSequence.add_ESEEM_avg", false], [137, "DEERSequence.add_ESEEM_avg", false]], "add_figure() (autodeer.reporter method)": [[122, "autodeer.Reporter.add_figure", false]], "add_figure() (autodeer.reporter.reporter method)": [[135, "autodeer.reporter.Reporter.add_figure", false]], "add_figure() (reporter method)": [[43, "Reporter.add_figure", false], [133, "Reporter.add_figure", false]], "add_new_entry() (autodeer.gui.log.logdialog method)": [[79, "autodeer.gui.log.LogDialog.add_new_entry", false]], "add_new_entry() (logdialog method)": [[78, "LogDialog.add_new_entry", false]], "add_new_section() (autodeer.reporter method)": [[122, "autodeer.Reporter.add_new_section", false]], "add_new_section() (autodeer.reporter.reporter method)": [[135, "autodeer.reporter.Reporter.add_new_section", false]], "add_new_section() (reporter method)": [[43, "Reporter.add_new_section", false], [133, "Reporter.add_new_section", false]], "add_noise() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy.add_noise", false]], "add_page_break() (autodeer.reporter method)": [[122, "autodeer.Reporter.add_page_break", false]], "add_page_break() (autodeer.reporter.reporter method)": [[135, "autodeer.reporter.Reporter.add_page_break", false]], "add_page_break() (reporter method)": [[43, "Reporter.add_page_break", false], [133, "Reporter.add_page_break", false]], "add_phaseshift() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy.add_phaseshift", false]], "add_space() (autodeer.reporter method)": [[122, "autodeer.Reporter.add_space", false]], "add_space() (autodeer.reporter.reporter method)": [[135, "autodeer.reporter.Reporter.add_space", false]], "add_space() (reporter method)": [[43, "Reporter.add_space", false], [133, "Reporter.add_space", false]], "add_table() (autodeer.reporter method)": [[122, "autodeer.Reporter.add_table", false]], "add_table() (autodeer.reporter.reporter method)": [[135, "autodeer.reporter.Reporter.add_table", false]], "add_table() (reporter method)": [[43, "Reporter.add_table", false], [133, "Reporter.add_table", false]], "add_text() (autodeer.reporter method)": [[122, "autodeer.Reporter.add_text", false]], "add_text() (autodeer.reporter.reporter method)": [[135, "autodeer.reporter.Reporter.add_text", false]], "add_text() (reporter method)": [[43, "Reporter.add_text", false], [133, "Reporter.add_text", false]], "add_title() (autodeer.reporter method)": [[122, "autodeer.Reporter.add_title", false]], "add_title() (autodeer.reporter.reporter method)": [[135, "autodeer.reporter.Reporter.add_title", false]], "add_title() (reporter method)": [[43, "Reporter.add_title", false], [133, "Reporter.add_title", false]], "addpulse() (autodeer.sequence method)": [[122, "autodeer.Sequence.addPulse", false], [122, "id56", false]], "addpulse() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence.addPulse", false]], "addpulse() (sequence method)": [[51, "Sequence.addPulse", false], [143, "Sequence.addPulse", false]], "advanced_mode_inputs() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.advanced_mode_inputs", false]], "advanced_mode_inputs() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.advanced_mode_inputs", false]], "advanced_mode_inputs() (autodeerui method)": [[73, "autoDEERUI.advanced_mode_inputs", false], [82, "autoDEERUI.advanced_mode_inputs", false]], "amp_factor (autodeer.frequencysweptpulse property)": [[122, "autodeer.FrequencySweptPulse.amp_factor", false]], "amp_factor (autodeer.pulse property)": [[122, "autodeer.Pulse.amp_factor", false], [122, "id113", false]], "amp_factor (autodeer.pulses.frequencysweptpulse property)": [[132, "autodeer.pulses.FrequencySweptPulse.amp_factor", false]], "amp_factor (autodeer.pulses.pulse property)": [[132, "autodeer.pulses.Pulse.amp_factor", false]], "amp_factor (frequencysweptpulse property)": [[26, "FrequencySweptPulse.amp_factor", false], [126, "FrequencySweptPulse.amp_factor", false]], "amp_factor (pulse property)": [[35, "Pulse.amp_factor", false], [129, "Pulse.amp_factor", false]], "api (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.api", false]], "api (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.api", false]], "api (autodeer.hardware.xepr_experiments.deer attribute)": [[121, "autodeer.hardware.xepr_experiments.DEER.api", false]], "api (autodeer.hardware.xepr_experiments.eldortune attribute)": [[121, "autodeer.hardware.xepr_experiments.ELDORtune.api", false]], "api (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[121, "autodeer.hardware.xepr_experiments.MPFUtune.api", false]], "api (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[121, "autodeer.hardware.xepr_experiments.PulseProfile.api", false]], "api (brukerawg attribute)": [[93, "BrukerAWG.api", false]], "api (brukermpfu attribute)": [[95, "BrukerMPFU.api", false]], "api (deer attribute)": [[117, "DEER.api", false]], "api (eldortune attribute)": [[118, "ELDORtune.api", false]], "api (mpfutune attribute)": [[119, "MPFUtune.api", false]], "api (pulseprofile attribute)": [[120, "PulseProfile.api", false]], "app (in module autodeer.gui.__main__)": [[72, "autodeer.gui.__main__.app", false]], "app (in module autodeer.gui.main)": [[83, "autodeer.gui.main.app", false]], "app (in module autodeer.gui.quickdeer)": [[88, "autodeer.gui.quickdeer.app", false]], "aqexprun() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.aqExpRun", false]], "aqexprun() (dummy_cur_exp method)": [[109, "dummy_cur_exp.aqExpRun", false]], "aqexpselect() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqExpSelect", false]], "aqexpselect() (dummy_xepr.xeprcmds method)": [[113, "dummy_xepr.XeprCmds.aqExpSelect", false]], "aqexpselect() (xeprcmds method)": [[114, "XeprCmds.aqExpSelect", false]], "aqgetparmaxvalue (autodeer.hardware.dummy_xepr.dummy_param attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_param.aqGetParMaxValue", false]], "aqgetparmaxvalue (dummy_param attribute)": [[112, "dummy_param.aqGetParMaxValue", false]], "aqgetparminvalue (autodeer.hardware.dummy_xepr.dummy_param attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_param.aqGetParMinValue", false]], "aqgetparminvalue (dummy_param attribute)": [[112, "dummy_param.aqGetParMinValue", false]], "aqpgcompile() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgCompile", false]], "aqpgcompile() (dummy_xepr.xeprcmds method)": [[113, "dummy_xepr.XeprCmds.aqPgCompile", false]], "aqpgcompile() (xeprcmds method)": [[114, "XeprCmds.aqPgCompile", false]], "aqpgdefload() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgDefLoad", false]], "aqpgdefload() (dummy_xepr.xeprcmds method)": [[113, "dummy_xepr.XeprCmds.aqPgDefLoad", false]], "aqpgdefload() (xeprcmds method)": [[114, "XeprCmds.aqPgDefLoad", false]], "aqpgdefsaveas() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgDefSaveAs", false]], "aqpgdefsaveas() (dummy_xepr.xeprcmds method)": [[113, "dummy_xepr.XeprCmds.aqPgDefSaveAs", false]], "aqpgdefsaveas() (xeprcmds method)": [[114, "XeprCmds.aqPgDefSaveAs", false]], "aqpgload() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgLoad", false]], "aqpgload() (dummy_xepr.xeprcmds method)": [[113, "dummy_xepr.XeprCmds.aqPgLoad", false]], "aqpgload() (xeprcmds method)": [[114, "XeprCmds.aqPgLoad", false]], "aqpgsaveas() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgSaveAs", false]], "aqpgsaveas() (dummy_xepr.xeprcmds method)": [[113, "dummy_xepr.XeprCmds.aqPgSaveAs", false]], "aqpgsaveas() (xeprcmds method)": [[114, "XeprCmds.aqPgSaveAs", false]], "aqpgshowprg() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgShowPrg", false]], "aqpgshowprg() (dummy_xepr.xeprcmds method)": [[113, "dummy_xepr.XeprCmds.aqPgShowPrg", false]], "aqpgshowprg() (xeprcmds method)": [[114, "XeprCmds.aqPgShowPrg", false]], "args (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.args", false]], "args (autodeer.gui.main.worker attribute)": [[83, "autodeer.gui.main.Worker.args", false]], "args (autodeer.gui.tools.worker attribute)": [[92, "autodeer.gui.tools.Worker.args", false]], "args (autodeer.gui.worker attribute)": [[77, "autodeer.gui.Worker.args", false]], "args (autodeerworker attribute)": [[75, "autoDEERWorker.args", false]], "args (worker attribute)": [[70, "Worker.args", false], [80, "Worker.args", false], [90, "Worker.args", false]], "autodeer": [[122, "module-autodeer", false]], "autodeer._version": [[58, "module-autodeer._version", false]], "autodeer.classes": [[61, "module-autodeer.classes", false]], "autodeer.colors": [[62, "module-autodeer.colors", false]], "autodeer.criteria": [[67, "module-autodeer.criteria", false]], "autodeer.dataset": [[69, "module-autodeer.dataset", false]], "autodeer.deer_analysis": [[18, "module-autodeer.DEER_analysis", false]], "autodeer.fieldsweep": [[23, "module-autodeer.FieldSweep", false]], "autodeer.gui": [[77, "module-autodeer.gui", false]], "autodeer.gui.__main__": [[72, "module-autodeer.gui.__main__", false]], "autodeer.gui.autodeer_worker": [[76, "module-autodeer.gui.autoDEER_worker", false]], "autodeer.gui.log": [[79, "module-autodeer.gui.log", false]], "autodeer.gui.main": [[83, "module-autodeer.gui.main", false]], "autodeer.gui.modetune": [[86, "module-autodeer.gui.modetune", false]], "autodeer.gui.quickdeer": [[88, "module-autodeer.gui.quickdeer", false]], "autodeer.gui.test_main": [[89, "module-autodeer.gui.test_main", false]], "autodeer.gui.tools": [[92, "module-autodeer.gui.tools", false]], "autodeer.hardware": [[116, "module-autodeer.hardware", false]], "autodeer.hardware.bruker_awg": [[94, "module-autodeer.hardware.Bruker_AWG", false]], "autodeer.hardware.bruker_mpfu": [[96, "module-autodeer.hardware.Bruker_MPFU", false]], "autodeer.hardware.bruker_tools": [[100, "module-autodeer.hardware.Bruker_tools", false]], "autodeer.hardware.dummy": [[107, "module-autodeer.hardware.dummy", false]], "autodeer.hardware.dummy_xepr": [[115, "module-autodeer.hardware.dummy_xepr", false]], "autodeer.hardware.eth_awg": [[102, "module-autodeer.hardware.ETH_awg", false]], "autodeer.hardware.eth_awg_load": [[103, "module-autodeer.hardware.ETH_awg_load", false]], "autodeer.hardware.xepr_experiments": [[121, "module-autodeer.hardware.xepr_experiments", false]], "autodeer.hardware.xeprapi_link": [[105, "module-autodeer.hardware.XeprAPI_link", false]], "autodeer.logging": [[33, "module-autodeer.Logging", false]], "autodeer.pulses": [[132, "module-autodeer.pulses", false]], "autodeer.relaxation": [[42, "module-autodeer.Relaxation", false]], "autodeer.reporter": [[135, "module-autodeer.reporter", false]], "autodeer.respro": [[47, "module-autodeer.ResPro", false]], "autodeer.sequences": [[146, "module-autodeer.sequences", false]], "autodeer.tools": [[147, "module-autodeer.tools", false]], "autodeer.twod_experiment": [[57, "module-autodeer.TwoD_Experiment", false]], "autodeer.utils": [[148, "module-autodeer.utils", false]], "autodeersignals (built-in class)": [[74, "autoDEERSignals", false]], "autodeersignals (class in autodeer.gui.autodeer_worker)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals", false]], "autodeerui (built-in class)": [[73, "autoDEERUI", false], [82, "autoDEERUI", false]], "autodeerui (class in autodeer.gui)": [[77, "autodeer.gui.autoDEERUI", false]], "autodeerui (class in autodeer.gui.main)": [[83, "autodeer.gui.main.autoDEERUI", false]], "autodeerworker (built-in class)": [[75, "autoDEERWorker", false]], "autodeerworker (class in autodeer.gui.autodeer_worker)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker", false]], "autoeprdecoder() (in module autodeer)": [[122, "autodeer.autoEPRDecoder", false], [122, "id110", false], [122, "id42", false]], "autoeprdecoder() (in module autodeer.utils)": [[148, "autodeer.utils.autoEPRDecoder", false]], "averages (autodeer.sequence attribute)": [[122, "autodeer.Sequence.averages", false], [122, "id50", false]], "averages (autodeer.sequences.sequence attribute)": [[146, "autodeer.sequences.Sequence.averages", false]], "averages (sequence attribute)": [[51, "Sequence.averages", false], [143, "Sequence.averages", false]], "awg (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.AWG", false]], "awg (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.AWG", false]], "awg (autodeer.hardware.xepr_experiments.deer attribute)": [[121, "autodeer.hardware.xepr_experiments.DEER.awg", false]], "awg (autodeerworker attribute)": [[75, "autoDEERWorker.AWG", false]], "awg (deer attribute)": [[117, "DEER.awg", false]], "awg (pulsespel attribute)": [[99, "PulseSpel.AWG", false]], "awg_freq (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.awg_freq", false]], "awg_freq (eth_awg_interface attribute)": [[101, "ETH_awg_interface.awg_freq", false]], "ax_id (autodeer.classes.parameter attribute)": [[61, "autodeer.classes.Parameter.ax_id", false]], "ax_id (autodeer.parameter attribute)": [[122, "autodeer.Parameter.ax_id", false], [122, "id23", false], [122, "id90", false]], "ax_id (parameter attribute)": [[34, "Parameter.ax_id", false], [60, "Parameter.ax_id", false]], "axes_uuid (autodeer.sequence attribute)": [[122, "autodeer.Sequence.axes_uuid", false], [122, "id47", false]], "axes_uuid (autodeer.sequences.sequence attribute)": [[146, "autodeer.sequences.Sequence.axes_uuid", false]], "axes_uuid (sequence attribute)": [[51, "Sequence.axes_uuid", false], [143, "Sequence.axes_uuid", false]], "axis (autodeer.classes.parameter attribute)": [[61, "autodeer.classes.Parameter.axis", false]], "axis (autodeer.parameter attribute)": [[122, "autodeer.Parameter.axis", false], [122, "id22", false], [122, "id89", false]], "axis (autodeer.refocusedecho2danalysis attribute)": [[122, "autodeer.RefocusedEcho2DAnalysis.axis", false]], "axis (autodeer.relaxation.refocusedecho2danalysis attribute)": [[42, "autodeer.Relaxation.RefocusedEcho2DAnalysis.axis", false]], "axis (autodeer.relaxation.reptimeanalysis attribute)": [[42, "autodeer.Relaxation.ReptimeAnalysis.axis", false]], "axis (autodeer.reptimeanalysis attribute)": [[122, "autodeer.ReptimeAnalysis.axis", false]], "axis (parameter attribute)": [[34, "Parameter.axis", false], [60, "Parameter.axis", false]], "axis (refocusedecho2danalysis attribute)": [[37, "RefocusedEcho2DAnalysis.axis", false], [40, "RefocusedEcho2DAnalysis.axis", false]], "axis (reptimeanalysis attribute)": [[41, "ReptimeAnalysis.axis", false], [44, "ReptimeAnalysis.axis", false]], "b (autodeer.fieldsweepsequence attribute)": [[122, "autodeer.FieldSweepSequence.B", false]], "b (autodeer.sequences.fieldsweepsequence attribute)": [[146, "autodeer.sequences.FieldSweepSequence.B", false]], "b (fieldsweepsequence attribute)": [[25, "FieldSweepSequence.B", false], [138, "FieldSweepSequence.B", false]], "background_func() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.background_func", false]], "bandwidth (autodeer.pulse property)": [[122, "autodeer.Pulse.bandwidth", false], [122, "id112", false]], "bandwidth (autodeer.pulses.pulse property)": [[132, "autodeer.pulses.Pulse.bandwidth", false]], "bandwidth (pulse property)": [[35, "Pulse.bandwidth", false], [129, "Pulse.bandwidth", false]], "beta (autodeer.hspulse attribute)": [[122, "autodeer.HSPulse.beta", false]], "beta (autodeer.pulses.hspulse attribute)": [[132, "autodeer.pulses.HSPulse.beta", false]], "beta (hspulse attribute)": [[28, "HSPulse.beta", false], [128, "HSPulse.beta", false]], "bg_data (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.bg_data", false]], "bg_data (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.bg_data", false]], "bg_data (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.bg_data", false]], "bg_data (brukerawg attribute)": [[93, "BrukerAWG.bg_data", false]], "bg_data (brukermpfu attribute)": [[95, "BrukerMPFU.bg_data", false]], "bg_data (eth_awg_interface attribute)": [[101, "ETH_awg_interface.bg_data", false]], "bg_thread (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.bg_thread", false]], "bg_thread (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.bg_thread", false]], "bg_thread (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.bg_thread", false]], "bg_thread (brukerawg attribute)": [[93, "BrukerAWG.bg_thread", false]], "bg_thread (brukermpfu attribute)": [[95, "BrukerMPFU.bg_thread", false]], "bg_thread (eth_awg_interface attribute)": [[101, "ETH_awg_interface.bg_thread", false]], "bg_thread() (in module autodeer.hardware.eth_awg)": [[102, "autodeer.hardware.ETH_awg.bg_thread", false]], "bphasecycles (autodeer.hardware.bruker_tools.psphasecycle attribute)": [[100, "autodeer.hardware.Bruker_tools.PSPhaseCycle.BPhaseCycles", false]], "bphasecycles (psphasecycle attribute)": [[97, "PSPhaseCycle.BPhaseCycles", false]], "bridge_config (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.bridge_config", false]], "bridge_config (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.bridge_config", false]], "bridge_config (brukerawg attribute)": [[93, "BrukerAWG.bridge_config", false]], "bridge_config (brukermpfu attribute)": [[95, "BrukerMPFU.bridge_config", false]], "bruker (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.Bruker", false]], "bruker (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.Bruker", false]], "bruker (autodeerui attribute)": [[73, "autoDEERUI.Bruker", false], [82, "autoDEERUI.Bruker", false]], "brukerawg (built-in class)": [[93, "BrukerAWG", false]], "brukerawg (class in autodeer.hardware.bruker_awg)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG", false]], "brukermpfu (built-in class)": [[95, "BrukerMPFU", false]], "brukermpfu (class in autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU", false]], "brxamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden.BrXAmp", false]], "brxamp (dummy_hidden attribute)": [[111, "dummy_hidden.BrXAmp", false]], "brxphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden.BrXPhase", false]], "brxphase (dummy_hidden attribute)": [[111, "dummy_hidden.BrXPhase", false]], "bryamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden.BrYAmp", false]], "bryamp (dummy_hidden attribute)": [[111, "dummy_hidden.BrYAmp", false]], "bryphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden.BrYPhase", false]], "bryphase (dummy_hidden attribute)": [[111, "dummy_hidden.BrYPhase", false]], "bspline_extra() (in module autodeer.respro)": [[47, "autodeer.ResPro.BSpline_extra", false]], "build__lowpass_butter_filter() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.build__lowpass_butter_filter", false]], "build_default_pulses() (in module autodeer)": [[122, "autodeer.build_default_pulses", false]], "build_default_pulses() (in module autodeer.pulses)": [[132, "autodeer.pulses.build_default_pulses", false]], "build_shape() (autodeer.pulse method)": [[122, "autodeer.Pulse.build_shape", false], [122, "id118", false]], "build_shape() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse.build_shape", false]], "build_shape() (pulse method)": [[35, "Pulse.build_shape", false], [129, "Pulse.build_shape", false]], "build_spectrum() (in module autodeer.fieldsweep)": [[23, "autodeer.FieldSweep.build_spectrum", false]], "build_table() (autodeer.pulse method)": [[122, "autodeer.Pulse.build_table", false], [122, "id119", false]], "build_table() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse.build_table", false]], "build_table() (in module autodeer)": [[122, "autodeer.build_table", false], [122, "id107", false], [122, "id41", false]], "build_table() (in module autodeer.utils)": [[148, "autodeer.utils.build_table", false]], "build_table() (pulse method)": [[35, "Pulse.build_table", false], [129, "Pulse.build_table", false]], "build_unique_progtable() (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.build_unique_progtable", false]], "calc_correction_factor() (in module autodeer)": [[122, "autodeer.calc_correction_factor", false]], "calc_correction_factor() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.calc_correction_factor", false]], "calc_d0() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.calc_d0", false]], "calc_d0() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.calc_d0", false]], "calc_d0() (autodeer.hardware.xepr_experiments.mpfutune method)": [[121, "autodeer.hardware.xepr_experiments.MPFUtune.calc_d0", false]], "calc_d0() (brukerawg method)": [[93, "BrukerAWG.calc_d0", false]], "calc_d0() (brukermpfu method)": [[95, "BrukerMPFU.calc_d0", false]], "calc_d0() (mpfutune method)": [[119, "MPFUtune.calc_d0", false]], "calc_d0_from_hahn_echo() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (brukerawg method)": [[93, "BrukerAWG.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (brukermpfu method)": [[95, "BrukerMPFU.calc_d0_from_Hahn_Echo", false]], "calc_deer_settings() (in module autodeer)": [[122, "autodeer.calc_deer_settings", false]], "calc_deer_settings() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.calc_deer_settings", false]], "calc_gyro() (autodeer.fieldsweep.fieldsweepanalysis method)": [[23, "autodeer.FieldSweep.FieldSweepAnalysis.calc_gyro", false]], "calc_gyro() (autodeer.fieldsweepanalysis method)": [[122, "autodeer.FieldSweepAnalysis.calc_gyro", false]], "calc_gyro() (fieldsweepanalysis method)": [[21, "FieldSweepAnalysis.calc_gyro", false], [24, "FieldSweepAnalysis.calc_gyro", false]], "calc_identifiability() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.calc_identifiability", false]], "calc_noise_level() (autodeer.fieldsweep.fieldsweepanalysis method)": [[23, "autodeer.FieldSweep.FieldSweepAnalysis.calc_noise_level", false]], "calc_noise_level() (autodeer.fieldsweepanalysis method)": [[122, "autodeer.FieldSweepAnalysis.calc_noise_level", false]], "calc_noise_level() (fieldsweepanalysis method)": [[21, "FieldSweepAnalysis.calc_noise_level", false], [24, "FieldSweepAnalysis.calc_noise_level", false]], "calc_optimal_reptime() (autodeer.relaxation.reptimeanalysis method)": [[42, "autodeer.Relaxation.ReptimeAnalysis.calc_optimal_reptime", false]], "calc_optimal_reptime() (autodeer.reptimeanalysis method)": [[122, "autodeer.ReptimeAnalysis.calc_optimal_reptime", false]], "calc_optimal_reptime() (reptimeanalysis method)": [[41, "ReptimeAnalysis.calc_optimal_reptime", false], [44, "ReptimeAnalysis.calc_optimal_reptime", false]], "calc_overlap() (in module autodeer.respro)": [[47, "autodeer.ResPro.calc_overlap", false]], "calc_percieved_freq() (in module autodeer.hardware.eth_awg_load)": [[103, "autodeer.hardware.ETH_awg_load.calc_percieved_freq", false]], "calc_rel_positions() (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.calc_rel_positions", false]], "calculate_noise_level() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_noise_level", false]], "calculate_noise_level() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.calculate_noise_level", false]], "calculate_optimal() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_optimal", false]], "calculate_optimal() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.calculate_optimal", false]], "calculate_snr_threshold() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_snr_threshold", false]], "calculate_snr_threshold() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.calculate_snr_threshold", false]], "calibratefreq() (in module autodeer.hardware.xepr_experiments)": [[121, "autodeer.hardware.xepr_experiments.CalibrateFreq", false]], "carrpurcellanalysis (built-in class)": [[12, "CarrPurcellAnalysis", false], [39, "CarrPurcellAnalysis", false]], "carrpurcellanalysis (class in autodeer)": [[122, "autodeer.CarrPurcellAnalysis", false]], "carrpurcellanalysis (class in autodeer.relaxation)": [[42, "autodeer.Relaxation.CarrPurcellAnalysis", false]], "carrpurcellsequence (built-in class)": [[13, "CarrPurcellSequence", false], [136, "CarrPurcellSequence", false]], "carrpurcellsequence (class in autodeer)": [[122, "autodeer.CarrPurcellSequence", false]], "carrpurcellsequence (class in autodeer.sequences)": [[146, "autodeer.sequences.CarrPurcellSequence", false]], "ceil() (in module autodeer.respro)": [[47, "autodeer.ResPro.ceil", false]], "centerfield (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.CenterField", false]], "centerfield (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.CenterField", false]], "change_dimensions() (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.change_dimensions", false]], "change_lo() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.change_LO", false]], "change_lo() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.change_LO", false]], "change_lo() (autodeerui method)": [[73, "autoDEERUI.change_LO", false], [82, "autoDEERUI.change_LO", false]], "change_log_level() (in module autodeer.logging)": [[33, "autodeer.Logging.change_log_level", false]], "check_cp() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.check_CP", false]], "check_cp() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.check_CP", false]], "check_cp() (autodeerui method)": [[73, "autoDEERUI.check_CP", false], [82, "autoDEERUI.check_CP", false]], "check_decay() (autodeer.carrpurcellanalysis method)": [[122, "autodeer.CarrPurcellAnalysis.check_decay", false]], "check_decay() (autodeer.relaxation.carrpurcellanalysis method)": [[42, "autodeer.Relaxation.CarrPurcellAnalysis.check_decay", false]], "check_decay() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.check_decay", false], [39, "CarrPurcellAnalysis.check_decay", false]], "check_t2() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.check_T2", false]], "check_t2() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.check_T2", false]], "check_t2() (autodeerui method)": [[73, "autoDEERUI.check_T2", false], [82, "autoDEERUI.check_T2", false]], "check_variable() (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.check_variable", false]], "checkpulsespel() (autodeer.hardware.bruker_tools.psparvar method)": [[100, "autodeer.hardware.Bruker_tools.PSparvar.checkPulseSpel", false]], "checkpulsespel() (psparvar method)": [[98, "PSparvar.checkPulseSpel", false]], "chirppulse (built-in class)": [[14, "ChirpPulse", false], [123, "ChirpPulse", false]], "chirppulse (class in autodeer)": [[122, "autodeer.ChirpPulse", false]], "chirppulse (class in autodeer.pulses)": [[132, "autodeer.pulses.ChirpPulse", false]], "clear_all() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.clear_all", false]], "clear_all() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.clear_all", false]], "clear_all() (autodeer.gui.quickdeer.deerplot method)": [[88, "autodeer.gui.quickdeer.DEERplot.clear_all", false]], "clear_all() (autodeerui method)": [[73, "autoDEERUI.clear_all", false], [82, "autoDEERUI.clear_all", false]], "clear_all() (deerplot method)": [[87, "DEERplot.clear_all", false]], "clear_log() (autodeer.gui.log.logdialog method)": [[79, "autodeer.gui.log.LogDialog.clear_log", false]], "clear_log() (logdialog method)": [[78, "LogDialog.clear_log", false]], "clearlayout() (autodeer.gui.quickdeer.deerplot method)": [[88, "autodeer.gui.quickdeer.DEERplot.clearLayout", false]], "clearlayout() (deerplot method)": [[87, "DEERplot.clearLayout", false]], "cmap (in module autodeer)": [[122, "autodeer.cmap", false]], "cmap (in module autodeer.relaxation)": [[42, "autodeer.Relaxation.cmap", false]], "combo_figure() (in module autodeer)": [[122, "autodeer.combo_figure", false]], "combo_figure() (in module autodeer.reporter)": [[135, "autodeer.reporter.combo_figure", false]], "compile_pulsespel_def() (autodeer.hardware.dummy_xepr.dummy_api method)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.compile_PulseSpel_def", false]], "compile_pulsespel_def() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.compile_PulseSpel_def", false]], "compile_pulsespel_def() (dummy_api method)": [[108, "dummy_api.compile_PulseSpel_def", false]], "compile_pulsespel_def() (xeprapilink method)": [[104, "XeprAPILink.compile_PulseSpel_def", false]], "compile_pulsespel_prg() (autodeer.hardware.dummy_xepr.dummy_api method)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (dummy_api method)": [[108, "dummy_api.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (xeprapilink method)": [[104, "XeprAPILink.compile_PulseSpel_prg", false]], "config (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.config", false]], "config (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.config", false]], "config (autodeerui attribute)": [[73, "autoDEERUI.config", false], [82, "autoDEERUI.config", false]], "connect() (autodeer.classes.interface method)": [[61, "autodeer.classes.Interface.connect", false]], "connect() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.connect", false]], "connect() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.connect", false]], "connect() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.connect", false]], "connect() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.connect", false]], "connect() (autodeer.interface method)": [[122, "autodeer.Interface.connect", false]], "connect() (brukerawg method)": [[93, "BrukerAWG.connect", false]], "connect() (brukermpfu method)": [[95, "BrukerMPFU.connect", false]], "connect() (eth_awg_interface method)": [[101, "ETH_awg_interface.connect", false]], "connect() (interface method)": [[30, "Interface.connect", false], [59, "Interface.connect", false]], "connect() (xeprapilink method)": [[104, "XeprAPILink.connect", false]], "connect_spectrometer() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.connect_spectrometer", false]], "connect_spectrometer() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.connect_spectrometer", false]], "connect_spectrometer() (autodeerui method)": [[73, "autoDEERUI.connect_spectrometer", false], [82, "autoDEERUI.connect_spectrometer", false]], "connected (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.connected", false]], "connected (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.connected", false]], "connected (autodeerui attribute)": [[73, "autoDEERUI.connected", false], [82, "autoDEERUI.connected", false]], "convert() (autodeer.sequence method)": [[122, "autodeer.Sequence.convert", false], [122, "id63", false]], "convert() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence.convert", false]], "convert() (sequence method)": [[51, "Sequence.convert", false], [143, "Sequence.convert", false]], "convert_progtable() (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.convert_progtable", false]], "copy() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter.copy", false]], "copy() (autodeer.parameter method)": [[122, "autodeer.Parameter.copy", false], [122, "id100", false], [122, "id33", false]], "copy() (autodeer.pulse method)": [[122, "autodeer.Pulse.copy", false], [122, "id130", false]], "copy() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse.copy", false]], "copy() (autodeer.sequence method)": [[122, "autodeer.Sequence.copy", false], [122, "id68", false]], "copy() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence.copy", false]], "copy() (parameter method)": [[34, "Parameter.copy", false], [60, "Parameter.copy", false]], "copy() (pulse method)": [[35, "Pulse.copy", false], [129, "Pulse.copy", false]], "copy() (sequence method)": [[51, "Sequence.copy", false], [143, "Sequence.copy", false]], "cores (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.cores", false]], "cores (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.cores", false]], "cores (autodeer.gui.quickdeer.deerplot attribute)": [[88, "autodeer.gui.quickdeer.DEERplot.cores", false]], "cores (autodeerui attribute)": [[73, "autoDEERUI.cores", false], [82, "autoDEERUI.cores", false]], "cores (deerplot attribute)": [[87, "DEERplot.cores", false]], "correction_factor (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.correction_factor", false]], "correction_factor (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.correction_factor", false]], "correction_factor (autodeerui attribute)": [[73, "autoDEERUI.correction_factor", false], [82, "autoDEERUI.correction_factor", false]], "correctphase (autodeer.dataset.epraccessor property)": [[69, "autodeer.dataset.EPRAccessor.correctphase", false]], "correctphase (epraccessor property)": [[68, "EPRAccessor.correctphase", false]], "correctphasefull (autodeer.dataset.epraccessor property)": [[69, "autodeer.dataset.EPRAccessor.correctphasefull", false]], "correctphasefull (epraccessor property)": [[68, "EPRAccessor.correctphasefull", false]], "cp_run() (in module autodeer.hardware.xepr_experiments)": [[121, "autodeer.hardware.xepr_experiments.CP_run", false]], "create_bahrenberg_plots() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_bahrenberg_plots", false]], "create_bahrenberg_plots() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.create_bahrenberg_plots", false]], "create_dataset_from_axes() (in module autodeer.dataset)": [[69, "autodeer.dataset.create_dataset_from_axes", false]], "create_dataset_from_bruker() (in module autodeer.dataset)": [[69, "autodeer.dataset.create_dataset_from_bruker", false]], "create_dataset_from_sequence() (in module autodeer.dataset)": [[69, "autodeer.dataset.create_dataset_from_sequence", false]], "create_fieldsweep_figure() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.create_fieldsweep_figure", false]], "create_fieldsweep_figure() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.create_fieldsweep_figure", false]], "create_fieldsweep_figure() (autodeerui method)": [[73, "autoDEERUI.create_fieldsweep_figure", false], [82, "autoDEERUI.create_fieldsweep_figure", false]], "create_figure() (autodeer.gui.modetune.modetune method)": [[86, "autodeer.gui.modetune.ModeTune.create_figure", false]], "create_figure() (autodeer.gui.quickdeer.deerplot method)": [[88, "autodeer.gui.quickdeer.DEERplot.create_figure", false]], "create_figure() (deerplot method)": [[87, "DEERplot.create_figure", false]], "create_figure() (modetune method)": [[84, "ModeTune.create_figure", false]], "create_nmodel() (in module autodeer.fieldsweep)": [[23, "autodeer.FieldSweep.create_Nmodel", false]], "create_relax_figure() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.create_relax_figure", false]], "create_relax_figure() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.create_relax_figure", false]], "create_relax_figure() (autodeerui method)": [[73, "autoDEERUI.create_relax_figure", false], [82, "autoDEERUI.create_relax_figure", false]], "create_report() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.create_report", false]], "create_report() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.create_report", false]], "create_report() (autodeerui method)": [[73, "autoDEERUI.create_report", false], [82, "autoDEERUI.create_report", false]], "create_report() (in module autodeer.reporter)": [[135, "autodeer.reporter.create_report", false]], "create_respro_figure() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.create_respro_figure", false]], "create_respro_figure() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.create_respro_figure", false]], "create_respro_figure() (autodeerui method)": [[73, "autoDEERUI.create_respro_figure", false], [82, "autoDEERUI.create_respro_figure", false]], "create_save_name() (in module autodeer.gui)": [[77, "autodeer.gui.create_save_name", false]], "create_save_name() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.create_save_name", false]], "create_slice_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_slice_plot", false]], "create_slice_plot() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.create_slice_plot", false]], "create_twod_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_twoD_plot", false]], "create_twod_plot() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.create_twoD_plot", false]], "criteria (built-in class)": [[15, "Criteria", false], [63, "Criteria", false]], "criteria (class in autodeer)": [[122, "autodeer.Criteria", false]], "criteria (class in autodeer.criteria)": [[67, "autodeer.criteria.Criteria", false]], "cur_exp (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.cur_exp", false]], "cur_exp (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.cur_exp", false]], "cur_exp (autodeer.hardware.dummy_xepr.dummy_xepr attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.cur_exp", false]], "cur_exp (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.cur_exp", false]], "cur_exp (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.cur_exp", false]], "cur_exp (brukerawg attribute)": [[93, "BrukerAWG.cur_exp", false]], "cur_exp (brukermpfu attribute)": [[95, "BrukerMPFU.cur_exp", false]], "cur_exp (dummy_xepr attribute)": [[113, "dummy_xepr.cur_exp", false]], "cur_exp (eth_awg_interface attribute)": [[101, "ETH_awg_interface.cur_exp", false]], "cur_exp (xeprapilink attribute)": [[104, "XeprAPILink.cur_exp", false]], "current_data (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.current_data", false]], "current_data (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.current_data", false]], "current_data (autodeer.gui.quickdeer.deerplot attribute)": [[88, "autodeer.gui.quickdeer.DEERplot.current_data", false]], "current_data (autodeerui attribute)": [[73, "autoDEERUI.current_data", false], [82, "autoDEERUI.current_data", false]], "current_data (deerplot attribute)": [[87, "DEERplot.current_data", false]], "current_folder (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.current_folder", false]], "current_folder (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.current_folder", false]], "current_folder (autodeer.gui.quickdeer.deerplot attribute)": [[88, "autodeer.gui.quickdeer.DEERplot.current_folder", false]], "current_folder (autodeerui attribute)": [[73, "autoDEERUI.current_folder", false], [82, "autoDEERUI.current_folder", false]], "current_folder (deerplot attribute)": [[87, "DEERplot.current_folder", false]], "current_results (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.current_results", false]], "current_results (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.current_results", false]], "current_results (autodeer.gui.quickdeer.deerplot attribute)": [[88, "autodeer.gui.quickdeer.DEERplot.current_results", false]], "current_results (autodeerui attribute)": [[73, "autoDEERUI.current_results", false], [82, "autoDEERUI.current_results", false]], "current_results (deerplot attribute)": [[87, "DEERplot.current_results", false]], "d0 (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.d0", false]], "d0 (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.d0", false]], "d0 (autodeer.hardware.xepr_experiments.deer attribute)": [[121, "autodeer.hardware.xepr_experiments.DEER.d0", false]], "d0 (autodeer.hardware.xepr_experiments.eldortune attribute)": [[121, "autodeer.hardware.xepr_experiments.ELDORtune.d0", false]], "d0 (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[121, "autodeer.hardware.xepr_experiments.MPFUtune.d0", false]], "d0 (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[121, "autodeer.hardware.xepr_experiments.PulseProfile.d0", false]], "d0 (brukerawg attribute)": [[93, "BrukerAWG.d0", false]], "d0 (brukermpfu attribute)": [[95, "BrukerMPFU.d0", false]], "d0 (deer attribute)": [[117, "DEER.d0", false]], "d0 (eldortune attribute)": [[118, "ELDORtune.d0", false]], "d0 (mpfutune attribute)": [[119, "MPFUtune.d0", false]], "d0 (pulseprofile attribute)": [[120, "PulseProfile.d0", false]], "data (autodeer.carrpurcellanalysis attribute)": [[122, "autodeer.CarrPurcellAnalysis.data", false]], "data (autodeer.fieldsweep.fieldsweepanalysis attribute)": [[23, "autodeer.FieldSweep.FieldSweepAnalysis.data", false]], "data (autodeer.fieldsweepanalysis attribute)": [[122, "autodeer.FieldSweepAnalysis.data", false]], "data (autodeer.refocusedecho2danalysis attribute)": [[122, "autodeer.RefocusedEcho2DAnalysis.data", false]], "data (autodeer.relaxation.carrpurcellanalysis attribute)": [[42, "autodeer.Relaxation.CarrPurcellAnalysis.data", false]], "data (autodeer.relaxation.refocusedecho2danalysis attribute)": [[42, "autodeer.Relaxation.RefocusedEcho2DAnalysis.data", false]], "data (carrpurcellanalysis attribute)": [[12, "CarrPurcellAnalysis.data", false], [39, "CarrPurcellAnalysis.data", false]], "data (fieldsweepanalysis attribute)": [[21, "FieldSweepAnalysis.data", false], [24, "FieldSweepAnalysis.data", false]], "data (refocusedecho2danalysis attribute)": [[37, "RefocusedEcho2DAnalysis.data", false], [40, "RefocusedEcho2DAnalysis.data", false]], "dataset (autodeer.carrpurcellanalysis attribute)": [[122, "autodeer.CarrPurcellAnalysis.dataset", false]], "dataset (autodeer.refocusedecho2danalysis attribute)": [[122, "autodeer.RefocusedEcho2DAnalysis.dataset", false]], "dataset (autodeer.relaxation.carrpurcellanalysis attribute)": [[42, "autodeer.Relaxation.CarrPurcellAnalysis.dataset", false]], "dataset (autodeer.relaxation.refocusedecho2danalysis attribute)": [[42, "autodeer.Relaxation.RefocusedEcho2DAnalysis.dataset", false]], "dataset (autodeer.resonatorprofileanalysis attribute)": [[122, "autodeer.ResonatorProfileAnalysis.dataset", false]], "dataset (autodeer.respro.resonatorprofileanalysis attribute)": [[47, "autodeer.ResPro.ResonatorProfileAnalysis.dataset", false]], "dataset (carrpurcellanalysis attribute)": [[12, "CarrPurcellAnalysis.dataset", false], [39, "CarrPurcellAnalysis.dataset", false]], "dataset (refocusedecho2danalysis attribute)": [[37, "RefocusedEcho2DAnalysis.dataset", false], [40, "RefocusedEcho2DAnalysis.dataset", false]], "dataset (resonatorprofileanalysis attribute)": [[46, "ResonatorProfileAnalysis.dataset", false], [48, "ResonatorProfileAnalysis.dataset", false]], "deadtime (autodeer.deersequence attribute)": [[122, "autodeer.DEERSequence.deadtime", false]], "deadtime (autodeer.sequences.deersequence attribute)": [[146, "autodeer.sequences.DEERSequence.deadtime", false]], "deadtime (deersequence attribute)": [[17, "DEERSequence.deadtime", false], [137, "DEERSequence.deadtime", false]], "deer (built-in class)": [[117, "DEER", false]], "deer (class in autodeer.hardware.xepr_experiments)": [[121, "autodeer.hardware.xepr_experiments.DEER", false]], "deer5p_run() (in module autodeer.hardware.xepr_experiments)": [[121, "autodeer.hardware.xepr_experiments.DEER5p_run", false]], "deer_inputs (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.deer_inputs", false]], "deer_inputs (autodeerworker attribute)": [[75, "autoDEERWorker.deer_inputs", false]], "deer_settings (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.deer_settings", false]], "deer_settings (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.deer_settings", false]], "deer_settings (autodeerui attribute)": [[73, "autoDEERUI.deer_settings", false], [82, "autoDEERUI.deer_settings", false]], "deeranalysis() (in module autodeer)": [[122, "autodeer.DEERanalysis", false], [122, "id148", false]], "deeranalysis() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.DEERanalysis", false]], "deeranalysis_plot() (in module autodeer)": [[122, "autodeer.DEERanalysis_plot", false]], "deeranalysis_plot() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.DEERanalysis_plot", false]], "deeranalysis_plot_pub() (in module autodeer)": [[122, "autodeer.DEERanalysis_plot_pub", false]], "deeranalysis_plot_pub() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.DEERanalysis_plot_pub", false]], "deeranalysis_process() (in module autodeer.gui.quickdeer)": [[88, "autodeer.gui.quickdeer.deeranalysis_process", false]], "deercriteria (built-in class)": [[16, "DEERCriteria", false], [64, "DEERCriteria", false]], "deercriteria (class in autodeer)": [[122, "autodeer.DEERCriteria", false]], "deercriteria (class in autodeer.criteria)": [[67, "autodeer.criteria.DEERCriteria", false]], "deerplot (built-in class)": [[87, "DEERplot", false]], "deerplot (class in autodeer.gui.quickdeer)": [[88, "autodeer.gui.quickdeer.DEERplot", false]], "deersequence (built-in class)": [[17, "DEERSequence", false], [137, "DEERSequence", false]], "deersequence (class in autodeer)": [[122, "autodeer.DEERSequence", false]], "deersequence (class in autodeer.sequences)": [[146, "autodeer.sequences.DEERSequence", false]], "def_file_str (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.def_file_str", false]], "def_file_str (pulsespel attribute)": [[99, "PulseSpel.def_file_str", false]], "delay (built-in class)": [[19, "Delay", false], [124, "Delay", false]], "delay (class in autodeer)": [[122, "autodeer.Delay", false], [122, "id141", false]], "delay (class in autodeer.pulses)": [[132, "autodeer.pulses.Delay", false]], "description (autodeer.classes.parameter attribute)": [[61, "autodeer.classes.Parameter.description", false]], "description (autodeer.criteria attribute)": [[122, "autodeer.Criteria.description", false]], "description (autodeer.criteria.criteria attribute)": [[67, "autodeer.criteria.Criteria.description", false]], "description (autodeer.parameter attribute)": [[122, "autodeer.Parameter.description", false], [122, "id20", false], [122, "id87", false]], "description (criteria attribute)": [[15, "Criteria.description", false], [63, "Criteria.description", false]], "description (parameter attribute)": [[34, "Parameter.description", false], [60, "Parameter.description", false]], "det_frq (autodeer.hardware.xepr_experiments.deer attribute)": [[121, "autodeer.hardware.xepr_experiments.DEER.det_frq", false]], "det_frq (deer attribute)": [[117, "DEER.det_frq", false]], "detect_eseem() (in module autodeer)": [[122, "autodeer.detect_ESEEM", false]], "detect_eseem() (in module autodeer.relaxation)": [[42, "autodeer.Relaxation.detect_ESEEM", false]], "detection (built-in class)": [[20, "Detection", false], [125, "Detection", false]], "detection (class in autodeer)": [[122, "autodeer.Detection", false], [122, "id137", false]], "detection (class in autodeer.pulses)": [[132, "autodeer.pulses.Detection", false]], "determine_twt_split() (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.determine_TWT_split", false]], "dictformater (built-in class)": [[31, "DictFormater", false]], "dictformater (class in autodeer.logging)": [[33, "autodeer.Logging.DictFormater", false]], "dig_rate (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.dig_rate", false]], "dig_rate (eth_awg_interface attribute)": [[101, "ETH_awg_interface.dig_rate", false]], "digitally_upconvert() (in module autodeer.hardware.eth_awg_load)": [[103, "autodeer.hardware.ETH_awg_load.digitally_upconvert", false]], "dim (autodeer.carrpurcellsequence attribute)": [[122, "autodeer.CarrPurcellSequence.dim", false]], "dim (autodeer.classes.parameter property)": [[61, "autodeer.classes.Parameter.dim", false]], "dim (autodeer.parameter property)": [[122, "autodeer.Parameter.dim", false], [122, "id17", false], [122, "id84", false]], "dim (autodeer.sequences.carrpurcellsequence attribute)": [[146, "autodeer.sequences.CarrPurcellSequence.dim", false]], "dim (carrpurcellsequence attribute)": [[13, "CarrPurcellSequence.dim", false], [136, "CarrPurcellSequence.dim", false]], "dim (parameter property)": [[34, "Parameter.dim", false], [60, "Parameter.dim", false]], "dims (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.dims", false]], "dims (pulsespel attribute)": [[99, "PulseSpel.dims", false]], "dl_params (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.DL_params", false]], "dl_params (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.DL_params", false]], "dl_params (autodeer.gui.quickdeer.deerplot attribute)": [[88, "autodeer.gui.quickdeer.DEERplot.DL_params", false]], "dl_params (autodeerui attribute)": [[73, "autoDEERUI.DL_params", false], [82, "autoDEERUI.DL_params", false]], "dl_params (deerplot attribute)": [[87, "DEERplot.DL_params", false]], "draw() (autodeer.reporter.svgflowable method)": [[135, "autodeer.reporter.SvgFlowable.draw", false]], "draw() (svgflowable method)": [[134, "SvgFlowable.draw", false]], "drawing (autodeer.reporter.svgflowable attribute)": [[135, "autodeer.reporter.SvgFlowable.drawing", false]], "drawing (svgflowable attribute)": [[134, "SvgFlowable.drawing", false]], "dt (autodeer.deersequence attribute)": [[122, "autodeer.DEERSequence.dt", false]], "dt (autodeer.sequences.deersequence attribute)": [[146, "autodeer.sequences.DEERSequence.dt", false]], "dt (deersequence attribute)": [[17, "DEERSequence.dt", false], [137, "DEERSequence.dt", false]], "dummy_api (built-in class)": [[108, "dummy_api", false]], "dummy_api (class in autodeer.hardware.dummy_xepr)": [[115, "autodeer.hardware.dummy_xepr.dummy_api", false]], "dummy_cur_exp (built-in class)": [[109, "dummy_cur_exp", false]], "dummy_cur_exp (class in autodeer.hardware.dummy_xepr)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp", false]], "dummy_dataset (built-in class)": [[110, "dummy_dataset", false]], "dummy_dataset (class in autodeer.hardware.dummy_xepr)": [[115, "autodeer.hardware.dummy_xepr.dummy_dataset", false]], "dummy_hidden (built-in class)": [[111, "dummy_hidden", false]], "dummy_hidden (class in autodeer.hardware.dummy_xepr)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden", false]], "dummy_param (built-in class)": [[112, "dummy_param", false]], "dummy_param (class in autodeer.hardware.dummy_xepr)": [[115, "autodeer.hardware.dummy_xepr.dummy_param", false]], "dummy_xepr (built-in class)": [[113, "dummy_xepr", false]], "dummy_xepr (class in autodeer.hardware.dummy_xepr)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr", false]], "dummy_xepr.xeprcmds (built-in class)": [[113, "dummy_xepr.XeprCmds", false]], "dummy_xepr.xeprcmds (class in autodeer.hardware.dummy_xepr)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds", false]], "dummyinterface (built-in class)": [[106, "dummyInterface", false]], "dummyinterface (class in autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy.dummyInterface", false]], "eldortune (built-in class)": [[118, "ELDORtune", false]], "eldortune (class in autodeer.hardware.xepr_experiments)": [[121, "autodeer.hardware.xepr_experiments.ELDORtune", false]], "eldortune() (in module autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU.ELDORtune", false]], "emit() (autodeer.logging.qtloghandler method)": [[33, "autodeer.Logging.QtLogHandler.emit", false]], "emit() (qtloghandler method)": [[32, "QtLogHandler.emit", false]], "end_signal (autodeer.criteria attribute)": [[122, "autodeer.Criteria.end_signal", false]], "end_signal (autodeer.criteria.criteria attribute)": [[67, "autodeer.criteria.Criteria.end_signal", false]], "end_signal (criteria attribute)": [[15, "Criteria.end_signal", false], [63, "Criteria.end_signal", false]], "endtimecriteria (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.EndTimeCriteria", false]], "endtimecriteria (autodeerworker attribute)": [[75, "autoDEERWorker.EndTimeCriteria", false]], "epraccessor (built-in class)": [[68, "EPRAccessor", false]], "epraccessor (class in autodeer.dataset)": [[69, "autodeer.dataset.EPRAccessor", false]], "eprload() (in module autodeer.tools)": [[147, "autodeer.tools.eprload", false]], "erot() (in module autodeer.fieldsweep)": [[23, "autodeer.FieldSweep.erot", false]], "error (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.error", false]], "error (autodeer.gui.main.workersignals attribute)": [[83, "autodeer.gui.main.WorkerSignals.error", false]], "error (autodeer.gui.tools.workersignals attribute)": [[92, "autodeer.gui.tools.WorkerSignals.error", false]], "error (autodeer.gui.workersignals attribute)": [[77, "autodeer.gui.WorkerSignals.error", false]], "error (autodeersignals attribute)": [[74, "autoDEERSignals.error", false]], "error (workersignals attribute)": [[71, "WorkerSignals.error", false], [81, "WorkerSignals.error", false], [91, "WorkerSignals.error", false]], "eseem (autodeer.deersequence attribute)": [[122, "autodeer.DEERSequence.ESEEM", false]], "eseem (autodeer.sequences.deersequence attribute)": [[146, "autodeer.sequences.DEERSequence.ESEEM", false]], "eseem (deersequence attribute)": [[17, "DEERSequence.ESEEM", false], [137, "DEERSequence.ESEEM", false]], "estimated_snr() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.estimated_snr", false]], "estimated_snr() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.estimated_snr", false]], "eth_awg_interface (built-in class)": [[101, "ETH_awg_interface", false]], "eth_awg_interface (class in autodeer.hardware.eth_awg)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface", false]], "events (autodeer.hardware.bruker_tools.psparvar attribute)": [[100, "autodeer.hardware.Bruker_tools.PSparvar.events", false]], "events (psparvar attribute)": [[98, "PSparvar.events", false]], "evolution() (autodeer.sequence method)": [[122, "autodeer.Sequence.evolution", false], [122, "id59", false]], "evolution() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence.evolution", false]], "evolution() (sequence method)": [[51, "Sequence.evolution", false], [143, "Sequence.evolution", false]], "exciteprofile() (autodeer.pulse method)": [[122, "autodeer.Pulse.exciteprofile", false], [122, "id125", false]], "exciteprofile() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse.exciteprofile", false]], "exciteprofile() (pulse method)": [[35, "Pulse.exciteprofile", false], [129, "Pulse.exciteprofile", false]], "exp_file_str (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.exp_file_str", false]], "exp_file_str (pulsespel attribute)": [[99, "PulseSpel.exp_file_str", false]], "eyekron() (in module autodeer.fieldsweep)": [[23, "autodeer.FieldSweep.eyekron", false]], "f_lims (autodeer.resonatorprofileanalysis attribute)": [[122, "autodeer.ResonatorProfileAnalysis.f_lims", false]], "f_lims (autodeer.respro.resonatorprofileanalysis attribute)": [[47, "autodeer.ResPro.ResonatorProfileAnalysis.f_lims", false]], "f_lims (resonatorprofileanalysis attribute)": [[46, "ResonatorProfileAnalysis.f_lims", false], [48, "ResonatorProfileAnalysis.f_lims", false]], "fft (autodeer.dataset.epraccessor property)": [[69, "autodeer.dataset.EPRAccessor.fft", false]], "fft (epraccessor property)": [[68, "EPRAccessor.fft", false]], "fieldsweep_fit() (in module autodeer.gui.main)": [[83, "autodeer.gui.main.fieldsweep_fit", false]], "fieldsweepanalysis (built-in class)": [[21, "FieldSweepAnalysis", false], [24, "FieldSweepAnalysis", false]], "fieldsweepanalysis (class in autodeer)": [[122, "autodeer.FieldSweepAnalysis", false]], "fieldsweepanalysis (class in autodeer.fieldsweep)": [[23, "autodeer.FieldSweep.FieldSweepAnalysis", false]], "fieldsweepsequence (built-in class)": [[25, "FieldSweepSequence", false], [138, "FieldSweepSequence", false]], "fieldsweepsequence (class in autodeer)": [[122, "autodeer.FieldSweepSequence", false]], "fieldsweepsequence (class in autodeer.sequences)": [[146, "autodeer.sequences.FieldSweepSequence", false]], "fill_table() (in module autodeer.gui)": [[77, "autodeer.gui.fill_table", false]], "fill_table() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.fill_table", false]], "find_cur_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_cur_exp", false]], "find_cur_exp() (xeprapilink method)": [[104, "XeprAPILink.find_cur_exp", false]], "find_hidden() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_hidden", false]], "find_hidden() (xeprapilink method)": [[104, "XeprAPILink.find_hidden", false]], "find_longest_pulse() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.find_longest_pulse", false]], "find_max() (autodeer.fieldsweep.fieldsweepanalysis method)": [[23, "autodeer.FieldSweep.FieldSweepAnalysis.find_max", false]], "find_max() (autodeer.fieldsweepanalysis method)": [[122, "autodeer.FieldSweepAnalysis.find_max", false]], "find_max() (fieldsweepanalysis method)": [[21, "FieldSweepAnalysis.find_max", false], [24, "FieldSweepAnalysis.find_max", false]], "find_max_pulse_length() (in module autodeer.hardware.eth_awg_load)": [[103, "autodeer.hardware.ETH_awg_load.find_max_pulse_length", false]], "find_min() (autodeer.hardware.xepr_experiments.eldortune method)": [[121, "autodeer.hardware.xepr_experiments.ELDORtune.find_min", false]], "find_min() (eldortune method)": [[118, "ELDORtune.find_min", false]], "find_optimal() (autodeer.carrpurcellanalysis method)": [[122, "autodeer.CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (autodeer.refocusedecho2danalysis method)": [[122, "autodeer.RefocusedEcho2DAnalysis.find_optimal", false]], "find_optimal() (autodeer.relaxation.carrpurcellanalysis method)": [[42, "autodeer.Relaxation.CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (autodeer.relaxation.refocusedecho2danalysis method)": [[42, "autodeer.Relaxation.RefocusedEcho2DAnalysis.find_optimal", false]], "find_optimal() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.find_optimal", false], [39, "CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (refocusedecho2danalysis method)": [[37, "RefocusedEcho2DAnalysis.find_optimal", false], [40, "RefocusedEcho2DAnalysis.find_optimal", false]], "find_xepr() (autodeer.hardware.dummy_xepr.dummy_api method)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.find_Xepr", false]], "find_xepr() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_Xepr", false]], "find_xepr() (dummy_api method)": [[108, "dummy_api.find_Xepr", false]], "find_xepr() (xeprapilink method)": [[104, "XeprAPILink.find_Xepr", false]], "finished (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.finished", false]], "finished (autodeer.gui.main.workersignals attribute)": [[83, "autodeer.gui.main.WorkerSignals.finished", false]], "finished (autodeer.gui.tools.workersignals attribute)": [[92, "autodeer.gui.tools.WorkerSignals.finished", false]], "finished (autodeer.gui.workersignals attribute)": [[77, "autodeer.gui.WorkerSignals.finished", false]], "finished (autodeersignals attribute)": [[74, "autoDEERSignals.finished", false]], "finished (workersignals attribute)": [[71, "WorkerSignals.finished", false], [81, "WorkerSignals.finished", false], [91, "WorkerSignals.finished", false]], "finished_signal (autodeer.gui.modetune.get_dataworker attribute)": [[86, "autodeer.gui.modetune.get_dataWorker.finished_signal", false]], "finished_signal (get_dataworker attribute)": [[85, "get_dataWorker.finished_signal", false]], "fit() (autodeer.carrpurcellanalysis method)": [[122, "autodeer.CarrPurcellAnalysis.fit", false]], "fit() (autodeer.fieldsweep.fieldsweepanalysis method)": [[23, "autodeer.FieldSweep.FieldSweepAnalysis.fit", false]], "fit() (autodeer.fieldsweepanalysis method)": [[122, "autodeer.FieldSweepAnalysis.fit", false]], "fit() (autodeer.relaxation.carrpurcellanalysis method)": [[42, "autodeer.Relaxation.CarrPurcellAnalysis.fit", false]], "fit() (autodeer.relaxation.reptimeanalysis method)": [[42, "autodeer.Relaxation.ReptimeAnalysis.fit", false]], "fit() (autodeer.reptimeanalysis method)": [[122, "autodeer.ReptimeAnalysis.fit", false]], "fit() (autodeer.resonatorprofileanalysis method)": [[122, "autodeer.ResonatorProfileAnalysis.fit", false]], "fit() (autodeer.respro.resonatorprofileanalysis method)": [[47, "autodeer.ResPro.ResonatorProfileAnalysis.fit", false]], "fit() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.fit", false], [39, "CarrPurcellAnalysis.fit", false]], "fit() (fieldsweepanalysis method)": [[21, "FieldSweepAnalysis.fit", false], [24, "FieldSweepAnalysis.fit", false]], "fit() (reptimeanalysis method)": [[41, "ReptimeAnalysis.fit", false], [44, "ReptimeAnalysis.fit", false]], "fit() (resonatorprofileanalysis method)": [[46, "ResonatorProfileAnalysis.fit", false], [48, "ResonatorProfileAnalysis.fit", false]], "five_pulse() (autodeer.deersequence method)": [[122, "autodeer.DEERSequence.five_pulse", false]], "five_pulse() (autodeer.sequences.deersequence method)": [[146, "autodeer.sequences.DEERSequence.five_pulse", false]], "five_pulse() (deersequence method)": [[17, "DEERSequence.five_pulse", false], [137, "DEERSequence.five_pulse", false]], "floor() (in module autodeer.respro)": [[47, "autodeer.ResPro.floor", false]], "fn (autodeer.gui.main.worker attribute)": [[83, "autodeer.gui.main.Worker.fn", false]], "fn (autodeer.gui.tools.worker attribute)": [[92, "autodeer.gui.tools.Worker.fn", false]], "fn (autodeer.gui.worker attribute)": [[77, "autodeer.gui.Worker.fn", false]], "fn (worker attribute)": [[70, "Worker.fn", false], [80, "Worker.fn", false], [90, "Worker.fn", false]], "footer() (autodeer.reporter method)": [[122, "autodeer.Reporter.footer", false]], "footer() (autodeer.reporter.reporter method)": [[135, "autodeer.reporter.Reporter.footer", false]], "footer() (reporter method)": [[43, "Reporter.footer", false], [133, "Reporter.footer", false]], "format() (autodeer.logging.dictformater method)": [[33, "autodeer.Logging.DictFormater.format", false]], "format() (dictformater method)": [[31, "DictFormater.format", false]], "four_pulse() (autodeer.deersequence method)": [[122, "autodeer.DEERSequence.four_pulse", false]], "four_pulse() (autodeer.sequences.deersequence method)": [[146, "autodeer.sequences.DEERSequence.four_pulse", false]], "four_pulse() (deersequence method)": [[17, "DEERSequence.four_pulse", false], [137, "DEERSequence.four_pulse", false]], "freq (autodeer.detection attribute)": [[122, "autodeer.Detection.freq", false], [122, "id139", false]], "freq (autodeer.gaussianpulse attribute)": [[122, "autodeer.GaussianPulse.freq", false]], "freq (autodeer.pulses.detection attribute)": [[132, "autodeer.pulses.Detection.freq", false]], "freq (autodeer.pulses.gaussianpulse attribute)": [[132, "autodeer.pulses.GaussianPulse.freq", false]], "freq (autodeer.pulses.rectpulse attribute)": [[132, "autodeer.pulses.RectPulse.freq", false]], "freq (autodeer.pulses.sincpulse attribute)": [[132, "autodeer.pulses.SincPulse.freq", false]], "freq (autodeer.rectpulse attribute)": [[122, "autodeer.RectPulse.freq", false], [122, "id146", false]], "freq (autodeer.sincpulse attribute)": [[122, "autodeer.SincPulse.freq", false]], "freq (detection attribute)": [[20, "Detection.freq", false], [125, "Detection.freq", false]], "freq (gaussianpulse attribute)": [[27, "GaussianPulse.freq", false], [127, "GaussianPulse.freq", false]], "freq (rectpulse attribute)": [[36, "RectPulse.freq", false], [130, "RectPulse.freq", false]], "freq (sincpulse attribute)": [[52, "SincPulse.freq", false], [131, "SincPulse.freq", false]], "frequencymon (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.FrequencyMon", false]], "frequencymon (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.FrequencyMon", false]], "frequencysweptpulse (built-in class)": [[26, "FrequencySweptPulse", false], [126, "FrequencySweptPulse", false]], "frequencysweptpulse (class in autodeer)": [[122, "autodeer.FrequencySweptPulse", false]], "frequencysweptpulse (class in autodeer.pulses)": [[132, "autodeer.pulses.FrequencySweptPulse", false]], "fsweep_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.fsweep_result", false]], "fsweep_result (autodeersignals attribute)": [[74, "autoDEERSignals.fsweep_result", false]], "fsweep_toolbar() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.fsweep_toolbar", false]], "fsweep_toolbar() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.fsweep_toolbar", false]], "fsweep_toolbar() (autodeerui method)": [[73, "autoDEERUI.fsweep_toolbar", false], [82, "autoDEERUI.fsweep_toolbar", false]], "ftacqmodeslct (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.FTAcqModeSlct", false]], "ftacqmodeslct (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.FTAcqModeSlct", false]], "func() (autodeer.chirppulse method)": [[122, "autodeer.ChirpPulse.func", false]], "func() (autodeer.gaussianpulse method)": [[122, "autodeer.GaussianPulse.func", false]], "func() (autodeer.hspulse method)": [[122, "autodeer.HSPulse.func", false]], "func() (autodeer.pulses.chirppulse method)": [[132, "autodeer.pulses.ChirpPulse.func", false]], "func() (autodeer.pulses.gaussianpulse method)": [[132, "autodeer.pulses.GaussianPulse.func", false]], "func() (autodeer.pulses.hspulse method)": [[132, "autodeer.pulses.HSPulse.func", false]], "func() (autodeer.pulses.rectpulse method)": [[132, "autodeer.pulses.RectPulse.func", false]], "func() (autodeer.pulses.sincpulse method)": [[132, "autodeer.pulses.SincPulse.func", false]], "func() (autodeer.rectpulse method)": [[122, "autodeer.RectPulse.func", false], [122, "id147", false]], "func() (autodeer.sincpulse method)": [[122, "autodeer.SincPulse.func", false]], "func() (chirppulse method)": [[14, "ChirpPulse.func", false], [123, "ChirpPulse.func", false]], "func() (gaussianpulse method)": [[27, "GaussianPulse.func", false], [127, "GaussianPulse.func", false]], "func() (hspulse method)": [[28, "HSPulse.func", false], [128, "HSPulse.func", false]], "func() (rectpulse method)": [[36, "RectPulse.func", false], [130, "RectPulse.func", false]], "func() (sincpulse method)": [[52, "SincPulse.func", false], [131, "SincPulse.func", false]], "functional() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.functional", false]], "fwhm (autodeer.gaussianpulse attribute)": [[122, "autodeer.GaussianPulse.FWHM", false]], "fwhm (autodeer.pulses.gaussianpulse attribute)": [[132, "autodeer.pulses.GaussianPulse.FWHM", false]], "fwhm (gaussianpulse attribute)": [[27, "GaussianPulse.FWHM", false], [127, "GaussianPulse.FWHM", false]], "fwidth (autodeer.resonatorprofilesequence attribute)": [[122, "autodeer.ResonatorProfileSequence.fwidth", false]], "fwidth (autodeer.sequences.resonatorprofilesequence attribute)": [[146, "autodeer.sequences.ResonatorProfileSequence.fwidth", false]], "fwidth (resonatorprofilesequence attribute)": [[49, "ResonatorProfileSequence.fwidth", false], [142, "ResonatorProfileSequence.fwidth", false]], "g (autodeer.fieldsweep.spinsystem attribute)": [[23, "autodeer.FieldSweep.SpinSystem.g", false]], "g (spinsystem attribute)": [[22, "SpinSystem.g", false]], "gaussianpulse (built-in class)": [[27, "GaussianPulse", false], [127, "GaussianPulse", false]], "gaussianpulse (class in autodeer)": [[122, "autodeer.GaussianPulse", false]], "gaussianpulse (class in autodeer.pulses)": [[132, "autodeer.pulses.GaussianPulse", false]], "gcd() (in module autodeer)": [[122, "autodeer.gcd", false]], "gcd() (in module autodeer.utils)": [[148, "autodeer.utils.gcd", false]], "get_acquisition_mode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_Acquisition_mode", false]], "get_acquisition_mode() (xeprapilink method)": [[104, "XeprAPILink.get_Acquisition_mode", false]], "get_all_axes() (in module autodeer.dataset)": [[69, "autodeer.dataset.get_all_axes", false]], "get_all_fixed_param() (in module autodeer.dataset)": [[69, "autodeer.dataset.get_all_fixed_param", false]], "get_arange() (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.get_arange", false]], "get_attenuator() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_attenuator", false]], "get_attenuator() (xeprapilink method)": [[104, "XeprAPILink.get_attenuator", false]], "get_axis() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter.get_axis", false]], "get_axis() (autodeer.parameter method)": [[122, "autodeer.Parameter.get_axis", false], [122, "id25", false], [122, "id92", false]], "get_axis() (parameter method)": [[34, "Parameter.get_axis", false], [60, "Parameter.get_axis", false]], "get_config_file() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_config_file", false]], "get_config_file() (xeprapilink method)": [[104, "XeprAPILink.get_config_file", false]], "get_counterfreq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_counterfreq", false]], "get_counterfreq() (xeprapilink method)": [[104, "XeprAPILink.get_counterfreq", false]], "get_dataworker (built-in class)": [[85, "get_dataWorker", false]], "get_dataworker (class in autodeer.gui.modetune)": [[86, "autodeer.gui.modetune.get_dataWorker", false]], "get_eldor_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_ELDOR_freq", false]], "get_eldor_freq() (xeprapilink method)": [[104, "XeprAPILink.get_ELDOR_freq", false]], "get_field() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_field", false]], "get_field() (xeprapilink method)": [[104, "XeprAPILink.get_field", false]], "get_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_freq", false]], "get_freq() (xeprapilink method)": [[104, "XeprAPILink.get_freq", false]], "get_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_hidden_param", false]], "get_hidden_param() (xeprapilink method)": [[104, "XeprAPILink.get_hidden_param", false]], "get_mw_amp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_MW_amp", false]], "get_mw_amp() (xeprapilink method)": [[104, "XeprAPILink.get_MW_amp", false]], "get_nutations() (in module autodeer.hardware.xepr_experiments)": [[121, "autodeer.hardware.xepr_experiments.get_nutations", false]], "get_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_param", false]], "get_param() (xeprapilink method)": [[104, "XeprAPILink.get_param", false]], "get_phase() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_phase", false]], "get_phase() (xeprapilink method)": [[104, "XeprAPILink.get_phase", false]], "get_phasecycle() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PhaseCycle", false]], "get_phasecycle() (xeprapilink method)": [[104, "XeprAPILink.get_PhaseCycle", false]], "get_pulsespel_def_filename() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_def_filename", false]], "get_pulsespel_def_filename() (xeprapilink method)": [[104, "XeprAPILink.get_PulseSpel_def_filename", false]], "get_pulsespel_def_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_def_filepath", false]], "get_pulsespel_def_filepath() (xeprapilink method)": [[104, "XeprAPILink.get_PulseSpel_def_filepath", false]], "get_pulsespel_exp_filename() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_exp_filename", false]], "get_pulsespel_exp_filename() (xeprapilink method)": [[104, "XeprAPILink.get_PulseSpel_exp_filename", false]], "get_pulsespel_exp_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_exp_filepath", false]], "get_pulsespel_exp_filepath() (xeprapilink method)": [[104, "XeprAPILink.get_PulseSpel_exp_filepath", false]], "get_pulsespel_experiment() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_experiment", false]], "get_pulsespel_experiment() (xeprapilink method)": [[104, "XeprAPILink.get_PulseSpel_experiment", false]], "get_pulsespel_phase_cycling() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_phase_cycling", false]], "get_pulsespel_phase_cycling() (xeprapilink method)": [[104, "XeprAPILink.get_PulseSpel_phase_cycling", false]], "get_replacemode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_ReplaceMode", false]], "get_replacemode() (xeprapilink method)": [[104, "XeprAPILink.get_ReplaceMode", false]], "get_sequence_rows() (in module autodeer.gui)": [[77, "autodeer.gui.get_sequence_rows", false]], "get_sequence_rows() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.get_sequence_rows", false]], "get_spec_config() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_spec_config", false]], "get_spec_config() (xeprapilink method)": [[104, "XeprAPILink.get_spec_config", false]], "get_specjet_data() (in module autodeer.hardware.bruker_awg)": [[94, "autodeer.hardware.Bruker_AWG.get_specjet_data", false]], "get_specjet_data() (in module autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU.get_specjet_data", false]], "get_sweep_width() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_sweep_width", false]], "get_sweep_width() (xeprapilink method)": [[104, "XeprAPILink.get_sweep_width", false]], "get_vexp() (in module autodeer.gui.quickdeer)": [[88, "autodeer.gui.quickdeer.get_Vexp", false]], "get_video_bandwidth() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_video_bandwidth", false]], "get_video_bandwidth() (xeprapilink method)": [[104, "XeprAPILink.get_video_bandwidth", false]], "get_video_gain() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_video_gain", false]], "get_video_gain() (xeprapilink method)": [[104, "XeprAPILink.get_video_gain", false]], "getcistring() (in module autodeer.gui)": [[77, "autodeer.gui.getCIstring", false]], "getcistring() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.getCIstring", false]], "getparam() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.getParam", false]], "getparam() (autodeer.hardware.dummy_xepr.dummy_hidden method)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden.getParam", false]], "getparam() (dummy_cur_exp method)": [[109, "dummy_cur_exp.getParam", false]], "getparam() (dummy_hidden method)": [[111, "dummy_hidden.getParam", false]], "gnscale (autodeer.fieldsweep.spinsystem attribute)": [[23, "autodeer.FieldSweep.SpinSystem.gnscale", false]], "gnscale (spinsystem attribute)": [[22, "SpinSystem.gnscale", false]], "gyro (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.gyro", false]], "gyro (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.gyro", false]], "gyro (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.gyro", false]], "gyro (autodeer.resonatorprofilesequence attribute)": [[122, "autodeer.ResonatorProfileSequence.gyro", false]], "gyro (autodeer.sequences.resonatorprofilesequence attribute)": [[146, "autodeer.sequences.ResonatorProfileSequence.gyro", false]], "gyro (autodeerui attribute)": [[73, "autoDEERUI.gyro", false], [82, "autoDEERUI.gyro", false]], "gyro (autodeerworker attribute)": [[75, "autoDEERWorker.gyro", false]], "gyro (resonatorprofilesequence attribute)": [[49, "ResonatorProfileSequence.gyro", false], [142, "ResonatorProfileSequence.gyro", false]], "hahnechosequence (built-in class)": [[29, "HahnEchoSequence", false], [139, "HahnEchoSequence", false]], "hahnechosequence (class in autodeer)": [[122, "autodeer.HahnEchoSequence", false]], "hahnechosequence (class in autodeer.sequences)": [[146, "autodeer.sequences.HahnEchoSequence", false]], "ham() (in module autodeer.fieldsweep)": [[23, "autodeer.FieldSweep.ham", false]], "ham_ez() (in module autodeer.fieldsweep)": [[23, "autodeer.FieldSweep.ham_ez", false]], "ham_nz() (in module autodeer.fieldsweep)": [[23, "autodeer.FieldSweep.ham_nz", false]], "hardware_meta (in module autodeer.hardware.dummy_xepr)": [[115, "autodeer.hardware.dummy_xepr.hardware_meta", false]], "hardware_wait (autodeer.hardware.xepr_experiments.eldortune attribute)": [[121, "autodeer.hardware.xepr_experiments.ELDORtune.hardware_wait", false]], "hardware_wait (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[121, "autodeer.hardware.xepr_experiments.MPFUtune.hardware_wait", false]], "hardware_wait (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[121, "autodeer.hardware.xepr_experiments.PulseProfile.hardware_wait", false]], "hardware_wait (eldortune attribute)": [[118, "ELDORtune.hardware_wait", false]], "hardware_wait (mpfutune attribute)": [[119, "MPFUtune.hardware_wait", false]], "hardware_wait (pulseprofile attribute)": [[120, "PulseProfile.hardware_wait", false]], "header (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.header", false]], "header() (autodeer.reporter method)": [[122, "autodeer.Reporter.header", false]], "header() (autodeer.reporter.reporter method)": [[135, "autodeer.reporter.Reporter.header", false]], "header() (reporter method)": [[43, "Reporter.header", false], [133, "Reporter.header", false]], "height (autodeer.reporter.svgflowable attribute)": [[135, "autodeer.reporter.SvgFlowable.height", false]], "height (svgflowable attribute)": [[134, "SvgFlowable.height", false]], "hidden (autodeer.hardware.dummy_xepr.dummy_xepr attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.hidden", false]], "hidden (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.hidden", false]], "hidden (dummy_xepr attribute)": [[113, "dummy_xepr.hidden", false]], "hidden (xeprapilink attribute)": [[104, "XeprAPILink.hidden", false]], "hspulse (built-in class)": [[28, "HSPulse", false], [128, "HSPulse", false]], "hspulse (class in autodeer)": [[122, "autodeer.HSPulse", false]], "hspulse (class in autodeer.pulses)": [[132, "autodeer.pulses.HSPulse", false]], "hw_log (in module autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU.hw_log", false]], "hw_log (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.hw_log", false]], "hw_log (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy.hw_log", false]], "hw_log (in module autodeer.hardware.dummy_xepr)": [[115, "autodeer.hardware.dummy_xepr.hw_log", false]], "hw_log (in module autodeer.hardware.xeprapi_link)": [[105, "autodeer.hardware.XeprAPI_link.hw_log", false]], "hybrid (autodeer.hardware.xepr_experiments.deer attribute)": [[121, "autodeer.hardware.xepr_experiments.DEER.hybrid", false]], "hybrid (deer attribute)": [[117, "DEER.hybrid", false]], "i (autodeer.fieldsweep.spinsystem attribute)": [[23, "autodeer.FieldSweep.SpinSystem.I", false]], "i (spinsystem attribute)": [[22, "SpinSystem.I", false]], "identifyroi() (in module autodeer)": [[122, "autodeer.IdentifyROI", false]], "identifyroi() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.IdentifyROI", false]], "ifgain (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.IFgain", false]], "ifgain (eth_awg_interface attribute)": [[101, "ETH_awg_interface.IFgain", false]], "ifgain_options (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.IFgain_options", false]], "ifgain_options (eth_awg_interface attribute)": [[101, "ETH_awg_interface.IFgain_options", false]], "import_data() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.import_data", false]], "import_data() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.import_data", false]], "import_dataset() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.import_dataset", false]], "import_dataset() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.import_dataset", false]], "initialise_deer_settings() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.initialise_deer_settings", false]], "initialise_deer_settings() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.initialise_deer_settings", false]], "initialise_deer_settings() (autodeerui method)": [[73, "autoDEERUI.initialise_deer_settings", false], [82, "autoDEERUI.initialise_deer_settings", false]], "interface (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.interface", false]], "interface (autodeer.gui.modetune.get_dataworker attribute)": [[86, "autodeer.gui.modetune.get_dataWorker.interface", false]], "interface (autodeer.gui.modetune.modetune attribute)": [[86, "autodeer.gui.modetune.ModeTune.interface", false]], "interface (autodeerworker attribute)": [[75, "autoDEERWorker.interface", false]], "interface (built-in class)": [[30, "Interface", false], [59, "Interface", false]], "interface (class in autodeer)": [[122, "autodeer.Interface", false]], "interface (class in autodeer.classes)": [[61, "autodeer.classes.Interface", false]], "interface (get_dataworker attribute)": [[85, "get_dataWorker.interface", false]], "interface (modetune attribute)": [[84, "ModeTune.interface", false]], "invert_signal() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.invert_signal", false]], "invert_signal() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.invert_signal", false]], "is_exp_running() (autodeer.hardware.dummy_xepr.dummy_api method)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.is_exp_running", false]], "is_exp_running() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.is_exp_running", false]], "is_exp_running() (dummy_api method)": [[108, "dummy_api.is_exp_running", false]], "is_exp_running() (xeprapilink method)": [[104, "XeprAPILink.is_exp_running", false]], "is_static() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter.is_static", false]], "is_static() (autodeer.parameter method)": [[122, "autodeer.Parameter.is_static", false], [122, "id27", false], [122, "id94", false]], "is_static() (autodeer.pulse method)": [[122, "autodeer.Pulse.is_static", false], [122, "id120", false]], "is_static() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse.is_static", false]], "is_static() (parameter method)": [[34, "Parameter.is_static", false], [60, "Parameter.is_static", false]], "is_static() (pulse method)": [[35, "Pulse.is_static", false], [129, "Pulse.is_static", false]], "isdelayfocused() (autodeer.pulse method)": [[122, "autodeer.Pulse.isDelayFocused", false], [122, "id121", false]], "isdelayfocused() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse.isDelayFocused", false]], "isdelayfocused() (autodeer.sequence method)": [[122, "autodeer.Sequence.isDelayFocused", false], [122, "id62", false]], "isdelayfocused() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence.isDelayFocused", false]], "isdelayfocused() (pulse method)": [[35, "Pulse.isDelayFocused", false], [129, "Pulse.isDelayFocused", false]], "isdelayfocused() (sequence method)": [[51, "Sequence.isDelayFocused", false], [143, "Sequence.isDelayFocused", false]], "ispulsefocused() (autodeer.pulse method)": [[122, "autodeer.Pulse.isPulseFocused", false], [122, "id122", false]], "ispulsefocused() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse.isPulseFocused", false]], "ispulsefocused() (autodeer.sequence method)": [[122, "autodeer.Sequence.isPulseFocused", false], [122, "id61", false]], "ispulsefocused() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence.isPulseFocused", false]], "ispulsefocused() (pulse method)": [[35, "Pulse.isPulseFocused", false], [129, "Pulse.isPulseFocused", false]], "ispulsefocused() (sequence method)": [[51, "Sequence.isPulseFocused", false], [143, "Sequence.isPulseFocused", false]], "isrunning() (autodeer.classes.interface method)": [[61, "autodeer.classes.Interface.isrunning", false]], "isrunning() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.isrunning", false]], "isrunning() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.isrunning", false]], "isrunning() (autodeer.hardware.dummy.dummyinterface method)": [[107, "autodeer.hardware.dummy.dummyInterface.isrunning", false]], "isrunning() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.isrunning", false]], "isrunning() (autodeer.interface method)": [[122, "autodeer.Interface.isrunning", false]], "isrunning() (brukerawg method)": [[93, "BrukerAWG.isrunning", false]], "isrunning() (brukermpfu method)": [[95, "BrukerMPFU.isrunning", false]], "isrunning() (dummyinterface method)": [[106, "dummyInterface.isrunning", false]], "isrunning() (eth_awg_interface method)": [[101, "ETH_awg_interface.isrunning", false]], "isrunning() (interface method)": [[30, "Interface.isrunning", false], [59, "Interface.isrunning", false]], "kroneye() (in module autodeer.fieldsweep)": [[23, "autodeer.FieldSweep.kroneye", false]], "kwargs (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.kwargs", false]], "kwargs (autodeer.gui.main.worker attribute)": [[83, "autodeer.gui.main.Worker.kwargs", false]], "kwargs (autodeer.gui.tools.worker attribute)": [[92, "autodeer.gui.tools.Worker.kwargs", false]], "kwargs (autodeer.gui.worker attribute)": [[77, "autodeer.gui.Worker.kwargs", false]], "kwargs (autodeerworker attribute)": [[75, "autoDEERWorker.kwargs", false]], "kwargs (worker attribute)": [[70, "Worker.kwargs", false], [80, "Worker.kwargs", false], [90, "Worker.kwargs", false]], "launch() (autodeer.classes.interface method)": [[61, "autodeer.classes.Interface.launch", false]], "launch() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.launch", false]], "launch() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.launch", false]], "launch() (autodeer.hardware.dummy.dummyinterface method)": [[107, "autodeer.hardware.dummy.dummyInterface.launch", false]], "launch() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch", false]], "launch() (autodeer.interface method)": [[122, "autodeer.Interface.launch", false]], "launch() (brukerawg method)": [[93, "BrukerAWG.launch", false]], "launch() (brukermpfu method)": [[95, "BrukerMPFU.launch", false]], "launch() (dummyinterface method)": [[106, "dummyInterface.launch", false]], "launch() (eth_awg_interface method)": [[101, "ETH_awg_interface.launch", false]], "launch() (interface method)": [[30, "Interface.launch", false], [59, "Interface.launch", false]], "launch_long() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_long", false]], "launch_long() (eth_awg_interface method)": [[101, "ETH_awg_interface.launch_long", false]], "launch_normal() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_normal", false]], "launch_normal() (eth_awg_interface method)": [[101, "ETH_awg_interface.launch_normal", false]], "launch_withifgain() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_withIFGain", false]], "launch_withifgain() (eth_awg_interface method)": [[101, "ETH_awg_interface.launch_withIFGain", false]], "list_str_to_type() (in module autodeer.gui)": [[77, "autodeer.gui.list_str_to_type", false]], "list_str_to_type() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.list_str_to_type", false]], "lo (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.LO", false]], "lo (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.LO", false]], "lo (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.LO", false]], "lo (autodeer.sequence attribute)": [[122, "autodeer.Sequence.LO", false], [122, "id49", false]], "lo (autodeer.sequences.sequence attribute)": [[146, "autodeer.sequences.Sequence.LO", false]], "lo (autodeerui attribute)": [[73, "autoDEERUI.LO", false], [82, "autoDEERUI.LO", false]], "lo (autodeerworker attribute)": [[75, "autoDEERWorker.LO", false]], "lo (sequence attribute)": [[51, "Sequence.LO", false], [143, "Sequence.LO", false]], "load() (autodeer.classes.parameter class method)": [[61, "autodeer.classes.Parameter.load", false]], "load() (autodeer.parameter class method)": [[122, "autodeer.Parameter.load", false], [122, "id106", false], [122, "id39", false]], "load() (autodeer.pulse class method)": [[122, "autodeer.Pulse.load", false], [122, "id136", false]], "load() (autodeer.pulses.pulse class method)": [[132, "autodeer.pulses.Pulse.load", false]], "load() (autodeer.sequence class method)": [[122, "autodeer.Sequence.load", false], [122, "id74", false]], "load() (autodeer.sequences.sequence class method)": [[146, "autodeer.sequences.Sequence.load", false]], "load() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.load", false]], "load() (parameter class method)": [[34, "Parameter.load", false], [60, "Parameter.load", false]], "load() (pulse class method)": [[35, "Pulse.load", false], [129, "Pulse.load", false]], "load() (sequence class method)": [[51, "Sequence.load", false], [143, "Sequence.load", false]], "load() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.load", false]], "load_epr_file() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.load_epr_file", false]], "load_epr_file() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.load_epr_file", false]], "load_epr_file() (autodeerui method)": [[73, "autoDEERUI.load_epr_file", false], [82, "autoDEERUI.load_epr_file", false]], "load_epr_file() (in module autodeer.gui)": [[77, "autodeer.gui.load_epr_file", false]], "load_epr_file() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.load_epr_file", false]], "load_folder() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.load_folder", false]], "load_folder() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.load_folder", false]], "load_folder() (autodeerui method)": [[73, "autoDEERUI.load_folder", false], [82, "autoDEERUI.load_folder", false]], "load_spectrometer_config() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.load_spectrometer_config", false]], "load_spectrometer_config() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.load_spectrometer_config", false]], "load_spectrometer_config() (autodeerui method)": [[73, "autoDEERUI.load_spectrometer_config", false], [82, "autoDEERUI.load_spectrometer_config", false]], "log (autodeer.gui.log.logdialog attribute)": [[79, "autodeer.gui.log.LogDialog.log", false]], "log (in module autodeer)": [[122, "autodeer.log", false]], "log (in module autodeer.criteria)": [[67, "autodeer.criteria.log", false]], "log (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.log", false]], "log (in module autodeer.hardware.eth_awg)": [[102, "autodeer.hardware.ETH_awg.log", false]], "log (in module autodeer.tools)": [[147, "autodeer.tools.log", false]], "log (logdialog attribute)": [[78, "LogDialog.log", false]], "log_levels (autodeer.gui.log.logdialog attribute)": [[79, "autodeer.gui.log.LogDialog.log_levels", false]], "log_levels (logdialog attribute)": [[78, "LogDialog.log_levels", false]], "logdialog (built-in class)": [[78, "LogDialog", false]], "logdialog (class in autodeer.gui.log)": [[79, "autodeer.gui.log.LogDialog", false]], "longdeer (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.longDEER", false]], "longdeer (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.longDEER", false]], "longdeer (autodeerui attribute)": [[73, "autoDEERUI.longDEER", false], [82, "autoDEERUI.longDEER", false]], "longdeer_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.longdeer_result", false]], "longdeer_result (autodeersignals attribute)": [[74, "autoDEERSignals.longdeer_result", false]], "longdeer_update (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.longdeer_update", false]], "longdeer_update (autodeersignals attribute)": [[74, "autoDEERSignals.longdeer_update", false]], "match_filter_dc() (in module autodeer.hardware.eth_awg_load)": [[103, "autodeer.hardware.ETH_awg_load.match_filter_dc", false]], "max_tau (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.max_tau", false]], "max_tau (autodeerworker attribute)": [[75, "autoDEERWorker.max_tau", false]], "meta (autodeer.hardware.dummy_xepr.dummy_api attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.meta", false]], "meta (dummy_api attribute)": [[108, "dummy_api.meta", false]], "min_tp (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.Min_tp", false]], "min_tp (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.Min_tp", false]], "min_tp (autodeerui attribute)": [[73, "autoDEERUI.Min_tp", false], [82, "autoDEERUI.Min_tp", false]], "minbrxamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrXAmp", false]], "minbrxamp (dummy_hidden attribute)": [[111, "dummy_hidden.MinBrXAmp", false]], "minbrxphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrXPhase", false]], "minbrxphase (dummy_hidden attribute)": [[111, "dummy_hidden.MinBrXPhase", false]], "minbryamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrYAmp", false]], "minbryamp (dummy_hidden attribute)": [[111, "dummy_hidden.MinBrYAmp", false]], "minbryphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrYPhase", false]], "minbryphase (dummy_hidden attribute)": [[111, "dummy_hidden.MinBrYPhase", false]], "mnr_estimate() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.MNR_estimate", false]], "mode (autodeer.hardware.dummy.dummyinterface attribute)": [[107, "autodeer.hardware.dummy.dummyInterface.mode", false]], "mode (dummyinterface attribute)": [[106, "dummyInterface.mode", false]], "modetune (built-in class)": [[84, "ModeTune", false]], "modetune (class in autodeer.gui.modetune)": [[86, "autodeer.gui.modetune.ModeTune", false]], "module": [[18, "module-autodeer.DEER_analysis", false], [23, "module-autodeer.FieldSweep", false], [33, "module-autodeer.Logging", false], [42, "module-autodeer.Relaxation", false], [47, "module-autodeer.ResPro", false], [57, "module-autodeer.TwoD_Experiment", false], [58, "module-autodeer._version", false], [61, "module-autodeer.classes", false], [62, "module-autodeer.colors", false], [67, "module-autodeer.criteria", false], [69, "module-autodeer.dataset", false], [72, "module-autodeer.gui.__main__", false], [76, "module-autodeer.gui.autoDEER_worker", false], [77, "module-autodeer.gui", false], [79, "module-autodeer.gui.log", false], [83, "module-autodeer.gui.main", false], [86, "module-autodeer.gui.modetune", false], [88, "module-autodeer.gui.quickdeer", false], [89, "module-autodeer.gui.test_main", false], [92, "module-autodeer.gui.tools", false], [94, "module-autodeer.hardware.Bruker_AWG", false], [96, "module-autodeer.hardware.Bruker_MPFU", false], [100, "module-autodeer.hardware.Bruker_tools", false], [102, "module-autodeer.hardware.ETH_awg", false], [103, "module-autodeer.hardware.ETH_awg_load", false], [105, "module-autodeer.hardware.XeprAPI_link", false], [107, "module-autodeer.hardware.dummy", false], [115, "module-autodeer.hardware.dummy_xepr", false], [116, "module-autodeer.hardware", false], [121, "module-autodeer.hardware.xepr_experiments", false], [122, "module-autodeer", false], [132, "module-autodeer.pulses", false], [135, "module-autodeer.reporter", false], [146, "module-autodeer.sequences", false], [147, "module-autodeer.tools", false], [148, "module-autodeer.utils", false]], "module_dir (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.MODULE_DIR", false]], "module_dir (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.MODULE_DIR", false]], "module_dir (in module autodeer.hardware.xepr_experiments)": [[121, "autodeer.hardware.xepr_experiments.MODULE_DIR", false]], "mpfu (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.MPFU", false]], "mpfu (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.MPFU", false]], "mpfu (autodeer.hardware.xepr_experiments.deer attribute)": [[121, "autodeer.hardware.xepr_experiments.DEER.mpfu", false]], "mpfu (brukermpfu attribute)": [[95, "BrukerMPFU.MPFU", false]], "mpfu (deer attribute)": [[117, "DEER.mpfu", false]], "mpfu (pulsespel attribute)": [[99, "PulseSpel.MPFU", false]], "mpfutune (built-in class)": [[119, "MPFUtune", false]], "mpfutune (class in autodeer.hardware.xepr_experiments)": [[121, "autodeer.hardware.xepr_experiments.MPFUtune", false]], "mpfutune() (in module autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU.MPFUtune", false]], "mutex (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.mutex", false]], "mutex (autodeerworker attribute)": [[75, "autoDEERWorker.mutex", false]], "n (autodeer.carrpurcellsequence attribute)": [[122, "autodeer.CarrPurcellSequence.n", false]], "n (autodeer.sequences.carrpurcellsequence attribute)": [[146, "autodeer.sequences.CarrPurcellSequence.n", false]], "n (carrpurcellsequence attribute)": [[13, "CarrPurcellSequence.n", false], [136, "CarrPurcellSequence.n", false]], "n_files (autodeer.resonatorprofileanalysis attribute)": [[122, "autodeer.ResonatorProfileAnalysis.n_files", false]], "n_files (autodeer.respro.resonatorprofileanalysis attribute)": [[47, "autodeer.ResPro.ResonatorProfileAnalysis.n_files", false]], "n_files (resonatorprofileanalysis attribute)": [[46, "ResonatorProfileAnalysis.n_files", false], [48, "ResonatorProfileAnalysis.n_files", false]], "name (autodeer.classes.parameter attribute)": [[61, "autodeer.classes.Parameter.name", false]], "name (autodeer.criteria attribute)": [[122, "autodeer.Criteria.name", false]], "name (autodeer.criteria.criteria attribute)": [[67, "autodeer.criteria.Criteria.name", false]], "name (autodeer.fieldsweepsequence attribute)": [[122, "autodeer.FieldSweepSequence.name", false]], "name (autodeer.parameter attribute)": [[122, "autodeer.Parameter.name", false], [122, "id18", false], [122, "id85", false]], "name (autodeer.pulse attribute)": [[122, "autodeer.Pulse.name", false], [122, "id114", false]], "name (autodeer.pulses.pulse attribute)": [[132, "autodeer.pulses.Pulse.name", false]], "name (autodeer.reptimescan attribute)": [[122, "autodeer.ReptimeScan.name", false]], "name (autodeer.sequence attribute)": [[122, "autodeer.Sequence.name", false], [122, "id52", false]], "name (autodeer.sequences.fieldsweepsequence attribute)": [[146, "autodeer.sequences.FieldSweepSequence.name", false]], "name (autodeer.sequences.reptimescan attribute)": [[146, "autodeer.sequences.ReptimeScan.name", false]], "name (autodeer.sequences.sequence attribute)": [[146, "autodeer.sequences.Sequence.name", false]], "name (autodeer.sequences.t2relaxationsequence attribute)": [[146, "autodeer.sequences.T2RelaxationSequence.name", false]], "name (autodeer.t2relaxationsequence attribute)": [[122, "autodeer.T2RelaxationSequence.name", false]], "name (criteria attribute)": [[15, "Criteria.name", false], [63, "Criteria.name", false]], "name (fieldsweepsequence attribute)": [[25, "FieldSweepSequence.name", false], [138, "FieldSweepSequence.name", false]], "name (parameter attribute)": [[34, "Parameter.name", false], [60, "Parameter.name", false]], "name (pulse attribute)": [[35, "Pulse.name", false], [129, "Pulse.name", false]], "name (reptimescan attribute)": [[45, "ReptimeScan.name", false], [141, "ReptimeScan.name", false]], "name (sequence attribute)": [[51, "Sequence.name", false], [143, "Sequence.name", false]], "name (t2relaxationsequence attribute)": [[53, "T2RelaxationSequence.name", false], [144, "T2RelaxationSequence.name", false]], "nbscansdone (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.NbScansDone", false]], "nbscansdone (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.NbScansDone", false]], "nbscanstodo (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.NbScansToDo", false]], "nbscanstodo (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.NbScansToDo", false]], "ndeer_cp() (autodeer.deersequence method)": [[122, "autodeer.DEERSequence.nDEER_CP", false]], "ndeer_cp() (autodeer.sequences.deersequence method)": [[146, "autodeer.sequences.DEERSequence.nDEER_CP", false]], "ndeer_cp() (deersequence method)": [[17, "DEERSequence.nDEER_CP", false], [137, "DEERSequence.nDEER_CP", false]], "nelectrons (autodeer.fieldsweep.spinsystem attribute)": [[23, "autodeer.FieldSweep.SpinSystem.nElectrons", false]], "nelectrons (spinsystem attribute)": [[22, "SpinSystem.nElectrons", false]], "new_data() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.new_data", false]], "new_data() (autodeerworker method)": [[75, "autoDEERWorker.new_data", false]], "new_pulses() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.new_pulses", false]], "new_pulses() (autodeerworker method)": [[75, "autoDEERWorker.new_pulses", false]], "nnuclei (autodeer.fieldsweep.spinsystem attribute)": [[23, "autodeer.FieldSweep.SpinSystem.nNuclei", false]], "nnuclei (spinsystem attribute)": [[22, "SpinSystem.nNuclei", false]], "noise_frac (autodeer.twod_experiment.twodexperimentanalysis attribute)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.noise_frac", false]], "noise_frac (twodexperimentanalysis attribute)": [[56, "TwoDExperimentAnalysis.noise_frac", false]], "normalise (autodeer.dataset.epraccessor property)": [[69, "autodeer.dataset.EPRAccessor.normalise", false]], "normalise (epraccessor property)": [[68, "EPRAccessor.normalise", false]], "normalise_01() (in module autodeer)": [[122, "autodeer.normalise_01", false]], "normalise_01() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.normalise_01", false]], "nstates (autodeer.fieldsweep.spinsystem attribute)": [[23, "autodeer.FieldSweep.SpinSystem.nStates", false]], "nstates (spinsystem attribute)": [[22, "SpinSystem.nStates", false]], "num_pulses (autodeer.sequence attribute)": [[122, "autodeer.Sequence.num_pulses", false], [122, "id46", false]], "num_pulses (autodeer.sequences.sequence attribute)": [[146, "autodeer.sequences.Sequence.num_pulses", false]], "num_pulses (sequence attribute)": [[51, "Sequence.num_pulses", false], [143, "Sequence.num_pulses", false]], "o (autodeer.hardware.dummy_xepr.dummy_dataset attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_dataset.O", false]], "o (dummy_dataset attribute)": [[110, "dummy_dataset.O", false]], "optimal_slice_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.optimal_slice_plot", false]], "optimal_slice_plot() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.optimal_slice_plot", false]], "optimal_tau1() (autodeer.refocusedecho2danalysis method)": [[122, "autodeer.RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimal_tau1() (autodeer.relaxation.refocusedecho2danalysis method)": [[42, "autodeer.Relaxation.RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimal_tau1() (refocusedecho2danalysis method)": [[37, "RefocusedEcho2DAnalysis.optimal_tau1", false], [40, "RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimise_pulses() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.optimise_pulses", false]], "optimise_pulses() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.optimise_pulses", false]], "optimise_pulses() (autodeerui method)": [[73, "autoDEERUI.optimise_pulses", false], [82, "autoDEERUI.optimise_pulses", false]], "optimise_pulses() (in module autodeer)": [[122, "autodeer.optimise_pulses", false]], "optimise_pulses() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.optimise_pulses", false]], "optimise_pulses_button() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.optimise_pulses_button", false]], "optimise_pulses_button() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.optimise_pulses_button", false]], "optimise_pulses_button() (autodeerui method)": [[73, "autoDEERUI.optimise_pulses_button", false], [82, "autoDEERUI.optimise_pulses_button", false]], "optimise_spectra_position() (in module autodeer)": [[122, "autodeer.optimise_spectra_position", false]], "optimise_spectra_position() (in module autodeer.respro)": [[47, "autodeer.ResPro.optimise_spectra_position", false]], "order (autodeer.pulses.sincpulse attribute)": [[132, "autodeer.pulses.SincPulse.order", false]], "order (autodeer.sincpulse attribute)": [[122, "autodeer.SincPulse.order", false]], "order (sincpulse attribute)": [[52, "SincPulse.order", false], [131, "SincPulse.order", false]], "order1 (autodeer.hspulse attribute)": [[122, "autodeer.HSPulse.order1", false]], "order1 (autodeer.pulses.hspulse attribute)": [[132, "autodeer.pulses.HSPulse.order1", false]], "order1 (hspulse attribute)": [[28, "HSPulse.order1", false], [128, "HSPulse.order1", false]], "order2 (autodeer.hspulse attribute)": [[122, "autodeer.HSPulse.order2", false]], "order2 (autodeer.pulses.hspulse attribute)": [[132, "autodeer.pulses.HSPulse.order2", false]], "order2 (hspulse attribute)": [[28, "HSPulse.order2", false], [128, "HSPulse.order2", false]], "package_dir (in module autodeer.reporter)": [[135, "autodeer.reporter.package_dir", false]], "package_directory (in module autodeer.gui.log)": [[79, "autodeer.gui.log.package_directory", false]], "package_directory (in module autodeer.gui.main)": [[83, "autodeer.gui.main.package_directory", false]], "package_directory (in module autodeer.gui.modetune)": [[86, "autodeer.gui.modetune.package_directory", false]], "package_directory (in module autodeer.gui.quickdeer)": [[88, "autodeer.gui.quickdeer.package_directory", false]], "param_in_mhz() (in module autodeer.gui)": [[77, "autodeer.gui.param_in_MHz", false]], "param_in_mhz() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.param_in_MHz", false]], "param_in_us() (in module autodeer.gui)": [[77, "autodeer.gui.param_in_us", false]], "param_in_us() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.param_in_us", false]], "parameter (built-in class)": [[34, "Parameter", false], [60, "Parameter", false]], "parameter (class in autodeer)": [[122, "autodeer.Parameter", false], [122, "id0", false], [122, "id75", false]], "parameter (class in autodeer.classes)": [[61, "autodeer.classes.Parameter", false]], "parvars (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.parvars", false]], "parvars (pulsespel attribute)": [[99, "PulseSpel.parvars", false]], "pause_and_wait() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.pause_and_wait", false]], "pause_and_wait() (autodeerworker method)": [[75, "autoDEERWorker.pause_and_wait", false]], "pause_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.pause_exp", false]], "pause_exp() (xeprapilink method)": [[104, "XeprAPILink.pause_exp", false]], "pcyc (autodeer.delay attribute)": [[122, "autodeer.Delay.pcyc", false], [122, "id143", false]], "pcyc (autodeer.detection attribute)": [[122, "autodeer.Detection.pcyc", false], [122, "id140", false]], "pcyc (autodeer.pulses.delay attribute)": [[132, "autodeer.pulses.Delay.pcyc", false]], "pcyc (autodeer.pulses.detection attribute)": [[132, "autodeer.pulses.Detection.pcyc", false]], "pcyc (delay attribute)": [[19, "Delay.pcyc", false], [124, "Delay.pcyc", false]], "pcyc (detection attribute)": [[20, "Detection.pcyc", false], [125, "Detection.pcyc", false]], "pcyc_str (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.pcyc_str", false]], "pcyc_str (pulsespel attribute)": [[99, "PulseSpel.pcyc_str", false]], "pdf (autodeer.reporter attribute)": [[122, "autodeer.Reporter.pdf", false]], "pdf (autodeer.reporter.reporter attribute)": [[135, "autodeer.reporter.Reporter.pdf", false]], "pdf (reporter attribute)": [[43, "Reporter.pdf", false], [133, "Reporter.pdf", false]], "phasecorrect_all_points() (in module autodeer.gui.modetune)": [[86, "autodeer.gui.modetune.phasecorrect_all_points", false]], "plot() (autodeer.carrpurcellanalysis method)": [[122, "autodeer.CarrPurcellAnalysis.plot", false]], "plot() (autodeer.fieldsweep.fieldsweepanalysis method)": [[23, "autodeer.FieldSweep.FieldSweepAnalysis.plot", false]], "plot() (autodeer.fieldsweepanalysis method)": [[122, "autodeer.FieldSweepAnalysis.plot", false]], "plot() (autodeer.pulse method)": [[122, "autodeer.Pulse.plot", false], [122, "id123", false]], "plot() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse.plot", false]], "plot() (autodeer.relaxation.carrpurcellanalysis method)": [[42, "autodeer.Relaxation.CarrPurcellAnalysis.plot", false]], "plot() (autodeer.relaxation.reptimeanalysis method)": [[42, "autodeer.Relaxation.ReptimeAnalysis.plot", false]], "plot() (autodeer.reptimeanalysis method)": [[122, "autodeer.ReptimeAnalysis.plot", false]], "plot() (autodeer.resonatorprofileanalysis method)": [[122, "autodeer.ResonatorProfileAnalysis.plot", false]], "plot() (autodeer.respro.resonatorprofileanalysis method)": [[47, "autodeer.ResPro.ResonatorProfileAnalysis.plot", false]], "plot() (autodeer.sequence method)": [[122, "autodeer.Sequence.plot", false], [122, "id54", false]], "plot() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence.plot", false]], "plot() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.plot", false], [39, "CarrPurcellAnalysis.plot", false]], "plot() (fieldsweepanalysis method)": [[21, "FieldSweepAnalysis.plot", false], [24, "FieldSweepAnalysis.plot", false]], "plot() (pulse method)": [[35, "Pulse.plot", false], [129, "Pulse.plot", false]], "plot() (reptimeanalysis method)": [[41, "ReptimeAnalysis.plot", false], [44, "ReptimeAnalysis.plot", false]], "plot() (resonatorprofileanalysis method)": [[46, "ResonatorProfileAnalysis.plot", false], [48, "ResonatorProfileAnalysis.plot", false]], "plot() (sequence method)": [[51, "Sequence.plot", false], [143, "Sequence.plot", false]], "plot1d() (autodeer.refocusedecho2danalysis method)": [[122, "autodeer.RefocusedEcho2DAnalysis.plot1D", false]], "plot1d() (autodeer.relaxation.refocusedecho2danalysis method)": [[42, "autodeer.Relaxation.RefocusedEcho2DAnalysis.plot1D", false]], "plot1d() (refocusedecho2danalysis method)": [[37, "RefocusedEcho2DAnalysis.plot1D", false], [40, "RefocusedEcho2DAnalysis.plot1D", false]], "plot2d() (autodeer.refocusedecho2danalysis method)": [[122, "autodeer.RefocusedEcho2DAnalysis.plot2D", false]], "plot2d() (autodeer.relaxation.refocusedecho2danalysis method)": [[42, "autodeer.Relaxation.RefocusedEcho2DAnalysis.plot2D", false]], "plot2d() (refocusedecho2danalysis method)": [[37, "RefocusedEcho2DAnalysis.plot2D", false], [40, "RefocusedEcho2DAnalysis.plot2D", false]], "plot_1drelax() (in module autodeer)": [[122, "autodeer.plot_1Drelax", false]], "plot_1drelax() (in module autodeer.relaxation)": [[42, "autodeer.Relaxation.plot_1Drelax", false]], "plot_fft() (autodeer.pulse method)": [[122, "autodeer.Pulse.plot_fft", false], [122, "id127", false]], "plot_fft() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse.plot_fft", false]], "plot_fft() (pulse method)": [[35, "Pulse.plot_fft", false], [129, "Pulse.plot_fft", false]], "plot_overlap() (in module autodeer)": [[122, "autodeer.plot_overlap", false]], "plot_overlap() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.plot_overlap", false]], "plot_pulse_exc() (autodeer.sequence method)": [[122, "autodeer.Sequence.plot_pulse_exc", false], [122, "id55", false]], "plot_pulse_exc() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence.plot_pulse_exc", false]], "plot_pulse_exc() (sequence method)": [[51, "Sequence.plot_pulse_exc", false], [143, "Sequence.plot_pulse_exc", false]], "plsspelexpslct (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELEXPSlct", false]], "plsspelexpslct (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.PlsSPELEXPSlct", false]], "plsspelglbpaf (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELGlbPaF", false]], "plsspelglbpaf (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.PlsSPELGlbPaF", false]], "plsspellistslct (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELLISTSlct", false]], "plsspellistslct (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.PlsSPELLISTSlct", false]], "plsspelprgpaf (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELPrgPaF", false]], "plsspelprgpaf (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.PlsSPELPrgPaF", false]], "pool (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.pool", false]], "pool (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.pool", false]], "pool (brukerawg attribute)": [[93, "BrukerAWG.pool", false]], "pool (brukermpfu attribute)": [[95, "BrukerMPFU.pool", false]], "possible_delays (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.possible_delays", false]], "possible_delays (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.possible_delays", false]], "possible_delays (pulsespel attribute)": [[99, "PulseSpel.possible_delays", false]], "possible_pulses (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.possible_pulses", false]], "possible_pulses (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.possible_pulses", false]], "possible_pulses (pulsespel attribute)": [[99, "PulseSpel.possible_pulses", false]], "possible_vars (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.possible_vars", false]], "possible_vars (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.possible_vars", false]], "possible_vars (pulsespel attribute)": [[99, "PulseSpel.possible_vars", false]], "primary_colors (in module autodeer)": [[122, "autodeer.primary_colors", false]], "primary_colors (in module autodeer.colors)": [[62, "autodeer.colors.primary_colors", false]], "priorties (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.priorties", false]], "priorties (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.priorties", false]], "priorties (autodeerui attribute)": [[73, "autoDEERUI.priorties", false], [82, "autoDEERUI.priorties", false]], "process_deeranalysis() (autodeer.gui.quickdeer.deerplot method)": [[88, "autodeer.gui.quickdeer.DEERplot.process_deeranalysis", false]], "process_deeranalysis() (deerplot method)": [[87, "DEERplot.process_deeranalysis", false]], "process_nutations() (autodeer.resonatorprofileanalysis method)": [[122, "autodeer.ResonatorProfileAnalysis.process_nutations", false]], "process_nutations() (autodeer.respro.resonatorprofileanalysis method)": [[47, "autodeer.ResPro.ResonatorProfileAnalysis.process_nutations", false]], "process_nutations() (resonatorprofileanalysis method)": [[46, "ResonatorProfileAnalysis.process_nutations", false], [48, "ResonatorProfileAnalysis.process_nutations", false]], "progress (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.progress", false]], "progress (autodeer.gui.main.workersignals attribute)": [[83, "autodeer.gui.main.WorkerSignals.progress", false]], "progress (autodeersignals attribute)": [[74, "autoDEERSignals.progress", false]], "progress (workersignals attribute)": [[81, "WorkerSignals.progress", false]], "progress_bar() (in module autodeer.tools)": [[147, "autodeer.tools.progress_bar", false]], "progress_bar_frac() (in module autodeer.tools)": [[147, "autodeer.tools.progress_bar_frac", false]], "progression (autodeer.pulse attribute)": [[122, "autodeer.Pulse.Progression", false], [122, "id115", false]], "progression (autodeer.pulses.pulse attribute)": [[132, "autodeer.pulses.Pulse.Progression", false]], "progression (pulse attribute)": [[35, "Pulse.Progression", false], [129, "Pulse.Progression", false]], "progtable (autodeer.sequence attribute)": [[122, "autodeer.Sequence.progTable", false], [122, "id53", false]], "progtable (autodeer.sequences.sequence attribute)": [[146, "autodeer.sequences.Sequence.progTable", false]], "progtable (sequence attribute)": [[51, "Sequence.progTable", false], [143, "Sequence.progTable", false]], "project (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.project", false]], "project (autodeerworker attribute)": [[75, "autoDEERWorker.project", false]], "ps_length (autodeer.hardware.xepr_experiments.eldortune attribute)": [[121, "autodeer.hardware.xepr_experiments.ELDORtune.ps_length", false]], "ps_length (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[121, "autodeer.hardware.xepr_experiments.MPFUtune.ps_length", false]], "ps_length (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[121, "autodeer.hardware.xepr_experiments.PulseProfile.ps_length", false]], "ps_length (eldortune attribute)": [[118, "ELDORtune.ps_length", false]], "ps_length (mpfutune attribute)": [[119, "MPFUtune.ps_length", false]], "ps_length (pulseprofile attribute)": [[120, "PulseProfile.ps_length", false]], "psparvar (built-in class)": [[98, "PSparvar", false]], "psparvar (class in autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.PSparvar", false]], "psphasecycle (built-in class)": [[97, "PSPhaseCycle", false]], "psphasecycle (class in autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.PSPhaseCycle", false]], "pulse (built-in class)": [[35, "Pulse", false], [129, "Pulse", false]], "pulse (class in autodeer)": [[122, "autodeer.Pulse", false], [122, "id111", false]], "pulse (class in autodeer.pulses)": [[132, "autodeer.pulses.Pulse", false]], "pulseprofile (built-in class)": [[120, "PulseProfile", false]], "pulseprofile (class in autodeer.hardware.xepr_experiments)": [[121, "autodeer.hardware.xepr_experiments.PulseProfile", false]], "pulses (autodeer.classes.interface attribute)": [[61, "autodeer.classes.Interface.pulses", false]], "pulses (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.pulses", false]], "pulses (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.pulses", false]], "pulses (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.pulses", false]], "pulses (autodeer.hardware.dummy.dummyinterface attribute)": [[107, "autodeer.hardware.dummy.dummyInterface.pulses", false]], "pulses (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.pulses", false]], "pulses (autodeer.interface attribute)": [[122, "autodeer.Interface.pulses", false]], "pulses (autodeer.sequence attribute)": [[122, "autodeer.Sequence.pulses", false], [122, "id45", false]], "pulses (autodeer.sequences.sequence attribute)": [[146, "autodeer.sequences.Sequence.pulses", false]], "pulses (autodeerui attribute)": [[73, "autoDEERUI.pulses", false], [82, "autoDEERUI.pulses", false]], "pulses (autodeerworker attribute)": [[75, "autoDEERWorker.pulses", false]], "pulses (dummyinterface attribute)": [[106, "dummyInterface.pulses", false]], "pulses (eth_awg_interface attribute)": [[101, "ETH_awg_interface.pulses", false]], "pulses (interface attribute)": [[30, "Interface.pulses", false], [59, "Interface.pulses", false]], "pulses (sequence attribute)": [[51, "Sequence.pulses", false], [143, "Sequence.pulses", false]], "pulsespel (autodeer.hardware.bruker_tools.psparvar attribute)": [[100, "autodeer.hardware.Bruker_tools.PSparvar.PulseSpel", false]], "pulsespel (built-in class)": [[99, "PulseSpel", false]], "pulsespel (class in autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel", false]], "pulsespel (psparvar attribute)": [[98, "PSparvar.PulseSpel", false]], "pump_frq (autodeer.hardware.xepr_experiments.deer attribute)": [[121, "autodeer.hardware.xepr_experiments.DEER.pump_frq", false]], "pump_frq (deer attribute)": [[117, "DEER.pump_frq", false]], "pyqt_table_from_dict() (in module autodeer.gui)": [[77, "autodeer.gui.pyqt_table_from_dict", false]], "pyqt_table_from_dict() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.pyqt_table_from_dict", false]], "q_deer (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.q_DEER", false]], "q_deer (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.q_DEER", false]], "q_deer (autodeerui attribute)": [[73, "autoDEERUI.q_DEER", false], [82, "autoDEERUI.q_DEER", false]], "qcrit (autodeer.frequencysweptpulse property)": [[122, "autodeer.FrequencySweptPulse.Qcrit", false]], "qcrit (autodeer.pulses.frequencysweptpulse property)": [[132, "autodeer.pulses.FrequencySweptPulse.Qcrit", false]], "qcrit (frequencysweptpulse property)": [[26, "FrequencySweptPulse.Qcrit", false], [126, "FrequencySweptPulse.Qcrit", false]], "qtloghandler (built-in class)": [[32, "QtLogHandler", false]], "qtloghandler (class in autodeer.logging)": [[33, "autodeer.Logging.QtLogHandler", false]], "queue (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.queue", false]], "queue (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.queue", false]], "queue (autodeerui attribute)": [[73, "autoDEERUI.queue", false], [82, "autoDEERUI.queue", false]], "quick_deer_state (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.quick_deer_state", false]], "quick_deer_state (autodeerworker attribute)": [[75, "autoDEERWorker.quick_deer_state", false]], "quickdeer_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.quickdeer_result", false]], "quickdeer_result (autodeersignals attribute)": [[74, "autoDEERSignals.quickdeer_result", false]], "quickdeer_update (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.quickdeer_update", false]], "quickdeer_update (autodeersignals attribute)": [[74, "autoDEERSignals.quickdeer_update", false]], "raise_warning() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.raise_warning", false]], "raise_warning() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.raise_warning", false]], "raise_warning() (autodeerui method)": [[73, "autoDEERUI.raise_warning", false], [82, "autoDEERUI.raise_warning", false]], "read_table() (in module autodeer.gui)": [[77, "autodeer.gui.read_table", false]], "read_table() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.read_table", false]], "rectpulse (built-in class)": [[36, "RectPulse", false], [130, "RectPulse", false]], "rectpulse (class in autodeer)": [[122, "autodeer.RectPulse", false], [122, "id145", false]], "rectpulse (class in autodeer.pulses)": [[132, "autodeer.pulses.RectPulse", false]], "reduce_uuid (autodeer.sequence attribute)": [[122, "autodeer.Sequence.reduce_uuid", false], [122, "id48", false]], "reduce_uuid (autodeer.sequences.sequence attribute)": [[146, "autodeer.sequences.Sequence.reduce_uuid", false]], "reduce_uuid (sequence attribute)": [[51, "Sequence.reduce_uuid", false], [143, "Sequence.reduce_uuid", false]], "refocusedecho2danalysis (built-in class)": [[37, "RefocusedEcho2DAnalysis", false], [40, "RefocusedEcho2DAnalysis", false]], "refocusedecho2danalysis (class in autodeer)": [[122, "autodeer.RefocusedEcho2DAnalysis", false]], "refocusedecho2danalysis (class in autodeer.relaxation)": [[42, "autodeer.Relaxation.RefocusedEcho2DAnalysis", false]], "refocusedecho2dsequence (built-in class)": [[38, "RefocusedEcho2DSequence", false], [140, "RefocusedEcho2DSequence", false]], "refocusedecho2dsequence (class in autodeer)": [[122, "autodeer.RefocusedEcho2DSequence", false]], "refocusedecho2dsequence (class in autodeer.sequences)": [[146, "autodeer.sequences.RefocusedEcho2DSequence", false]], "refresh_deer() (autodeer.gui.quickdeer.deerplot method)": [[88, "autodeer.gui.quickdeer.DEERplot.refresh_deer", false]], "refresh_deer() (deerplot method)": [[87, "DEERplot.refresh_deer", false]], "refresh_fieldsweep_after_fit() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_fieldsweep_after_fit() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_fieldsweep_after_fit() (autodeerui method)": [[73, "autoDEERUI.refresh_fieldsweep_after_fit", false], [82, "autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_relax() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.refresh_relax", false]], "refresh_relax() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.refresh_relax", false]], "refresh_relax() (autodeerui method)": [[73, "autoDEERUI.refresh_relax", false], [82, "autoDEERUI.refresh_relax", false]], "refresh_relax_figure() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.refresh_relax_figure", false]], "refresh_relax_figure() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.refresh_relax_figure", false]], "refresh_relax_figure() (autodeerui method)": [[73, "autoDEERUI.refresh_relax_figure", false], [82, "autoDEERUI.refresh_relax_figure", false]], "refresh_respro() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.refresh_respro", false]], "refresh_respro() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.refresh_respro", false]], "refresh_respro() (autodeerui method)": [[73, "autoDEERUI.refresh_respro", false], [82, "autoDEERUI.refresh_respro", false]], "refresh_t2() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.refresh_T2", false]], "refresh_t2() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.refresh_T2", false]], "refresh_t2() (autodeerui method)": [[73, "autoDEERUI.refresh_T2", false], [82, "autoDEERUI.refresh_T2", false]], "reim_colors (in module autodeer.colors)": [[62, "autodeer.colors.ReIm_colors", false]], "relax2d_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.Relax2D_result", false]], "relax2d_result (autodeersignals attribute)": [[74, "autoDEERSignals.Relax2D_result", false]], "relax_process() (in module autodeer.gui.main)": [[83, "autodeer.gui.main.relax_process", false]], "relax_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.relax_result", false]], "relax_result (autodeersignals attribute)": [[74, "autoDEERSignals.relax_result", false]], "relax_toolbar() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.relax_toolbar", false]], "relax_toolbar() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.relax_toolbar", false]], "relax_toolbar() (autodeerui method)": [[73, "autoDEERUI.relax_toolbar", false], [82, "autoDEERUI.relax_toolbar", false]], "remove_dynamic() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter.remove_dynamic", false]], "remove_dynamic() (autodeer.parameter method)": [[122, "autodeer.Parameter.remove_dynamic", false], [122, "id26", false], [122, "id93", false]], "remove_dynamic() (parameter method)": [[34, "Parameter.remove_dynamic", false], [60, "Parameter.remove_dynamic", false]], "remove_echo() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.remove_echo", false]], "replacemode (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.ReplaceMode", false]], "replacemode (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.ReplaceMode", false]], "reporter (built-in class)": [[43, "Reporter", false], [133, "Reporter", false]], "reporter (class in autodeer)": [[122, "autodeer.Reporter", false]], "reporter (class in autodeer.reporter)": [[135, "autodeer.reporter.Reporter", false]], "reptime_scan_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.reptime_scan_result", false]], "reptime_scan_result (autodeersignals attribute)": [[74, "autoDEERSignals.reptime_scan_result", false]], "reptimeanalysis (built-in class)": [[41, "ReptimeAnalysis", false], [44, "ReptimeAnalysis", false]], "reptimeanalysis (class in autodeer)": [[122, "autodeer.ReptimeAnalysis", false]], "reptimeanalysis (class in autodeer.relaxation)": [[42, "autodeer.Relaxation.ReptimeAnalysis", false]], "reptimescan (built-in class)": [[45, "ReptimeScan", false], [141, "ReptimeScan", false]], "reptimescan (class in autodeer)": [[122, "autodeer.ReptimeScan", false]], "reptimescan (class in autodeer.sequences)": [[146, "autodeer.sequences.ReptimeScan", false]], "rerun_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.rerun_exp", false]], "rerun_exp() (xeprapilink method)": [[104, "XeprAPILink.rerun_exp", false]], "resample_and_shift_vector() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.resample_and_shift_vector", false]], "resfields() (in module autodeer.fieldsweep)": [[23, "autodeer.FieldSweep.resfields", false]], "resonator (autodeer.classes.interface attribute)": [[61, "autodeer.classes.Interface.resonator", false]], "resonator (autodeer.interface attribute)": [[122, "autodeer.Interface.resonator", false]], "resonator (interface attribute)": [[30, "Interface.resonator", false], [59, "Interface.resonator", false]], "resonatorprofileanalysis (built-in class)": [[46, "ResonatorProfileAnalysis", false], [48, "ResonatorProfileAnalysis", false]], "resonatorprofileanalysis (class in autodeer)": [[122, "autodeer.ResonatorProfileAnalysis", false]], "resonatorprofileanalysis (class in autodeer.respro)": [[47, "autodeer.ResPro.ResonatorProfileAnalysis", false]], "resonatorprofilesequence (built-in class)": [[49, "ResonatorProfileSequence", false], [142, "ResonatorProfileSequence", false]], "resonatorprofilesequence (class in autodeer)": [[122, "autodeer.ResonatorProfileSequence", false]], "resonatorprofilesequence (class in autodeer.sequences)": [[146, "autodeer.sequences.ResonatorProfileSequence", false]], "respro_process() (in module autodeer.gui.main)": [[83, "autodeer.gui.main.respro_process", false]], "respro_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.respro_result", false]], "respro_result (autodeersignals attribute)": [[74, "autoDEERSignals.respro_result", false]], "respro_toolbar() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.respro_toolbar", false]], "respro_toolbar() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.respro_toolbar", false]], "respro_toolbar() (autodeerui method)": [[73, "autoDEERUI.respro_toolbar", false], [82, "autoDEERUI.respro_toolbar", false]], "result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.result", false]], "result (autodeer.gui.main.workersignals attribute)": [[83, "autodeer.gui.main.WorkerSignals.result", false]], "result (autodeer.gui.tools.workersignals attribute)": [[92, "autodeer.gui.tools.WorkerSignals.result", false]], "result (autodeer.gui.workersignals attribute)": [[77, "autodeer.gui.WorkerSignals.result", false]], "result (autodeersignals attribute)": [[74, "autoDEERSignals.result", false]], "result (workersignals attribute)": [[71, "WorkerSignals.result", false], [81, "WorkerSignals.result", false], [91, "WorkerSignals.result", false]], "result_signal (autodeer.gui.modetune.get_dataworker attribute)": [[86, "autodeer.gui.modetune.get_dataWorker.result_signal", false]], "result_signal (get_dataworker attribute)": [[85, "get_dataWorker.result_signal", false]], "results (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.results", false]], "results (autodeerworker attribute)": [[75, "autoDEERWorker.results", false]], "rng (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy.rng", false]], "round_step() (in module autodeer)": [[122, "autodeer.round_step", false]], "round_step() (in module autodeer.utils)": [[148, "autodeer.utils.round_step", false]], "run() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.run", false]], "run() (autodeer.gui.main.worker method)": [[83, "autodeer.gui.main.Worker.run", false]], "run() (autodeer.gui.modetune.get_dataworker method)": [[86, "autodeer.gui.modetune.get_dataWorker.run", false]], "run() (autodeer.gui.tools.worker method)": [[92, "autodeer.gui.tools.Worker.run", false]], "run() (autodeer.gui.worker method)": [[77, "autodeer.gui.Worker.run", false]], "run() (autodeerworker method)": [[75, "autoDEERWorker.run", false]], "run() (get_dataworker method)": [[85, "get_dataWorker.run", false]], "run() (worker method)": [[70, "Worker.run", false], [80, "Worker.run", false], [90, "Worker.run", false]], "run_2d_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_2D_relax", false]], "run_2d_relax() (autodeerworker method)": [[75, "autoDEERWorker.run_2D_relax", false]], "run_4p() (autodeer.hardware.xepr_experiments.deer method)": [[121, "autodeer.hardware.xepr_experiments.DEER.run_4p", false]], "run_4p() (deer method)": [[117, "DEER.run_4p", false]], "run_5p() (autodeer.hardware.xepr_experiments.deer method)": [[121, "autodeer.hardware.xepr_experiments.DEER.run_5p", false]], "run_5p() (deer method)": [[117, "DEER.run_5p", false]], "run_cp() (autodeer.hardware.xepr_experiments.deer method)": [[121, "autodeer.hardware.xepr_experiments.DEER.run_CP", false]], "run_cp() (deer method)": [[117, "DEER.run_CP", false]], "run_cp_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_CP_relax", false]], "run_cp_relax() (autodeerworker method)": [[75, "autoDEERWorker.run_CP_relax", false]], "run_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_deer", false]], "run_deer() (autodeerworker method)": [[75, "autoDEERWorker.run_deer", false]], "run_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.run_exp", false]], "run_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.run_exp", false]], "run_exp() (dummy_api method)": [[108, "dummy_api.run_exp", false]], "run_exp() (xeprapilink method)": [[104, "XeprAPILink.run_exp", false]], "run_fsweep() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_fsweep", false]], "run_fsweep() (autodeerworker method)": [[75, "autoDEERWorker.run_fsweep", false]], "run_general() (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.run_general", false]], "run_long_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_long_deer", false]], "run_long_deer() (autodeerworker method)": [[75, "autoDEERWorker.run_long_deer", false]], "run_quick_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_quick_deer", false]], "run_quick_deer() (autodeerworker method)": [[75, "autoDEERWorker.run_quick_deer", false]], "run_reptime_opt() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_reptime_opt", false]], "run_reptime_opt() (autodeerworker method)": [[75, "autoDEERWorker.run_reptime_opt", false]], "run_respro() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_respro", false]], "run_respro() (autodeerworker method)": [[75, "autoDEERWorker.run_respro", false]], "run_t2_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_T2_relax", false]], "run_t2_relax() (autodeerworker method)": [[75, "autoDEERWorker.run_T2_relax", false]], "runadvancedautodeer() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.RunAdvancedAutoDEER", false]], "runadvancedautodeer() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.RunAdvancedAutoDEER", false]], "runadvancedautodeer() (autodeerui method)": [[73, "autoDEERUI.RunAdvancedAutoDEER", false], [82, "autoDEERUI.RunAdvancedAutoDEER", false]], "runautodeer() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.RunAutoDEER", false]], "runautodeer() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.RunAutoDEER", false]], "runautodeer() (autodeerui method)": [[73, "autoDEERUI.RunAutoDEER", false], [82, "autoDEERUI.RunAutoDEER", false]], "runfullyautodeer() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.RunFullyAutoDEER", false]], "runfullyautodeer() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.RunFullyAutoDEER", false]], "runfullyautodeer() (autodeerui method)": [[73, "autoDEERUI.RunFullyAutoDEER", false], [82, "autoDEERUI.RunFullyAutoDEER", false]], "s (autodeer.fieldsweep.spinsystem attribute)": [[23, "autodeer.FieldSweep.SpinSystem.S", false]], "s (spinsystem attribute)": [[22, "SpinSystem.S", false]], "sampleconccombobox_opts (in module autodeer.gui.main)": [[83, "autodeer.gui.main.SampleConcComboBox_opts", false]], "samplename (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.samplename", false]], "samplename (autodeerworker attribute)": [[75, "autoDEERWorker.samplename", false]], "save() (autodeer.classes.parameter method)": [[61, "autodeer.classes.Parameter.save", false]], "save() (autodeer.dataset.epraccessor method)": [[69, "autodeer.dataset.EPRAccessor.save", false]], "save() (autodeer.hardware.bruker_tools.pulsespel method)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.save", false]], "save() (autodeer.parameter method)": [[122, "autodeer.Parameter.save", false], [122, "id103", false], [122, "id36", false]], "save() (autodeer.pulse method)": [[122, "autodeer.Pulse.save", false], [122, "id133", false]], "save() (autodeer.pulses.pulse method)": [[132, "autodeer.pulses.Pulse.save", false]], "save() (autodeer.sequence method)": [[122, "autodeer.Sequence.save", false], [122, "id71", false]], "save() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence.save", false]], "save() (epraccessor method)": [[68, "EPRAccessor.save", false]], "save() (parameter method)": [[34, "Parameter.save", false], [60, "Parameter.save", false]], "save() (pulse method)": [[35, "Pulse.save", false], [129, "Pulse.save", false]], "save() (pulsespel method)": [[99, "PulseSpel.save", false]], "save() (sequence method)": [[51, "Sequence.save", false], [143, "Sequence.save", false]], "save_data() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.save_data", false]], "save_data() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.save_data", false]], "save_data() (autodeerui method)": [[73, "autoDEERUI.save_data", false], [82, "autoDEERUI.save_data", false]], "save_data() (in module autodeer.gui.modetune)": [[86, "autodeer.gui.modetune.save_data", false]], "save_file() (in module autodeer)": [[122, "autodeer.save_file", false]], "save_file() (in module autodeer.utils)": [[148, "autodeer.utils.save_file", false]], "save_log_to_file() (autodeer.gui.log.logdialog method)": [[79, "autodeer.gui.log.LogDialog.save_log_to_file", false]], "save_log_to_file() (logdialog method)": [[78, "LogDialog.save_log_to_file", false]], "save_pulsespel_def() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.save_PulseSpel_def", false]], "save_pulsespel_def() (xeprapilink method)": [[104, "XeprAPILink.save_PulseSpel_def", false]], "save_pulsespel_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.save_PulseSpel_exp", false]], "save_pulsespel_exp() (xeprapilink method)": [[104, "XeprAPILink.save_PulseSpel_exp", false]], "savefolder (autodeer.classes.interface attribute)": [[61, "autodeer.classes.Interface.savefolder", false]], "savefolder (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.savefolder", false]], "savefolder (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.savefolder", false]], "savefolder (autodeer.hardware.eth_awg.eth_awg_interface property)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.savefolder", false]], "savefolder (autodeer.interface attribute)": [[122, "autodeer.Interface.savefolder", false]], "savefolder (brukerawg attribute)": [[93, "BrukerAWG.savefolder", false]], "savefolder (brukermpfu attribute)": [[95, "BrukerMPFU.savefolder", false]], "savefolder (eth_awg_interface property)": [[101, "ETH_awg_interface.savefolder", false]], "savefolder (interface attribute)": [[30, "Interface.savefolder", false], [59, "Interface.savefolder", false]], "savename (autodeer.classes.interface attribute)": [[61, "autodeer.classes.Interface.savename", false]], "savename (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.savename", false]], "savename (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.savename", false]], "savename (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.savename", false]], "savename (autodeer.interface attribute)": [[122, "autodeer.Interface.savename", false]], "savename (autodeerworker attribute)": [[75, "autoDEERWorker.savename", false]], "savename (brukerawg attribute)": [[93, "BrukerAWG.savename", false]], "savename (brukermpfu attribute)": [[95, "BrukerMPFU.savename", false]], "savename (interface attribute)": [[30, "Interface.savename", false], [59, "Interface.savename", false]], "scale (autodeer.delay attribute)": [[122, "autodeer.Delay.scale", false], [122, "id144", false]], "scale (autodeer.detection attribute)": [[122, "autodeer.Detection.scale", false], [122, "id138", false]], "scale (autodeer.pulses.delay attribute)": [[132, "autodeer.pulses.Delay.scale", false]], "scale (autodeer.pulses.detection attribute)": [[132, "autodeer.pulses.Detection.scale", false]], "scale (delay attribute)": [[19, "Delay.scale", false], [124, "Delay.scale", false]], "scale (detection attribute)": [[20, "Detection.scale", false], [125, "Detection.scale", false]], "scipy_filter_dc() (in module autodeer.hardware.eth_awg_load)": [[103, "autodeer.hardware.ETH_awg_load.scipy_filter_dc", false]], "select_pcyc() (autodeer.deersequence method)": [[122, "autodeer.DEERSequence.select_pcyc", false]], "select_pcyc() (autodeer.sequences.deersequence method)": [[146, "autodeer.sequences.DEERSequence.select_pcyc", false]], "select_pcyc() (deersequence method)": [[17, "DEERSequence.select_pcyc", false], [137, "DEERSequence.select_pcyc", false]], "select_resonator() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.select_resonator", false]], "select_resonator() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.select_resonator", false]], "select_resonator() (autodeerui method)": [[73, "autoDEERUI.select_resonator", false], [82, "autoDEERUI.select_resonator", false]], "seq (autodeer.relaxation.reptimeanalysis attribute)": [[42, "autodeer.Relaxation.ReptimeAnalysis.seq", false]], "seq (autodeer.reptimeanalysis attribute)": [[122, "autodeer.ReptimeAnalysis.seq", false]], "seq (reptimeanalysis attribute)": [[41, "ReptimeAnalysis.seq", false], [44, "ReptimeAnalysis.seq", false]], "seqtable_steps (autodeer.sequence property)": [[122, "autodeer.Sequence.seqtable_steps", false], [122, "id44", false]], "seqtable_steps (autodeer.sequences.sequence property)": [[146, "autodeer.sequences.Sequence.seqtable_steps", false]], "seqtable_steps (sequence property)": [[51, "Sequence.seqtable_steps", false], [143, "Sequence.seqtable_steps", false]], "sequence (autodeer.dataset.epraccessor property)": [[69, "autodeer.dataset.EPRAccessor.sequence", false]], "sequence (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.sequence", false]], "sequence (built-in class)": [[51, "Sequence", false], [143, "Sequence", false]], "sequence (class in autodeer)": [[122, "autodeer.Sequence", false], [122, "id43", false]], "sequence (class in autodeer.sequences)": [[146, "autodeer.sequences.Sequence", false]], "sequence (epraccessor property)": [[68, "EPRAccessor.sequence", false]], "sequence (pulsespel attribute)": [[99, "PulseSpel.sequence", false]], "set_2d_max_tau() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.set_2D_max_tau", false]], "set_2d_max_tau() (autodeerworker method)": [[75, "autoDEERWorker.set_2D_max_tau", false]], "set_acquisition_mode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_Acquisition_mode", false]], "set_acquisition_mode() (xeprapilink method)": [[104, "XeprAPILink.set_Acquisition_mode", false]], "set_attenuator() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_attenuator", false]], "set_attenuator() (xeprapilink method)": [[104, "XeprAPILink.set_attenuator", false]], "set_config_file() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_config_file", false]], "set_config_file() (xeprapilink method)": [[104, "XeprAPILink.set_config_file", false]], "set_eldor_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_ELDOR_freq", false]], "set_eldor_freq() (xeprapilink method)": [[104, "XeprAPILink.set_ELDOR_freq", false]], "set_field() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_field", false]], "set_field() (xeprapilink method)": [[104, "XeprAPILink.set_field", false]], "set_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_freq", false]], "set_freq() (xeprapilink method)": [[104, "XeprAPILink.set_freq", false]], "set_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_hidden_param", false]], "set_hidden_param() (xeprapilink method)": [[104, "XeprAPILink.set_hidden_param", false]], "set_mw_amp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_MW_amp", false]], "set_mw_amp() (xeprapilink method)": [[104, "XeprAPILink.set_MW_amp", false]], "set_noise_mode() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.set_noise_mode", false]], "set_noise_mode() (autodeerworker method)": [[75, "autoDEERWorker.set_noise_mode", false]], "set_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_param", false]], "set_param() (xeprapilink method)": [[104, "XeprAPILink.set_param", false]], "set_phase() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_phase", false]], "set_phase() (xeprapilink method)": [[104, "XeprAPILink.set_phase", false]], "set_phasecycle() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PhaseCycle", false]], "set_phasecycle() (xeprapilink method)": [[104, "XeprAPILink.set_PhaseCycle", false]], "set_pulsespel_def_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_def_filepath", false]], "set_pulsespel_def_filepath() (xeprapilink method)": [[104, "XeprAPILink.set_PulseSpel_def_filepath", false]], "set_pulsespel_exp_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_exp_filepath", false]], "set_pulsespel_exp_filepath() (xeprapilink method)": [[104, "XeprAPILink.set_PulseSpel_exp_filepath", false]], "set_pulsespel_experiment() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_experiment", false]], "set_pulsespel_experiment() (xeprapilink method)": [[104, "XeprAPILink.set_PulseSpel_experiment", false]], "set_pulsespel_phase_cycling() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_phase_cycling", false]], "set_pulsespel_phase_cycling() (xeprapilink method)": [[104, "XeprAPILink.set_PulseSpel_phase_cycling", false]], "set_pulsespel_var() (autodeer.hardware.dummy_xepr.dummy_api method)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.set_PulseSpel_var", false]], "set_pulsespel_var() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_var", false]], "set_pulsespel_var() (dummy_api method)": [[108, "dummy_api.set_PulseSpel_var", false]], "set_pulsespel_var() (xeprapilink method)": [[104, "XeprAPILink.set_PulseSpel_var", false]], "set_replacemode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_ReplaceMode", false]], "set_replacemode() (xeprapilink method)": [[104, "XeprAPILink.set_ReplaceMode", false]], "set_snr_target() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_snr_target", false]], "set_snr_target() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.set_snr_target", false]], "set_snr_threshold() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_snr_threshold", false]], "set_snr_threshold() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.set_snr_threshold", false]], "set_spectrometer_connected_light() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.set_spectrometer_connected_light", false]], "set_spectrometer_connected_light() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.set_spectrometer_connected_light", false]], "set_spectrometer_connected_light() (autodeerui method)": [[73, "autoDEERUI.set_spectrometer_connected_light", false], [82, "autoDEERUI.set_spectrometer_connected_light", false]], "set_sweep_width() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_sweep_width", false]], "set_sweep_width() (xeprapilink method)": [[104, "XeprAPILink.set_sweep_width", false]], "set_time_target() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_time_target", false]], "set_time_target() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.set_time_target", false]], "set_video_bandwidth() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_video_bandwidth", false]], "set_video_bandwidth() (xeprapilink method)": [[104, "XeprAPILink.set_video_bandwidth", false]], "set_video_gain() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_video_gain", false]], "set_video_gain() (xeprapilink method)": [[104, "XeprAPILink.set_video_gain", false]], "setup() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.setup", false]], "setup() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.setup", false]], "setup() (brukerawg method)": [[93, "BrukerAWG.setup", false]], "setup() (brukermpfu method)": [[95, "BrukerMPFU.setup", false]], "setup_flag (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.setup_flag", false]], "setup_flag (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.setup_flag", false]], "setup_flag (brukerawg attribute)": [[93, "BrukerAWG.setup_flag", false]], "setup_flag (brukermpfu attribute)": [[95, "BrukerMPFU.setup_flag", false]], "setup_inputs() (autodeer.gui.quickdeer.deerplot method)": [[88, "autodeer.gui.quickdeer.DEERplot.setup_inputs", false]], "setup_inputs() (deerplot method)": [[87, "DEERplot.setup_inputs", false]], "setup_logs() (in module autodeer.logging)": [[33, "autodeer.Logging.setup_logs", false]], "seven_pulse() (autodeer.deersequence method)": [[122, "autodeer.DEERSequence.seven_pulse", false]], "seven_pulse() (autodeer.sequences.deersequence method)": [[146, "autodeer.sequences.DEERSequence.seven_pulse", false]], "seven_pulse() (deersequence method)": [[17, "DEERSequence.seven_pulse", false], [137, "DEERSequence.seven_pulse", false]], "shade_colors (in module autodeer.colors)": [[62, "autodeer.colors.shade_colors", false]], "shift_detfreq_to_zero() (autodeer.sequence method)": [[122, "autodeer.Sequence.shift_detfreq_to_zero", false], [122, "id60", false]], "shift_detfreq_to_zero() (autodeer.sequences.sequence method)": [[146, "autodeer.sequences.Sequence.shift_detfreq_to_zero", false]], "shift_detfreq_to_zero() (sequence method)": [[51, "Sequence.shift_detfreq_to_zero", false], [143, "Sequence.shift_detfreq_to_zero", false]], "shift_pulse_freq() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.shift_pulse_freq", false]], "shotreptime (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.ShotRepTime", false]], "shotreptime (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.ShotRepTime", false]], "shots (autodeer.sequence attribute)": [[122, "autodeer.Sequence.shots", false], [122, "id51", false]], "shots (autodeer.sequences.sequence attribute)": [[146, "autodeer.sequences.Sequence.shots", false]], "shots (sequence attribute)": [[51, "Sequence.shots", false], [143, "Sequence.shots", false]], "shotsploop (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.ShotsPLoop", false]], "shotsploop (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.ShotsPLoop", false]], "signal (autodeer.logging.qtloghandler attribute)": [[33, "autodeer.Logging.QtLogHandler.signal", false]], "signal (qtloghandler attribute)": [[32, "QtLogHandler.signal", false]], "signalphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_hidden.SignalPhase", false]], "signalphase (dummy_hidden attribute)": [[111, "dummy_hidden.SignalPhase", false]], "signals (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.signals", false]], "signals (autodeer.gui.main.worker attribute)": [[83, "autodeer.gui.main.Worker.signals", false]], "signals (autodeer.gui.modetune.get_dataworker attribute)": [[86, "autodeer.gui.modetune.get_dataWorker.signals", false]], "signals (autodeer.gui.tools.worker attribute)": [[92, "autodeer.gui.tools.Worker.signals", false]], "signals (autodeer.gui.worker attribute)": [[77, "autodeer.gui.Worker.signals", false]], "signals (autodeerworker attribute)": [[75, "autoDEERWorker.signals", false]], "signals (get_dataworker attribute)": [[85, "get_dataWorker.signals", false]], "signals (worker attribute)": [[70, "Worker.signals", false], [80, "Worker.signals", false], [90, "Worker.signals", false]], "simulate() (autodeer.deersequence method)": [[122, "autodeer.DEERSequence.simulate", false]], "simulate() (autodeer.sequences.deersequence method)": [[146, "autodeer.sequences.DEERSequence.simulate", false]], "simulate() (deersequence method)": [[17, "DEERSequence.simulate", false], [137, "DEERSequence.simulate", false]], "sincpulse (built-in class)": [[52, "SincPulse", false], [131, "SincPulse", false]], "sincpulse (class in autodeer)": [[122, "autodeer.SincPulse", false]], "sincpulse (class in autodeer.pulses)": [[132, "autodeer.pulses.SincPulse", false]], "size (autodeer.hardware.dummy_xepr.dummy_dataset attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_dataset.size", false]], "size (dummy_dataset attribute)": [[110, "dummy_dataset.size", false]], "smooth() (autodeer.fieldsweep.fieldsweepanalysis method)": [[23, "autodeer.FieldSweep.FieldSweepAnalysis.smooth", false]], "smooth() (autodeer.fieldsweepanalysis method)": [[122, "autodeer.FieldSweepAnalysis.smooth", false]], "smooth() (fieldsweepanalysis method)": [[21, "FieldSweepAnalysis.smooth", false], [24, "FieldSweepAnalysis.smooth", false]], "snr (autodeer.dataset.epraccessor property)": [[69, "autodeer.dataset.EPRAccessor.SNR", false]], "snr (autodeer.hardware.dummy.dummyinterface attribute)": [[107, "autodeer.hardware.dummy.dummyInterface.SNR", false]], "snr (dummyinterface attribute)": [[106, "dummyInterface.SNR", false]], "snr (epraccessor property)": [[68, "EPRAccessor.SNR", false]], "snr_normalize() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.snr_normalize", false]], "snr_normalize() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.snr_normalize", false]], "snr_target (autodeer.twod_experiment.twodexperimentanalysis attribute)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.snr_target", false]], "snr_target (twodexperimentanalysis attribute)": [[56, "TwoDExperimentAnalysis.snr_target", false]], "snrcriteria (built-in class)": [[50, "SNRCriteria", false], [65, "SNRCriteria", false]], "snrcriteria (class in autodeer)": [[122, "autodeer.SNRCriteria", false]], "snrcriteria (class in autodeer.criteria)": [[67, "autodeer.criteria.SNRCriteria", false]], "sop() (in module autodeer)": [[122, "autodeer.sop", false], [122, "id108", false]], "sop() (in module autodeer.utils)": [[148, "autodeer.utils.sop", false]], "spec_config (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.spec_config", false]], "spec_config (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.spec_config", false]], "spec_config (brukerawg attribute)": [[93, "BrukerAWG.spec_config", false]], "spec_config (brukermpfu attribute)": [[95, "BrukerMPFU.spec_config", false]], "spectromterinterface (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.spectromterInterface", false]], "spectromterinterface (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.spectromterInterface", false]], "spectromterinterface (autodeerui attribute)": [[73, "autoDEERUI.spectromterInterface", false], [82, "autoDEERUI.spectromterInterface", false]], "speedup (autodeer.hardware.dummy.dummyinterface attribute)": [[107, "autodeer.hardware.dummy.dummyInterface.speedup", false]], "speedup (dummyinterface attribute)": [[106, "dummyInterface.speedup", false]], "spfutune() (in module autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU.SPFUtune", false]], "spins (autodeer.fieldsweep.spinsystem attribute)": [[23, "autodeer.FieldSweep.SpinSystem.Spins", false]], "spins (spinsystem attribute)": [[22, "SpinSystem.Spins", false]], "spinsystem (built-in class)": [[22, "SpinSystem", false]], "spinsystem (class in autodeer.fieldsweep)": [[23, "autodeer.FieldSweep.SpinSystem", false]], "srt (autodeer.hardware.xepr_experiments.deer attribute)": [[121, "autodeer.hardware.xepr_experiments.DEER.srt", false]], "srt (autodeer.hardware.xepr_experiments.eldortune attribute)": [[121, "autodeer.hardware.xepr_experiments.ELDORtune.srt", false]], "srt (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[121, "autodeer.hardware.xepr_experiments.MPFUtune.srt", false]], "srt (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[121, "autodeer.hardware.xepr_experiments.PulseProfile.srt", false]], "srt (deer attribute)": [[117, "DEER.srt", false]], "srt (eldortune attribute)": [[118, "ELDORtune.srt", false]], "srt (mpfutune attribute)": [[119, "MPFUtune.srt", false]], "srt (pulseprofile attribute)": [[120, "PulseProfile.srt", false]], "start_mode_tune() (autodeer.gui.modetune.modetune method)": [[86, "autodeer.gui.modetune.ModeTune.start_mode_tune", false]], "start_mode_tune() (modetune method)": [[84, "ModeTune.start_mode_tune", false]], "start_time (autodeer.hardware.dummy.dummyinterface attribute)": [[107, "autodeer.hardware.dummy.dummyInterface.start_time", false]], "start_time (dummyinterface attribute)": [[106, "dummyInterface.start_time", false]], "starttime (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.starttime", false]], "starttime (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.starttime", false]], "starttime (autodeerui attribute)": [[73, "autoDEERUI.starttime", false], [82, "autoDEERUI.starttime", false]], "state (autodeer.hardware.dummy.dummyinterface attribute)": [[107, "autodeer.hardware.dummy.dummyInterface.state", false]], "state (dummyinterface attribute)": [[106, "dummyInterface.state", false]], "status (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.status", false]], "status (autodeersignals attribute)": [[74, "autoDEERSignals.status", false]], "step_parameters() (in module autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU.step_parameters", false]], "stop() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.stop", false]], "stop() (autodeerworker method)": [[75, "autoDEERWorker.stop", false]], "stop_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[115, "autodeer.hardware.dummy_xepr.dummy_api.stop_exp", false]], "stop_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.stop_exp", false]], "stop_exp() (dummy_api method)": [[108, "dummy_api.stop_exp", false]], "stop_exp() (xeprapilink method)": [[104, "XeprAPILink.stop_exp", false]], "stop_flag (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.stop_flag", false]], "stop_flag (autodeerworker attribute)": [[75, "autoDEERWorker.stop_flag", false]], "story (autodeer.reporter attribute)": [[122, "autodeer.Reporter.story", false]], "story (autodeer.reporter.reporter attribute)": [[135, "autodeer.reporter.Reporter.story", false]], "story (reporter attribute)": [[43, "Reporter.story", false], [133, "Reporter.story", false]], "str_to_list_type() (in module autodeer.gui)": [[77, "autodeer.gui.str_to_list_type", false]], "str_to_list_type() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.str_to_list_type", false]], "styles (in module autodeer.reporter)": [[135, "autodeer.reporter.styles", false]], "svgflowable (built-in class)": [[134, "SvgFlowable", false]], "svgflowable (class in autodeer.reporter)": [[135, "autodeer.reporter.SvgFlowable", false]], "sweeprate (autodeer.chirppulse property)": [[122, "autodeer.ChirpPulse.sweeprate", false]], "sweeprate (autodeer.frequencysweptpulse property)": [[122, "autodeer.FrequencySweptPulse.sweeprate", false]], "sweeprate (autodeer.hspulse property)": [[122, "autodeer.HSPulse.sweeprate", false]], "sweeprate (autodeer.pulses.chirppulse property)": [[132, "autodeer.pulses.ChirpPulse.sweeprate", false]], "sweeprate (autodeer.pulses.frequencysweptpulse property)": [[132, "autodeer.pulses.FrequencySweptPulse.sweeprate", false]], "sweeprate (autodeer.pulses.hspulse property)": [[132, "autodeer.pulses.HSPulse.sweeprate", false]], "sweeprate (chirppulse property)": [[14, "ChirpPulse.sweeprate", false], [123, "ChirpPulse.sweeprate", false]], "sweeprate (frequencysweptpulse property)": [[26, "FrequencySweptPulse.sweeprate", false], [126, "FrequencySweptPulse.sweeprate", false]], "sweeprate (hspulse property)": [[28, "HSPulse.sweeprate", false], [128, "HSPulse.sweeprate", false]], "sweepspexp (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.SweepsPExp", false]], "sweepspexp (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.SweepsPExp", false]], "sweepwidth (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.SweepWidth", false]], "sweepwidth (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.SweepWidth", false]], "t (autodeer.resonatorprofileanalysis attribute)": [[122, "autodeer.ResonatorProfileAnalysis.t", false]], "t (autodeer.respro.resonatorprofileanalysis attribute)": [[47, "autodeer.ResPro.ResonatorProfileAnalysis.t", false]], "t (resonatorprofileanalysis attribute)": [[46, "ResonatorProfileAnalysis.t", false], [48, "ResonatorProfileAnalysis.t", false]], "t2_process() (in module autodeer.gui.main)": [[83, "autodeer.gui.main.T2_process", false]], "t2_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.T2_result", false]], "t2_result (autodeersignals attribute)": [[74, "autoDEERSignals.T2_result", false]], "t2relaxationsequence (built-in class)": [[53, "T2RelaxationSequence", false], [144, "T2RelaxationSequence", false]], "t2relaxationsequence (class in autodeer)": [[122, "autodeer.T2RelaxationSequence", false]], "t2relaxationsequence (class in autodeer.sequences)": [[146, "autodeer.sequences.T2RelaxationSequence", false]], "tau (autodeer.carrpurcellsequence attribute)": [[122, "autodeer.CarrPurcellSequence.tau", false]], "tau (autodeer.sequences.carrpurcellsequence attribute)": [[146, "autodeer.sequences.CarrPurcellSequence.tau", false]], "tau (autodeer.sequences.t2relaxationsequence attribute)": [[146, "autodeer.sequences.T2RelaxationSequence.tau", false]], "tau (autodeer.t2relaxationsequence attribute)": [[122, "autodeer.T2RelaxationSequence.tau", false]], "tau (carrpurcellsequence attribute)": [[13, "CarrPurcellSequence.tau", false], [136, "CarrPurcellSequence.tau", false]], "tau (t2relaxationsequence attribute)": [[53, "T2RelaxationSequence.tau", false], [144, "T2RelaxationSequence.tau", false]], "tau1 (autodeer.deersequence attribute)": [[122, "autodeer.DEERSequence.tau1", false]], "tau1 (autodeer.refocusedecho2dsequence attribute)": [[122, "autodeer.RefocusedEcho2DSequence.tau1", false]], "tau1 (autodeer.sequences.deersequence attribute)": [[146, "autodeer.sequences.DEERSequence.tau1", false]], "tau1 (autodeer.sequences.refocusedecho2dsequence attribute)": [[146, "autodeer.sequences.RefocusedEcho2DSequence.tau1", false]], "tau1 (deersequence attribute)": [[17, "DEERSequence.tau1", false], [137, "DEERSequence.tau1", false]], "tau1 (refocusedecho2dsequence attribute)": [[38, "RefocusedEcho2DSequence.tau1", false], [140, "RefocusedEcho2DSequence.tau1", false]], "tau1us (autodeer.deersequence attribute)": [[122, "autodeer.DEERSequence.tau1us", false]], "tau1us (autodeer.sequences.deersequence attribute)": [[146, "autodeer.sequences.DEERSequence.tau1us", false]], "tau1us (deersequence attribute)": [[17, "DEERSequence.tau1us", false], [137, "DEERSequence.tau1us", false]], "tau2 (autodeer.deersequence attribute)": [[122, "autodeer.DEERSequence.tau2", false]], "tau2 (autodeer.refocusedecho2dsequence attribute)": [[122, "autodeer.RefocusedEcho2DSequence.tau2", false]], "tau2 (autodeer.sequences.deersequence attribute)": [[146, "autodeer.sequences.DEERSequence.tau2", false]], "tau2 (autodeer.sequences.refocusedecho2dsequence attribute)": [[146, "autodeer.sequences.RefocusedEcho2DSequence.tau2", false]], "tau2 (deersequence attribute)": [[17, "DEERSequence.tau2", false], [137, "DEERSequence.tau2", false]], "tau2 (refocusedecho2dsequence attribute)": [[38, "RefocusedEcho2DSequence.tau2", false], [140, "RefocusedEcho2DSequence.tau2", false]], "temp_dir (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.temp_dir", false]], "temp_dir (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.temp_dir", false]], "temp_dir (brukerawg attribute)": [[93, "BrukerAWG.temp_dir", false]], "temp_dir (brukermpfu attribute)": [[95, "BrukerMPFU.temp_dir", false]], "terminate() (autodeer.classes.interface method)": [[61, "autodeer.classes.Interface.terminate", false]], "terminate() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.terminate", false]], "terminate() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.terminate", false]], "terminate() (autodeer.hardware.dummy.dummyinterface method)": [[107, "autodeer.hardware.dummy.dummyInterface.terminate", false]], "terminate() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.terminate", false]], "terminate() (autodeer.interface method)": [[122, "autodeer.Interface.terminate", false]], "terminate() (brukerawg method)": [[93, "BrukerAWG.terminate", false]], "terminate() (brukermpfu method)": [[95, "BrukerMPFU.terminate", false]], "terminate() (dummyinterface method)": [[106, "dummyInterface.terminate", false]], "terminate() (eth_awg_interface method)": [[101, "ETH_awg_interface.terminate", false]], "terminate() (interface method)": [[30, "Interface.terminate", false], [59, "Interface.terminate", false]], "terminate_at() (autodeer.classes.interface method)": [[61, "autodeer.classes.Interface.terminate_at", false]], "terminate_at() (autodeer.interface method)": [[122, "autodeer.Interface.terminate_at", false]], "terminate_at() (interface method)": [[30, "Interface.terminate_at", false], [59, "Interface.terminate_at", false]], "test (autodeer.criteria attribute)": [[122, "autodeer.Criteria.test", false]], "test (autodeer.criteria.criteria attribute)": [[67, "autodeer.criteria.Criteria.test", false]], "test (criteria attribute)": [[15, "Criteria.test", false], [63, "Criteria.test", false]], "test_if_mpfu_compatability() (in module autodeer.hardware.bruker_awg)": [[94, "autodeer.hardware.Bruker_AWG.test_if_MPFU_compatability", false]], "test_if_mpfu_compatability() (in module autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU.test_if_MPFU_compatability", false]], "test_interval (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.test_interval", false]], "test_interval (autodeerworker attribute)": [[75, "autoDEERWorker.test_interval", false]], "test_snr() (in module autodeer.gui)": [[77, "autodeer.gui.test_SNR", false]], "test_snr() (in module autodeer.gui.tools)": [[92, "autodeer.gui.tools.test_SNR", false]], "threadpool (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.threadpool", false]], "threadpool (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.threadpool", false]], "threadpool (autodeer.gui.quickdeer.deerplot attribute)": [[88, "autodeer.gui.quickdeer.DEERplot.threadpool", false]], "threadpool (autodeerui attribute)": [[73, "autoDEERUI.threadpool", false], [82, "autoDEERUI.threadpool", false]], "threadpool (deerplot attribute)": [[87, "DEERplot.threadpool", false]], "three_pulse() (autodeer.deersequence method)": [[122, "autodeer.DEERSequence.three_pulse", false]], "three_pulse() (autodeer.sequences.deersequence method)": [[146, "autodeer.sequences.DEERSequence.three_pulse", false]], "three_pulse() (deersequence method)": [[17, "DEERSequence.three_pulse", false], [137, "DEERSequence.three_pulse", false]], "time_target (autodeer.twod_experiment.twodexperimentanalysis attribute)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.time_target", false]], "time_target (twodexperimentanalysis attribute)": [[56, "TwoDExperimentAnalysis.time_target", false]], "timecriteria (built-in class)": [[55, "TimeCriteria", false], [66, "TimeCriteria", false]], "timecriteria (class in autodeer)": [[122, "autodeer.TimeCriteria", false]], "timecriteria (class in autodeer.criteria)": [[67, "autodeer.criteria.TimeCriteria", false]], "timeout (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERSignals.timeout", false]], "timeout (autodeersignals attribute)": [[74, "autoDEERSignals.timeout", false]], "timeout() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.timeout", false]], "timeout() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.timeout", false]], "timeout() (autodeerui method)": [[73, "autoDEERUI.timeout", false], [82, "autoDEERUI.timeout", false]], "toolbar() (autodeer.gui.quickdeer.deerplot method)": [[88, "autodeer.gui.quickdeer.DEERplot.toolbar", false]], "toolbar() (deerplot method)": [[87, "DEERplot.toolbar", false]], "tp (autodeer.delay attribute)": [[122, "autodeer.Delay.tp", false], [122, "id142", false]], "tp (autodeer.pulses.delay attribute)": [[132, "autodeer.pulses.Delay.tp", false]], "tp (delay attribute)": [[19, "Delay.tp", false], [124, "Delay.tp", false]], "trace_length (autodeer.twod_experiment.twodexperimentanalysis attribute)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.trace_length", false]], "trace_length (twodexperimentanalysis attribute)": [[56, "TwoDExperimentAnalysis.trace_length", false]], "transpose_dict_of_list() (in module autodeer)": [[122, "autodeer.transpose_dict_of_list", false]], "transpose_dict_of_list() (in module autodeer.utils)": [[148, "autodeer.utils.transpose_dict_of_list", false]], "transpose_list_of_dicts() (in module autodeer)": [[122, "autodeer.transpose_list_of_dicts", false]], "transpose_list_of_dicts() (in module autodeer.utils)": [[148, "autodeer.utils.transpose_list_of_dicts", false]], "tune() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune", false]], "tune() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune", false]], "tune() (autodeer.hardware.xepr_experiments.eldortune method)": [[121, "autodeer.hardware.xepr_experiments.ELDORtune.tune", false]], "tune() (autodeer.hardware.xepr_experiments.mpfutune method)": [[121, "autodeer.hardware.xepr_experiments.MPFUtune.tune", false]], "tune() (brukermpfu method)": [[95, "BrukerMPFU.tune", false]], "tune() (eldortune method)": [[118, "ELDORtune.tune", false]], "tune() (eth_awg_interface method)": [[101, "ETH_awg_interface.tune", false]], "tune() (mpfutune method)": [[119, "MPFUtune.tune", false]], "tune_nutation() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_nutation", false]], "tune_nutation() (brukerawg method)": [[93, "BrukerAWG.tune_nutation", false]], "tune_phase() (autodeer.hardware.xepr_experiments.mpfutune method)": [[121, "autodeer.hardware.xepr_experiments.MPFUtune.tune_phase", false]], "tune_phase() (in module autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU.tune_phase", false]], "tune_phase() (mpfutune method)": [[119, "MPFUtune.tune_phase", false]], "tune_power() (autodeer.hardware.xepr_experiments.mpfutune method)": [[121, "autodeer.hardware.xepr_experiments.MPFUtune.tune_power", false]], "tune_power() (in module autodeer.hardware.bruker_mpfu)": [[96, "autodeer.hardware.Bruker_MPFU.tune_power", false]], "tune_power() (mpfutune method)": [[119, "MPFUtune.tune_power", false]], "tune_pulse() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_pulse", false]], "tune_pulse() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune_pulse", false]], "tune_pulse() (autodeer.hardware.dummy.dummyinterface method)": [[107, "autodeer.hardware.dummy.dummyInterface.tune_pulse", false]], "tune_pulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune_pulse", false]], "tune_pulse() (brukerawg method)": [[93, "BrukerAWG.tune_pulse", false]], "tune_pulse() (brukermpfu method)": [[95, "BrukerMPFU.tune_pulse", false]], "tune_pulse() (dummyinterface method)": [[106, "dummyInterface.tune_pulse", false]], "tune_pulse() (eth_awg_interface method)": [[101, "ETH_awg_interface.tune_pulse", false]], "tune_pulses() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.tune_pulses", false]], "tune_pulses() (autodeerworker method)": [[75, "autoDEERWorker.tune_pulses", false]], "tune_rectpulse() (autodeer.hardware.bruker_awg.brukerawg method)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.dummy.dummyinterface method)": [[107, "autodeer.hardware.dummy.dummyInterface.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[102, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune_rectpulse", false]], "tune_rectpulse() (brukerawg method)": [[93, "BrukerAWG.tune_rectpulse", false]], "tune_rectpulse() (brukermpfu method)": [[95, "BrukerMPFU.tune_rectpulse", false]], "tune_rectpulse() (dummyinterface method)": [[106, "dummyInterface.tune_rectpulse", false]], "tune_rectpulse() (eth_awg_interface method)": [[101, "ETH_awg_interface.tune_rectpulse", false]], "tuning (autodeer.hardware.bruker_awg.brukerawg attribute)": [[94, "autodeer.hardware.Bruker_AWG.BrukerAWG.tuning", false]], "tuning (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[96, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tuning", false]], "tuning (brukerawg attribute)": [[93, "BrukerAWG.tuning", false]], "tuning (brukermpfu attribute)": [[95, "BrukerMPFU.tuning", false]], "twodexperimentanalysis (built-in class)": [[56, "TwoDExperimentAnalysis", false]], "twodexperimentanalysis (class in autodeer.twod_experiment)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis", false]], "twtprofilesequence (built-in class)": [[54, "TWTProfileSequence", false], [145, "TWTProfileSequence", false]], "twtprofilesequence (class in autodeer)": [[122, "autodeer.TWTProfileSequence", false]], "twtprofilesequence (class in autodeer.sequences)": [[146, "autodeer.sequences.TWTProfileSequence", false]], "ui (autodeer.gui.modetune.modetune attribute)": [[86, "autodeer.gui.modetune.ModeTune.ui", false]], "ui (modetune attribute)": [[84, "ModeTune.ui", false]], "unit (autodeer.classes.parameter attribute)": [[61, "autodeer.classes.Parameter.unit", false]], "unit (autodeer.parameter attribute)": [[122, "autodeer.Parameter.unit", false], [122, "id19", false], [122, "id86", false]], "unit (parameter attribute)": [[34, "Parameter.unit", false], [60, "Parameter.unit", false]], "update_analysis_table() (autodeer.gui.quickdeer.deerplot method)": [[88, "autodeer.gui.quickdeer.DEERplot.update_analysis_table", false]], "update_analysis_table() (deerplot method)": [[87, "DEERplot.update_analysis_table", false]], "update_deer_settings() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.update_deer_settings", false]], "update_deer_settings() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.update_deer_settings", false]], "update_deer_settings() (autodeerui method)": [[73, "autoDEERUI.update_deer_settings", false], [82, "autoDEERUI.update_deer_settings", false]], "update_deersettings() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_deersettings", false]], "update_deersettings() (autodeerworker method)": [[75, "autoDEERWorker.update_deersettings", false]], "update_dip() (autodeer.gui.modetune.modetune method)": [[86, "autodeer.gui.modetune.ModeTune.update_dip", false]], "update_dip() (modetune method)": [[84, "ModeTune.update_dip", false]], "update_fieldsweep() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.update_fieldsweep", false]], "update_fieldsweep() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.update_fieldsweep", false]], "update_fieldsweep() (autodeerui method)": [[73, "autoDEERUI.update_fieldsweep", false], [82, "autoDEERUI.update_fieldsweep", false]], "update_figure() (autodeer.gui.modetune.modetune method)": [[86, "autodeer.gui.modetune.ModeTune.update_figure", false]], "update_figure() (autodeer.gui.quickdeer.deerplot method)": [[88, "autodeer.gui.quickdeer.DEERplot.update_figure", false]], "update_figure() (deerplot method)": [[87, "DEERplot.update_figure", false]], "update_figure() (modetune method)": [[84, "ModeTune.update_figure", false]], "update_fit_result() (autodeer.gui.quickdeer.deerplot method)": [[88, "autodeer.gui.quickdeer.DEERplot.update_fit_result", false]], "update_fit_result() (deerplot method)": [[87, "DEERplot.update_fit_result", false]], "update_gyro() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_gyro", false]], "update_gyro() (autodeerworker method)": [[75, "autoDEERWorker.update_gyro", false]], "update_inputs_from_dataset() (autodeer.gui.quickdeer.deerplot method)": [[88, "autodeer.gui.quickdeer.DEERplot.update_inputs_from_dataset", false]], "update_inputs_from_dataset() (deerplot method)": [[87, "DEERplot.update_inputs_from_dataset", false]], "update_lo() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_LO", false]], "update_lo() (autodeerworker method)": [[75, "autoDEERWorker.update_LO", false]], "update_log_text() (autodeer.gui.log.logdialog method)": [[79, "autodeer.gui.log.LogDialog.update_log_text", false]], "update_log_text() (logdialog method)": [[78, "LogDialog.update_log_text", false]], "update_longdeer() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.update_longdeer", false]], "update_longdeer() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.update_longdeer", false]], "update_longdeer() (autodeerui method)": [[73, "autoDEERUI.update_longdeer", false], [82, "autoDEERUI.update_longdeer", false]], "update_optimise_pulses_figure() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.update_optimise_pulses_figure", false]], "update_optimise_pulses_figure() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.update_optimise_pulses_figure", false]], "update_optimise_pulses_figure() (autodeerui method)": [[73, "autoDEERUI.update_optimise_pulses_figure", false], [82, "autoDEERUI.update_optimise_pulses_figure", false]], "update_quickdeer() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.update_quickdeer", false]], "update_quickdeer() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.update_quickdeer", false]], "update_quickdeer() (autodeerui method)": [[73, "autoDEERUI.update_quickdeer", false], [82, "autoDEERUI.update_quickdeer", false]], "update_relax() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.update_relax", false]], "update_relax() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.update_relax", false]], "update_relax() (autodeerui method)": [[73, "autoDEERUI.update_relax", false], [82, "autoDEERUI.update_relax", false]], "update_relax2d() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.update_relax2D", false]], "update_relax2d() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.update_relax2D", false]], "update_relax2d() (autodeerui method)": [[73, "autoDEERUI.update_relax2D", false], [82, "autoDEERUI.update_relax2D", false]], "update_reptime() (autodeer.gui.autodeer_worker.autodeerworker method)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_reptime", false]], "update_reptime() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.update_reptime", false]], "update_reptime() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.update_reptime", false]], "update_reptime() (autodeerui method)": [[73, "autoDEERUI.update_reptime", false], [82, "autoDEERUI.update_reptime", false]], "update_reptime() (autodeerworker method)": [[75, "autoDEERWorker.update_reptime", false]], "update_respro() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.update_respro", false]], "update_respro() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.update_respro", false]], "update_respro() (autodeerui method)": [[73, "autoDEERUI.update_respro", false], [82, "autoDEERUI.update_respro", false]], "update_t2() (autodeer.gui.autodeerui method)": [[77, "autodeer.gui.autoDEERUI.update_T2", false]], "update_t2() (autodeer.gui.main.autodeerui method)": [[83, "autodeer.gui.main.autoDEERUI.update_T2", false]], "update_t2() (autodeerui method)": [[73, "autoDEERUI.update_T2", false], [82, "autoDEERUI.update_T2", false]], "updaterate (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.updaterate", false]], "updaterate (autodeerworker attribute)": [[75, "autoDEERWorker.updaterate", false]], "user_inputs (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.user_inputs", false]], "user_inputs (autodeerworker attribute)": [[75, "autoDEERWorker.user_inputs", false]], "userinput (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.userinput", false]], "userinput (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.userinput", false]], "userinput (autodeerui attribute)": [[73, "autoDEERUI.userinput", false], [82, "autoDEERUI.userinput", false]], "uwb_eval_match() (in module autodeer.hardware.eth_awg_load)": [[103, "autodeer.hardware.ETH_awg_load.uwb_eval_match", false]], "uwb_load() (in module autodeer.hardware.eth_awg_load)": [[103, "autodeer.hardware.ETH_awg_load.uwb_load", false]], "val (autodeer.hardware.dummy_xepr.dummy_param attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_param.val", false]], "val (dummy_param attribute)": [[112, "dummy_param.val", false]], "val_in_ns() (in module autodeer)": [[122, "autodeer.val_in_ns", false]], "val_in_ns() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy.val_in_ns", false]], "val_in_ns() (in module autodeer.utils)": [[148, "autodeer.utils.val_in_ns", false]], "val_in_us() (in module autodeer)": [[122, "autodeer.val_in_us", false]], "val_in_us() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.val_in_us", false]], "val_in_us() (in module autodeer.hardware.dummy)": [[107, "autodeer.hardware.dummy.val_in_us", false]], "val_in_us() (in module autodeer.utils)": [[148, "autodeer.utils.val_in_us", false]], "value (autodeer.hardware.dummy_xepr.dummy_param property)": [[115, "autodeer.hardware.dummy_xepr.dummy_param.value", false]], "value (dummy_param property)": [[112, "dummy_param.value", false]], "value_at_pos() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.value_at_pos", false]], "value_at_pos() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.value_at_pos", false]], "value_at_time() (autodeer.twod_experiment.twodexperimentanalysis method)": [[57, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.value_at_time", false]], "value_at_time() (twodexperimentanalysis method)": [[56, "TwoDExperimentAnalysis.value_at_time", false]], "var_hash (autodeer.hardware.bruker_tools.pulsespel attribute)": [[100, "autodeer.hardware.Bruker_tools.PulseSpel.var_hash", false]], "var_hash (pulsespel attribute)": [[99, "PulseSpel.var_hash", false]], "virtual (autodeer.classes.parameter attribute)": [[61, "autodeer.classes.Parameter.virtual", false]], "virtual (autodeer.parameter attribute)": [[122, "autodeer.Parameter.virtual", false], [122, "id21", false], [122, "id88", false]], "virtual (parameter attribute)": [[34, "Parameter.virtual", false], [60, "Parameter.virtual", false]], "vpsave() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.vpSave", false]], "vpsave() (dummy_xepr.xeprcmds method)": [[113, "dummy_xepr.XeprCmds.vpSave", false]], "vpsave() (xeprcmds method)": [[114, "XeprCmds.vpSave", false]], "wait (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[76, "autodeer.gui.autoDEER_worker.autoDEERWorker.wait", false]], "wait (autodeerworker attribute)": [[75, "autoDEERWorker.wait", false]], "waitcondition (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.waitCondition", false]], "waitcondition (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.waitCondition", false]], "waitcondition (autodeerui attribute)": [[73, "autoDEERUI.waitCondition", false], [82, "autoDEERUI.waitCondition", false]], "width (autodeer.reporter.svgflowable attribute)": [[135, "autodeer.reporter.SvgFlowable.width", false]], "width (svgflowable attribute)": [[134, "SvgFlowable.width", false]], "window (autodeer.pulses.sincpulse attribute)": [[132, "autodeer.pulses.SincPulse.window", false]], "window (autodeer.sincpulse attribute)": [[122, "autodeer.SincPulse.window", false]], "window (in module autodeer.gui.__main__)": [[72, "autodeer.gui.__main__.window", false]], "window (sincpulse attribute)": [[52, "SincPulse.window", false], [131, "SincPulse.window", false]], "worker (autodeer.gui.autodeerui attribute)": [[77, "autodeer.gui.autoDEERUI.worker", false]], "worker (autodeer.gui.main.autodeerui attribute)": [[83, "autodeer.gui.main.autoDEERUI.worker", false]], "worker (autodeerui attribute)": [[73, "autoDEERUI.worker", false], [82, "autoDEERUI.worker", false]], "worker (built-in class)": [[70, "Worker", false], [80, "Worker", false], [90, "Worker", false]], "worker (class in autodeer.gui)": [[77, "autodeer.gui.Worker", false]], "worker (class in autodeer.gui.main)": [[83, "autodeer.gui.main.Worker", false]], "worker (class in autodeer.gui.tools)": [[92, "autodeer.gui.tools.Worker", false]], "workersignals (built-in class)": [[71, "WorkerSignals", false], [81, "WorkerSignals", false], [91, "WorkerSignals", false]], "workersignals (class in autodeer.gui)": [[77, "autodeer.gui.WorkerSignals", false]], "workersignals (class in autodeer.gui.main)": [[83, "autodeer.gui.main.WorkerSignals", false]], "workersignals (class in autodeer.gui.tools)": [[92, "autodeer.gui.tools.WorkerSignals", false]], "wrap() (autodeer.reporter.svgflowable method)": [[135, "autodeer.reporter.SvgFlowable.wrap", false]], "wrap() (svgflowable method)": [[134, "SvgFlowable.wrap", false]], "write_pulsespel_file() (in module autodeer.hardware.bruker_tools)": [[100, "autodeer.hardware.Bruker_tools.write_pulsespel_file", false]], "xepr (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.Xepr", false]], "xepr (xeprapilink attribute)": [[104, "XeprAPILink.Xepr", false]], "xepr_path (in module autodeer.hardware.xeprapi_link)": [[105, "autodeer.hardware.XeprAPI_link.xepr_path", false]], "xepr_save() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.xepr_save", false]], "xepr_save() (xeprapilink method)": [[104, "XeprAPILink.xepr_save", false]], "xeprapilink (built-in class)": [[104, "XeprAPILink", false]], "xeprapilink (class in autodeer.hardware.xeprapi_link)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink", false]], "xeprcmds (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[105, "autodeer.hardware.XeprAPI_link.XeprAPILink.XeprCmds", false]], "xeprcmds (built-in class)": [[114, "XeprCmds", false]], "xeprcmds (xeprapilink attribute)": [[104, "XeprAPILink.XeprCmds", false]], "xeprdataset() (autodeer.hardware.dummy_xepr.dummy_xepr method)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprDataset", false]], "xeprdataset() (dummy_xepr method)": [[113, "dummy_xepr.XeprDataset", false]], "xeprexperiment() (autodeer.hardware.dummy_xepr.dummy_xepr method)": [[115, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprExperiment", false]], "xeprexperiment() (dummy_xepr method)": [[113, "dummy_xepr.XeprExperiment", false]], "xspecres (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[115, "autodeer.hardware.dummy_xepr.dummy_cur_exp.XSpecRes", false]], "xspecres (dummy_cur_exp attribute)": [[109, "dummy_cur_exp.XSpecRes", false]]}, "objects": {"": [[93, 0, 1, "", "BrukerAWG"], [95, 0, 1, "", "BrukerMPFU"], [39, 0, 1, "", "CarrPurcellAnalysis"], [136, 0, 1, "", "CarrPurcellSequence"], [123, 0, 1, "", "ChirpPulse"], [63, 0, 1, "", "Criteria"], [117, 0, 1, "", "DEER"], [64, 0, 1, "", "DEERCriteria"], [137, 0, 1, "", "DEERSequence"], [87, 0, 1, "", "DEERplot"], [124, 0, 1, "", "Delay"], [125, 0, 1, "", "Detection"], [31, 0, 1, "", "DictFormater"], [118, 0, 1, "", "ELDORtune"], [68, 0, 1, "", "EPRAccessor"], [101, 0, 1, "", "ETH_awg_interface"], [24, 0, 1, "", "FieldSweepAnalysis"], [138, 0, 1, "", "FieldSweepSequence"], [126, 0, 1, "", "FrequencySweptPulse"], [127, 0, 1, "", "GaussianPulse"], [128, 0, 1, "", "HSPulse"], [139, 0, 1, "", "HahnEchoSequence"], [59, 0, 1, "", "Interface"], [78, 0, 1, "", "LogDialog"], [119, 0, 1, "", "MPFUtune"], [84, 0, 1, "", "ModeTune"], [97, 0, 1, "", "PSPhaseCycle"], [98, 0, 1, "", "PSparvar"], [60, 0, 1, "", "Parameter"], [129, 0, 1, "", "Pulse"], [120, 0, 1, "", "PulseProfile"], [99, 0, 1, "", "PulseSpel"], [32, 0, 1, "", "QtLogHandler"], [130, 0, 1, "", "RectPulse"], [40, 0, 1, "", "RefocusedEcho2DAnalysis"], [140, 0, 1, "", "RefocusedEcho2DSequence"], [133, 0, 1, "", "Reporter"], [44, 0, 1, "", "ReptimeAnalysis"], [141, 0, 1, "", "ReptimeScan"], [48, 0, 1, "", "ResonatorProfileAnalysis"], [142, 0, 1, "", "ResonatorProfileSequence"], [65, 0, 1, "", "SNRCriteria"], [143, 0, 1, "", "Sequence"], [131, 0, 1, "", "SincPulse"], [22, 0, 1, "", "SpinSystem"], [134, 0, 1, "", "SvgFlowable"], [144, 0, 1, "", "T2RelaxationSequence"], [145, 0, 1, "", "TWTProfileSequence"], [66, 0, 1, "", "TimeCriteria"], [56, 0, 1, "", "TwoDExperimentAnalysis"], [90, 0, 1, "", "Worker"], [91, 0, 1, "", "WorkerSignals"], [104, 0, 1, "", "XeprAPILink"], [114, 0, 1, "", "XeprCmds"], [74, 0, 1, "", "autoDEERSignals"], [82, 0, 1, "", "autoDEERUI"], [75, 0, 1, "", "autoDEERWorker"], [122, 4, 0, "-", "autodeer"], [106, 0, 1, "", "dummyInterface"], [108, 0, 1, "", "dummy_api"], [109, 0, 1, "", "dummy_cur_exp"], [110, 0, 1, "", "dummy_dataset"], [111, 0, 1, "", "dummy_hidden"], [112, 0, 1, "", "dummy_param"], [113, 0, 1, "", "dummy_xepr"], [85, 0, 1, "", "get_dataWorker"]], "BrukerAWG": [[93, 1, 1, "", "_launch_complex_thread"], [93, 1, 1, "", "acquire_dataset"], [93, 2, 1, "", "api"], [93, 2, 1, "", "bg_data"], [93, 2, 1, "", "bg_thread"], [93, 2, 1, "", "bridge_config"], [93, 1, 1, "", "calc_d0"], [93, 1, 1, "", "calc_d0_from_Hahn_Echo"], [93, 1, 1, "", "connect"], [93, 2, 1, "", "cur_exp"], [93, 2, 1, "", "d0"], [93, 1, 1, "", "isrunning"], [93, 1, 1, "", "launch"], [93, 2, 1, "", "pool"], [93, 2, 1, "", "savefolder"], [93, 2, 1, "", "savename"], [93, 1, 1, "", "setup"], [93, 2, 1, "", "setup_flag"], [93, 2, 1, "", "spec_config"], [93, 2, 1, "", "temp_dir"], [93, 1, 1, "", "terminate"], [93, 1, 1, "", "tune_nutation"], [93, 1, 1, "", "tune_pulse"], [93, 1, 1, "", "tune_rectpulse"], [93, 2, 1, "", "tuning"]], "BrukerMPFU": [[95, 2, 1, "", "MPFU"], [95, 1, 1, "", "_launch_complex_thread"], [95, 1, 1, "", "acquire_dataset"], [95, 2, 1, "", "api"], [95, 2, 1, "", "bg_data"], [95, 2, 1, "", "bg_thread"], [95, 2, 1, "", "bridge_config"], [95, 1, 1, "", "calc_d0"], [95, 1, 1, "", "calc_d0_from_Hahn_Echo"], [95, 1, 1, "", "connect"], [95, 2, 1, "", "cur_exp"], [95, 2, 1, "", "d0"], [95, 1, 1, "", "isrunning"], [95, 1, 1, "", "launch"], [95, 2, 1, "", "pool"], [95, 2, 1, "", "savefolder"], [95, 2, 1, "", "savename"], [95, 1, 1, "", "setup"], [95, 2, 1, "", "setup_flag"], [95, 2, 1, "", "spec_config"], [95, 2, 1, "", "temp_dir"], [95, 1, 1, "", "terminate"], [95, 1, 1, "", "tune"], [95, 1, 1, "", "tune_pulse"], [95, 1, 1, "", "tune_rectpulse"], [95, 2, 1, "", "tuning"]], "CarrPurcellAnalysis": [[39, 1, 1, "", "check_decay"], [39, 2, 1, "", "data"], [39, 2, 1, "", "dataset"], [39, 1, 1, "", "find_optimal"], [39, 1, 1, "", "fit"], [39, 1, 1, "", "plot"]], "CarrPurcellSequence": [[136, 1, 1, "", "_build_sequence"], [136, 2, 1, "", "dim"], [136, 2, 1, "", "n"], [136, 2, 1, "", "tau"]], "ChirpPulse": [[123, 1, 1, "", "func"], [123, 3, 1, "", "sweeprate"]], "Criteria": [[63, 1, 1, "", "__add__"], [63, 2, 1, "", "description"], [63, 2, 1, "", "end_signal"], [63, 2, 1, "", "name"], [63, 2, 1, "", "test"]], "DEER": [[117, 2, 1, "", "api"], [117, 2, 1, "", "awg"], [117, 2, 1, "", "d0"], [117, 2, 1, "", "det_frq"], [117, 2, 1, "", "hybrid"], [117, 2, 1, "", "mpfu"], [117, 2, 1, "", "pump_frq"], [117, 1, 1, "", "run_4p"], [117, 1, 1, "", "run_5p"], [117, 1, 1, "", "run_CP"], [117, 2, 1, "", "srt"]], "DEERSequence": [[137, 2, 1, "", "ESEEM"], [137, 1, 1, "", "add_ESEEM_avg"], [137, 2, 1, "", "deadtime"], [137, 2, 1, "", "dt"], [137, 1, 1, "", "five_pulse"], [137, 1, 1, "", "four_pulse"], [137, 1, 1, "", "nDEER_CP"], [137, 1, 1, "", "select_pcyc"], [137, 1, 1, "", "seven_pulse"], [137, 1, 1, "", "simulate"], [137, 2, 1, "", "tau1"], [137, 2, 1, "", "tau1us"], [137, 2, 1, "", "tau2"], [137, 1, 1, "", "three_pulse"]], "DEERplot": [[87, 2, 1, "", "DL_params"], [87, 1, 1, "", "clearLayout"], [87, 1, 1, "", "clear_all"], [87, 2, 1, "", "cores"], [87, 1, 1, "", "create_figure"], [87, 2, 1, "", "current_data"], [87, 2, 1, "", "current_folder"], [87, 2, 1, "", "current_results"], [87, 1, 1, "", "process_deeranalysis"], [87, 1, 1, "", "refresh_deer"], [87, 1, 1, "", "setup_inputs"], [87, 2, 1, "", "threadpool"], [87, 1, 1, "", "toolbar"], [87, 1, 1, "", "update_analysis_table"], [87, 1, 1, "", "update_figure"], [87, 1, 1, "", "update_fit_result"], [87, 1, 1, "", "update_inputs_from_dataset"]], "Delay": [[124, 2, 1, "", "pcyc"], [124, 2, 1, "", "scale"], [124, 2, 1, "", "tp"]], "Detection": [[125, 2, 1, "", "freq"], [125, 2, 1, "", "pcyc"], [125, 2, 1, "", "scale"]], "DictFormater": [[31, 1, 1, "", "format"]], "ELDORtune": [[118, 1, 1, "", "_get_exp"], [118, 1, 1, "", "_setup_exp"], [118, 2, 1, "", "api"], [118, 2, 1, "", "d0"], [118, 1, 1, "", "find_min"], [118, 2, 1, "", "hardware_wait"], [118, 2, 1, "", "ps_length"], [118, 2, 1, "", "srt"], [118, 1, 1, "", "tune"]], "EPRAccessor": [[68, 3, 1, "", "SNR"], [68, 2, 1, "", "_obj"], [68, 3, 1, "", "correctphase"], [68, 3, 1, "", "correctphasefull"], [68, 3, 1, "", "fft"], [68, 3, 1, "", "normalise"], [68, 1, 1, "", "save"], [68, 3, 1, "", "sequence"]], "ETH_awg_interface": [[101, 2, 1, "", "IFgain"], [101, 2, 1, "", "IFgain_options"], [101, 1, 1, "", "_build_exp_struct"], [101, 1, 1, "", "_build_parvar"], [101, 1, 1, "", "_build_phase_cycle"], [101, 1, 1, "", "_build_pulse"], [101, 1, 1, "", "acquire_dataset"], [101, 1, 1, "", "acquire_dataset_from_matlab"], [101, 2, 1, "", "awg_freq"], [101, 2, 1, "", "bg_data"], [101, 2, 1, "", "bg_thread"], [101, 1, 1, "", "connect"], [101, 2, 1, "", "cur_exp"], [101, 2, 1, "", "dig_rate"], [101, 1, 1, "", "isrunning"], [101, 1, 1, "", "launch"], [101, 1, 1, "", "launch_long"], [101, 1, 1, "", "launch_normal"], [101, 1, 1, "", "launch_withIFGain"], [101, 2, 1, "", "pulses"], [101, 3, 1, "", "savefolder"], [101, 1, 1, "", "terminate"], [101, 1, 1, "", "tune"], [101, 1, 1, "", "tune_pulse"], [101, 1, 1, "", "tune_rectpulse"]], "FieldSweepAnalysis": [[24, 1, 1, "", "calc_gyro"], [24, 1, 1, "", "calc_noise_level"], [24, 2, 1, "", "data"], [24, 1, 1, "", "find_max"], [24, 1, 1, "", "fit"], [24, 1, 1, "", "plot"], [24, 1, 1, "", "smooth"]], "FieldSweepSequence": [[138, 2, 1, "", "B"], [138, 2, 1, "", "name"]], "FrequencySweptPulse": [[126, 3, 1, "", "Qcrit"], [126, 3, 1, "", "amp_factor"], [126, 3, 1, "", "sweeprate"]], "GaussianPulse": [[127, 2, 1, "", "FWHM"], [127, 2, 1, "", "freq"], [127, 1, 1, "", "func"]], "HSPulse": [[128, 2, 1, "", "beta"], [128, 1, 1, "", "func"], [128, 2, 1, "", "order1"], [128, 2, 1, "", "order2"], [128, 3, 1, "", "sweeprate"]], "Interface": [[59, 1, 1, "", "acquire_dataset"], [59, 1, 1, "", "connect"], [59, 1, 1, "", "isrunning"], [59, 1, 1, "", "launch"], [59, 2, 1, "", "pulses"], [59, 2, 1, "", "resonator"], [59, 2, 1, "", "savefolder"], [59, 2, 1, "", "savename"], [59, 1, 1, "", "terminate"], [59, 1, 1, "", "terminate_at"]], "LogDialog": [[78, 1, 1, "", "add_new_entry"], [78, 1, 1, "", "clear_log"], [78, 2, 1, "", "log"], [78, 2, 1, "", "log_levels"], [78, 1, 1, "", "save_log_to_file"], [78, 1, 1, "", "update_log_text"]], "MPFUtune": [[119, 1, 1, "", "_setup_echo"], [119, 2, 1, "", "api"], [119, 1, 1, "", "calc_d0"], [119, 2, 1, "", "d0"], [119, 2, 1, "", "hardware_wait"], [119, 2, 1, "", "ps_length"], [119, 2, 1, "", "srt"], [119, 1, 1, "", "tune"], [119, 1, 1, "", "tune_phase"], [119, 1, 1, "", "tune_power"]], "ModeTune": [[84, 1, 1, "", "create_figure"], [84, 2, 1, "", "interface"], [84, 1, 1, "", "start_mode_tune"], [84, 2, 1, "", "ui"], [84, 1, 1, "", "update_dip"], [84, 1, 1, "", "update_figure"]], "PSPhaseCycle": [[97, 2, 1, "", "BPhaseCycles"], [97, 1, 1, "", "_MPFU"], [97, 1, 1, "", "__str__"], [97, 1, 1, "", "_detect"], [97, 1, 1, "", "_main"]], "PSparvar": [[98, 2, 1, "", "PulseSpel"], [98, 1, 1, "", "checkPulseSpel"], [98, 2, 1, "", "events"]], "Parameter": [[60, 1, 1, "", "__add__"], [60, 1, 1, "", "__eq__"], [60, 1, 1, "", "__mul__"], [60, 1, 1, "", "__rmul__"], [60, 1, 1, "", "__sub__"], [60, 1, 1, "", "_from_dict"], [60, 1, 1, "", "_from_json"], [60, 1, 1, "", "_to_dict"], [60, 1, 1, "", "_to_json"], [60, 1, 1, "", "add_axis"], [60, 2, 1, "", "ax_id"], [60, 2, 1, "", "axis"], [60, 1, 1, "", "copy"], [60, 2, 1, "", "description"], [60, 3, 1, "", "dim"], [60, 1, 1, "", "get_axis"], [60, 1, 1, "", "is_static"], [60, 1, 1, "", "load"], [60, 2, 1, "", "name"], [60, 1, 1, "", "remove_dynamic"], [60, 1, 1, "", "save"], [60, 2, 1, "", "unit"], [60, 2, 1, "", "virtual"]], "Pulse": [[129, 2, 1, "", "Progression"], [129, 1, 1, "", "__str__"], [129, 1, 1, "", "_addPhaseCycle"], [129, 1, 1, "", "_buildFMAM"], [129, 1, 1, "", "_calc_fft"], [129, 1, 1, "", "_from_dict"], [129, 1, 1, "", "_from_json"], [129, 1, 1, "", "_pcyc_str"], [129, 1, 1, "", "_to_dict"], [129, 1, 1, "", "_to_json"], [129, 3, 1, "", "amp_factor"], [129, 3, 1, "", "bandwidth"], [129, 1, 1, "", "build_shape"], [129, 1, 1, "", "build_table"], [129, 1, 1, "", "copy"], [129, 1, 1, "", "exciteprofile"], [129, 1, 1, "", "isDelayFocused"], [129, 1, 1, "", "isPulseFocused"], [129, 1, 1, "", "is_static"], [129, 1, 1, "", "load"], [129, 2, 1, "", "name"], [129, 1, 1, "", "plot"], [129, 1, 1, "", "plot_fft"], [129, 1, 1, "", "save"]], "PulseProfile": [[120, 1, 1, "", "_freq_sweep"], [120, 1, 1, "", "_setup_exp"], [120, 2, 1, "", "api"], [120, 2, 1, "", "d0"], [120, 2, 1, "", "hardware_wait"], [120, 2, 1, "", "ps_length"], [120, 2, 1, "", "srt"]], "PulseSpel": [[99, 2, 1, "", "AWG"], [99, 2, 1, "", "MPFU"], [99, 1, 1, "", "_ExpDefs"], [99, 1, 1, "", "__str__"], [99, 1, 1, "", "_addAWGPulse"], [99, 1, 1, "", "_addDef"], [99, 1, 1, "", "_addExp"], [99, 1, 1, "", "_addPhaseCycle"], [99, 1, 1, "", "_addScanLoop"], [99, 1, 1, "", "_check_sequence"], [99, 1, 1, "", "_cmpl_Exp"], [99, 1, 1, "", "_cmpl_def"], [99, 1, 1, "", "_new_delay"], [99, 1, 1, "", "_new_pulse"], [99, 1, 1, "", "_new_var"], [99, 2, 1, "", "def_file_str"], [99, 2, 1, "", "dims"], [99, 2, 1, "", "exp_file_str"], [99, 2, 1, "", "parvars"], [99, 2, 1, "", "pcyc_str"], [99, 2, 1, "", "possible_delays"], [99, 2, 1, "", "possible_pulses"], [99, 2, 1, "", "possible_vars"], [99, 1, 1, "", "save"], [99, 2, 1, "", "sequence"], [99, 2, 1, "", "var_hash"]], "QtLogHandler": [[32, 1, 1, "", "emit"], [32, 2, 1, "", "signal"]], "RectPulse": [[130, 2, 1, "", "freq"], [130, 1, 1, "", "func"]], "RefocusedEcho2DAnalysis": [[40, 1, 1, "", "_smooth"], [40, 2, 1, "", "axis"], [40, 2, 1, "", "data"], [40, 2, 1, "", "dataset"], [40, 1, 1, "", "find_optimal"], [40, 1, 1, "", "optimal_tau1"], [40, 1, 1, "", "plot1D"], [40, 1, 1, "", "plot2D"]], "RefocusedEcho2DSequence": [[140, 1, 1, "", "_build_sequence"], [140, 2, 1, "", "tau1"], [140, 2, 1, "", "tau2"]], "Reporter": [[133, 1, 1, "", "_build"], [133, 1, 1, "", "add_code_block"], [133, 1, 1, "", "add_figure"], [133, 1, 1, "", "add_new_section"], [133, 1, 1, "", "add_page_break"], [133, 1, 1, "", "add_space"], [133, 1, 1, "", "add_table"], [133, 1, 1, "", "add_text"], [133, 1, 1, "", "add_title"], [133, 1, 1, "", "footer"], [133, 1, 1, "", "header"], [133, 2, 1, "", "pdf"], [133, 2, 1, "", "story"]], "ReptimeAnalysis": [[44, 2, 1, "", "axis"], [44, 1, 1, "", "calc_optimal_reptime"], [44, 1, 1, "", "fit"], [44, 1, 1, "", "plot"], [44, 2, 1, "", "seq"]], "ReptimeScan": [[141, 2, 1, "", "name"]], "ResonatorProfileAnalysis": [[48, 1, 1, "", "_process_fit"], [48, 2, 1, "", "dataset"], [48, 2, 1, "", "f_lims"], [48, 1, 1, "", "fit"], [48, 2, 1, "", "n_files"], [48, 1, 1, "", "plot"], [48, 1, 1, "", "process_nutations"], [48, 2, 1, "", "t"]], "ResonatorProfileSequence": [[142, 1, 1, "", "_build_sequence"], [142, 2, 1, "", "fwidth"], [142, 2, 1, "", "gyro"]], "Sequence": [[143, 2, 1, "", "LO"], [143, 1, 1, "", "__str__"], [143, 1, 1, "", "_buildPhaseCycle"], [143, 1, 1, "", "_checkRect"], [143, 1, 1, "", "_convert_to_delay"], [143, 1, 1, "", "_convert_to_pulses"], [143, 1, 1, "", "_estimate_time"], [143, 1, 1, "", "_from_dict"], [143, 1, 1, "", "_from_json"], [143, 1, 1, "", "_to_dict"], [143, 1, 1, "", "_to_json"], [143, 1, 1, "", "addPulse"], [143, 2, 1, "", "averages"], [143, 2, 1, "", "axes_uuid"], [143, 1, 1, "", "convert"], [143, 1, 1, "", "copy"], [143, 1, 1, "", "evolution"], [143, 1, 1, "", "isDelayFocused"], [143, 1, 1, "", "isPulseFocused"], [143, 1, 1, "", "load"], [143, 2, 1, "", "name"], [143, 2, 1, "", "num_pulses"], [143, 1, 1, "", "plot"], [143, 1, 1, "", "plot_pulse_exc"], [143, 2, 1, "", "progTable"], [143, 2, 1, "", "pulses"], [143, 2, 1, "", "reduce_uuid"], [143, 1, 1, "", "save"], [143, 3, 1, "", "seqtable_steps"], [143, 1, 1, "", "shift_detfreq_to_zero"], [143, 2, 1, "", "shots"]], "SincPulse": [[131, 2, 1, "", "freq"], [131, 1, 1, "", "func"], [131, 2, 1, "", "order"], [131, 2, 1, "", "window"]], "SpinSystem": [[22, 2, 1, "", "A"], [22, 2, 1, "", "I"], [22, 2, 1, "", "S"], [22, 2, 1, "", "Spins"], [22, 2, 1, "", "g"], [22, 2, 1, "", "gnscale"], [22, 2, 1, "", "nElectrons"], [22, 2, 1, "", "nNuclei"], [22, 2, 1, "", "nStates"]], "SvgFlowable": [[134, 1, 1, "", "draw"], [134, 2, 1, "", "drawing"], [134, 2, 1, "", "height"], [134, 2, 1, "", "width"], [134, 1, 1, "", "wrap"]], "T2RelaxationSequence": [[144, 2, 1, "", "name"], [144, 2, 1, "", "tau"]], "TWTProfileSequence": [[145, 1, 1, "", "_build_sequence"]], "TwoDExperimentAnalysis": [[56, 1, 1, "", "_data_transpose"], [56, 1, 1, "", "_stability_check"], [56, 1, 1, "", "calculate_noise_level"], [56, 1, 1, "", "calculate_optimal"], [56, 1, 1, "", "calculate_snr_threshold"], [56, 1, 1, "", "create_bahrenberg_plots"], [56, 1, 1, "", "create_slice_plot"], [56, 1, 1, "", "create_twoD_plot"], [56, 1, 1, "", "estimated_snr"], [56, 1, 1, "", "import_data"], [56, 1, 1, "", "import_dataset"], [56, 1, 1, "", "invert_signal"], [56, 1, 1, "", "load"], [56, 2, 1, "", "noise_frac"], [56, 1, 1, "", "optimal_slice_plot"], [56, 1, 1, "", "set_snr_target"], [56, 1, 1, "", "set_snr_threshold"], [56, 1, 1, "", "set_time_target"], [56, 1, 1, "", "snr_normalize"], [56, 2, 1, "", "snr_target"], [56, 2, 1, "", "time_target"], [56, 2, 1, "", "trace_length"], [56, 1, 1, "", "value_at_pos"], [56, 1, 1, "", "value_at_time"]], "Worker": [[90, 2, 1, "", "args"], [90, 2, 1, "", "fn"], [90, 2, 1, "", "kwargs"], [90, 1, 1, "", "run"], [90, 2, 1, "", "signals"]], "WorkerSignals": [[91, 2, 1, "", "error"], [91, 2, 1, "", "finished"], [81, 2, 1, "", "progress"], [91, 2, 1, "", "result"]], "XeprAPILink": [[104, 2, 1, "", "Xepr"], [104, 2, 1, "", "XeprCmds"], [104, 1, 1, "", "_get_Xepr_global"], [104, 1, 1, "", "_get_cur_exp_global"], [104, 1, 1, "", "_set_Xepr_global"], [104, 1, 1, "", "_set_cur_exp_global"], [104, 1, 1, "", "_set_cur_exp_param"], [104, 1, 1, "", "_set_hidden_param"], [104, 2, 1, "", "_tmp_dir"], [104, 1, 1, "", "_xepr_retry"], [104, 1, 1, "", "abort_exp"], [104, 1, 1, "", "acquire_dataset"], [104, 1, 1, "", "acquire_scan"], [104, 1, 1, "", "acquire_scan_2d"], [104, 1, 1, "", "acquire_scan_at"], [104, 1, 1, "", "compile_PulseSpel_def"], [104, 1, 1, "", "compile_PulseSpel_prg"], [104, 1, 1, "", "connect"], [104, 2, 1, "", "cur_exp"], [104, 1, 1, "", "find_Xepr"], [104, 1, 1, "", "find_cur_exp"], [104, 1, 1, "", "find_hidden"], [104, 1, 1, "", "get_Acquisition_mode"], [104, 1, 1, "", "get_ELDOR_freq"], [104, 1, 1, "", "get_MW_amp"], [104, 1, 1, "", "get_PhaseCycle"], [104, 1, 1, "", "get_PulseSpel_def_filename"], [104, 1, 1, "", "get_PulseSpel_def_filepath"], [104, 1, 1, "", "get_PulseSpel_exp_filename"], [104, 1, 1, "", "get_PulseSpel_exp_filepath"], [104, 1, 1, "", "get_PulseSpel_experiment"], [104, 1, 1, "", "get_PulseSpel_phase_cycling"], [104, 1, 1, "", "get_ReplaceMode"], [104, 1, 1, "", "get_attenuator"], [104, 1, 1, "", "get_config_file"], [104, 1, 1, "", "get_counterfreq"], [104, 1, 1, "", "get_field"], [104, 1, 1, "", "get_freq"], [104, 1, 1, "", "get_hidden_param"], [104, 1, 1, "", "get_param"], [104, 1, 1, "", "get_phase"], [104, 1, 1, "", "get_spec_config"], [104, 1, 1, "", "get_sweep_width"], [104, 1, 1, "", "get_video_bandwidth"], [104, 1, 1, "", "get_video_gain"], [104, 2, 1, "", "hidden"], [104, 1, 1, "", "is_exp_running"], [104, 1, 1, "", "pause_exp"], [104, 1, 1, "", "rerun_exp"], [104, 1, 1, "", "run_exp"], [104, 1, 1, "", "save_PulseSpel_def"], [104, 1, 1, "", "save_PulseSpel_exp"], [104, 1, 1, "", "set_Acquisition_mode"], [104, 1, 1, "", "set_ELDOR_freq"], [104, 1, 1, "", "set_MW_amp"], [104, 1, 1, "", "set_PhaseCycle"], [104, 1, 1, "", "set_PulseSpel_def_filepath"], [104, 1, 1, "", "set_PulseSpel_exp_filepath"], [104, 1, 1, "", "set_PulseSpel_experiment"], [104, 1, 1, "", "set_PulseSpel_phase_cycling"], [104, 1, 1, "", "set_PulseSpel_var"], [104, 1, 1, "", "set_ReplaceMode"], [104, 1, 1, "", "set_attenuator"], [104, 1, 1, "", "set_config_file"], [104, 1, 1, "", "set_field"], [104, 1, 1, "", "set_freq"], [104, 1, 1, "", "set_hidden_param"], [104, 1, 1, "", "set_param"], [104, 1, 1, "", "set_phase"], [104, 1, 1, "", "set_sweep_width"], [104, 1, 1, "", "set_video_bandwidth"], [104, 1, 1, "", "set_video_gain"], [104, 1, 1, "", "stop_exp"], [104, 1, 1, "", "xepr_save"]], "XeprCmds": [[114, 1, 1, "", "aqExpSelect"], [114, 1, 1, "", "aqPgCompile"], [114, 1, 1, "", "aqPgDefLoad"], [114, 1, 1, "", "aqPgDefSaveAs"], [114, 1, 1, "", "aqPgLoad"], [114, 1, 1, "", "aqPgSaveAs"], [114, 1, 1, "", "aqPgShowPrg"], [114, 1, 1, "", "vpSave"]], "autoDEERSignals": [[74, 2, 1, "", "Relax2D_result"], [74, 2, 1, "", "T2_result"], [74, 2, 1, "", "error"], [74, 2, 1, "", "finished"], [74, 2, 1, "", "fsweep_result"], [74, 2, 1, "", "longdeer_result"], [74, 2, 1, "", "longdeer_update"], [74, 2, 1, "", "progress"], [74, 2, 1, "", "quickdeer_result"], [74, 2, 1, "", "quickdeer_update"], [74, 2, 1, "", "relax_result"], [74, 2, 1, "", "reptime_scan_result"], [74, 2, 1, "", "respro_result"], [74, 2, 1, "", "result"], [74, 2, 1, "", "status"], [74, 2, 1, "", "timeout"]], "autoDEERUI": [[82, 2, 1, "", "Bruker"], [82, 2, 1, "", "DL_params"], [82, 2, 1, "", "LO"], [82, 2, 1, "", "Min_tp"], [82, 1, 1, "", "RunAdvancedAutoDEER"], [82, 1, 1, "", "RunAutoDEER"], [82, 1, 1, "", "RunFullyAutoDEER"], [82, 1, 1, "", "advanced_mode_inputs"], [82, 1, 1, "", "change_LO"], [82, 1, 1, "", "check_CP"], [82, 1, 1, "", "check_T2"], [82, 1, 1, "", "clear_all"], [82, 2, 1, "", "config"], [82, 1, 1, "", "connect_spectrometer"], [82, 2, 1, "", "connected"], [82, 2, 1, "", "cores"], [82, 2, 1, "", "correction_factor"], [82, 1, 1, "", "create_fieldsweep_figure"], [82, 1, 1, "", "create_relax_figure"], [82, 1, 1, "", "create_report"], [82, 1, 1, "", "create_respro_figure"], [82, 2, 1, "", "current_data"], [82, 2, 1, "", "current_folder"], [82, 2, 1, "", "current_results"], [82, 2, 1, "", "deer_settings"], [82, 1, 1, "", "fsweep_toolbar"], [82, 2, 1, "", "gyro"], [82, 1, 1, "", "initialise_deer_settings"], [82, 1, 1, "", "load_epr_file"], [82, 1, 1, "", "load_folder"], [82, 1, 1, "", "load_spectrometer_config"], [82, 2, 1, "", "longDEER"], [82, 1, 1, "", "optimise_pulses"], [82, 1, 1, "", "optimise_pulses_button"], [82, 2, 1, "", "priorties"], [82, 2, 1, "", "pulses"], [82, 2, 1, "", "q_DEER"], [82, 2, 1, "", "queue"], [82, 1, 1, "", "raise_warning"], [82, 1, 1, "", "refresh_T2"], [82, 1, 1, "", "refresh_fieldsweep_after_fit"], [82, 1, 1, "", "refresh_relax"], [82, 1, 1, "", "refresh_relax_figure"], [82, 1, 1, "", "refresh_respro"], [82, 1, 1, "", "relax_toolbar"], [82, 1, 1, "", "respro_toolbar"], [82, 1, 1, "", "save_data"], [82, 1, 1, "", "select_resonator"], [82, 1, 1, "", "set_spectrometer_connected_light"], [82, 2, 1, "", "spectromterInterface"], [82, 2, 1, "", "starttime"], [82, 2, 1, "", "threadpool"], [82, 1, 1, "", "timeout"], [82, 1, 1, "", "update_T2"], [82, 1, 1, "", "update_deer_settings"], [82, 1, 1, "", "update_fieldsweep"], [82, 1, 1, "", "update_longdeer"], [82, 1, 1, "", "update_optimise_pulses_figure"], [82, 1, 1, "", "update_quickdeer"], [82, 1, 1, "", "update_relax"], [82, 1, 1, "", "update_relax2D"], [82, 1, 1, "", "update_reptime"], [82, 1, 1, "", "update_respro"], [82, 2, 1, "", "userinput"], [82, 2, 1, "", "waitCondition"], [82, 2, 1, "", "worker"]], "autoDEERWorker": [[75, 2, 1, "", "AWG"], [75, 2, 1, "", "EndTimeCriteria"], [75, 2, 1, "", "LO"], [75, 1, 1, "", "_build_methods"], [75, 2, 1, "", "args"], [75, 2, 1, "", "deer_inputs"], [75, 2, 1, "", "gyro"], [75, 2, 1, "", "interface"], [75, 2, 1, "", "kwargs"], [75, 2, 1, "", "max_tau"], [75, 2, 1, "", "mutex"], [75, 1, 1, "", "new_data"], [75, 1, 1, "", "new_pulses"], [75, 1, 1, "", "pause_and_wait"], [75, 2, 1, "", "project"], [75, 2, 1, "", "pulses"], [75, 2, 1, "", "quick_deer_state"], [75, 2, 1, "", "results"], [75, 1, 1, "", "run"], [75, 1, 1, "", "run_2D_relax"], [75, 1, 1, "", "run_CP_relax"], [75, 1, 1, "", "run_T2_relax"], [75, 1, 1, "", "run_deer"], [75, 1, 1, "", "run_fsweep"], [75, 1, 1, "", "run_long_deer"], [75, 1, 1, "", "run_quick_deer"], [75, 1, 1, "", "run_reptime_opt"], [75, 1, 1, "", "run_respro"], [75, 2, 1, "", "samplename"], [75, 2, 1, "", "savename"], [75, 1, 1, "", "set_2D_max_tau"], [75, 1, 1, "", "set_noise_mode"], [75, 2, 1, "", "signals"], [75, 1, 1, "", "stop"], [75, 2, 1, "", "stop_flag"], [75, 2, 1, "", "test_interval"], [75, 1, 1, "", "tune_pulses"], [75, 1, 1, "", "update_LO"], [75, 1, 1, "", "update_deersettings"], [75, 1, 1, "", "update_gyro"], [75, 1, 1, "", "update_reptime"], [75, 2, 1, "", "updaterate"], [75, 2, 1, "", "user_inputs"], [75, 2, 1, "", "wait"]], "autodeer": [[122, 0, 1, "", "CarrPurcellAnalysis"], [122, 0, 1, "", "CarrPurcellSequence"], [122, 0, 1, "", "ChirpPulse"], [122, 0, 1, "", "Criteria"], [122, 0, 1, "", "DEERCriteria"], [122, 0, 1, "", "DEERSequence"], [18, 4, 0, "-", "DEER_analysis"], [122, 5, 1, "id148", "DEERanalysis"], [122, 5, 1, "", "DEERanalysis_plot"], [122, 5, 1, "", "DEERanalysis_plot_pub"], [122, 0, 1, "id141", "Delay"], [122, 0, 1, "id137", "Detection"], [23, 4, 0, "-", "FieldSweep"], [122, 0, 1, "", "FieldSweepAnalysis"], [122, 0, 1, "", "FieldSweepSequence"], [122, 0, 1, "", "FrequencySweptPulse"], [122, 0, 1, "", "GaussianPulse"], [122, 0, 1, "", "HSPulse"], [122, 0, 1, "", "HahnEchoSequence"], [122, 5, 1, "", "IdentifyROI"], [122, 0, 1, "", "Interface"], [33, 4, 0, "-", "Logging"], [122, 0, 1, "id75", "Parameter"], [122, 0, 1, "id111", "Pulse"], [122, 0, 1, "id145", "RectPulse"], [122, 0, 1, "", "RefocusedEcho2DAnalysis"], [122, 0, 1, "", "RefocusedEcho2DSequence"], [42, 4, 0, "-", "Relaxation"], [122, 0, 1, "", "Reporter"], [122, 0, 1, "", "ReptimeAnalysis"], [122, 0, 1, "", "ReptimeScan"], [47, 4, 0, "-", "ResPro"], [122, 0, 1, "", "ResonatorProfileAnalysis"], [122, 0, 1, "", "ResonatorProfileSequence"], [122, 0, 1, "", "SNRCriteria"], [122, 0, 1, "id43", "Sequence"], [122, 0, 1, "", "SincPulse"], [122, 0, 1, "", "T2RelaxationSequence"], [122, 0, 1, "", "TWTProfileSequence"], [122, 0, 1, "", "TimeCriteria"], [57, 4, 0, "-", "TwoD_Experiment"], [122, 6, 1, "", "__version__"], [58, 4, 0, "-", "_version"], [122, 5, 1, "id110", "autoEPRDecoder"], [122, 5, 1, "", "build_default_pulses"], [122, 5, 1, "id107", "build_table"], [122, 5, 1, "", "calc_correction_factor"], [122, 5, 1, "", "calc_deer_settings"], [61, 4, 0, "-", "classes"], [122, 6, 1, "", "cmap"], [62, 4, 0, "-", "colors"], [122, 5, 1, "", "combo_figure"], [67, 4, 0, "-", "criteria"], [69, 4, 0, "-", "dataset"], [122, 5, 1, "", "detect_ESEEM"], [122, 5, 1, "", "gcd"], [77, 4, 0, "-", "gui"], [116, 4, 0, "-", "hardware"], [122, 6, 1, "", "log"], [122, 5, 1, "", "normalise_01"], [122, 5, 1, "", "optimise_pulses"], [122, 5, 1, "", "optimise_spectra_position"], [122, 5, 1, "", "plot_1Drelax"], [122, 5, 1, "", "plot_overlap"], [122, 6, 1, "", "primary_colors"], [132, 4, 0, "-", "pulses"], [135, 4, 0, "-", "reporter"], [122, 5, 1, "", "round_step"], [122, 5, 1, "", "save_file"], [146, 4, 0, "-", "sequences"], [122, 5, 1, "id108", "sop"], [147, 4, 0, "-", "tools"], [122, 5, 1, "", "transpose_dict_of_list"], [122, 5, 1, "", "transpose_list_of_dicts"], [148, 4, 0, "-", "utils"], [122, 5, 1, "", "val_in_ns"], [122, 5, 1, "", "val_in_us"]], "autodeer.CarrPurcellAnalysis": [[122, 1, 1, "", "check_decay"], [122, 2, 1, "", "data"], [122, 2, 1, "", "dataset"], [122, 1, 1, "", "find_optimal"], [122, 1, 1, "", "fit"], [122, 1, 1, "", "plot"]], "autodeer.CarrPurcellSequence": [[122, 1, 1, "", "_build_sequence"], [122, 2, 1, "", "dim"], [122, 2, 1, "", "n"], [122, 2, 1, "", "tau"]], "autodeer.ChirpPulse": [[122, 1, 1, "", "func"], [122, 3, 1, "", "sweeprate"]], "autodeer.Criteria": [[122, 1, 1, "", "__add__"], [122, 2, 1, "", "description"], [122, 2, 1, "", "end_signal"], [122, 2, 1, "", "name"], [122, 2, 1, "", "test"]], "autodeer.DEERSequence": [[122, 2, 1, "", "ESEEM"], [122, 1, 1, "", "add_ESEEM_avg"], [122, 2, 1, "", "deadtime"], [122, 2, 1, "", "dt"], [122, 1, 1, "", "five_pulse"], [122, 1, 1, "", "four_pulse"], [122, 1, 1, "", "nDEER_CP"], [122, 1, 1, "", "select_pcyc"], [122, 1, 1, "", "seven_pulse"], [122, 1, 1, "", "simulate"], [122, 2, 1, "", "tau1"], [122, 2, 1, "", "tau1us"], [122, 2, 1, "", "tau2"], [122, 1, 1, "", "three_pulse"]], "autodeer.DEER_analysis": [[18, 5, 1, "", "DEERanalysis"], [18, 5, 1, "", "DEERanalysis_plot"], [18, 5, 1, "", "DEERanalysis_plot_pub"], [18, 5, 1, "", "IdentifyROI"], [18, 5, 1, "", "MNR_estimate"], [18, 6, 1, "", "MODULE_DIR"], [18, 5, 1, "", "background_func"], [18, 5, 1, "", "build__lowpass_butter_filter"], [18, 5, 1, "", "calc_correction_factor"], [18, 5, 1, "", "calc_deer_settings"], [18, 5, 1, "", "calc_identifiability"], [18, 5, 1, "", "find_longest_pulse"], [18, 5, 1, "", "functional"], [18, 6, 1, "", "log"], [18, 5, 1, "", "normalise_01"], [18, 5, 1, "", "optimise_pulses"], [18, 5, 1, "", "plot_overlap"], [18, 5, 1, "", "remove_echo"], [18, 5, 1, "", "resample_and_shift_vector"], [18, 5, 1, "", "shift_pulse_freq"], [18, 5, 1, "", "val_in_us"]], "autodeer.Delay": [[122, 2, 1, "id143", "pcyc"], [122, 2, 1, "id144", "scale"], [122, 2, 1, "id142", "tp"]], "autodeer.Detection": [[122, 2, 1, "id139", "freq"], [122, 2, 1, "id140", "pcyc"], [122, 2, 1, "id138", "scale"]], "autodeer.FieldSweep": [[23, 0, 1, "", "FieldSweepAnalysis"], [23, 0, 1, "", "SpinSystem"], [23, 5, 1, "", "build_spectrum"], [23, 5, 1, "", "create_Nmodel"], [23, 5, 1, "", "erot"], [23, 5, 1, "", "eyekron"], [23, 5, 1, "", "ham"], [23, 5, 1, "", "ham_ez"], [23, 5, 1, "", "ham_nz"], [23, 5, 1, "", "kroneye"], [23, 5, 1, "", "resfields"]], "autodeer.FieldSweep.FieldSweepAnalysis": [[23, 1, 1, "", "calc_gyro"], [23, 1, 1, "", "calc_noise_level"], [23, 2, 1, "", "data"], [23, 1, 1, "", "find_max"], [23, 1, 1, "", "fit"], [23, 1, 1, "", "plot"], [23, 1, 1, "", "smooth"]], "autodeer.FieldSweep.SpinSystem": [[23, 2, 1, "", "A"], [23, 2, 1, "", "I"], [23, 2, 1, "", "S"], [23, 2, 1, "", "Spins"], [23, 2, 1, "", "g"], [23, 2, 1, "", "gnscale"], [23, 2, 1, "", "nElectrons"], [23, 2, 1, "", "nNuclei"], [23, 2, 1, "", "nStates"]], "autodeer.FieldSweepAnalysis": [[122, 1, 1, "", "calc_gyro"], [122, 1, 1, "", "calc_noise_level"], [122, 2, 1, "", "data"], [122, 1, 1, "", "find_max"], [122, 1, 1, "", "fit"], [122, 1, 1, "", "plot"], [122, 1, 1, "", "smooth"]], "autodeer.FieldSweepSequence": [[122, 2, 1, "", "B"], [122, 2, 1, "", "name"]], "autodeer.FrequencySweptPulse": [[122, 3, 1, "", "Qcrit"], [122, 3, 1, "", "amp_factor"], [122, 3, 1, "", "sweeprate"]], "autodeer.GaussianPulse": [[122, 2, 1, "", "FWHM"], [122, 2, 1, "", "freq"], [122, 1, 1, "", "func"]], "autodeer.HSPulse": [[122, 2, 1, "", "beta"], [122, 1, 1, "", "func"], [122, 2, 1, "", "order1"], [122, 2, 1, "", "order2"], [122, 3, 1, "", "sweeprate"]], "autodeer.Interface": [[122, 1, 1, "", "acquire_dataset"], [122, 1, 1, "", "connect"], [122, 1, 1, "", "isrunning"], [122, 1, 1, "", "launch"], [122, 2, 1, "", "pulses"], [122, 2, 1, "", "resonator"], [122, 2, 1, "", "savefolder"], [122, 2, 1, "", "savename"], [122, 1, 1, "", "terminate"], [122, 1, 1, "", "terminate_at"]], "autodeer.Logging": [[33, 0, 1, "", "DictFormater"], [33, 0, 1, "", "QtLogHandler"], [33, 5, 1, "", "change_log_level"], [33, 5, 1, "", "setup_logs"]], "autodeer.Logging.DictFormater": [[33, 1, 1, "", "format"]], "autodeer.Logging.QtLogHandler": [[33, 1, 1, "", "emit"], [33, 2, 1, "", "signal"]], "autodeer.Parameter": [[122, 1, 1, "id96", "__add__"], [122, 1, 1, "id95", "__eq__"], [122, 1, 1, "id98", "__mul__"], [122, 1, 1, "id99", "__rmul__"], [122, 1, 1, "id97", "__sub__"], [122, 1, 1, "id104", "_from_dict"], [122, 1, 1, "id105", "_from_json"], [122, 1, 1, "id101", "_to_dict"], [122, 1, 1, "id102", "_to_json"], [122, 1, 1, "id91", "add_axis"], [122, 2, 1, "id90", "ax_id"], [122, 2, 1, "id89", "axis"], [122, 1, 1, "id100", "copy"], [122, 2, 1, "id87", "description"], [122, 3, 1, "id84", "dim"], [122, 1, 1, "id92", "get_axis"], [122, 1, 1, "id94", "is_static"], [122, 1, 1, "id106", "load"], [122, 2, 1, "id85", "name"], [122, 1, 1, "id93", "remove_dynamic"], [122, 1, 1, "id103", "save"], [122, 2, 1, "id86", "unit"], [122, 2, 1, "id88", "virtual"]], "autodeer.Pulse": [[122, 2, 1, "id115", "Progression"], [122, 1, 1, "id129", "__str__"], [122, 1, 1, "id116", "_addPhaseCycle"], [122, 1, 1, "id117", "_buildFMAM"], [122, 1, 1, "id124", "_calc_fft"], [122, 1, 1, "id134", "_from_dict"], [122, 1, 1, "id135", "_from_json"], [122, 1, 1, "id128", "_pcyc_str"], [122, 1, 1, "id131", "_to_dict"], [122, 1, 1, "id132", "_to_json"], [122, 3, 1, "id113", "amp_factor"], [122, 3, 1, "id112", "bandwidth"], [122, 1, 1, "id118", "build_shape"], [122, 1, 1, "id119", "build_table"], [122, 1, 1, "id130", "copy"], [122, 1, 1, "id125", "exciteprofile"], [122, 1, 1, "id121", "isDelayFocused"], [122, 1, 1, "id122", "isPulseFocused"], [122, 1, 1, "id120", "is_static"], [122, 1, 1, "id136", "load"], [122, 2, 1, "id114", "name"], [122, 1, 1, "id123", "plot"], [122, 1, 1, "id127", "plot_fft"], [122, 1, 1, "id133", "save"]], "autodeer.RectPulse": [[122, 2, 1, "id146", "freq"], [122, 1, 1, "id147", "func"]], "autodeer.RefocusedEcho2DAnalysis": [[122, 1, 1, "", "_smooth"], [122, 2, 1, "", "axis"], [122, 2, 1, "", "data"], [122, 2, 1, "", "dataset"], [122, 1, 1, "", "find_optimal"], [122, 1, 1, "", "optimal_tau1"], [122, 1, 1, "", "plot1D"], [122, 1, 1, "", "plot2D"]], "autodeer.RefocusedEcho2DSequence": [[122, 1, 1, "", "_build_sequence"], [122, 2, 1, "", "tau1"], [122, 2, 1, "", "tau2"]], "autodeer.Relaxation": [[42, 0, 1, "", "CarrPurcellAnalysis"], [42, 0, 1, "", "RefocusedEcho2DAnalysis"], [42, 0, 1, "", "ReptimeAnalysis"], [42, 6, 1, "", "cmap"], [42, 5, 1, "", "detect_ESEEM"], [42, 5, 1, "", "plot_1Drelax"]], "autodeer.Relaxation.CarrPurcellAnalysis": [[42, 1, 1, "", "check_decay"], [42, 2, 1, "", "data"], [42, 2, 1, "", "dataset"], [42, 1, 1, "", "find_optimal"], [42, 1, 1, "", "fit"], [42, 1, 1, "", "plot"]], "autodeer.Relaxation.RefocusedEcho2DAnalysis": [[42, 1, 1, "", "_smooth"], [42, 2, 1, "", "axis"], [42, 2, 1, "", "data"], [42, 2, 1, "", "dataset"], [42, 1, 1, "", "find_optimal"], [42, 1, 1, "", "optimal_tau1"], [42, 1, 1, "", "plot1D"], [42, 1, 1, "", "plot2D"]], "autodeer.Relaxation.ReptimeAnalysis": [[42, 2, 1, "", "axis"], [42, 1, 1, "", "calc_optimal_reptime"], [42, 1, 1, "", "fit"], [42, 1, 1, "", "plot"], [42, 2, 1, "", "seq"]], "autodeer.Reporter": [[122, 1, 1, "", "_build"], [122, 1, 1, "", "add_code_block"], [122, 1, 1, "", "add_figure"], [122, 1, 1, "", "add_new_section"], [122, 1, 1, "", "add_page_break"], [122, 1, 1, "", "add_space"], [122, 1, 1, "", "add_table"], [122, 1, 1, "", "add_text"], [122, 1, 1, "", "add_title"], [122, 1, 1, "", "footer"], [122, 1, 1, "", "header"], [122, 2, 1, "", "pdf"], [122, 2, 1, "", "story"]], "autodeer.ReptimeAnalysis": [[122, 2, 1, "", "axis"], [122, 1, 1, "", "calc_optimal_reptime"], [122, 1, 1, "", "fit"], [122, 1, 1, "", "plot"], [122, 2, 1, "", "seq"]], "autodeer.ReptimeScan": [[122, 2, 1, "", "name"]], "autodeer.ResPro": [[47, 5, 1, "", "BSpline_extra"], [47, 0, 1, "", "ResonatorProfileAnalysis"], [47, 5, 1, "", "calc_overlap"], [47, 5, 1, "", "ceil"], [47, 5, 1, "", "floor"], [47, 5, 1, "", "optimise_spectra_position"]], "autodeer.ResPro.ResonatorProfileAnalysis": [[47, 1, 1, "", "_process_fit"], [47, 2, 1, "", "dataset"], [47, 2, 1, "", "f_lims"], [47, 1, 1, "", "fit"], [47, 2, 1, "", "n_files"], [47, 1, 1, "", "plot"], [47, 1, 1, "", "process_nutations"], [47, 2, 1, "", "t"]], "autodeer.ResonatorProfileAnalysis": [[122, 1, 1, "", "_process_fit"], [122, 2, 1, "", "dataset"], [122, 2, 1, "", "f_lims"], [122, 1, 1, "", "fit"], [122, 2, 1, "", "n_files"], [122, 1, 1, "", "plot"], [122, 1, 1, "", "process_nutations"], [122, 2, 1, "", "t"]], "autodeer.ResonatorProfileSequence": [[122, 1, 1, "", "_build_sequence"], [122, 2, 1, "", "fwidth"], [122, 2, 1, "", "gyro"]], "autodeer.Sequence": [[122, 2, 1, "id49", "LO"], [122, 1, 1, "id67", "__str__"], [122, 1, 1, "id58", "_buildPhaseCycle"], [122, 1, 1, "id66", "_checkRect"], [122, 1, 1, "id64", "_convert_to_delay"], [122, 1, 1, "id65", "_convert_to_pulses"], [122, 1, 1, "id57", "_estimate_time"], [122, 1, 1, "id72", "_from_dict"], [122, 1, 1, "id73", "_from_json"], [122, 1, 1, "id69", "_to_dict"], [122, 1, 1, "id70", "_to_json"], [122, 1, 1, "id56", "addPulse"], [122, 2, 1, "id50", "averages"], [122, 2, 1, "id47", "axes_uuid"], [122, 1, 1, "id63", "convert"], [122, 1, 1, "id68", "copy"], [122, 1, 1, "id59", "evolution"], [122, 1, 1, "id62", "isDelayFocused"], [122, 1, 1, "id61", "isPulseFocused"], [122, 1, 1, "id74", "load"], [122, 2, 1, "id52", "name"], [122, 2, 1, "id46", "num_pulses"], [122, 1, 1, "id54", "plot"], [122, 1, 1, "id55", "plot_pulse_exc"], [122, 2, 1, "id53", "progTable"], [122, 2, 1, "id45", "pulses"], [122, 2, 1, "id48", "reduce_uuid"], [122, 1, 1, "id71", "save"], [122, 3, 1, "id44", "seqtable_steps"], [122, 1, 1, "id60", "shift_detfreq_to_zero"], [122, 2, 1, "id51", "shots"]], "autodeer.SincPulse": [[122, 2, 1, "", "freq"], [122, 1, 1, "", "func"], [122, 2, 1, "", "order"], [122, 2, 1, "", "window"]], "autodeer.T2RelaxationSequence": [[122, 2, 1, "", "name"], [122, 2, 1, "", "tau"]], "autodeer.TWTProfileSequence": [[122, 1, 1, "", "_build_sequence"]], "autodeer.TwoD_Experiment": [[57, 0, 1, "", "TwoDExperimentAnalysis"]], "autodeer.TwoD_Experiment.TwoDExperimentAnalysis": [[57, 1, 1, "", "_data_transpose"], [57, 1, 1, "", "_stability_check"], [57, 1, 1, "", "calculate_noise_level"], [57, 1, 1, "", "calculate_optimal"], [57, 1, 1, "", "calculate_snr_threshold"], [57, 1, 1, "", "create_bahrenberg_plots"], [57, 1, 1, "", "create_slice_plot"], [57, 1, 1, "", "create_twoD_plot"], [57, 1, 1, "", "estimated_snr"], [57, 1, 1, "", "import_data"], [57, 1, 1, "", "import_dataset"], [57, 1, 1, "", "invert_signal"], [57, 1, 1, "", "load"], [57, 2, 1, "", "noise_frac"], [57, 1, 1, "", "optimal_slice_plot"], [57, 1, 1, "", "set_snr_target"], [57, 1, 1, "", "set_snr_threshold"], [57, 1, 1, "", "set_time_target"], [57, 1, 1, "", "snr_normalize"], [57, 2, 1, "", "snr_target"], [57, 2, 1, "", "time_target"], [57, 2, 1, "", "trace_length"], [57, 1, 1, "", "value_at_pos"], [57, 1, 1, "", "value_at_time"]], "autodeer._version": [[58, 6, 1, "", "__version__"]], "autodeer.classes": [[61, 0, 1, "", "Interface"], [61, 0, 1, "", "Parameter"]], "autodeer.classes.Interface": [[61, 1, 1, "", "acquire_dataset"], [61, 1, 1, "", "connect"], [61, 1, 1, "", "isrunning"], [61, 1, 1, "", "launch"], [61, 2, 1, "", "pulses"], [61, 2, 1, "", "resonator"], [61, 2, 1, "", "savefolder"], [61, 2, 1, "", "savename"], [61, 1, 1, "", "terminate"], [61, 1, 1, "", "terminate_at"]], "autodeer.classes.Parameter": [[61, 1, 1, "", "__add__"], [61, 1, 1, "", "__eq__"], [61, 1, 1, "", "__mul__"], [61, 1, 1, "", "__rmul__"], [61, 1, 1, "", "__sub__"], [61, 1, 1, "", "_from_dict"], [61, 1, 1, "", "_from_json"], [61, 1, 1, "", "_to_dict"], [61, 1, 1, "", "_to_json"], [61, 1, 1, "", "add_axis"], [61, 2, 1, "", "ax_id"], [61, 2, 1, "", "axis"], [61, 1, 1, "", "copy"], [61, 2, 1, "", "description"], [61, 3, 1, "", "dim"], [61, 1, 1, "", "get_axis"], [61, 1, 1, "", "is_static"], [61, 1, 1, "", "load"], [61, 2, 1, "", "name"], [61, 1, 1, "", "remove_dynamic"], [61, 1, 1, "", "save"], [61, 2, 1, "", "unit"], [61, 2, 1, "", "virtual"]], "autodeer.colors": [[62, 6, 1, "", "ReIm_colors"], [62, 6, 1, "", "primary_colors"], [62, 6, 1, "", "shade_colors"]], "autodeer.criteria": [[67, 0, 1, "", "Criteria"], [67, 0, 1, "", "DEERCriteria"], [67, 0, 1, "", "SNRCriteria"], [67, 0, 1, "", "TimeCriteria"], [67, 6, 1, "", "log"]], "autodeer.criteria.Criteria": [[67, 1, 1, "", "__add__"], [67, 2, 1, "", "description"], [67, 2, 1, "", "end_signal"], [67, 2, 1, "", "name"], [67, 2, 1, "", "test"]], "autodeer.dataset": [[69, 0, 1, "", "EPRAccessor"], [69, 5, 1, "", "create_dataset_from_axes"], [69, 5, 1, "", "create_dataset_from_bruker"], [69, 5, 1, "", "create_dataset_from_sequence"], [69, 5, 1, "", "get_all_axes"], [69, 5, 1, "", "get_all_fixed_param"]], "autodeer.dataset.EPRAccessor": [[69, 3, 1, "", "SNR"], [69, 2, 1, "", "_obj"], [69, 3, 1, "", "correctphase"], [69, 3, 1, "", "correctphasefull"], [69, 3, 1, "", "fft"], [69, 3, 1, "", "normalise"], [69, 1, 1, "", "save"], [69, 3, 1, "", "sequence"]], "autodeer.gui": [[77, 0, 1, "", "Worker"], [77, 0, 1, "", "WorkerSignals"], [72, 4, 0, "-", "__main__"], [77, 0, 1, "", "autoDEERUI"], [76, 4, 0, "-", "autoDEER_worker"], [77, 5, 1, "", "create_save_name"], [77, 5, 1, "", "fill_table"], [77, 5, 1, "", "getCIstring"], [77, 5, 1, "", "get_sequence_rows"], [77, 5, 1, "", "list_str_to_type"], [77, 5, 1, "", "load_epr_file"], [79, 4, 0, "-", "log"], [83, 4, 0, "-", "main"], [86, 4, 0, "-", "modetune"], [77, 5, 1, "", "param_in_MHz"], [77, 5, 1, "", "param_in_us"], [77, 5, 1, "", "pyqt_table_from_dict"], [88, 4, 0, "-", "quickdeer"], [77, 5, 1, "", "read_table"], [77, 5, 1, "", "str_to_list_type"], [77, 5, 1, "", "test_SNR"], [89, 4, 0, "-", "test_main"], [92, 4, 0, "-", "tools"]], "autodeer.gui.Worker": [[77, 2, 1, "", "args"], [77, 2, 1, "", "fn"], [77, 2, 1, "", "kwargs"], [77, 1, 1, "", "run"], [77, 2, 1, "", "signals"]], "autodeer.gui.WorkerSignals": [[77, 2, 1, "", "error"], [77, 2, 1, "", "finished"], [77, 2, 1, "", "result"]], "autodeer.gui.__main__": [[72, 6, 1, "", "app"], [72, 6, 1, "", "window"]], "autodeer.gui.autoDEERUI": [[77, 2, 1, "", "Bruker"], [77, 2, 1, "", "DL_params"], [77, 2, 1, "", "LO"], [77, 2, 1, "", "Min_tp"], [77, 1, 1, "", "RunAdvancedAutoDEER"], [77, 1, 1, "", "RunAutoDEER"], [77, 1, 1, "", "RunFullyAutoDEER"], [77, 1, 1, "", "advanced_mode_inputs"], [77, 1, 1, "", "change_LO"], [77, 1, 1, "", "check_CP"], [77, 1, 1, "", "check_T2"], [77, 1, 1, "", "clear_all"], [77, 2, 1, "", "config"], [77, 1, 1, "", "connect_spectrometer"], [77, 2, 1, "", "connected"], [77, 2, 1, "", "cores"], [77, 2, 1, "", "correction_factor"], [77, 1, 1, "", "create_fieldsweep_figure"], [77, 1, 1, "", "create_relax_figure"], [77, 1, 1, "", "create_report"], [77, 1, 1, "", "create_respro_figure"], [77, 2, 1, "", "current_data"], [77, 2, 1, "", "current_folder"], [77, 2, 1, "", "current_results"], [77, 2, 1, "", "deer_settings"], [77, 1, 1, "", "fsweep_toolbar"], [77, 2, 1, "", "gyro"], [77, 1, 1, "", "initialise_deer_settings"], [77, 1, 1, "", "load_epr_file"], [77, 1, 1, "", "load_folder"], [77, 1, 1, "", "load_spectrometer_config"], [77, 2, 1, "", "longDEER"], [77, 1, 1, "", "optimise_pulses"], [77, 1, 1, "", "optimise_pulses_button"], [77, 2, 1, "", "priorties"], [77, 2, 1, "", "pulses"], [77, 2, 1, "", "q_DEER"], [77, 2, 1, "", "queue"], [77, 1, 1, "", "raise_warning"], [77, 1, 1, "", "refresh_T2"], [77, 1, 1, "", "refresh_fieldsweep_after_fit"], [77, 1, 1, "", "refresh_relax"], [77, 1, 1, "", "refresh_relax_figure"], [77, 1, 1, "", "refresh_respro"], [77, 1, 1, "", "relax_toolbar"], [77, 1, 1, "", "respro_toolbar"], [77, 1, 1, "", "save_data"], [77, 1, 1, "", "select_resonator"], [77, 1, 1, "", "set_spectrometer_connected_light"], [77, 2, 1, "", "spectromterInterface"], [77, 2, 1, "", "starttime"], [77, 2, 1, "", "threadpool"], [77, 1, 1, "", "timeout"], [77, 1, 1, "", "update_T2"], [77, 1, 1, "", "update_deer_settings"], [77, 1, 1, "", "update_fieldsweep"], [77, 1, 1, "", "update_longdeer"], [77, 1, 1, "", "update_optimise_pulses_figure"], [77, 1, 1, "", "update_quickdeer"], [77, 1, 1, "", "update_relax"], [77, 1, 1, "", "update_relax2D"], [77, 1, 1, "", "update_reptime"], [77, 1, 1, "", "update_respro"], [77, 2, 1, "", "userinput"], [77, 2, 1, "", "waitCondition"], [77, 2, 1, "", "worker"]], "autodeer.gui.autoDEER_worker": [[76, 0, 1, "", "autoDEERSignals"], [76, 0, 1, "", "autoDEERWorker"]], "autodeer.gui.autoDEER_worker.autoDEERSignals": [[76, 2, 1, "", "Relax2D_result"], [76, 2, 1, "", "T2_result"], [76, 2, 1, "", "error"], [76, 2, 1, "", "finished"], [76, 2, 1, "", "fsweep_result"], [76, 2, 1, "", "longdeer_result"], [76, 2, 1, "", "longdeer_update"], [76, 2, 1, "", "progress"], [76, 2, 1, "", "quickdeer_result"], [76, 2, 1, "", "quickdeer_update"], [76, 2, 1, "", "relax_result"], [76, 2, 1, "", "reptime_scan_result"], [76, 2, 1, "", "respro_result"], [76, 2, 1, "", "result"], [76, 2, 1, "", "status"], [76, 2, 1, "", "timeout"]], "autodeer.gui.autoDEER_worker.autoDEERWorker": [[76, 2, 1, "", "AWG"], [76, 2, 1, "", "EndTimeCriteria"], [76, 2, 1, "", "LO"], [76, 1, 1, "", "_build_methods"], [76, 2, 1, "", "args"], [76, 2, 1, "", "deer_inputs"], [76, 2, 1, "", "gyro"], [76, 2, 1, "", "interface"], [76, 2, 1, "", "kwargs"], [76, 2, 1, "", "max_tau"], [76, 2, 1, "", "mutex"], [76, 1, 1, "", "new_data"], [76, 1, 1, "", "new_pulses"], [76, 1, 1, "", "pause_and_wait"], [76, 2, 1, "", "project"], [76, 2, 1, "", "pulses"], [76, 2, 1, "", "quick_deer_state"], [76, 2, 1, "", "results"], [76, 1, 1, "", "run"], [76, 1, 1, "", "run_2D_relax"], [76, 1, 1, "", "run_CP_relax"], [76, 1, 1, "", "run_T2_relax"], [76, 1, 1, "", "run_deer"], [76, 1, 1, "", "run_fsweep"], [76, 1, 1, "", "run_long_deer"], [76, 1, 1, "", "run_quick_deer"], [76, 1, 1, "", "run_reptime_opt"], [76, 1, 1, "", "run_respro"], [76, 2, 1, "", "samplename"], [76, 2, 1, "", "savename"], [76, 1, 1, "", "set_2D_max_tau"], [76, 1, 1, "", "set_noise_mode"], [76, 2, 1, "", "signals"], [76, 1, 1, "", "stop"], [76, 2, 1, "", "stop_flag"], [76, 2, 1, "", "test_interval"], [76, 1, 1, "", "tune_pulses"], [76, 1, 1, "", "update_LO"], [76, 1, 1, "", "update_deersettings"], [76, 1, 1, "", "update_gyro"], [76, 1, 1, "", "update_reptime"], [76, 2, 1, "", "updaterate"], [76, 2, 1, "", "user_inputs"], [76, 2, 1, "", "wait"]], "autodeer.gui.log": [[79, 0, 1, "", "LogDialog"], [79, 6, 1, "", "package_directory"]], "autodeer.gui.log.LogDialog": [[79, 1, 1, "", "add_new_entry"], [79, 1, 1, "", "clear_log"], [79, 2, 1, "", "log"], [79, 2, 1, "", "log_levels"], [79, 1, 1, "", "save_log_to_file"], [79, 1, 1, "", "update_log_text"]], "autodeer.gui.main": [[83, 6, 1, "", "SampleConcComboBox_opts"], [83, 5, 1, "", "T2_process"], [83, 0, 1, "", "Worker"], [83, 0, 1, "", "WorkerSignals"], [83, 6, 1, "", "app"], [83, 0, 1, "", "autoDEERUI"], [83, 5, 1, "", "fieldsweep_fit"], [83, 6, 1, "", "package_directory"], [83, 5, 1, "", "relax_process"], [83, 5, 1, "", "respro_process"]], "autodeer.gui.main.Worker": [[83, 2, 1, "", "args"], [83, 2, 1, "", "fn"], [83, 2, 1, "", "kwargs"], [83, 1, 1, "", "run"], [83, 2, 1, "", "signals"]], "autodeer.gui.main.WorkerSignals": [[83, 2, 1, "", "error"], [83, 2, 1, "", "finished"], [83, 2, 1, "", "progress"], [83, 2, 1, "", "result"]], "autodeer.gui.main.autoDEERUI": [[83, 2, 1, "", "Bruker"], [83, 2, 1, "", "DL_params"], [83, 2, 1, "", "LO"], [83, 2, 1, "", "Min_tp"], [83, 1, 1, "", "RunAdvancedAutoDEER"], [83, 1, 1, "", "RunAutoDEER"], [83, 1, 1, "", "RunFullyAutoDEER"], [83, 1, 1, "", "advanced_mode_inputs"], [83, 1, 1, "", "change_LO"], [83, 1, 1, "", "check_CP"], [83, 1, 1, "", "check_T2"], [83, 1, 1, "", "clear_all"], [83, 2, 1, "", "config"], [83, 1, 1, "", "connect_spectrometer"], [83, 2, 1, "", "connected"], [83, 2, 1, "", "cores"], [83, 2, 1, "", "correction_factor"], [83, 1, 1, "", "create_fieldsweep_figure"], [83, 1, 1, "", "create_relax_figure"], [83, 1, 1, "", "create_report"], [83, 1, 1, "", "create_respro_figure"], [83, 2, 1, "", "current_data"], [83, 2, 1, "", "current_folder"], [83, 2, 1, "", "current_results"], [83, 2, 1, "", "deer_settings"], [83, 1, 1, "", "fsweep_toolbar"], [83, 2, 1, "", "gyro"], [83, 1, 1, "", "initialise_deer_settings"], [83, 1, 1, "", "load_epr_file"], [83, 1, 1, "", "load_folder"], [83, 1, 1, "", "load_spectrometer_config"], [83, 2, 1, "", "longDEER"], [83, 1, 1, "", "optimise_pulses"], [83, 1, 1, "", "optimise_pulses_button"], [83, 2, 1, "", "priorties"], [83, 2, 1, "", "pulses"], [83, 2, 1, "", "q_DEER"], [83, 2, 1, "", "queue"], [83, 1, 1, "", "raise_warning"], [83, 1, 1, "", "refresh_T2"], [83, 1, 1, "", "refresh_fieldsweep_after_fit"], [83, 1, 1, "", "refresh_relax"], [83, 1, 1, "", "refresh_relax_figure"], [83, 1, 1, "", "refresh_respro"], [83, 1, 1, "", "relax_toolbar"], [83, 1, 1, "", "respro_toolbar"], [83, 1, 1, "", "save_data"], [83, 1, 1, "", "select_resonator"], [83, 1, 1, "", "set_spectrometer_connected_light"], [83, 2, 1, "", "spectromterInterface"], [83, 2, 1, "", "starttime"], [83, 2, 1, "", "threadpool"], [83, 1, 1, "", "timeout"], [83, 1, 1, "", "update_T2"], [83, 1, 1, "", "update_deer_settings"], [83, 1, 1, "", "update_fieldsweep"], [83, 1, 1, "", "update_longdeer"], [83, 1, 1, "", "update_optimise_pulses_figure"], [83, 1, 1, "", "update_quickdeer"], [83, 1, 1, "", "update_relax"], [83, 1, 1, "", "update_relax2D"], [83, 1, 1, "", "update_reptime"], [83, 1, 1, "", "update_respro"], [83, 2, 1, "", "userinput"], [83, 2, 1, "", "waitCondition"], [83, 2, 1, "", "worker"]], "autodeer.gui.modetune": [[86, 0, 1, "", "ModeTune"], [86, 0, 1, "", "get_dataWorker"], [86, 6, 1, "", "package_directory"], [86, 5, 1, "", "phasecorrect_all_points"], [86, 5, 1, "", "save_data"]], "autodeer.gui.modetune.ModeTune": [[86, 1, 1, "", "create_figure"], [86, 2, 1, "", "interface"], [86, 1, 1, "", "start_mode_tune"], [86, 2, 1, "", "ui"], [86, 1, 1, "", "update_dip"], [86, 1, 1, "", "update_figure"]], "autodeer.gui.modetune.get_dataWorker": [[86, 2, 1, "", "finished_signal"], [86, 2, 1, "", "interface"], [86, 2, 1, "", "result_signal"], [86, 1, 1, "", "run"], [86, 2, 1, "", "signals"]], "autodeer.gui.quickdeer": [[88, 0, 1, "", "DEERplot"], [88, 6, 1, "", "app"], [88, 5, 1, "", "deeranalysis_process"], [88, 5, 1, "", "get_Vexp"], [88, 6, 1, "", "package_directory"]], "autodeer.gui.quickdeer.DEERplot": [[88, 2, 1, "", "DL_params"], [88, 1, 1, "", "clearLayout"], [88, 1, 1, "", "clear_all"], [88, 2, 1, "", "cores"], [88, 1, 1, "", "create_figure"], [88, 2, 1, "", "current_data"], [88, 2, 1, "", "current_folder"], [88, 2, 1, "", "current_results"], [88, 1, 1, "", "process_deeranalysis"], [88, 1, 1, "", "refresh_deer"], [88, 1, 1, "", "setup_inputs"], [88, 2, 1, "", "threadpool"], [88, 1, 1, "", "toolbar"], [88, 1, 1, "", "update_analysis_table"], [88, 1, 1, "", "update_figure"], [88, 1, 1, "", "update_fit_result"], [88, 1, 1, "", "update_inputs_from_dataset"]], "autodeer.gui.tools": [[92, 0, 1, "", "Worker"], [92, 0, 1, "", "WorkerSignals"], [92, 5, 1, "", "create_save_name"], [92, 5, 1, "", "fill_table"], [92, 5, 1, "", "getCIstring"], [92, 5, 1, "", "get_sequence_rows"], [92, 5, 1, "", "list_str_to_type"], [92, 5, 1, "", "load_epr_file"], [92, 5, 1, "", "param_in_MHz"], [92, 5, 1, "", "param_in_us"], [92, 5, 1, "", "pyqt_table_from_dict"], [92, 5, 1, "", "read_table"], [92, 5, 1, "", "str_to_list_type"], [92, 5, 1, "", "test_SNR"]], "autodeer.gui.tools.Worker": [[92, 2, 1, "", "args"], [92, 2, 1, "", "fn"], [92, 2, 1, "", "kwargs"], [92, 1, 1, "", "run"], [92, 2, 1, "", "signals"]], "autodeer.gui.tools.WorkerSignals": [[92, 2, 1, "", "error"], [92, 2, 1, "", "finished"], [92, 2, 1, "", "result"]], "autodeer.hardware": [[94, 4, 0, "-", "Bruker_AWG"], [96, 4, 0, "-", "Bruker_MPFU"], [100, 4, 0, "-", "Bruker_tools"], [102, 4, 0, "-", "ETH_awg"], [103, 4, 0, "-", "ETH_awg_load"], [105, 4, 0, "-", "XeprAPI_link"], [107, 4, 0, "-", "dummy"], [115, 4, 0, "-", "dummy_xepr"], [121, 4, 0, "-", "xepr_experiments"]], "autodeer.hardware.Bruker_AWG": [[94, 0, 1, "", "BrukerAWG"], [94, 5, 1, "", "get_specjet_data"], [94, 5, 1, "", "test_if_MPFU_compatability"]], "autodeer.hardware.Bruker_AWG.BrukerAWG": [[94, 1, 1, "", "_launch_complex_thread"], [94, 1, 1, "", "acquire_dataset"], [94, 2, 1, "", "api"], [94, 2, 1, "", "bg_data"], [94, 2, 1, "", "bg_thread"], [94, 2, 1, "", "bridge_config"], [94, 1, 1, "", "calc_d0"], [94, 1, 1, "", "calc_d0_from_Hahn_Echo"], [94, 1, 1, "", "connect"], [94, 2, 1, "", "cur_exp"], [94, 2, 1, "", "d0"], [94, 1, 1, "", "isrunning"], [94, 1, 1, "", "launch"], [94, 2, 1, "", "pool"], [94, 2, 1, "", "savefolder"], [94, 2, 1, "", "savename"], [94, 1, 1, "", "setup"], [94, 2, 1, "", "setup_flag"], [94, 2, 1, "", "spec_config"], [94, 2, 1, "", "temp_dir"], [94, 1, 1, "", "terminate"], [94, 1, 1, "", "tune_nutation"], [94, 1, 1, "", "tune_pulse"], [94, 1, 1, "", "tune_rectpulse"], [94, 2, 1, "", "tuning"]], "autodeer.hardware.Bruker_MPFU": [[96, 0, 1, "", "BrukerMPFU"], [96, 5, 1, "", "ELDORtune"], [96, 5, 1, "", "MPFUtune"], [96, 5, 1, "", "SPFUtune"], [96, 5, 1, "", "_MPFU_channels"], [96, 5, 1, "", "_SPFU_channels"], [96, 5, 1, "", "get_specjet_data"], [96, 6, 1, "", "hw_log"], [96, 5, 1, "", "step_parameters"], [96, 5, 1, "", "test_if_MPFU_compatability"], [96, 5, 1, "", "tune_phase"], [96, 5, 1, "", "tune_power"]], "autodeer.hardware.Bruker_MPFU.BrukerMPFU": [[96, 2, 1, "", "MPFU"], [96, 1, 1, "", "_launch_complex_thread"], [96, 1, 1, "", "acquire_dataset"], [96, 2, 1, "", "api"], [96, 2, 1, "", "bg_data"], [96, 2, 1, "", "bg_thread"], [96, 2, 1, "", "bridge_config"], [96, 1, 1, "", "calc_d0"], [96, 1, 1, "", "calc_d0_from_Hahn_Echo"], [96, 1, 1, "", "connect"], [96, 2, 1, "", "cur_exp"], [96, 2, 1, "", "d0"], [96, 1, 1, "", "isrunning"], [96, 1, 1, "", "launch"], [96, 2, 1, "", "pool"], [96, 2, 1, "", "savefolder"], [96, 2, 1, "", "savename"], [96, 1, 1, "", "setup"], [96, 2, 1, "", "setup_flag"], [96, 2, 1, "", "spec_config"], [96, 2, 1, "", "temp_dir"], [96, 1, 1, "", "terminate"], [96, 1, 1, "", "tune"], [96, 1, 1, "", "tune_pulse"], [96, 1, 1, "", "tune_rectpulse"], [96, 2, 1, "", "tuning"]], "autodeer.hardware.Bruker_tools": [[100, 6, 1, "", "MODULE_DIR"], [100, 0, 1, "", "PSPhaseCycle"], [100, 0, 1, "", "PSparvar"], [100, 0, 1, "", "PulseSpel"], [100, 5, 1, "", "_addAWGPulse"], [100, 5, 1, "", "build_unique_progtable"], [100, 5, 1, "", "calc_rel_positions"], [100, 5, 1, "", "change_dimensions"], [100, 5, 1, "", "check_variable"], [100, 5, 1, "", "convert_progtable"], [100, 5, 1, "", "determine_TWT_split"], [100, 5, 1, "", "get_arange"], [100, 6, 1, "", "header"], [100, 6, 1, "", "hw_log"], [100, 6, 1, "", "possible_delays"], [100, 6, 1, "", "possible_pulses"], [100, 6, 1, "", "possible_vars"], [100, 5, 1, "", "run_general"], [100, 5, 1, "", "write_pulsespel_file"]], "autodeer.hardware.Bruker_tools.PSPhaseCycle": [[100, 2, 1, "", "BPhaseCycles"], [100, 1, 1, "", "_MPFU"], [100, 1, 1, "", "__str__"], [100, 1, 1, "", "_detect"], [100, 1, 1, "", "_main"]], "autodeer.hardware.Bruker_tools.PSparvar": [[100, 2, 1, "", "PulseSpel"], [100, 1, 1, "", "checkPulseSpel"], [100, 2, 1, "", "events"]], "autodeer.hardware.Bruker_tools.PulseSpel": [[100, 2, 1, "", "AWG"], [100, 2, 1, "", "MPFU"], [100, 1, 1, "", "_ExpDefs"], [100, 1, 1, "", "__str__"], [100, 1, 1, "", "_addAWGPulse"], [100, 1, 1, "", "_addDef"], [100, 1, 1, "", "_addExp"], [100, 1, 1, "", "_addPhaseCycle"], [100, 1, 1, "", "_addScanLoop"], [100, 1, 1, "", "_check_sequence"], [100, 1, 1, "", "_cmpl_Exp"], [100, 1, 1, "", "_cmpl_def"], [100, 1, 1, "", "_new_delay"], [100, 1, 1, "", "_new_pulse"], [100, 1, 1, "", "_new_var"], [100, 2, 1, "", "def_file_str"], [100, 2, 1, "", "dims"], [100, 2, 1, "", "exp_file_str"], [100, 2, 1, "", "parvars"], [100, 2, 1, "", "pcyc_str"], [100, 2, 1, "", "possible_delays"], [100, 2, 1, "", "possible_pulses"], [100, 2, 1, "", "possible_vars"], [100, 1, 1, "", "save"], [100, 2, 1, "", "sequence"], [100, 2, 1, "", "var_hash"]], "autodeer.hardware.ETH_awg": [[102, 0, 1, "", "ETH_awg_interface"], [102, 5, 1, "", "bg_thread"], [102, 6, 1, "", "log"]], "autodeer.hardware.ETH_awg.ETH_awg_interface": [[102, 2, 1, "", "IFgain"], [102, 2, 1, "", "IFgain_options"], [102, 1, 1, "", "_build_exp_struct"], [102, 1, 1, "", "_build_parvar"], [102, 1, 1, "", "_build_phase_cycle"], [102, 1, 1, "", "_build_pulse"], [102, 1, 1, "", "acquire_dataset"], [102, 1, 1, "", "acquire_dataset_from_matlab"], [102, 2, 1, "", "awg_freq"], [102, 2, 1, "", "bg_data"], [102, 2, 1, "", "bg_thread"], [102, 1, 1, "", "connect"], [102, 2, 1, "", "cur_exp"], [102, 2, 1, "", "dig_rate"], [102, 1, 1, "", "isrunning"], [102, 1, 1, "", "launch"], [102, 1, 1, "", "launch_long"], [102, 1, 1, "", "launch_normal"], [102, 1, 1, "", "launch_withIFGain"], [102, 2, 1, "", "pulses"], [102, 3, 1, "", "savefolder"], [102, 1, 1, "", "terminate"], [102, 1, 1, "", "tune"], [102, 1, 1, "", "tune_pulse"], [102, 1, 1, "", "tune_rectpulse"]], "autodeer.hardware.ETH_awg_load": [[103, 5, 1, "", "calc_percieved_freq"], [103, 5, 1, "", "digitally_upconvert"], [103, 5, 1, "", "find_max_pulse_length"], [103, 5, 1, "", "match_filter_dc"], [103, 5, 1, "", "scipy_filter_dc"], [103, 5, 1, "", "uwb_eval_match"], [103, 5, 1, "", "uwb_load"]], "autodeer.hardware.XeprAPI_link": [[105, 0, 1, "", "XeprAPILink"], [105, 6, 1, "", "hw_log"], [105, 6, 1, "", "xepr_path"]], "autodeer.hardware.XeprAPI_link.XeprAPILink": [[105, 2, 1, "", "Xepr"], [105, 2, 1, "", "XeprCmds"], [105, 1, 1, "", "_get_Xepr_global"], [105, 1, 1, "", "_get_cur_exp_global"], [105, 1, 1, "", "_set_Xepr_global"], [105, 1, 1, "", "_set_cur_exp_global"], [105, 1, 1, "", "_set_cur_exp_param"], [105, 1, 1, "", "_set_hidden_param"], [105, 2, 1, "", "_tmp_dir"], [105, 1, 1, "", "_xepr_retry"], [105, 1, 1, "", "abort_exp"], [105, 1, 1, "", "acquire_dataset"], [105, 1, 1, "", "acquire_scan"], [105, 1, 1, "", "acquire_scan_2d"], [105, 1, 1, "", "acquire_scan_at"], [105, 1, 1, "", "compile_PulseSpel_def"], [105, 1, 1, "", "compile_PulseSpel_prg"], [105, 1, 1, "", "connect"], [105, 2, 1, "", "cur_exp"], [105, 1, 1, "", "find_Xepr"], [105, 1, 1, "", "find_cur_exp"], [105, 1, 1, "", "find_hidden"], [105, 1, 1, "", "get_Acquisition_mode"], [105, 1, 1, "", "get_ELDOR_freq"], [105, 1, 1, "", "get_MW_amp"], [105, 1, 1, "", "get_PhaseCycle"], [105, 1, 1, "", "get_PulseSpel_def_filename"], [105, 1, 1, "", "get_PulseSpel_def_filepath"], [105, 1, 1, "", "get_PulseSpel_exp_filename"], [105, 1, 1, "", "get_PulseSpel_exp_filepath"], [105, 1, 1, "", "get_PulseSpel_experiment"], [105, 1, 1, "", "get_PulseSpel_phase_cycling"], [105, 1, 1, "", "get_ReplaceMode"], [105, 1, 1, "", "get_attenuator"], [105, 1, 1, "", "get_config_file"], [105, 1, 1, "", "get_counterfreq"], [105, 1, 1, "", "get_field"], [105, 1, 1, "", "get_freq"], [105, 1, 1, "", "get_hidden_param"], [105, 1, 1, "", "get_param"], [105, 1, 1, "", "get_phase"], [105, 1, 1, "", "get_spec_config"], [105, 1, 1, "", "get_sweep_width"], [105, 1, 1, "", "get_video_bandwidth"], [105, 1, 1, "", "get_video_gain"], [105, 2, 1, "", "hidden"], [105, 1, 1, "", "is_exp_running"], [105, 1, 1, "", "pause_exp"], [105, 1, 1, "", "rerun_exp"], [105, 1, 1, "", "run_exp"], [105, 1, 1, "", "save_PulseSpel_def"], [105, 1, 1, "", "save_PulseSpel_exp"], [105, 1, 1, "", "set_Acquisition_mode"], [105, 1, 1, "", "set_ELDOR_freq"], [105, 1, 1, "", "set_MW_amp"], [105, 1, 1, "", "set_PhaseCycle"], [105, 1, 1, "", "set_PulseSpel_def_filepath"], [105, 1, 1, "", "set_PulseSpel_exp_filepath"], [105, 1, 1, "", "set_PulseSpel_experiment"], [105, 1, 1, "", "set_PulseSpel_phase_cycling"], [105, 1, 1, "", "set_PulseSpel_var"], [105, 1, 1, "", "set_ReplaceMode"], [105, 1, 1, "", "set_attenuator"], [105, 1, 1, "", "set_config_file"], [105, 1, 1, "", "set_field"], [105, 1, 1, "", "set_freq"], [105, 1, 1, "", "set_hidden_param"], [105, 1, 1, "", "set_param"], [105, 1, 1, "", "set_phase"], [105, 1, 1, "", "set_sweep_width"], [105, 1, 1, "", "set_video_bandwidth"], [105, 1, 1, "", "set_video_gain"], [105, 1, 1, "", "stop_exp"], [105, 1, 1, "", "xepr_save"]], "autodeer.hardware.dummy": [[107, 5, 1, "", "_gen_ESEEM"], [107, 5, 1, "", "_similate_respro"], [107, 5, 1, "", "_simulate_2D_relax"], [107, 5, 1, "", "_simulate_CP"], [107, 5, 1, "", "_simulate_T2"], [107, 5, 1, "", "_simulate_deer"], [107, 5, 1, "", "_simulate_field_sweep"], [107, 5, 1, "", "_simulate_reptimescan"], [107, 5, 1, "", "add_noise"], [107, 5, 1, "", "add_phaseshift"], [107, 0, 1, "", "dummyInterface"], [107, 6, 1, "", "hw_log"], [107, 6, 1, "", "rng"], [107, 5, 1, "", "val_in_ns"], [107, 5, 1, "", "val_in_us"]], "autodeer.hardware.dummy.dummyInterface": [[107, 2, 1, "", "SNR"], [107, 1, 1, "", "acquire_dataset"], [107, 1, 1, "", "isrunning"], [107, 1, 1, "", "launch"], [107, 2, 1, "", "mode"], [107, 2, 1, "", "pulses"], [107, 2, 1, "", "speedup"], [107, 2, 1, "", "start_time"], [107, 2, 1, "", "state"], [107, 1, 1, "", "terminate"], [107, 1, 1, "", "tune_pulse"], [107, 1, 1, "", "tune_rectpulse"]], "autodeer.hardware.dummy_xepr": [[115, 0, 1, "", "dummy_api"], [115, 0, 1, "", "dummy_cur_exp"], [115, 0, 1, "", "dummy_dataset"], [115, 0, 1, "", "dummy_hidden"], [115, 0, 1, "", "dummy_param"], [115, 0, 1, "", "dummy_xepr"], [115, 6, 1, "", "hardware_meta"], [115, 6, 1, "", "hw_log"]], "autodeer.hardware.dummy_xepr.dummy_api": [[115, 2, 1, "", "_tmp_dir"], [115, 1, 1, "", "abort_exp"], [115, 1, 1, "", "acquire_scan"], [115, 1, 1, "", "acquire_scan_2d"], [115, 1, 1, "", "acquire_scan_at"], [115, 1, 1, "", "compile_PulseSpel_def"], [115, 1, 1, "", "compile_PulseSpel_prg"], [115, 1, 1, "", "find_Xepr"], [115, 1, 1, "", "is_exp_running"], [115, 2, 1, "", "meta"], [115, 1, 1, "", "run_exp"], [115, 1, 1, "", "set_PulseSpel_var"], [115, 1, 1, "", "stop_exp"]], "autodeer.hardware.dummy_xepr.dummy_cur_exp": [[115, 2, 1, "", "CenterField"], [115, 2, 1, "", "FTAcqModeSlct"], [115, 2, 1, "", "FrequencyMon"], [115, 2, 1, "", "NbScansDone"], [115, 2, 1, "", "NbScansToDo"], [115, 2, 1, "", "PlsSPELEXPSlct"], [115, 2, 1, "", "PlsSPELGlbPaF"], [115, 2, 1, "", "PlsSPELLISTSlct"], [115, 2, 1, "", "PlsSPELPrgPaF"], [115, 2, 1, "", "ReplaceMode"], [115, 2, 1, "", "ShotRepTime"], [115, 2, 1, "", "ShotsPLoop"], [115, 2, 1, "", "SweepWidth"], [115, 2, 1, "", "SweepsPExp"], [115, 2, 1, "", "XSpecRes"], [115, 1, 1, "", "__getitem__"], [115, 1, 1, "", "aqExpRun"], [115, 1, 1, "", "getParam"]], "autodeer.hardware.dummy_xepr.dummy_dataset": [[115, 2, 1, "", "O"], [115, 2, 1, "", "size"]], "autodeer.hardware.dummy_xepr.dummy_hidden": [[115, 2, 1, "", "BrXAmp"], [115, 2, 1, "", "BrXPhase"], [115, 2, 1, "", "BrYAmp"], [115, 2, 1, "", "BrYPhase"], [115, 2, 1, "", "MinBrXAmp"], [115, 2, 1, "", "MinBrXPhase"], [115, 2, 1, "", "MinBrYAmp"], [115, 2, 1, "", "MinBrYPhase"], [115, 2, 1, "", "SignalPhase"], [115, 1, 1, "", "__getitem__"], [115, 1, 1, "", "getParam"]], "autodeer.hardware.dummy_xepr.dummy_param": [[115, 2, 1, "", "aqGetParMaxValue"], [115, 2, 1, "", "aqGetParMinValue"], [115, 2, 1, "", "val"], [115, 3, 1, "", "value"]], "autodeer.hardware.dummy_xepr.dummy_xepr": [[115, 0, 1, "", "XeprCmds"], [115, 1, 1, "", "XeprDataset"], [115, 1, 1, "", "XeprExperiment"], [115, 2, 1, "", "cur_exp"], [115, 2, 1, "", "hidden"]], "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds": [[115, 1, 1, "", "aqExpSelect"], [115, 1, 1, "", "aqPgCompile"], [115, 1, 1, "", "aqPgDefLoad"], [115, 1, 1, "", "aqPgDefSaveAs"], [115, 1, 1, "", "aqPgLoad"], [115, 1, 1, "", "aqPgSaveAs"], [115, 1, 1, "", "aqPgShowPrg"], [115, 1, 1, "", "vpSave"]], "autodeer.hardware.xepr_experiments": [[121, 5, 1, "", "CP_run"], [121, 5, 1, "", "CalibrateFreq"], [121, 0, 1, "", "DEER"], [121, 5, 1, "", "DEER5p_run"], [121, 0, 1, "", "ELDORtune"], [121, 6, 1, "", "MODULE_DIR"], [121, 0, 1, "", "MPFUtune"], [121, 0, 1, "", "PulseProfile"], [121, 5, 1, "", "get_nutations"]], "autodeer.hardware.xepr_experiments.DEER": [[121, 2, 1, "", "api"], [121, 2, 1, "", "awg"], [121, 2, 1, "", "d0"], [121, 2, 1, "", "det_frq"], [121, 2, 1, "", "hybrid"], [121, 2, 1, "", "mpfu"], [121, 2, 1, "", "pump_frq"], [121, 1, 1, "", "run_4p"], [121, 1, 1, "", "run_5p"], [121, 1, 1, "", "run_CP"], [121, 2, 1, "", "srt"]], "autodeer.hardware.xepr_experiments.ELDORtune": [[121, 1, 1, "", "_get_exp"], [121, 1, 1, "", "_setup_exp"], [121, 2, 1, "", "api"], [121, 2, 1, "", "d0"], [121, 1, 1, "", "find_min"], [121, 2, 1, "", "hardware_wait"], [121, 2, 1, "", "ps_length"], [121, 2, 1, "", "srt"], [121, 1, 1, "", "tune"]], "autodeer.hardware.xepr_experiments.MPFUtune": [[121, 1, 1, "", "_setup_echo"], [121, 2, 1, "", "api"], [121, 1, 1, "", "calc_d0"], [121, 2, 1, "", "d0"], [121, 2, 1, "", "hardware_wait"], [121, 2, 1, "", "ps_length"], [121, 2, 1, "", "srt"], [121, 1, 1, "", "tune"], [121, 1, 1, "", "tune_phase"], [121, 1, 1, "", "tune_power"]], "autodeer.hardware.xepr_experiments.PulseProfile": [[121, 1, 1, "", "_freq_sweep"], [121, 1, 1, "", "_setup_exp"], [121, 2, 1, "", "api"], [121, 2, 1, "", "d0"], [121, 2, 1, "", "hardware_wait"], [121, 2, 1, "", "ps_length"], [121, 2, 1, "", "srt"]], "autodeer.pulses": [[132, 0, 1, "", "ChirpPulse"], [132, 0, 1, "", "Delay"], [132, 0, 1, "", "Detection"], [132, 0, 1, "", "FrequencySweptPulse"], [132, 0, 1, "", "GaussianPulse"], [132, 0, 1, "", "HSPulse"], [132, 0, 1, "", "Pulse"], [132, 0, 1, "", "RectPulse"], [132, 0, 1, "", "SincPulse"], [132, 5, 1, "", "build_default_pulses"]], "autodeer.pulses.ChirpPulse": [[132, 1, 1, "", "func"], [132, 3, 1, "", "sweeprate"]], "autodeer.pulses.Delay": [[132, 2, 1, "", "pcyc"], [132, 2, 1, "", "scale"], [132, 2, 1, "", "tp"]], "autodeer.pulses.Detection": [[132, 2, 1, "", "freq"], [132, 2, 1, "", "pcyc"], [132, 2, 1, "", "scale"]], "autodeer.pulses.FrequencySweptPulse": [[132, 3, 1, "", "Qcrit"], [132, 3, 1, "", "amp_factor"], [132, 3, 1, "", "sweeprate"]], "autodeer.pulses.GaussianPulse": [[132, 2, 1, "", "FWHM"], [132, 2, 1, "", "freq"], [132, 1, 1, "", "func"]], "autodeer.pulses.HSPulse": [[132, 2, 1, "", "beta"], [132, 1, 1, "", "func"], [132, 2, 1, "", "order1"], [132, 2, 1, "", "order2"], [132, 3, 1, "", "sweeprate"]], "autodeer.pulses.Pulse": [[132, 2, 1, "", "Progression"], [132, 1, 1, "", "__str__"], [132, 1, 1, "", "_addPhaseCycle"], [132, 1, 1, "", "_buildFMAM"], [132, 1, 1, "", "_calc_fft"], [132, 1, 1, "", "_from_dict"], [132, 1, 1, "", "_from_json"], [132, 1, 1, "", "_pcyc_str"], [132, 1, 1, "", "_to_dict"], [132, 1, 1, "", "_to_json"], [132, 3, 1, "", "amp_factor"], [132, 3, 1, "", "bandwidth"], [132, 1, 1, "", "build_shape"], [132, 1, 1, "", "build_table"], [132, 1, 1, "", "copy"], [132, 1, 1, "", "exciteprofile"], [132, 1, 1, "", "isDelayFocused"], [132, 1, 1, "", "isPulseFocused"], [132, 1, 1, "", "is_static"], [132, 1, 1, "", "load"], [132, 2, 1, "", "name"], [132, 1, 1, "", "plot"], [132, 1, 1, "", "plot_fft"], [132, 1, 1, "", "save"]], "autodeer.pulses.RectPulse": [[132, 2, 1, "", "freq"], [132, 1, 1, "", "func"]], "autodeer.pulses.SincPulse": [[132, 2, 1, "", "freq"], [132, 1, 1, "", "func"], [132, 2, 1, "", "order"], [132, 2, 1, "", "window"]], "autodeer.reporter": [[135, 0, 1, "", "Reporter"], [135, 0, 1, "", "SvgFlowable"], [135, 5, 1, "", "combo_figure"], [135, 5, 1, "", "create_report"], [135, 6, 1, "", "package_dir"], [135, 6, 1, "", "styles"]], "autodeer.reporter.Reporter": [[135, 1, 1, "", "_build"], [135, 1, 1, "", "add_code_block"], [135, 1, 1, "", "add_figure"], [135, 1, 1, "", "add_new_section"], [135, 1, 1, "", "add_page_break"], [135, 1, 1, "", "add_space"], [135, 1, 1, "", "add_table"], [135, 1, 1, "", "add_text"], [135, 1, 1, "", "add_title"], [135, 1, 1, "", "footer"], [135, 1, 1, "", "header"], [135, 2, 1, "", "pdf"], [135, 2, 1, "", "story"]], "autodeer.reporter.SvgFlowable": [[135, 1, 1, "", "draw"], [135, 2, 1, "", "drawing"], [135, 2, 1, "", "height"], [135, 2, 1, "", "width"], [135, 1, 1, "", "wrap"]], "autodeer.sequences": [[146, 0, 1, "", "CarrPurcellSequence"], [146, 0, 1, "", "DEERSequence"], [146, 0, 1, "", "FieldSweepSequence"], [146, 0, 1, "", "HahnEchoSequence"], [146, 0, 1, "", "RefocusedEcho2DSequence"], [146, 0, 1, "", "ReptimeScan"], [146, 0, 1, "", "ResonatorProfileSequence"], [146, 0, 1, "", "Sequence"], [146, 0, 1, "", "T2RelaxationSequence"], [146, 0, 1, "", "TWTProfileSequence"]], "autodeer.sequences.CarrPurcellSequence": [[146, 1, 1, "", "_build_sequence"], [146, 2, 1, "", "dim"], [146, 2, 1, "", "n"], [146, 2, 1, "", "tau"]], "autodeer.sequences.DEERSequence": [[146, 2, 1, "", "ESEEM"], [146, 1, 1, "", "add_ESEEM_avg"], [146, 2, 1, "", "deadtime"], [146, 2, 1, "", "dt"], [146, 1, 1, "", "five_pulse"], [146, 1, 1, "", "four_pulse"], [146, 1, 1, "", "nDEER_CP"], [146, 1, 1, "", "select_pcyc"], [146, 1, 1, "", "seven_pulse"], [146, 1, 1, "", "simulate"], [146, 2, 1, "", "tau1"], [146, 2, 1, "", "tau1us"], [146, 2, 1, "", "tau2"], [146, 1, 1, "", "three_pulse"]], "autodeer.sequences.FieldSweepSequence": [[146, 2, 1, "", "B"], [146, 2, 1, "", "name"]], "autodeer.sequences.RefocusedEcho2DSequence": [[146, 1, 1, "", "_build_sequence"], [146, 2, 1, "", "tau1"], [146, 2, 1, "", "tau2"]], "autodeer.sequences.ReptimeScan": [[146, 2, 1, "", "name"]], "autodeer.sequences.ResonatorProfileSequence": [[146, 1, 1, "", "_build_sequence"], [146, 2, 1, "", "fwidth"], [146, 2, 1, "", "gyro"]], "autodeer.sequences.Sequence": [[146, 2, 1, "", "LO"], [146, 1, 1, "", "__str__"], [146, 1, 1, "", "_buildPhaseCycle"], [146, 1, 1, "", "_checkRect"], [146, 1, 1, "", "_convert_to_delay"], [146, 1, 1, "", "_convert_to_pulses"], [146, 1, 1, "", "_estimate_time"], [146, 1, 1, "", "_from_dict"], [146, 1, 1, "", "_from_json"], [146, 1, 1, "", "_to_dict"], [146, 1, 1, "", "_to_json"], [146, 1, 1, "", "addPulse"], [146, 2, 1, "", "averages"], [146, 2, 1, "", "axes_uuid"], [146, 1, 1, "", "convert"], [146, 1, 1, "", "copy"], [146, 1, 1, "", "evolution"], [146, 1, 1, "", "isDelayFocused"], [146, 1, 1, "", "isPulseFocused"], [146, 1, 1, "", "load"], [146, 2, 1, "", "name"], [146, 2, 1, "", "num_pulses"], [146, 1, 1, "", "plot"], [146, 1, 1, "", "plot_pulse_exc"], [146, 2, 1, "", "progTable"], [146, 2, 1, "", "pulses"], [146, 2, 1, "", "reduce_uuid"], [146, 1, 1, "", "save"], [146, 3, 1, "", "seqtable_steps"], [146, 1, 1, "", "shift_detfreq_to_zero"], [146, 2, 1, "", "shots"]], "autodeer.sequences.T2RelaxationSequence": [[146, 2, 1, "", "name"], [146, 2, 1, "", "tau"]], "autodeer.sequences.TWTProfileSequence": [[146, 1, 1, "", "_build_sequence"]], "autodeer.tools": [[147, 5, 1, "", "eprload"], [147, 6, 1, "", "log"], [147, 5, 1, "", "progress_bar"], [147, 5, 1, "", "progress_bar_frac"]], "autodeer.utils": [[148, 5, 1, "", "autoEPRDecoder"], [148, 5, 1, "", "build_table"], [148, 5, 1, "", "gcd"], [148, 5, 1, "", "round_step"], [148, 5, 1, "", "save_file"], [148, 5, 1, "", "sop"], [148, 5, 1, "", "transpose_dict_of_list"], [148, 5, 1, "", "transpose_list_of_dicts"], [148, 5, 1, "", "val_in_ns"], [148, 5, 1, "", "val_in_us"]], "dummyInterface": [[106, 2, 1, "", "SNR"], [106, 1, 1, "", "acquire_dataset"], [106, 1, 1, "", "isrunning"], [106, 1, 1, "", "launch"], [106, 2, 1, "", "mode"], [106, 2, 1, "", "pulses"], [106, 2, 1, "", "speedup"], [106, 2, 1, "", "start_time"], [106, 2, 1, "", "state"], [106, 1, 1, "", "terminate"], [106, 1, 1, "", "tune_pulse"], [106, 1, 1, "", "tune_rectpulse"]], "dummy_api": [[108, 2, 1, "", "_tmp_dir"], [108, 1, 1, "", "abort_exp"], [108, 1, 1, "", "acquire_scan"], [108, 1, 1, "", "acquire_scan_2d"], [108, 1, 1, "", "acquire_scan_at"], [108, 1, 1, "", "compile_PulseSpel_def"], [108, 1, 1, "", "compile_PulseSpel_prg"], [108, 1, 1, "", "find_Xepr"], [108, 1, 1, "", "is_exp_running"], [108, 2, 1, "", "meta"], [108, 1, 1, "", "run_exp"], [108, 1, 1, "", "set_PulseSpel_var"], [108, 1, 1, "", "stop_exp"]], "dummy_cur_exp": [[109, 2, 1, "", "CenterField"], [109, 2, 1, "", "FTAcqModeSlct"], [109, 2, 1, "", "FrequencyMon"], [109, 2, 1, "", "NbScansDone"], [109, 2, 1, "", "NbScansToDo"], [109, 2, 1, "", "PlsSPELEXPSlct"], [109, 2, 1, "", "PlsSPELGlbPaF"], [109, 2, 1, "", "PlsSPELLISTSlct"], [109, 2, 1, "", "PlsSPELPrgPaF"], [109, 2, 1, "", "ReplaceMode"], [109, 2, 1, "", "ShotRepTime"], [109, 2, 1, "", "ShotsPLoop"], [109, 2, 1, "", "SweepWidth"], [109, 2, 1, "", "SweepsPExp"], [109, 2, 1, "", "XSpecRes"], [109, 1, 1, "", "__getitem__"], [109, 1, 1, "", "aqExpRun"], [109, 1, 1, "", "getParam"]], "dummy_dataset": [[110, 2, 1, "", "O"], [110, 2, 1, "", "size"]], "dummy_hidden": [[111, 2, 1, "", "BrXAmp"], [111, 2, 1, "", "BrXPhase"], [111, 2, 1, "", "BrYAmp"], [111, 2, 1, "", "BrYPhase"], [111, 2, 1, "", "MinBrXAmp"], [111, 2, 1, "", "MinBrXPhase"], [111, 2, 1, "", "MinBrYAmp"], [111, 2, 1, "", "MinBrYPhase"], [111, 2, 1, "", "SignalPhase"], [111, 1, 1, "", "__getitem__"], [111, 1, 1, "", "getParam"]], "dummy_param": [[112, 2, 1, "", "aqGetParMaxValue"], [112, 2, 1, "", "aqGetParMinValue"], [112, 2, 1, "", "val"], [112, 3, 1, "", "value"]], "dummy_xepr": [[113, 0, 1, "", "XeprCmds"], [113, 1, 1, "", "XeprDataset"], [113, 1, 1, "", "XeprExperiment"], [113, 2, 1, "", "cur_exp"], [113, 2, 1, "", "hidden"]], "dummy_xepr.XeprCmds": [[113, 1, 1, "", "aqExpSelect"], [113, 1, 1, "", "aqPgCompile"], [113, 1, 1, "", "aqPgDefLoad"], [113, 1, 1, "", "aqPgDefSaveAs"], [113, 1, 1, "", "aqPgLoad"], [113, 1, 1, "", "aqPgSaveAs"], [113, 1, 1, "", "aqPgShowPrg"], [113, 1, 1, "", "vpSave"]], "get_dataWorker": [[85, 2, 1, "", "finished_signal"], [85, 2, 1, "", "interface"], [85, 2, 1, "", "result_signal"], [85, 1, 1, "", "run"], [85, 2, 1, "", "signals"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "module", "Python module"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:property", "4": "py:module", "5": "py:function", "6": "py:data"}, "terms": {"": [22, 23, 31, 33, 34, 35, 60, 61, 101, 102, 122, 129, 132, 152, 158], "0": [8, 12, 14, 16, 18, 19, 20, 23, 26, 27, 28, 30, 34, 35, 36, 39, 41, 42, 44, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 61, 64, 65, 67, 73, 75, 76, 77, 82, 83, 84, 86, 88, 96, 101, 102, 103, 104, 105, 106, 107, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 142, 146, 155, 156, 158, 160, 162, 164], "00": 158, "002803632236095": [73, 77, 82, 83, 84, 86], "0028087": 155, "00bbd6": 62, "01": 162, "015": 155, "02": [155, 158], "025": 155, "03": [46, 47, 48, 122, 158, 160], "05": [12, 39, 42, 122], "08": [23, 155], "08737812e": 158, "1": [3, 4, 8, 12, 14, 17, 18, 19, 21, 22, 23, 24, 26, 28, 34, 35, 39, 42, 45, 46, 47, 48, 50, 54, 56, 57, 60, 61, 65, 67, 73, 77, 82, 83, 87, 88, 92, 93, 94, 95, 96, 101, 102, 104, 105, 117, 119, 121, 122, 123, 124, 126, 128, 129, 132, 137, 141, 145, 146, 148, 154, 155, 156, 159, 160, 163, 164], "10": [30, 34, 59, 60, 61, 122, 155, 158, 162], "100": [4, 13, 17, 38, 54, 96, 119, 121, 122, 136, 137, 140, 145, 146, 152, 155, 162, 164], "1000": [23, 35, 46, 47, 48, 75, 76, 122, 129, 132, 155, 156], "10000": [35, 122, 129, 132], "100000000": 23, "100n": 164, "10400": 155, "11": [35, 122, 129, 132, 148, 155], "119": [35, 122, 129, 132], "12": [73, 77, 82, 83, 122, 132, 155, 158], "120": 155, "1201": 155, "12181": 155, "12182": 155, "12183": 155, "12220": [162, 164], "12220g": 167, "128": [14, 27, 28, 52, 121, 122, 123, 127, 128, 131, 132, 155, 164], "13": 155, "13570": [35, 122, 129, 132], "13582": [35, 122, 129, 132], "14": 155, "15": [155, 156, 158], "16": [17, 27, 36, 56, 57, 75, 76, 96, 117, 118, 119, 120, 121, 122, 127, 130, 132, 137, 146, 152, 155, 156, 158, 164], "168": 160, "16n": [17, 122, 137, 146], "16step_4p": [17, 122, 137, 146, 156], "16step_5p": [17, 122, 137, 146, 155, 156], "17400": 155, "178": [35, 122, 129, 132, 148], "18": 158, "180": 162, "19": [23, 154, 156], "192": 160, "1d": [21, 23, 24, 37, 40, 42, 122], "1e": [23, 155, 158], "1e3": [155, 156, 162], "1e4": 158, "1e8": 158, "1mhz": 160, "1st": [17, 122, 137, 146], "2": [17, 18, 30, 31, 33, 34, 35, 46, 47, 48, 56, 57, 59, 60, 61, 77, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 118, 119, 120, 121, 122, 129, 132, 137, 146, 148, 155, 156, 158, 160, 163, 164], "20": [18, 28, 56, 57, 104, 105, 122, 128, 132, 152, 155, 158], "200": [17, 53, 75, 76, 104, 105, 117, 121, 122, 137, 144, 146, 155, 164], "2000": [49, 122, 142, 146, 155], "2006": [35, 122, 129, 132, 148], "2008": [50, 65, 67, 122], "2009": [35, 122, 129, 132, 148], "200n": 164, "2013": [154, 156], "2014": 154, "2015": [35, 122, 129, 132, 156], "2017": 156, "2021": 154, "2024": 154, "203": 160, "2050": 160, "217": 155, "2172": 155, "23200": 155, "24": 155, "2400": 155, "24000": 155, "25": [18, 23, 122], "2500": 155, "256": 121, "2600": 155, "265": 158, "2800": 155, "2d": [18, 37, 38, 40, 42, 56, 57, 100, 104, 105, 108, 115, 122, 140, 146, 152, 170], "2e2": 164, "2e3": [155, 156], "2x2": [122, 135], "3": [3, 4, 6, 7, 8, 10, 17, 18, 31, 33, 35, 37, 40, 42, 49, 75, 76, 96, 100, 104, 105, 121, 122, 129, 132, 137, 142, 146, 154, 155, 156, 158, 164], "30": [12, 18, 21, 23, 24, 39, 42, 50, 65, 67, 75, 76, 96, 119, 121, 122, 155, 162], "3000": 155, "30th": 154, "31": 155, "32": [17, 27, 46, 47, 48, 122, 127, 132, 137, 146, 155, 156, 164], "320": 155, "32000": 155, "32e3": 155, "32step_7p": [17, 122, 137, 146, 156], "33": [46, 47, 48, 122, 155, 158, 160], "332": 155, "3339": [31, 33], "34": [155, 158, 162, 164], "35": [46, 47, 48, 122, 158, 160], "36": [46, 47, 48, 122, 155], "38": 155, "3e3": [162, 164], "3ghz": [49, 122, 142, 146], "4": [17, 18, 50, 56, 57, 65, 67, 121, 122, 137, 146, 155, 158, 167], "40": [53, 100, 122, 144, 146, 155], "400": [93, 94, 101, 102, 106, 107, 118, 119, 120, 121, 164], "4000000": [120, 121], "4095": [121, 160], "42": [35, 122, 129, 132, 148], "42a399": [42, 62, 122], "49": 155, "4_dev": 155, "4pdeer": [18, 37, 40, 42, 122, 152], "4puls": [37, 40, 42, 56, 57, 122], "4u": [18, 122], "5": [12, 17, 39, 42, 43, 46, 47, 48, 56, 57, 75, 76, 101, 102, 118, 119, 120, 121, 122, 133, 135, 137, 146, 155, 157, 158, 160], "50": [17, 75, 76, 117, 121, 122, 137, 146, 155, 156], "500": [49, 122, 142, 146, 155], "501": 155, "50k": 155, "512": [56, 57, 155], "52260651e": 158, "55": [35, 122, 129, 132, 148], "550": 96, "5600": 155, "5800": 155, "5e3": 155, "5pdeer": [18, 37, 40, 42, 122, 152], "5puls": [37, 40, 42, 56, 57, 122], "5u": [18, 122], "6": [28, 52, 122, 128, 131, 132, 155, 156, 158], "60": [75, 76, 96], "6000": 155, "6000000": [117, 118, 119, 121], "650": 158, "6614": [35, 122, 129, 132, 148], "6625": [35, 122, 129, 132, 148], "67652": 160, "680": [119, 121], "6e3": 164, "6u": 164, "7": [17, 122, 137, 146, 155], "70": 160, "700": [118, 120, 121], "747": 155, "75": [56, 57], "770": 155, "7800": 155, "8": [4, 17, 58, 122, 137, 146, 155, 156, 158, 160, 167], "80": [117, 121, 155, 158], "800": 155, "8000": 155, "82": 158, "85625754e": 158, "8n": [17, 122, 137, 146], "8step_3p": [17, 122, 137, 146, 156], "9": [41, 42, 44, 122, 154, 155], "90": [152, 162], "91334739e": 158, "92378391e": 158, "976": 158, "99": [18, 122], "A": [15, 16, 18, 20, 22, 23, 26, 30, 34, 35, 45, 50, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 93, 94, 95, 96, 100, 101, 102, 106, 107, 119, 120, 121, 122, 125, 126, 129, 132, 135, 141, 144, 146, 147, 148, 154, 155, 156, 157, 158, 159, 162, 163, 164, 167, 169], "As": [157, 158, 169], "At": [152, 153, 157], "BE": [19, 122, 124, 132], "By": [29, 32, 33, 34, 53, 60, 61, 122, 139, 144, 146], "For": [18, 122, 152, 155, 159, 160, 162, 163, 164, 165, 169], "IF": [101, 102], "If": [12, 17, 18, 30, 31, 33, 34, 35, 37, 39, 40, 42, 46, 47, 48, 51, 56, 57, 59, 60, 61, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 122, 129, 132, 137, 143, 146, 152, 156, 162, 169], "In": [154, 155, 160, 162, 164], "It": [46, 47, 48, 101, 102, 122, 150, 152, 155, 156, 157, 164, 165, 167, 169], "No": [71, 74, 76, 77, 81, 83, 91, 92, 95, 96, 164], "On": [154, 157, 158, 162, 163, 167, 169], "One": [154, 156, 160, 167], "That": 167, "The": [0, 12, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 65, 66, 67, 70, 75, 76, 77, 80, 83, 90, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 155, 156, 157, 158, 160, 162, 163, 164, 167, 171], "There": [56, 57, 104, 105, 155, 159, 162, 164, 166, 167, 171], "These": [104, 105, 108, 115, 152, 160, 162, 167], "To": [0, 56, 57, 153, 154, 164, 167], "WILL": [19, 122, 124, 132], "With": [37, 40, 42, 122, 156], "_": 162, "__add__": [15, 34, 60, 61, 63, 67, 122], "__eq__": [34, 60, 61, 122], "__getitem__": [109, 111, 115], "__init__": 164, "__main__": [77, 122, 149], "__mul__": [34, 60, 61, 122], "__o": [15, 34, 60, 61, 63, 67, 122], "__rmul__": [34, 60, 61, 122], "__str__": [35, 51, 97, 99, 100, 122, 129, 132, 143, 146], "__sub__": [34, 60, 61, 122], "__version__": [58, 122], "_addawgpuls": [99, 100], "_adddef": [99, 100], "_addexp": [99, 100], "_addphasecycl": [35, 99, 100, 122, 129, 132], "_addscanloop": [99, 100], "_arg": [134, 135], "_build": [43, 122, 133, 135], "_build_exp_struct": [101, 102], "_build_method": [75, 76], "_build_parvar": [101, 102], "_build_phase_cycl": [101, 102], "_build_puls": [101, 102], "_build_sequ": [13, 38, 49, 54, 122, 136, 140, 142, 145, 146], "_buildfmam": [35, 122, 129, 132, 164], "_buildphasecycl": [51, 122, 143, 146], "_calc_fft": [35, 122, 129, 132], "_check_sequ": [99, 100], "_checkrect": [51, 122, 143, 146], "_cmpl_def": [99, 100], "_cmpl_exp": [99, 100], "_convert_to_delai": [51, 122, 143, 146], "_convert_to_puls": [51, 122, 143, 146], "_data_transpos": [56, 57], "_description_": [12, 16, 17, 18, 21, 23, 24, 39, 42, 50, 56, 57, 64, 65, 67, 77, 92, 98, 100, 101, 102, 103, 104, 105, 120, 121, 122, 137, 146, 147, 148], "_detect": [97, 100], "_estimate_tim": [51, 122, 143, 146], "_expdef": [99, 100], "_freq_sweep": [120, 121], "_from_dict": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "_from_json": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "_gen_eseem": 107, "_get_cur_exp_glob": [104, 105], "_get_exp": [118, 121], "_get_xepr_glob": [104, 105], "_launch_complex_thread": [93, 94, 95, 96], "_main": [97, 100], "_mpfu": [97, 100], "_mpfu_channel": 96, "_new_delai": [99, 100], "_new_puls": [99, 100], "_new_var": [99, 100], "_obj": [68, 69], "_pcyc_str": [35, 122, 129, 132], "_process_fit": [46, 47, 48, 122], "_set_cur_exp_glob": [104, 105], "_set_cur_exp_param": [104, 105], "_set_hidden_param": [104, 105], "_set_xepr_glob": [104, 105], "_setup_echo": [119, 121], "_setup_exp": [118, 120, 121], "_similate_respro": 107, "_simulate_2d_relax": 107, "_simulate_cp": 107, "_simulate_d": 107, "_simulate_field_sweep": 107, "_simulate_reptimescan": 107, "_simulate_t2": 107, "_smooth": [37, 40, 42, 122], "_spfu_channel": 96, "_stability_check": [56, 57], "_summary_": [104, 105], "_tmp_dir": [104, 105, 108, 115], "_to_dict": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "_to_json": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "_type_": [13, 16, 17, 18, 25, 29, 30, 36, 38, 49, 52, 53, 56, 57, 59, 61, 64, 67, 77, 92, 100, 101, 102, 119, 120, 121, 122, 130, 131, 132, 136, 137, 138, 139, 140, 142, 144, 146], "_version": [122, 149], "_xepr_retri": [104, 105], "a4": [43, 122, 133, 135], "a_shift": 18, "ab": 96, "abil": [157, 159], "abl": 153, "abort": [104, 105, 108, 115], "abort_exp": [104, 105, 108, 115], "about": [20, 122, 125, 132, 155, 162, 164], "abov": [17, 31, 33, 46, 47, 48, 56, 57, 122, 137, 146, 153, 156, 164], "absolut": [50, 55, 65, 66, 67, 122], "abstract": [26, 122, 126, 132], "accept": 167, "acces": 162, "access": [162, 167, 171], "accumul": [51, 54, 122, 143, 145, 146], "accur": 162, "achiev": [18, 122, 152], "acquir": [30, 59, 61, 93, 94, 95, 96, 101, 102, 104, 105, 106, 107, 108, 115, 122, 162], "acquire_dataset": [30, 59, 61, 93, 94, 95, 96, 101, 102, 104, 105, 106, 107, 122, 155, 162], "acquire_dataset_from_matlab": [101, 102], "acquire_scan": [104, 105, 108, 115], "acquire_scan_2d": [104, 105, 108, 115], "acquire_scan_at": [104, 105, 108, 115], "acquisit": 100, "acquisition_mod": 100, "across": [17, 122, 137, 146, 152, 160], "act": [32, 33], "activ": [150, 159, 162, 165], "actual": [32, 33, 115, 162], "ad": [18, 29, 30, 31, 33, 34, 35, 42, 53, 59, 60, 61, 93, 94, 95, 96, 101, 102, 103, 106, 107, 122, 129, 132, 135, 139, 144, 146, 155, 156, 159, 162, 164, 167, 170], "add": [35, 51, 122, 129, 132, 143, 146, 154, 164, 167], "add_axi": [34, 60, 61, 122], "add_code_block": [43, 122, 133, 135], "add_eseem_avg": [17, 122, 137, 146], "add_figur": [43, 122, 133, 135], "add_new_entri": [78, 79], "add_new_sect": [43, 122, 133, 135], "add_nois": 107, "add_page_break": [43, 122, 133, 135], "add_phaseshift": 107, "add_spac": [43, 122, 133, 135], "add_tabl": [43, 122, 133, 135], "add_text": [43, 122, 133, 135], "add_titl": [43, 122, 133, 135], "addit": [156, 158, 162, 163, 164], "addition": [150, 152, 157, 169], "addpuls": [51, 122, 143, 146, 164], "addpulsesprog": 164, "adjust": [104, 105, 152, 157, 162], "administr": 167, "advanc": [73, 77, 82, 83, 155, 159, 162, 170], "advanced_mode_input": [73, 77, 82, 83], "advantag": [156, 164], "advent": 156, "after": [18, 93, 94, 95, 96, 104, 105, 108, 115, 122, 154, 156, 159, 162, 167], "again": 152, "aic": 158, "aim": [153, 167], "aim_mnr": [18, 122], "aim_tim": [18, 122], "aimtim": [18, 122], "akin": 157, "al": [50, 65, 67, 122, 156], "alert": 167, "algorithm": [50, 65, 67, 122, 170], "algorithum": 150, "align": [56, 57], "all": [8, 17, 20, 33, 35, 51, 56, 57, 100, 101, 102, 103, 119, 121, 122, 125, 129, 132, 137, 143, 146, 152, 153, 155, 156, 157, 162, 163, 164, 165, 167, 169], "allow": [31, 33, 115, 152, 155, 156, 157, 159, 162, 163, 164, 171], "alogoithm": 155, "along": [18, 56, 57, 122, 157, 162], "alreadi": [104, 105], "also": [100, 152, 153, 157, 159, 162, 164, 165, 167, 171], "alwai": [55, 66, 67, 122, 152, 153, 156, 162, 167], "am": [35, 122, 129, 132, 164], "amount": 18, "amp_factor": [26, 35, 122, 126, 129, 132], "amp_hahn": [101, 102], "amp_nut": [155, 162], "amp_var": 100, "amplifi": [104, 105, 167], "amplitud": [14, 19, 26, 28, 35, 122, 123, 124, 126, 128, 129, 132, 159, 162], "an": [17, 18, 30, 31, 33, 35, 42, 51, 54, 56, 57, 59, 61, 77, 92, 93, 94, 95, 96, 100, 101, 102, 109, 111, 115, 122, 129, 132, 137, 143, 145, 146, 150, 152, 153, 154, 155, 156, 159, 160, 162, 163, 164, 165, 167], "analogu": [160, 163], "analys": [157, 159, 162, 165, 169], "analysi": [12, 18, 21, 23, 24, 33, 35, 37, 39, 40, 41, 42, 44, 46, 47, 48, 50, 65, 67, 122, 129, 132, 135, 148, 159, 165], "analyz": [18, 37, 40, 41, 42, 44, 122], "andrin": [35, 101, 102, 103, 122, 129, 132], "angl": [36, 122, 130, 132], "ani": [34, 56, 57, 60, 61, 101, 102, 104, 105, 108, 115, 122, 153, 154, 157, 167], "annot": [4, 10], "anoth": [35, 122, 129, 132, 160, 167], "anyth": [71, 74, 76, 77, 81, 83, 91, 92, 150, 154, 167], "api": [93, 94, 95, 96, 100, 117, 118, 119, 120, 121, 155, 170], "api_doc": 162, "app": [72, 83, 88], "appear": 157, "append": [31, 33], "appli": [18, 56, 57, 96, 152, 159], "applic": [18, 31, 33, 77, 92, 122], "appraoch": 152, "approach": [162, 163, 164, 165], "appropri": [162, 167], "approxim": [18, 118, 119, 120, 121, 152], "aqexprun": [109, 115], "aqexpselect": [113, 114, 115], "aqgetparmaxvalu": [112, 115], "aqgetparminvalu": [112, 115], "aqpgcompil": [113, 114, 115], "aqpgdefload": [113, 114, 115], "aqpgdefsavea": [113, 114, 115], "aqpgload": [113, 114, 115], "aqpgsavea": [113, 114, 115], "aqpgshowprg": [113, 114, 115], "ar": [12, 18, 31, 33, 35, 37, 39, 40, 42, 51, 56, 57, 71, 74, 76, 77, 81, 83, 91, 92, 96, 100, 103, 122, 129, 132, 143, 146, 148, 152, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 169, 171], "arang": [34, 60, 61, 122, 164], "arbitari": [14, 19, 26, 28, 35, 122, 123, 124, 126, 128, 129, 132], "arg": [3, 6, 7, 18, 21, 23, 24, 35, 42, 70, 73, 75, 76, 77, 80, 82, 83, 90, 92, 95, 96, 101, 102, 104, 105, 122, 129, 132], "argument": [31, 33, 35, 70, 75, 76, 77, 80, 83, 90, 92, 122, 129, 132, 162], "aris": 167, "around": [101, 102, 150, 155], "arrai": [35, 56, 57, 100, 122, 129, 132], "arthur": [35, 122, 129, 132, 148], "ascii": 167, "asctim": [31, 33], "asp": [50, 65, 67, 122], "associ": [119, 121], "assum": [46, 47, 48, 56, 57, 122], "astronom": [50, 65, 67, 122], "attempt": 154, "attenu": [96, 119, 121, 167], "attribut": [3, 8, 31, 33, 34, 60, 61, 93, 94, 95, 164], "auto": [1, 18, 56, 57, 122, 149, 163], "autoapi": [3, 8, 170], "autoapi_opt": [3, 8], "autod": [0, 73, 80, 81, 82, 93, 95, 101, 106, 108, 149, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 167, 171], "autodeer_4hr": 155, "autodeer_fieldsweep": 155, "autodeer_work": [77, 122, 149], "autodeersign": [74, 76], "autodeerui": [73, 77, 82, 83], "autodeerwork": [75, 76], "autoepr": [30, 59, 61, 106, 107, 122, 150, 156, 162, 163, 164], "autoeprdecod": [122, 148], "autom": [150, 159, 162, 165, 170], "automat": [56, 57, 159, 162, 169], "autosav": [30, 59, 61, 93, 94, 95, 96, 101, 102, 106, 107, 122, 167], "avail": [31, 33, 71, 74, 76, 77, 81, 83, 91, 92, 162], "availi": [18, 122, 170], "avali": [12, 18, 39, 42, 122, 152], "averag": [12, 13, 17, 18, 23, 25, 29, 37, 38, 39, 40, 42, 45, 49, 51, 53, 54, 75, 76, 101, 102, 122, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 156, 162, 164], "awai": [159, 165], "awg": [75, 76, 93, 94, 99, 100, 101, 102, 117, 121, 122, 132, 152, 155, 156, 158, 159, 160, 163, 164, 165, 167, 170], "awg_freq": [101, 102], "ax": [12, 14, 18, 21, 23, 24, 27, 28, 35, 36, 37, 39, 40, 41, 42, 44, 46, 47, 48, 52, 69, 122, 123, 127, 128, 129, 130, 131, 132, 155, 162, 164], "ax_id": [34, 60, 61, 122], "axes_label": 69, "axes_uuid": [51, 122, 143, 146], "axi": [13, 18, 21, 23, 24, 34, 35, 37, 38, 40, 41, 42, 44, 46, 47, 48, 56, 57, 60, 61, 100, 122, 129, 132, 136, 140, 146, 148, 155, 164], "axid": [93, 94, 95, 96, 101, 102], "axis_id": [34, 60, 61, 122, 164], "b": [13, 17, 18, 23, 25, 29, 35, 38, 45, 49, 51, 53, 54, 93, 94, 95, 96, 100, 101, 102, 106, 107, 122, 129, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 156, 162, 164], "b0": [13, 17, 25, 29, 38, 45, 49, 53, 93, 94, 95, 96, 101, 102, 122, 136, 137, 138, 139, 140, 141, 142, 144, 146, 155, 164], "b1": [26, 35, 122, 126, 129, 132], "b_shift": 18, "back": [165, 166, 167], "backend": 150, "background": [18, 93, 94, 95, 96, 101, 102, 122, 155], "background_func": 18, "backup": 154, "bahrenberg": [56, 57], "banana": 158, "band": [152, 159], "bandwidth": [35, 104, 105, 122, 129, 132, 164], "base": [3, 13, 14, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 106, 107, 108, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 152, 153, 154, 159, 160, 162, 163, 165, 170], "bashrc": 154, "basic": [32, 33, 156, 162, 163, 167], "becaus": [152, 154], "becom": [154, 167], "been": [101, 102, 104, 105, 108, 115, 152, 154, 156, 159, 160, 162, 163, 165, 167], "befor": [30, 31, 33, 59, 61, 122, 152, 154, 155, 156, 160, 162, 163, 167, 169], "begin": [104, 105, 108, 115], "being": [30, 59, 61, 101, 102, 122, 152, 164], "beliv": [104, 105], "below": [156, 157], "best": [18, 122], "beta": [28, 122, 128, 132, 150], "better": [93, 94, 95, 96, 167], "between": [17, 18, 46, 47, 48, 49, 120, 121, 122, 137, 142, 146, 154, 155, 156, 159, 160, 162, 164], "beyond": 155, "bg_data": [93, 94, 95, 96, 101, 102], "bg_thread": [93, 94, 95, 96, 101, 102], "bic": 158, "big": 167, "biolog": 159, "biomolecul": 156, "bit": [56, 57, 158, 160], "blank": [4, 157], "block": [8, 162], "book": 157, "bool": [12, 17, 18, 21, 23, 24, 30, 34, 35, 37, 39, 40, 42, 51, 56, 57, 59, 60, 61, 94, 96, 98, 100, 102, 103, 104, 105, 107, 121, 122, 129, 132, 137, 143, 146], "borbat": 156, "both": [12, 18, 38, 39, 42, 46, 47, 48, 51, 56, 57, 100, 104, 105, 119, 121, 122, 140, 143, 146, 152, 157, 159, 160, 162, 163, 164, 165, 167], "bottom": [122, 135, 157], "bound": [96, 119, 121], "box": [73, 77, 82, 83, 92, 157], "bphasecycl": [97, 100], "branch": 153, "bridg": [104, 105, 158, 160, 163], "bridge12": 158, "bridge_config": [93, 94, 95, 96], "brief": [34, 60, 61, 122], "britt": [35, 122, 129, 132, 148], "bruker": [56, 57, 73, 77, 82, 83, 93, 94, 95, 96, 100, 101, 102, 115, 153, 154, 158, 159, 162, 165, 169, 170], "bruker_awg": [116, 122, 149], "bruker_mpfu": [116, 122, 149], "bruker_tool": [116, 122, 149], "brukerawg": [93, 94, 160, 162], "brukermpfu": [95, 96, 160], "brute": [18, 122], "brxamp": [111, 115], "brxphase": [111, 115], "bryamp": [111, 115], "bryphas": [111, 115], "bspline_extra": 47, "bug": 166, "build": [13, 17, 18, 23, 25, 29, 35, 38, 49, 53, 54, 122, 129, 132, 136, 137, 138, 139, 140, 142, 144, 145, 146, 150, 156, 160, 163, 164, 167], "build__lowpass_butter_filt": 18, "build_default_puls": [122, 132], "build_shap": [35, 122, 129, 132], "build_spectrum": 23, "build_tabl": [35, 122, 129, 132, 148], "build_unique_progt": 100, "built": [0, 150, 155, 159, 162, 163, 164, 165, 167], "butter": 103, "butterworth": 18, "button": [150, 152, 157, 159, 162, 165, 166, 169], "bw": [158, 164], "bwidth": [25, 49, 122, 138, 142, 146, 155], "byte": [134, 135], "bytesio": 135, "c": 100, "c243": [158, 160], "ca": 154, "cach": [93, 94, 101, 102, 162], "caclul": [56, 57], "cal": [158, 160], "calc_correction_factor": [18, 122], "calc_d0": [93, 94, 95, 96, 119, 121], "calc_d0_from_hahn_echo": [93, 94, 95, 96], "calc_deer_set": [18, 122, 170], "calc_gyro": [21, 23, 24, 122, 155], "calc_identifi": 18, "calc_noise_level": [21, 23, 24, 122], "calc_optimal_deer_frq": 155, "calc_optimal_reptim": [41, 42, 44, 122], "calc_overlap": 47, "calc_percieved_freq": 103, "calc_rel_posit": 100, "calcat": [18, 122], "calcuat": [47, 100], "calcul": [12, 18, 21, 23, 24, 37, 39, 40, 41, 42, 44, 46, 47, 48, 51, 56, 57, 104, 105, 122, 143, 146, 152, 155, 157, 167, 170], "calculate_noise_level": [56, 57], "calculate_optim": [56, 57], "calculate_snr_threshold": [56, 57], "calibr": [158, 160, 163], "calibratefreq": 121, "call": [31, 33, 101, 102, 156, 164, 171], "callback": [70, 75, 76, 77, 80, 83, 90, 92], "can": [31, 32, 33, 34, 35, 56, 57, 60, 61, 93, 94, 95, 96, 98, 100, 104, 105, 108, 115, 119, 121, 122, 129, 132, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 167, 169, 171], "cannot": [34, 35, 51, 56, 57, 60, 61, 122, 129, 132, 143, 146], "canva": [43, 122, 133, 135], "carefulli": 167, "cari": 152, "carr": [12, 13, 18, 39, 42, 122, 136, 146, 152, 156], "carri": [31, 33, 152], "carrpurcel": 155, "carrpurcellanalysi": [12, 18, 39, 42, 122, 155, 162], "carrpurcellsequ": [13, 122, 136, 146, 155], "case": [32, 33, 56, 57, 154], "caus": [154, 163, 167], "caution": [35, 122, 129, 132], "caveat": 163, "cd": 154, "ceil": 47, "center": [157, 158], "centerfield": [109, 115], "centr": [20, 122, 125, 132, 159], "central": [51, 54, 93, 94, 101, 102, 122, 143, 145, 146, 155], "certif": 154, "chage": [35, 122, 129, 132], "challeng": [154, 156], "chang": [31, 33, 98, 100, 101, 102, 104, 105, 108, 115, 156, 160, 162, 164, 165, 166, 167], "change_dimens": 100, "change_lo": [73, 77, 82, 83], "change_log_level": 33, "channel": [31, 33, 96, 100, 104, 105, 118, 119, 120, 121, 158, 160, 167], "characteris": 152, "charecteris": 152, "chart": [134, 135], "cheby2": 103, "check": [12, 35, 39, 42, 50, 51, 56, 57, 65, 67, 98, 100, 122, 129, 132, 143, 146, 154, 156, 162, 167], "check_cp": [73, 77, 82, 83], "check_decai": [12, 39, 42, 122], "check_t2": [73, 77, 82, 83], "check_vari": 100, "checkpulsespel": [98, 100], "chem": [35, 122, 129, 132, 148, 156], "children": 8, "chip": 164, "chirp": [152, 156, 165], "chirppuls": [14, 122, 123, 132, 164], "chnannel": [104, 105], "choos": [17, 100, 101, 102, 122, 137, 146, 157], "chose": 152, "chosen": [96, 119, 121, 156, 157], "clarifi": 152, "class": [3, 5, 8, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 78, 80, 81, 82, 84, 85, 87, 90, 91, 93, 95, 97, 98, 99, 101, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 162, 163, 164, 170], "classmethod": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "clean": 0, "clear": [35, 122, 129, 132, 162], "clear_al": [73, 77, 82, 83, 87, 88], "clear_cach": 162, "clear_log": [78, 79], "clearlayout": [87, 88], "click": [157, 166, 169], "clone": 153, "close": 154, "closest": [56, 57], "cmap": [42, 56, 57, 122], "code": [17, 43, 115, 122, 133, 135, 137, 146, 150, 156, 162], "coeffic": [104, 105], "coher": [35, 122, 129, 132, 164], "collect": [119, 121], "color": [42, 122, 149], "colormap": [56, 57], "com": [153, 160, 161], "combin": 162, "combo_figur": [122, 135], "come": [152, 154, 162, 164], "command": [33, 95, 96, 104, 105, 156, 164], "comment": [77, 92], "common": [122, 148, 152, 154, 162], "commonli": [101, 102], "commun": [157, 167], "comp": [122, 148], "compact": [18, 122, 155], "compat": 100, "compens": [152, 165], "compil": 100, "compile_pulsespel_def": [104, 105, 108, 115], "compile_pulsespel_prg": [104, 105, 108, 115], "complet": [56, 57, 150, 152, 154, 157, 158, 160, 162, 169], "complex": 103, "complic": 162, "compon": 163, "comprehens": [35, 122, 129, 132, 148], "compress": 103, "comput": [23, 31, 33, 35, 55, 66, 67, 122, 129, 132, 154, 160], "computefreq2field": 23, "computeintens": 23, "condit": [12, 30, 39, 42, 59, 61, 122], "conduct": 162, "confer": [50, 65, 67, 122], "config": [73, 77, 82, 83, 154, 157, 160, 169], "config_fil": [93, 94, 95, 96, 104, 105, 106, 107], "configur": [93, 94, 95, 96, 104, 105, 169], "conflict": 154, "connect": [30, 59, 61, 73, 77, 82, 83, 93, 94, 95, 96, 101, 102, 104, 105, 106, 107, 122, 155, 163, 167], "connect_spectromet": [73, 77, 82, 83], "consid": [150, 163, 164], "consist": [162, 164], "consol": 154, "constant": [34, 56, 57, 60, 61, 98, 100, 122], "construct": [31, 33], "consum": 156, "conta": 100, "contact": [150, 161, 163], "contain": [1, 34, 35, 46, 47, 48, 51, 60, 61, 100, 122, 129, 132, 134, 135, 143, 146, 149, 156, 157, 162, 164, 169], "content": 8, "continu": [55, 66, 67, 122, 154], "contour": [37, 40, 42, 56, 57, 122], "control": [101, 102, 155, 159, 163, 165], "convers": [104, 105], "convert": [31, 33, 51, 100, 121, 122, 134, 135, 143, 146, 148, 160, 163, 164], "convert_progt": 100, "coordin": [56, 57], "copi": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "core": [33, 46, 47, 48, 73, 77, 82, 83, 87, 88, 122, 158, 167], "core_logg": 167, "corespond": 154, "corner": [56, 57, 157], "corr_phas": 103, "correct": [18, 96, 104, 105, 122, 156, 162], "correction_factor": [73, 77, 82, 83], "correctli": 154, "correctphas": [68, 69], "correctphaseful": [68, 69], "correspond": [35, 109, 111, 115, 122, 129, 132], "could": [167, 169], "count": 4, "counter": [104, 105], "coupl": [31, 33, 163], "cours": 163, "cp": [12, 18, 39, 42, 122, 152], "cp_data": 155, "cp_run": 121, "cpdecai": [18, 122], "cpseq": 155, "creat": [17, 18, 23, 31, 33, 34, 35, 37, 40, 42, 56, 57, 60, 61, 73, 77, 82, 83, 93, 94, 95, 96, 101, 102, 122, 129, 132, 135, 137, 146, 148, 156, 162, 167], "create_bahrenberg_plot": [56, 57], "create_dataset_from_ax": 69, "create_dataset_from_bruk": 69, "create_dataset_from_sequ": 69, "create_fieldsweep_figur": [73, 77, 82, 83], "create_figur": [84, 86, 87, 88], "create_nmodel": 23, "create_relax_figur": [73, 77, 82, 83], "create_report": [73, 77, 82, 83, 135], "create_respro_figur": [73, 77, 82, 83], "create_save_nam": [77, 92], "create_slice_plot": [56, 57], "create_twod_plot": [56, 57], "creation": [31, 33], "criteria": [15, 16, 18, 30, 50, 55, 59, 61, 63, 64, 65, 66, 98, 100, 122, 149, 155, 162, 165], "criterion": [18, 30, 59, 61, 122], "critic": [26, 31, 33, 122, 126, 132, 167], "cross": 18, "csv": [56, 57], "cur_exp": [93, 94, 95, 96, 101, 102, 104, 105, 113, 115], "cur_exp_inst": [104, 105], "current": [31, 33, 37, 40, 41, 42, 44, 51, 100, 101, 102, 104, 105, 108, 109, 111, 115, 122, 143, 146, 153, 156, 157, 160, 163, 165], "current_data": [73, 77, 82, 83, 87, 88], "current_fold": [73, 77, 82, 83, 84, 86, 87, 88], "current_result": [73, 77, 82, 83, 87, 88], "custom": [155, 171], "customis": 157, "cutoff": [18, 122], "cvx": 158, "cycl": [17, 35, 56, 57, 100, 122, 129, 132, 137, 146, 155, 164], "d": [31, 33, 50, 65, 67, 100, 122, 148], "d0": [93, 94, 95, 96, 99, 100, 117, 118, 119, 120, 121, 158, 169], "d1": 100, "d10": 100, "d11": 100, "d12": 100, "d13": 100, "d14": 100, "d15": 100, "d2": 100, "d3": 100, "d4": 100, "d5": 100, "d6": 100, "d61b00": 62, "d7": 100, "d8": 100, "d95b6f": [42, 62, 122], "dai": 167, "daili": 167, "danger": 167, "data": [2, 8, 12, 18, 21, 23, 24, 30, 35, 37, 39, 40, 42, 50, 56, 57, 59, 61, 65, 67, 69, 71, 74, 75, 76, 77, 81, 83, 91, 92, 103, 104, 105, 107, 108, 115, 122, 129, 132, 135, 147, 152, 155, 157, 159, 165, 169, 170], "dataarrai": [21, 23, 24, 42, 122, 147], "datafil": [56, 57], "dataset": [12, 18, 21, 23, 24, 30, 37, 39, 40, 41, 42, 44, 46, 47, 48, 56, 57, 59, 61, 73, 77, 82, 83, 84, 86, 88, 93, 94, 95, 96, 101, 102, 104, 105, 106, 107, 108, 115, 118, 121, 122, 149, 155, 162], "date": [31, 33, 153, 154, 165, 167], "datefmt": [31, 33], "david": [35, 122, 129, 132, 148], "db": [104, 105], "dc": [17, 122, 137, 146, 156, 164], "dct": [35, 51, 122, 129, 132, 143, 146, 148], "deadtim": [17, 117, 121, 122, 137, 146, 156], "debug": [31, 33, 158, 167], "decai": [12, 18, 39, 42, 56, 57, 122, 152], "decid": 162, "decim": 47, "declar": 164, "decoher": [56, 57, 170], "decoupl": [13, 122, 136, 146], "decreas": 164, "deep": [35, 122, 129, 132], "deer": [16, 17, 18, 56, 57, 64, 67, 117, 121, 122, 135, 137, 146, 150, 157, 159, 160, 165, 169, 170], "deer5p_run": 121, "deer_analysi": [122, 149], "deer_input": [75, 76], "deer_set": [73, 75, 76, 77, 82, 83], "deeranalysi": [18, 122, 155], "deeranalysis_plot": [18, 122, 155], "deeranalysis_plot_pub": [18, 122], "deeranalysis_process": 88, "deercriteria": [16, 64, 67, 122, 155], "deerlab": [18, 50, 56, 57, 65, 67, 122, 135, 152, 153, 158, 159], "deerload": [56, 57], "deerplot": [87, 88], "deersequ": [17, 122, 137, 146, 155, 156], "def": [100, 164], "def_file_str": [99, 100], "default": [12, 16, 17, 18, 20, 21, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 96, 100, 101, 102, 103, 104, 105, 118, 119, 120, 121, 122, 125, 127, 129, 130, 131, 132, 135, 137, 139, 141, 142, 143, 144, 146, 147, 154, 155, 158, 162, 167], "defenc": 167, "defin": [15, 16, 32, 33, 50, 55, 63, 64, 65, 66, 67, 71, 74, 76, 77, 81, 83, 91, 92, 122, 155, 164], "definit": [100, 155, 160], "deg": 121, "degre": [121, 167], "delai": [12, 17, 19, 35, 37, 39, 40, 42, 49, 51, 53, 56, 57, 98, 100, 122, 124, 129, 132, 137, 142, 143, 144, 146, 152, 155, 156, 159, 164, 169], "demonstr": 164, "den": 147, "denot": [101, 102], "depend": [18, 31, 33, 51, 122, 143, 146, 153, 154, 156, 163, 164], "dependeci": 154, "deprec": [19, 122, 124, 132], "depth": [107, 156], "dersnr": [50, 65, 67, 122], "describ": [31, 33, 37, 40, 41, 42, 44, 51, 122, 143, 146, 164], "descript": [15, 34, 50, 55, 60, 61, 63, 65, 66, 67, 122, 155, 156], "design": [0, 152, 159, 163, 165], "desir": [18, 32, 33, 122], "desktop": 167, "destin": [32, 33], "det": [158, 160, 164], "det_ev": [155, 156], "det_frq": [21, 23, 24, 117, 121, 122], "det_window": 155, "detail": [56, 57, 120, 121, 152, 162, 171], "detect": [18, 20, 21, 23, 24, 35, 42, 101, 102, 104, 105, 108, 115, 122, 125, 129, 132, 135, 152, 155, 164, 167], "detect_eseem": [42, 122], "determin": [31, 32, 33, 152, 159], "determine_twt_split": 100, "deuteron": [17, 42, 122, 137, 146], "dev": 153, "devel": 154, "develop": [103, 115, 150, 152, 153, 154, 156, 162, 163, 164, 166, 171], "deviat": [18, 56, 57], "diagnal": [56, 57], "diagram": [3, 134, 135], "dict": [18, 34, 35, 60, 61, 69, 76, 77, 79, 92, 100, 101, 102, 103, 119, 121, 122, 129, 132, 135], "dictat": [56, 57], "dictformat": [31, 33], "dictionari": [31, 33, 35, 100, 101, 102, 119, 121, 122, 129, 132, 135, 148, 162, 164], "didn": 167, "differ": [34, 46, 47, 48, 60, 61, 122, 154, 156, 160, 162, 165, 167], "differenti": 160, "dig_rat": [101, 102], "digit": [160, 163], "digitally_upconvert": 103, "digits": [101, 102], "dim": [13, 34, 38, 53, 60, 61, 96, 99, 100, 122, 136, 140, 144, 146, 155], "dimens": [100, 167], "dimension": [34, 60, 61, 122], "dimesnion": 100, "diod": [121, 160], "dip": 155, "dipolar": [18, 122, 156], "direct": [35, 56, 57, 122, 129, 132], "directli": [15, 16, 34, 50, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 122, 160], "directori": [154, 169], "disadvantag": 156, "discontinu": 154, "discuss": [166, 167], "dispatch": [32, 33], "displai": [3, 4, 6, 7, 8, 10, 157, 169], "distanc": [18, 122, 152, 156, 159, 162], "distribut": [18, 122, 152, 162], "dividor": [122, 148], "dl_param": [73, 77, 82, 83, 87, 88], "dnp": 164, "do": [32, 33, 153, 154, 155, 160, 163, 164], "doc": [43, 122, 133, 135, 153, 170], "docstr": [3, 4, 6, 7, 8, 10], "document": [1, 35, 56, 57, 122, 129, 132, 148, 149, 150, 170], "doe": [34, 35, 51, 60, 61, 101, 102, 122, 129, 132, 143, 146, 157, 163], "doesn": [56, 57], "doll": [35, 101, 102, 103, 122, 129, 132, 156, 158], "dolla": [35, 122, 129, 132], "domain": [18, 35, 122, 129, 132, 152, 162], "don": 157, "done": [18, 56, 57, 84, 86, 100, 104, 105, 108, 115, 154, 156, 157, 160, 162, 163, 164, 165, 169], "doubl": [12, 39, 42, 122, 156, 159], "down": [160, 164, 167], "download": 153, "draw": [134, 135], "dsc": [56, 57], "dsl": 162, "dstribut": 154, "dt": [17, 75, 76, 117, 121, 122, 137, 146, 152, 155, 156, 158, 160], "dta": 103, "due": [56, 57, 163], "dummi": [115, 116, 122, 149], "dummy_api": [108, 115], "dummy_cur_exp": [109, 115], "dummy_dataset": [110, 115], "dummy_hidden": [111, 115], "dummy_param": [109, 111, 112, 115], "dummy_xepr": [113, 116, 122, 149], "dummyinterfac": [106, 107], "durand": [50, 65, 67, 122], "durat": [18, 162], "dure": [55, 66, 67, 122, 159], "dynam": [13, 34, 60, 61, 122, 136, 146, 154, 162], "e": [31, 33, 35, 51, 54, 56, 57, 100, 101, 102, 119, 121, 122, 129, 132, 143, 145, 146, 148, 153, 156, 160, 162, 164, 167], "e1ae38": [62, 122], "e580": [158, 160], "each": [18, 34, 35, 37, 40, 42, 60, 61, 96, 100, 122, 129, 132, 148, 162, 164, 167, 171], "earlier": 167, "easi": [159, 160, 165], "easier": 167, "easiest": 171, "easili": [154, 157, 162], "easyspin": [35, 122, 129, 132, 148], "echo": [17, 18, 29, 37, 38, 40, 42, 45, 49, 53, 56, 57, 96, 119, 120, 121, 122, 135, 137, 139, 140, 141, 142, 144, 146, 152, 154, 155, 156, 162, 164], "edf": [25, 122, 135, 138, 146, 152, 155], "edit": 153, "effect": [18, 104, 105, 108, 115, 156], "effic": 152, "effici": [35, 122, 129, 132, 148], "eith": [34, 60, 61, 122], "either": [12, 13, 18, 21, 23, 24, 25, 29, 31, 33, 37, 38, 39, 40, 42, 49, 51, 53, 96, 101, 102, 119, 121, 122, 136, 138, 139, 140, 142, 143, 144, 146, 150, 152, 162, 165, 167, 169], "eldor": [96, 104, 105, 118, 120, 121], "eldortun": [96, 118, 121], "electron": [35, 122, 129, 132, 156, 159], "element": [34, 37, 40, 42, 60, 61, 101, 102, 122, 160, 162], "elexsi": [93, 94, 95, 96, 159, 163, 165], "elif": 8, "els": [3, 4, 7, 8], "elspin": 23, "email": 167, "emin": 154, "emit": [31, 32, 33], "empti": [32, 33], "enabl": 150, "encod": 167, "encrypt": 154, "end": [55, 66, 67, 104, 105, 108, 115, 120, 121, 122, 165, 167], "end_criteria": [75, 76], "end_sign": [15, 63, 67, 122], "end_tim": [55, 66, 67, 122], "endblock": 8, "endfor": [3, 6, 7, 8, 10], "endif": [3, 4, 6, 7, 8, 10], "endor": 164, "endtimecriteria": [75, 76], "engin": [101, 102], "enough": [56, 57], "enter": 157, "enterpris": 154, "entir": [12, 39, 42, 122, 159], "entri": [78, 79, 157], "enviro": 154, "epoch": [55, 66, 67, 122], "epr": [35, 115, 122, 129, 132, 148, 159, 162, 164, 165], "epraccessor": [68, 69], "eprload": 147, "equal": [162, 163, 167], "equalto": 8, "equip": 167, "equival": [104, 105, 164], "erot": 23, "error": [30, 31, 33, 59, 61, 71, 74, 76, 77, 81, 83, 91, 92, 122, 167], "escap": 11, "eseem": [17, 42, 122, 137, 146], "eseem_avg": [17, 122, 137, 146], "eseem_depth": 107, "espin": [22, 23], "establish": [150, 152], "estim": [18, 50, 51, 65, 67, 93, 94, 95, 96, 122, 143, 146, 155, 169], "estimated_snr": [56, 57], "estr": 103, "et": [50, 65, 67, 122, 156], "etc": [45, 122, 141, 146, 154, 155, 158, 165, 167], "eth": [101, 102, 155, 158], "eth_awg": [116, 122, 149, 155], "eth_awg_interfac": [101, 102, 155], "eth_awg_load": [116, 122, 149], "even": [156, 165, 167], "event": [20, 31, 32, 33, 98, 100, 122, 125, 132, 155, 164], "everi": [35, 122, 129, 132, 160, 162, 163], "everyth": [33, 167], "evo": 152, "evolut": [18, 51, 122, 143, 146, 156], "exampl": [34, 60, 61, 122, 153, 155, 160, 162, 164], "exc": [18, 122], "exc_limit": 155, "exc_puls": [18, 122, 155, 156], "exce": 152, "except": [31, 33, 56, 57, 157, 167], "exciat": [18, 35, 122, 129, 132], "excit": [18, 35, 122, 129, 132, 155, 156, 159, 164], "exciteprofil": [35, 122, 129, 132], "exclud": [46, 47, 48, 122], "exctyp": [71, 74, 76, 77, 81, 83, 91, 92], "excut": 153, "exeperi": [109, 111, 115], "exist": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146, 153, 159, 165], "exp": [56, 57, 100], "exp_file_str": [99, 100], "exp_typ": [18, 107, 122], "expand": [153, 156, 163, 165], "experi": [15, 16, 18, 21, 23, 24, 30, 37, 40, 41, 42, 44, 50, 51, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 73, 77, 82, 83, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 115, 118, 120, 121, 122, 143, 146, 147, 154, 155, 158, 159, 162, 164, 165, 167], "experienc": 159, "experiment": [12, 14, 18, 19, 26, 28, 35, 39, 42, 51, 52, 54, 122, 123, 124, 126, 128, 129, 131, 132, 143, 145, 146, 162, 165], "explantori": 171, "exponenti": [12, 39, 42, 122], "export": 154, "express": [51, 122, 143, 146], "exptyp": [18, 122], "extend": [2, 5, 9, 156], "extens": 0, "extent": 18, "extern": [31, 33], "extra": [18, 56, 57, 101, 102, 122, 154, 162, 164, 167], "extra_param": 69, "extract": [46, 47, 48, 109, 111, 115, 122, 156], "eyekron": 23, "f": [18, 31, 33, 50, 65, 67, 122], "f243_awg": 158, "f_axi": 18, "f_diff_threshold": [46, 47, 48, 122], "f_lim": [46, 47, 48, 83, 122], "fact": [31, 33], "factor": [18, 26, 35, 122, 126, 129, 132], "fals": [17, 18, 34, 35, 37, 40, 42, 46, 47, 48, 55, 56, 57, 60, 61, 66, 67, 73, 75, 76, 77, 82, 83, 84, 86, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 117, 121, 122, 129, 132, 137, 146, 155, 158, 160, 164], "far": [46, 47, 48, 122, 164], "fashion": 163, "fc": 103, "fc_guess": [46, 47, 48, 122], "featur": [115, 157, 159, 163, 166, 167], "fedora": 154, "feel": [150, 167], "fet": 160, "few": [154, 155, 162, 163], "fft": [46, 47, 48, 68, 69, 122], "field": [13, 17, 18, 21, 23, 24, 25, 29, 38, 45, 49, 51, 53, 54, 93, 94, 95, 96, 101, 102, 104, 105, 121, 122, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 157, 164, 165, 167], "fieldsweep": [18, 21, 24, 46, 47, 48, 51, 83, 122, 143, 146, 149, 155, 158], "fieldsweep_fit": 83, "fieldsweepanalysi": [18, 21, 23, 24, 46, 47, 48, 122, 135, 155], "fieldsweepsequ": [25, 122, 138, 146, 155], "fig": [12, 18, 21, 23, 24, 37, 39, 40, 41, 42, 44, 46, 47, 48, 122], "figur": [12, 18, 21, 23, 24, 37, 39, 40, 42, 43, 46, 47, 48, 56, 57, 122, 133, 135], "file": [31, 33, 34, 35, 51, 56, 57, 60, 61, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 122, 129, 132, 143, 146, 147, 157, 162, 165, 167, 169], "filenam": [31, 33, 34, 35, 51, 60, 61, 68, 69, 73, 77, 82, 83, 86, 122, 129, 132, 143, 146], "filenotfounderror": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "filepath": [43, 69, 99, 100, 122, 133, 135], "fill": [56, 57, 164, 166], "fill_tabl": [77, 92], "filter": [18, 32, 33, 103, 122], "filter_puls": 103, "filter_typ": 103, "filter_width": 103, "final": [122, 135, 155, 164, 165, 169], "final_freq": 164, "find": [18, 56, 57, 104, 105, 155, 167], "find_cur_exp": [104, 105], "find_hidden": [104, 105], "find_longest_puls": 18, "find_max": [21, 23, 24, 122], "find_max_pulse_length": 103, "find_min": [118, 121], "find_optim": [12, 37, 39, 40, 42, 122, 155], "find_xepr": [104, 105, 108, 115], "finish": [30, 55, 59, 61, 66, 67, 71, 74, 76, 77, 81, 83, 91, 92, 104, 105, 108, 115, 122, 157], "finished_sign": [85, 86], "first": [12, 17, 34, 39, 42, 46, 47, 48, 60, 61, 101, 102, 122, 137, 146, 152, 154, 155, 156, 157, 162, 167, 169], "fit": [12, 18, 21, 23, 24, 39, 41, 42, 44, 46, 47, 48, 56, 57, 83, 121, 122, 135, 150, 152, 155, 158, 160, 162], "fit_result": [18, 122], "fitresult": [18, 73, 77, 82, 83, 87, 88, 122, 135], "fitter": 152, "five": [17, 122, 137, 146, 155, 156, 159, 167], "five_puls": [17, 122, 137, 146, 155, 156], "fix": [156, 166], "flaot": [36, 122, 130, 132], "flavour": 163, "flip": [36, 56, 57, 122, 130, 132], "flip_pow": 96, "flipangl": [26, 35, 36, 122, 126, 129, 130, 132, 155, 164], "float": [12, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 66, 67, 86, 93, 94, 96, 100, 101, 102, 103, 104, 105, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148], "floor": 47, "flowabl": [43, 122, 133, 134, 135], "fm": [35, 122, 129, 132, 164], "fmt": [31, 33], "fn": [70, 77, 80, 83, 90, 92], "fob": 155, "focus": [35, 51, 122, 129, 132, 143, 146, 164], "folder": [33, 86, 157, 167, 169], "folder_path": [73, 77, 82, 83], "follow": [0, 35, 122, 129, 132, 152, 158, 167], "foot": 163, "footer": [43, 122, 133, 135], "fork": 166, "form": [155, 156, 159, 162, 164, 165, 166], "format": [31, 32, 33, 157, 158, 167], "format_exc": [71, 74, 76, 77, 81, 83, 91, 92], "formatexcept": [31, 33], "formatt": [31, 32, 33], "formattim": [31, 33], "found": [93, 94, 95, 96, 153, 164, 169], "four": [17, 122, 137, 146, 159, 167], "four_puls": [17, 122, 137, 146, 156], "fpump": 155, "fraction": [18, 122], "fraquelli": [50, 65, 67, 122], "free": [150, 152, 154, 156, 162], "freed": 156, "freq": [20, 21, 23, 24, 27, 35, 36, 52, 96, 104, 105, 107, 122, 125, 127, 129, 130, 131, 132, 155, 158, 160, 162, 164], "frequenc": [13, 14, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 35, 36, 38, 45, 46, 47, 48, 49, 51, 52, 53, 54, 93, 94, 101, 102, 104, 105, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 155, 156, 157, 158, 160, 163, 164], "frequencymon": [109, 115], "frequencysweptpuls": [14, 26, 28, 122, 123, 126, 128, 132], "frequneci": [51, 54, 122, 143, 145, 146], "freudl": [50, 65, 67, 122], "freuenci": [104, 105], "friendli": 150, "from": [0, 12, 18, 30, 34, 35, 37, 39, 40, 42, 43, 51, 56, 57, 59, 60, 61, 70, 71, 74, 75, 76, 77, 80, 81, 83, 90, 91, 92, 100, 104, 105, 106, 107, 109, 111, 115, 121, 122, 129, 132, 133, 135, 143, 146, 148, 152, 155, 156, 157, 159, 160, 162, 164, 165, 167, 170], "front": 115, "fsweep": 155, "fsweep_analysi": [83, 155], "fsweep_result": [74, 76], "fsweep_toolbar": [73, 77, 82, 83], "ftacqmodeslct": [109, 115], "ftol": 158, "ftp": 154, "full": [18, 27, 31, 33, 56, 57, 100, 104, 105, 108, 115, 122, 127, 132, 152, 154, 162, 163, 164, 165], "full_nam": 3, "full_output": [18, 122], "fulli": [150, 152, 159, 165, 169], "fullnam": 11, "fullpath": [104, 105], "func": [14, 27, 28, 35, 36, 52, 104, 105, 122, 123, 127, 128, 129, 130, 131, 132, 164], "func1": 47, "func2": 47, "funcnam": [31, 33], "function": [6, 8, 20, 31, 35, 52, 56, 57, 70, 75, 76, 80, 90, 101, 104, 105, 108, 115, 125, 129, 131, 152, 162, 164, 167, 170, 171], "fundament": [154, 163], "furo": 0, "further": [115, 156, 163], "futur": [18, 122, 157, 165], "fwhm": [27, 122, 127, 132], "fwidth": [49, 122, 142, 146], "g": [21, 22, 23, 24, 31, 33, 35, 119, 120, 121, 122, 129, 132, 156, 162], "gain": [101, 102, 104, 105], "galleri": 0, "gap": 158, "gate": [100, 155], "gauss": [18, 25, 49, 51, 54, 93, 94, 101, 102, 104, 105, 122, 138, 142, 143, 145, 146, 155], "gaussian": [18, 27, 122, 127, 132], "gaussianpuls": [27, 122, 127, 132], "gcc": 154, "gcd": [122, 148], "gener": [1, 14, 17, 18, 19, 20, 21, 23, 24, 26, 28, 33, 34, 35, 43, 50, 52, 56, 57, 60, 61, 65, 67, 93, 94, 100, 101, 102, 103, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 135, 137, 146, 147, 148, 149, 150, 152, 156, 157, 160, 162, 163, 164, 167, 169], "generalis": 165, "georgieva": 156, "get": [31, 33, 101, 102, 104, 105, 164, 166, 167], "get_acquisition_mod": [104, 105], "get_all_ax": 69, "get_all_fixed_param": 69, "get_arang": 100, "get_attenu": [104, 105], "get_axi": [34, 60, 61, 122], "get_config_fil": [104, 105], "get_counterfreq": [104, 105], "get_datawork": [85, 86], "get_eldor_freq": [104, 105], "get_field": [104, 105], "get_freq": [104, 105], "get_hidden_param": [104, 105], "get_mw_amp": [104, 105], "get_nut": 121, "get_param": [104, 105], "get_phas": [104, 105], "get_phasecycl": [104, 105], "get_pulsespel_def_filenam": [104, 105], "get_pulsespel_def_filepath": [104, 105], "get_pulsespel_exp_filenam": [104, 105], "get_pulsespel_exp_filepath": [104, 105], "get_pulsespel_experi": [104, 105], "get_pulsespel_phase_cycl": [104, 105], "get_replacemod": [104, 105], "get_sequence_row": [77, 92], "get_spec_config": [104, 105], "get_specjet_data": [94, 96], "get_sweep_width": [104, 105], "get_vexp": 88, "get_video_bandwidth": [104, 105], "get_video_gain": [104, 105], "getcistr": [77, 92], "getlogg": 167, "getmessag": [31, 33], "getparam": [109, 111, 115], "ghz": [13, 14, 17, 18, 21, 23, 24, 25, 26, 28, 29, 35, 38, 45, 46, 47, 48, 49, 53, 93, 94, 101, 102, 104, 105, 120, 121, 122, 123, 126, 128, 129, 132, 136, 137, 138, 139, 140, 141, 142, 144, 146, 155, 158, 160, 164], "gig": 153, "git": [153, 160], "github": [153, 156, 160, 166], "give": [46, 47, 48, 100, 122, 152, 156, 159, 163], "given": [12, 18, 21, 23, 24, 35, 37, 39, 40, 42, 46, 47, 48, 55, 56, 57, 66, 67, 93, 94, 95, 96, 100, 101, 102, 109, 111, 115, 119, 120, 121, 122, 129, 132, 156, 162, 169], "gn": 23, "gnscale": [22, 23], "go": [163, 166], "gone": 167, "graph": [157, 160], "graphic": [134, 135, 150, 152, 170, 171], "greatest": [122, 148], "green": [157, 169], "grid": [18, 122], "gsa": [101, 102, 158], "guass": [13, 17, 25, 29, 38, 45, 49, 53, 122, 136, 137, 138, 139, 140, 141, 142, 144, 146], "guass_broaden": 23, "guess": [93, 94, 95, 96, 155, 157], "gui": [73, 80, 81, 82, 122, 149, 150, 155, 170, 171], "guid": 163, "gunn": [121, 160], "gunnar": [35, 122, 129, 132], "gyro": [49, 73, 75, 76, 77, 82, 83, 84, 86, 101, 102, 120, 121, 122, 142, 146], "gyro_exp": [155, 156], "gyro_n": 155, "gyromagnet": [21, 23, 24, 120, 121, 122, 155], "gz": 154, "h": [152, 156], "h5": 157, "ha": [12, 34, 39, 42, 60, 61, 73, 77, 82, 83, 101, 102, 104, 105, 108, 115, 122, 152, 154, 155, 157, 159, 160, 162, 163, 167], "haas": [50, 65, 67, 122], "hahn": [29, 45, 49, 53, 56, 57, 96, 119, 120, 121, 122, 139, 141, 142, 144, 146, 152, 162, 164], "hahnecho": 164, "hahnechosequ": [25, 29, 45, 53, 122, 138, 139, 141, 144, 146, 162, 164], "half": [27, 122, 127, 132], "ham": 23, "ham_ez": 23, "ham_nz": 23, "hand": [56, 57, 157], "handl": 100, "handler": [32, 33, 70, 75, 76, 77, 80, 83, 90, 92], "happen": 167, "hard": 152, "hard_logg": 167, "hardwar": [33, 108, 122, 149, 153, 155, 159, 160, 162, 165, 167], "hardware_meta": 115, "hardware_wait": [96, 118, 119, 120, 121], "harwar": [33, 167], "hat": 154, "have": [46, 47, 48, 115, 122, 152, 154, 155, 156, 160, 162, 164, 165, 167], "hdf5": 157, "header": [43, 77, 92, 100, 122, 133, 135], "height": [43, 122, 133, 134, 135], "hello": 167, "here": [93, 94, 95, 96, 154, 155, 160, 162, 163, 164, 167], "hh": 155, "hidden": [104, 105, 113, 115], "high": [150, 156, 167], "higher": [152, 156, 160], "hold": [104, 105], "holder": 158, "home": [159, 163, 165], "hook": [50, 65, 67, 122], "host": 153, "hour": [12, 18, 37, 39, 40, 42, 55, 66, 67, 122, 152, 158], "how": [18, 30, 31, 33, 55, 56, 57, 59, 61, 66, 67, 96, 101, 102, 122, 152, 154, 155, 163, 164, 167], "howev": [154, 159, 162, 163, 164, 167], "hspuls": [28, 122, 128, 132], "html": [0, 35, 122, 129, 132, 148], "http": [35, 122, 129, 132, 148, 153, 154, 160], "hugo": 115, "human": [31, 33, 160], "hw_log": [96, 100, 105, 107, 115], "hybrid": [117, 121, 158, 160], "hyperboilc": [28, 122, 128, 132], "hyperbol": 152, "i": [0, 4, 6, 7, 8, 12, 17, 18, 22, 23, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 65, 66, 67, 77, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 108, 115, 119, 121, 122, 129, 132, 135, 137, 139, 141, 143, 144, 145, 146, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 167, 169, 171], "id": [8, 31, 33, 98, 99, 100, 101, 102, 155], "ideal": [118, 119, 120, 121], "idenitifi": 96, "ident": 23, "identifi": [18, 104, 105, 108, 115, 122, 152, 167], "identifyroi": [18, 122], "ifgain": [101, 102, 155], "ifgain_opt": [101, 102], "ignor": 18, "ii": [93, 94, 95, 96, 159, 163, 165], "imaginari": [18, 96, 119, 121], "immedi": [30, 59, 61, 93, 94, 95, 96, 106, 107, 122, 162, 167], "implement": [32, 33, 159, 164], "import": [8, 18, 56, 57, 122, 152, 155, 160, 162, 164, 167, 169], "import_data": [56, 57], "import_dataset": [56, 57], "improv": [156, 170], "includ": [18, 23, 56, 57, 100, 122, 152, 156, 158, 159, 164, 169], "incoher": [118, 120, 121], "incompat": 160, "increas": [35, 45, 53, 122, 129, 132, 141, 144, 146, 152, 154, 164], "indent": [3, 4, 6, 7, 8, 10], "independ": [150, 158, 159, 162, 165], "index": 8, "indic": [71, 74, 76, 77, 81, 83, 91, 92, 157], "individu": [164, 167], "info": [31, 33, 158, 167], "infom": [18, 56, 57, 96, 122, 158, 162, 163, 164, 169], "inform": [31, 33, 162, 163, 164], "inherit": [3, 34, 60, 61, 70, 75, 76, 77, 80, 83, 90, 92, 122, 164], "init": 164, "init_d": [122, 135], "init_freq": 164, "initi": [31, 32, 33, 34, 60, 61, 93, 94, 95, 96, 122, 135, 155, 156, 157, 158, 163, 164, 167, 170], "initialis": [30, 59, 61, 70, 75, 76, 77, 80, 83, 90, 92, 93, 94, 95, 96, 101, 102, 106, 107, 122, 155], "initialise_deer_set": [73, 77, 82, 83], "initializt": [134, 135], "input": [18, 56, 57, 100, 122, 157], "insatl": 154, "insid": 155, "instal": 160, "instanc": [31, 32, 33, 109, 111, 115, 164], "instead": [18, 122, 156, 164], "instruct": [0, 154, 171], "int": [12, 13, 17, 18, 23, 25, 29, 30, 34, 35, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 65, 67, 71, 74, 76, 77, 81, 83, 91, 92, 93, 94, 96, 100, 101, 102, 103, 104, 105, 112, 115, 118, 119, 120, 121, 122, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "integ": [55, 66, 67, 98, 100, 122], "integr": [150, 159, 165, 167], "intellig": 165, "intend": [32, 33], "intens": 23, "inter": [12, 19, 37, 39, 40, 42, 122, 124, 132, 152, 156, 159, 169], "interced": 155, "interest": [18, 122, 152, 161], "interfac": [30, 32, 33, 59, 61, 75, 76, 84, 85, 86, 93, 94, 95, 96, 101, 102, 106, 107, 122, 150, 152, 158, 162, 164, 170, 171], "intergr": [18, 122], "intern": [56, 57], "interpret": [31, 33, 101, 102], "interpuls": [17, 49, 53, 122, 137, 142, 144, 146], "interv": 162, "intial": [34, 60, 61, 122], "introduc": [17, 122, 137, 146], "intuit": 150, "invers": 156, "invert": [56, 57], "invert_sign": [56, 57], "investig": 167, "involv": [156, 162], "inward": 156, "io": 135, "ip": [154, 160], "is_exp_run": [104, 105, 108, 115], "is_stat": [34, 35, 60, 61, 122, 129, 132], "isdelayfocus": [35, 51, 122, 129, 132, 143, 146], "iso8601": [31, 33], "ispulsefocus": [35, 51, 122, 129, 132, 143, 146], "isrun": [30, 59, 61, 93, 94, 95, 96, 101, 102, 106, 107, 122, 155], "issu": [31, 33, 101, 102, 154, 163, 166, 167], "iter": [96, 119, 121], "itn": [51, 54, 122, 143, 145, 146], "its": [122, 148, 154, 164], "itself": [34, 60, 61, 122, 165], "j": [35, 50, 65, 67, 122, 129, 132, 148, 156], "jeschk": [35, 122, 129, 132, 156], "jeschkelab": 153, "join": 166, "json": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "jsonstr": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "june": 154, "just": [31, 33, 46, 47, 48, 100, 122, 155, 163, 164], "k": [50, 65, 67, 122], "kamp": [50, 65, 67, 122], "kara": 115, "keep": [156, 162], "keep_run": [30, 59, 61, 122], "kei": [18, 35, 43, 99, 100, 122, 129, 132, 133, 135, 162, 163], "kept": [157, 167], "keyword": [35, 56, 57, 70, 75, 76, 77, 80, 83, 90, 92, 122, 129, 132], "kimbal": [50, 65, 67, 122], "klass": [3, 8], "knot": 23, "know": [31, 33, 152], "knowledg": [31, 33], "known": [101, 102, 159, 162], "knownledg": 157, "kroneck": 23, "kroney": 23, "kummel": [50, 65, 67, 122], "kwarg": [13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 38, 41, 42, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 70, 75, 76, 77, 80, 83, 90, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "lab": 157, "label": [152, 159], "languag": [160, 162], "larg": [165, 167], "larger": [35, 122, 129, 132], "last": [3, 167], "later": [152, 153, 162, 165, 167], "latest": [153, 160], "launch": [30, 59, 61, 93, 94, 95, 96, 101, 102, 106, 107, 122, 155, 162], "launch_long": [101, 102], "launch_norm": [101, 102], "launch_withifgain": [101, 102], "layout": [87, 88], "ld_library_path": 154, "least": 160, "leav": [34, 60, 61, 122], "left": [122, 135, 157], "length": [3, 8, 12, 13, 14, 17, 19, 26, 27, 28, 35, 36, 38, 39, 42, 46, 47, 48, 52, 93, 94, 98, 100, 101, 102, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 146, 152, 155, 158, 164], "less": [12, 18, 39, 42, 77, 92, 122, 152, 156, 162], "lett": 156, "levai": [50, 65, 67, 122], "level": [12, 30, 31, 32, 33, 39, 42, 56, 57, 59, 61, 75, 76, 122, 164], "levelnam": [31, 33], "levelno": [31, 33], "lib": 154, "lib64": 154, "libdir": 154, "light": [157, 169], "like": [17, 31, 33, 122, 137, 146, 155, 156, 163, 164, 165, 167], "limit": [46, 47, 48, 122, 164], "lin_maxit": 158, "lin_tol": 158, "line": [31, 33], "linear": [14, 122, 123, 132, 163, 164], "linearli": [35, 122, 129, 132], "lineno": [31, 33], "link_obj": 3, "linux": 154, "list": [3, 8, 18, 32, 33, 34, 35, 42, 43, 60, 61, 77, 92, 100, 103, 104, 105, 120, 121, 122, 129, 132, 133, 135, 148, 158, 162, 164], "list_str_to_typ": [77, 92], "live": 169, "lo": [13, 17, 21, 23, 24, 25, 29, 38, 45, 46, 47, 48, 49, 51, 53, 54, 73, 75, 76, 77, 82, 83, 93, 94, 95, 96, 101, 102, 106, 107, 122, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 156, 162, 163, 164], "load": [31, 33, 34, 35, 51, 56, 57, 60, 61, 103, 122, 129, 132, 143, 146, 147, 157, 162, 169], "load_epr_fil": [73, 77, 82, 83, 92], "load_fold": [73, 77, 82, 83], "load_spectrometer_config": [73, 77, 82, 83], "lobe": 164, "loc": 18, "local": [55, 66, 67, 93, 94, 101, 102, 122, 154, 155, 158, 160], "locat": [18, 152], "log": [18, 30, 31, 32, 59, 61, 67, 77, 78, 102, 122, 147, 149, 158], "log_level": [78, 79], "logdialog": [78, 79], "logger": [31, 33], "logrecord": [31, 33], "lombardi": [50, 65, 67, 122], "long": [55, 56, 57, 66, 67, 101, 102, 122, 154, 156], "long_deer": [122, 135], "longdeer": [73, 77, 82, 83], "longdeer_result": [74, 76], "longdeer_upd": [74, 76], "longer": [104, 105, 108, 115, 156, 167, 169], "longest": 18, "look": [162, 164], "loop": [3, 101, 102, 158], "lorentzian": [46, 47, 48, 122], "low": 18, "lower": [118, 119, 120, 121, 164], "lowest": 167, "lowpass": 18, "lt": 154, "m": [23, 50, 65, 67, 122, 153, 160], "m8190a": 160, "maco": 153, "made": 155, "mag_logg": 167, "magent": [104, 105, 167], "magentis": [35, 122, 129, 132], "magn": [35, 122, 129, 132, 148], "magnet": [51, 54, 93, 94, 101, 102, 104, 105, 122, 143, 145, 146, 152, 167], "mai": [56, 57], "main": [56, 57, 77, 122, 149, 153, 162, 163, 164, 166, 167, 171], "major": 170, "make": [0, 31, 33, 154, 156, 164, 166], "manag": 154, "mani": [18, 56, 57, 96, 101, 102, 156, 162, 163, 164], "manufactu": 115, "manufactur": [158, 160], "map": [42, 122], "markup": 160, "mask": [18, 103], "match": [18, 103, 122, 170], "match_filter_dc": 103, "matfil": 103, "math": [120, 121, 152], "matlab": [101, 102, 103, 153, 157, 163], "matplotlib": [18, 21, 23, 24, 42, 46, 47, 48, 56, 57, 122, 155], "matrici": [122, 148], "matrix": [23, 122, 148], "max": [21, 23, 24, 112, 115, 122, 157, 158, 160], "max_nfev": 158, "max_tau": [75, 76], "maxdepth": 8, "maxgat": 100, "maximis": [18, 96, 119, 121, 122], "maximum": [12, 13, 18, 21, 23, 24, 27, 37, 38, 39, 40, 42, 45, 96, 100, 103, 119, 121, 122, 127, 132, 136, 140, 141, 146, 152, 157, 167, 169], "maxit": [96, 119, 121], "mayb": 167, "me": 115, "mean": [163, 167], "meanwhil": 162, "measur": [12, 17, 30, 37, 39, 40, 42, 50, 55, 56, 57, 59, 61, 65, 66, 67, 93, 94, 95, 96, 101, 102, 106, 107, 121, 122, 137, 146, 152, 156, 157, 159, 160, 162, 163, 165, 169, 170], "member": 3, "memori": [35, 122, 129, 132], "mention": [31, 33], "merg": [46, 47, 48, 122], "messag": [31, 32, 33, 73, 77, 82, 83], "met": [12, 30, 39, 42, 59, 61, 122], "meta": [108, 115], "metadata": [56, 57], "method": [3, 7, 35, 56, 57, 93, 94, 101, 102, 109, 111, 115, 129, 132, 162, 163, 164], "mhz": [20, 23, 36, 104, 105, 122, 125, 130, 132], "micol": [50, 65, 67, 122], "microsecond": [18, 100, 122, 148], "microwav": [23, 104, 105], "might": [162, 167], "millisecond": [31, 33], "mimimum": [50, 65, 67, 122], "min": [112, 115, 158, 160], "min_tp": [73, 77, 82, 83, 158], "minbrxamp": [111, 115], "minbrxphas": [111, 115], "minbryamp": [111, 115], "minbryphas": [111, 115], "minim": 152, "minimis": [96, 119, 121], "minimum": [18, 122, 163], "minor": 157, "minut": [30, 59, 61, 122, 162], "miss": 167, "mm": 155, "mnr": [18, 122, 156], "mnr_estim": 18, "mock": [95, 96], "mode": [16, 64, 67, 93, 94, 101, 102, 104, 105, 106, 107, 122, 153, 155, 159, 162, 170], "model": [12, 16, 18, 23, 39, 42, 64, 67, 115, 122, 152, 158, 160, 165], "moder": 156, "modern": [154, 159, 165], "modetun": [77, 84, 122, 149], "modif": [155, 156], "modifi": [162, 171], "modul": [8, 9, 31, 35, 122, 129, 153, 156, 162, 167], "module_dir": [18, 100, 121], "moment": 152, "mono": [12, 39, 42, 122], "monochromat": [27, 36, 52, 122, 127, 130, 131, 132, 164], "more": [56, 57, 100, 101, 102, 150, 154, 155, 156, 162, 163, 167], "most": [101, 102, 115, 152, 154, 155, 163, 164, 167], "mostli": [103, 156, 171], "motor": [104, 105], "move": [100, 156, 164, 167], "mpfu": [95, 96, 97, 99, 100, 117, 119, 121, 158, 159, 160, 163, 165], "mpfu_overwrit": [93, 94, 95, 96], "mpfutun": [96, 119, 121], "msec": [31, 33], "mt": 23, "mu": 152, "much": [150, 152, 154, 162, 167], "multi": 162, "multi_mod": [46, 47, 48, 122], "multilin": 4, "multipl": [18, 46, 47, 48, 122, 153, 154, 156, 159, 162, 165, 167], "multipli": [23, 164], "must": [18, 23, 46, 47, 48, 122, 152, 155, 157, 160, 162, 167, 169], "mutex": [75, 76], "mutlipl": 162, "mw": 164, "mwfreq": 23, "mx": [35, 122, 129, 132], "my": [35, 122, 129, 132, 158, 162, 163], "myst": 0, "mz": [35, 122, 129, 132], "n": [12, 13, 14, 17, 18, 19, 21, 23, 24, 26, 27, 28, 34, 35, 36, 37, 39, 40, 42, 49, 52, 60, 61, 93, 94, 101, 102, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 136, 137, 142, 146, 152, 155, 158, 160], "n_file": [46, 47, 48, 122], "name": [4, 8, 15, 25, 26, 31, 33, 34, 35, 45, 50, 51, 53, 54, 55, 60, 61, 63, 65, 66, 67, 77, 92, 100, 101, 102, 104, 105, 109, 111, 115, 122, 126, 129, 132, 138, 141, 143, 144, 145, 146, 152, 155, 156, 157, 158, 160, 162, 164, 167, 169], "nanosecond": [122, 148], "narrow": 156, "nativ": [157, 162, 163], "nbscansdon": [109, 115], "nbscanstodo": [109, 115], "ndarrai": [18, 21, 23, 24, 34, 35, 37, 40, 42, 45, 46, 47, 48, 60, 61, 103, 122, 129, 132, 141, 146, 148], "ndeer": [17, 18, 122, 137, 146, 159], "ndeer_cp": [17, 122, 137, 146, 156], "nearli": [152, 163, 164], "necessari": [154, 155, 157, 158], "need": [31, 33, 56, 57, 93, 94, 95, 96, 100, 101, 102, 109, 111, 115, 152, 153, 154, 156, 157, 158, 160, 162, 163, 164, 165, 167, 169], "nelectron": [22, 23], "nest": 8, "netcdf": [68, 69], "never": [34, 60, 61, 122, 167], "new": [18, 100, 104, 105, 122, 150, 154, 159, 164, 166, 170], "new_data": [75, 76], "new_length": 100, "new_puls": [75, 76, 164], "new_tau": 155, "newer": 160, "newli": 154, "next": [51, 104, 105, 108, 115, 122, 143, 146, 152, 164, 169], "nfft": [46, 47, 48, 122], "night": [55, 66, 67, 122, 158], "night_hour": [55, 66, 67, 122], "nitroxid": [23, 152], "nnlssolver": 158, "nnuclei": [22, 23], "nois": [12, 18, 37, 39, 40, 42, 46, 47, 48, 50, 56, 57, 65, 67, 122, 162], "noise_frac": [56, 57], "noise_level": 107, "noisedens": [46, 47, 48, 122], "nomarlis": [21, 23, 24, 122], "nome": [56, 57], "non": [18, 35, 122, 129, 132, 156, 163, 164], "none": [4, 6, 7, 8, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 69, 73, 75, 76, 77, 79, 82, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 112, 113, 115, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 135, 137, 143, 146, 147, 155, 164], "nonetheless": [160, 163], "norm": [12, 21, 23, 24, 37, 39, 40, 42, 56, 57, 122], "normal": [17, 18, 37, 40, 42, 56, 57, 101, 102, 122, 137, 146, 155, 156, 159, 162, 170], "normaldc": [17, 122, 137, 146], "normalis": [12, 23, 37, 39, 40, 42, 50, 56, 57, 65, 67, 68, 69, 122], "normalise_01": [18, 122], "note": [18, 104, 105, 122, 167], "notebook": 155, "noth": [104, 105], "notimplementederror": [32, 33], "notset": [32, 33], "now": [93, 94, 95, 96, 101, 102, 152, 154, 155, 157, 162, 164], "np": [18, 21, 23, 24, 34, 35, 37, 40, 42, 45, 46, 47, 48, 60, 61, 103, 122, 129, 132, 141, 146, 155, 164], "npoint": 23, "nspin": [22, 23], "nstate": [22, 23], "nu": [120, 121], "nu_fin": [120, 121], "nu_init": [120, 121], "nuanc": [56, 57], "nucspin": 23, "num": 147, "num_point": [117, 121, 155], "num_puls": [51, 121, 122, 143, 146], "num_ref_puls": [18, 122], "number": [12, 13, 17, 18, 23, 25, 29, 31, 33, 34, 35, 37, 38, 39, 40, 42, 45, 47, 49, 51, 53, 54, 56, 57, 60, 61, 93, 94, 96, 100, 101, 102, 104, 105, 108, 115, 119, 121, 122, 129, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 156, 162], "numer": [31, 33], "numpi": [18, 23, 103, 122, 148, 155, 160, 164], "numpydoc": 0, "nut": 155, "nutat": [26, 35, 46, 47, 48, 49, 118, 120, 121, 122, 126, 129, 132, 142, 146, 152, 162], "nx": [121, 164], "o": [110, 115, 154], "ob": [17, 122, 137, 146], "obj": [3, 4, 6, 7, 8, 10, 34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "obj_item": 8, "object": [3, 18, 34, 35, 37, 40, 41, 42, 44, 46, 47, 48, 51, 56, 57, 60, 61, 67, 71, 74, 76, 77, 81, 83, 91, 92, 93, 94, 101, 102, 118, 119, 120, 121, 122, 129, 132, 143, 146, 162, 164, 165], "obsdc": [17, 122, 137, 146], "observ": [17, 122, 137, 146], "occur": [156, 167], "oe": 160, "off": [46, 47, 48, 122, 167], "offici": 154, "offset": [51, 54, 122, 143, 145, 146, 164], "offset_freq": 103, "often": [30, 59, 61, 122, 154, 156, 163, 164, 167, 171], "old": 154, "omit": [31, 33], "onc": [104, 105, 108, 115, 154, 157, 165, 169], "one": [31, 33, 46, 47, 48, 101, 102, 122, 156, 162, 164, 165, 167], "ones": [154, 164], "onli": [15, 16, 18, 34, 50, 51, 55, 60, 61, 63, 64, 65, 66, 67, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 122, 143, 146, 152, 153, 156, 160, 162, 164, 165, 167, 170], "onlydet": [97, 100], "open": [101, 102, 157], "openssl": 154, "openssldir": 154, "oper": [31, 33, 101, 102, 122, 148, 154], "operand": [31, 33], "optim": [12, 18, 37, 39, 40, 42, 56, 57, 96, 118, 119, 120, 121, 122, 152], "optimal_slice_plot": [56, 57], "optimal_tau1": [37, 40, 42, 122], "optimis": [18, 96, 119, 121, 122, 135, 150, 155, 156, 159], "optimise_puls": [18, 73, 77, 82, 83, 122], "optimise_pulses_button": [73, 77, 82, 83], "optimise_spectra_posit": [47, 122], "option": [12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 96, 100, 101, 102, 103, 104, 105, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 143, 146, 147, 148, 164, 169, 170], "order": [52, 122, 131, 132, 160], "order1": [28, 122, 128, 132], "order2": [28, 122, 128, 132], "org": [35, 122, 129, 132, 148, 154], "orient": 23, "origin": [18, 153, 156, 165], "orphan": 8, "oscil": [93, 94, 101, 102, 155], "oss": 154, "other": [34, 60, 61, 122, 156, 164, 165, 169], "otherwis": [17, 18, 35, 122, 129, 132, 137, 146, 152, 162], "our": [154, 155, 164], "out": [31, 33, 56, 57, 73, 77, 82, 83, 152, 154, 164, 166], "output": [18, 56, 57, 122], "outsid": [154, 167], "over": [12, 39, 42, 56, 57, 122, 155, 156], "overlai": [46, 47, 48, 122], "overlap": [18, 47, 122, 135], "overload": [3, 6, 7], "own": [159, 162, 163, 171], "p": [17, 18, 122, 137, 146, 156, 162], "p0": 100, "p1": 100, "p10": 100, "p180": [93, 94, 101, 102, 155], "p2": 100, "p3": [17, 100, 122, 137, 146, 156], "p4": 100, "p5": [50, 65, 67, 100, 122], "p6": 100, "p7": 100, "p8": 100, "p9": 100, "p90": [93, 94, 101, 102, 155], "p90_12_34": 162, "packag": [8, 35, 129, 132, 148, 150, 154, 155, 156, 162, 165], "package_dir": 135, "package_directori": [79, 83, 86, 88], "pad": [35, 46, 47, 48, 122, 129, 132], "page": [1, 149, 166], "pages": [43, 122, 133, 135], "pair": [56, 57, 95, 96, 155], "par": [112, 115], "par1": [34, 60, 61, 122], "par2": [34, 60, 61, 122], "param": [18, 51, 69, 77, 92, 107, 122, 143, 146, 148], "param_in_mhz": [77, 92], "param_in_u": [77, 92], "param_nam": [104, 105], "paramagnet": [35, 122, 129, 132], "paramat": [56, 57, 162, 164], "paramet": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 69, 70, 75, 76, 77, 79, 80, 83, 86, 90, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 157, 159, 164, 165, 167, 169, 171], "params_width": [122, 148], "paramt": [34, 60, 61, 109, 111, 115, 122], "paremet": [56, 57, 109, 111, 115], "parent": [26, 78, 79, 87, 88, 122, 126, 132, 164], "parmet": [56, 57], "pars": 8, "parser": 0, "part": [3, 18], "particular": [56, 57], "parvar": [98, 99, 100, 101, 102], "pass": [18, 34, 60, 61, 70, 75, 76, 77, 80, 83, 90, 92, 122, 162, 164, 167], "passag": [35, 122, 129, 132], "passiv": 23, "path": [34, 35, 51, 56, 57, 60, 61, 93, 94, 95, 96, 100, 104, 105, 113, 114, 115, 122, 129, 132, 143, 146, 147, 148, 154, 157, 160], "pathnam": [31, 33], "pathwai": [156, 164], "patient": 150, "paus": [104, 105, 163], "pause_and_wait": [75, 76], "pause_exp": [104, 105], "pcre": 154, "pcyc": [17, 19, 20, 26, 35, 122, 124, 125, 126, 129, 132, 137, 146, 164], "pcyc_str": [99, 100], "pdf": [43, 122, 133, 135, 150, 157, 170], "pe12": [17, 122, 137, 146, 156], "pe12rp": [17, 122, 137, 146, 156], "pe12rpr3": [17, 122, 137, 146, 156], "pe1p0r2r3b": [17, 122, 137, 146, 156], "peak": [18, 46, 47, 48, 122], "peldor": [17, 122, 137, 146, 159], "pent": 158, "pep02r3": [17, 122, 137, 146, 156], "per": [13, 17, 25, 29, 38, 45, 49, 51, 53, 54, 56, 57, 104, 105, 108, 115, 122, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 167], "perfom": [45, 122, 141, 146, 154], "perform": [18, 122, 155, 163], "period": 162, "perl": 154, "phase": [17, 18, 35, 56, 57, 96, 100, 107, 119, 121, 122, 129, 132, 137, 146, 155, 164], "phasecorrect_all_point": 86, "phasecycl": 100, "phy": [35, 122, 129, 132, 148, 156], "physcial": [101, 102], "physic": 164, "pi": [56, 57, 93, 94, 101, 102, 118, 119, 120, 121, 155, 156, 162, 164], "pi2_puls": [155, 162], "pi_puls": [155, 162], "piec": [162, 167], "pip": [0, 153, 160], "placehold": [32, 33], "plan": 153, "platypu": [134, 135], "pleas": [0, 150, 156, 161, 163], "plot": [12, 18, 21, 23, 24, 35, 37, 39, 40, 41, 42, 44, 46, 47, 48, 51, 56, 57, 96, 122, 129, 132, 135, 143, 146, 155, 162], "plot1d": [37, 40, 42, 122], "plot2d": [37, 40, 42, 122], "plot_1drelax": [42, 122], "plot_fft": [35, 122, 129, 132], "plot_optimal_deer_frq": 155, "plot_overlap": [18, 122], "plot_pulse_exc": [51, 122, 143, 146], "plsspelexpslct": [109, 115], "plsspelglbpaf": [109, 115], "plsspellistslct": [109, 115], "plsspelprgpaf": [109, 115], "plt": 155, "plu": 153, "po": [56, 57], "point": [13, 17, 18, 23, 25, 29, 35, 38, 45, 49, 51, 53, 54, 56, 57, 121, 122, 129, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 167], "pol": [104, 105], "polynom": [104, 105, 158], "polynomi": [121, 160], "pool": [93, 94, 95, 96], "pop": [73, 77, 82, 83, 167], "porgram": 157, "port": [35, 122, 129, 132, 148], "portion": [31, 33], "posit": [18, 34, 36, 51, 60, 61, 93, 94, 96, 100, 101, 102, 104, 105, 118, 119, 120, 121, 122, 130, 132, 143, 146, 164], "possibl": [18, 56, 57, 100, 122, 152, 162, 164, 165, 166], "possible_delai": [99, 100], "possible_puls": [99, 100], "possible_var": [99, 100], "possibli": 115, "post": 147, "potenti": 160, "power": [46, 47, 48, 118, 119, 120, 121, 122, 152, 158, 162, 164, 167], "pre": [31, 33, 154, 156, 164], "precis": [18, 77, 92, 104, 105, 122, 155, 159], "predict": 152, "prefer": [56, 57, 157, 158, 160, 169], "prefix": 154, "premis": 156, "preparatori": [31, 33], "present": [154, 156], "press": [152, 157, 165], "pretend": 115, "prevent": 167, "previou": 100, "pribitz": [35, 122, 129, 132], "primari": 156, "primarili": [152, 167], "primary_color": [62, 122], "print": [155, 162, 164, 167], "priorti": [73, 77, 82, 83], "pritn": 162, "privat": [3, 56, 57], "privileg": 154, "problem": [154, 167], "procedur": 165, "process": [31, 33, 56, 57, 71, 74, 76, 77, 81, 83, 91, 92, 150, 157, 159, 162, 165, 171], "process_deeranalysi": [87, 88], "process_nut": [46, 47, 48, 122, 155], "product": 23, "prof_data": [46, 47, 48, 122], "prof_frq": [46, 47, 48, 122], "profil": [18, 35, 46, 47, 48, 49, 54, 75, 76, 120, 121, 122, 129, 132, 135, 142, 145, 146, 162, 163, 165], "prog": [34, 60, 61, 122, 155], "program": [34, 60, 61, 122, 150, 156, 157, 167, 171], "progress": [29, 34, 35, 53, 60, 61, 71, 74, 76, 77, 81, 83, 91, 92, 101, 102, 122, 129, 132, 139, 144, 146, 147, 150, 155, 159, 164, 169], "progress_bar": 147, "progress_bar_frac": 147, "progtabl": [51, 100, 122, 143, 146], "project": [75, 76, 150, 163, 166], "projectnam": [77, 92], "properti": [3, 6, 7, 10, 14, 26, 28, 34, 35, 51, 60, 61, 68, 69, 101, 102, 112, 115, 122, 123, 126, 128, 129, 132, 143, 146], "propos": 167, "protein": 159, "protocol": 171, "proton": [17, 42, 122, 137, 146, 156], "provid": [18, 46, 47, 48, 109, 111, 115, 122, 152, 153, 155, 163, 171], "ps_file": 100, "ps_length": [118, 119, 120, 121], "psparvar": [98, 100], "psphasecycl": [97, 100], "public": [18, 122], "pull": [153, 156, 166], "puls": [12, 13, 14, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 42, 45, 49, 51, 52, 53, 54, 56, 57, 59, 60, 61, 73, 75, 76, 77, 82, 83, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 152, 155, 158, 159, 160, 162, 163, 165, 167, 169], "pulse0_tp": [46, 47, 48, 122], "pulse_num": [99, 100], "pulseprofil": [120, 121], "pulsespel": [98, 99, 100, 159, 162, 163, 164, 165], "pump": [17, 18, 122, 137, 146, 152, 155, 156], "pump_frq": [117, 121], "pump_puls": [18, 122, 155, 156], "purcel": [12, 13, 18, 39, 42, 122, 136, 146, 152, 156], "push": [150, 159, 162], "py": [3, 4, 6, 7, 10], "pydata": 0, "pyenv": 154, "pypi": [153, 160], "pyplot": 155, "pyqt6": [32, 33, 70, 71, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 90, 91, 92], "pyqt_table_from_dict": [77, 92], "pytest": 153, "python": [0, 2, 5, 9, 56, 57, 103, 150, 153, 157, 159, 160, 162, 163, 164, 165, 167], "python2": 154, "q": [26, 122, 126, 132, 152, 158], "q_deer": [73, 77, 82, 83], "qcrit": [26, 122, 126, 132], "qdialog": [78, 79, 84, 86], "qmainwindow": [73, 77, 82, 83], "qmutex": 76, "qobject": [32, 33, 71, 74, 76, 77, 81, 83, 91, 92], "qrunnabl": [70, 75, 76, 77, 80, 83, 85, 86, 90, 92], "qtcore": [32, 33, 70, 71, 74, 75, 76, 77, 80, 81, 83, 85, 86, 90, 91, 92], "qtloghandl": [32, 33], "qtwidget": [78, 79, 84, 86, 87, 88], "qualiti": [150, 162], "queue": [73, 77, 82, 83], "quick": [56, 57], "quick_deer_st": [75, 76], "quickdeer": [77, 122, 149], "quickdeer_result": [74, 76], "quickdeer_upd": [74, 76], "qunatum": [122, 148], "qwaitcondit": 76, "qwidget": [79, 87, 88], "r": [4, 18, 35, 50, 65, 67, 96, 119, 121, 122, 129, 132, 148, 156], "r_limit": [46, 47, 48, 122], "radian": [36, 122, 130, 132], "rais": [30, 32, 33, 34, 35, 51, 59, 60, 61, 77, 92, 100, 122, 129, 132, 143, 146, 147], "raise_warn": [73, 77, 82, 83], "rang": [23, 93, 94, 101, 102, 152, 157, 159], "rate": [14, 26, 28, 122, 123, 126, 128, 132, 158], "ratio": [12, 18, 21, 23, 24, 37, 39, 40, 42, 50, 65, 67, 120, 121, 122, 155], "raw": [32, 33], "re": [35, 104, 105, 122, 129, 132, 158, 160], "re_dim": [17, 122, 137, 146], "re_step": [17, 122, 137, 146], "reach": [152, 162], "read": [104, 105, 157, 163], "read_tabl": [77, 92], "readabl": 160, "readi": [18, 122], "readili": 165, "real": [18, 96, 119, 121], "reason": [154, 155], "recent": [101, 102, 104, 105, 108, 115], "reciev": 157, "recomend": [101, 102], "recommen": 157, "recommend": [18, 122, 154, 160, 163, 164, 171], "record": [31, 32, 33, 167], "recoveri": [41, 42, 44, 122, 152], "rectangular": [13, 17, 25, 29, 36, 38, 49, 51, 53, 93, 94, 101, 102, 122, 130, 132, 136, 137, 138, 139, 140, 142, 143, 144, 146, 152, 155, 162, 164], "rectpuls": [17, 36, 93, 94, 95, 96, 101, 102, 122, 130, 132, 137, 146, 155, 164], "red": 154, "reduc": [51, 122, 143, 146, 156, 164], "reduce_uuid": [51, 122, 143, 146], "reduced_seq": 96, "ref": [17, 122, 137, 146, 156, 164], "ref_puls": [18, 122, 155, 156], "refer": [50, 65, 67, 157], "refocus": [13, 17, 18, 37, 38, 40, 42, 56, 57, 119, 121, 122, 136, 137, 140, 146, 152, 156], "refocused2d": [18, 122], "refocusedecho2d": 170, "refocusedecho2danalysi": [18, 37, 40, 42, 122, 170], "refocusedecho2dsequ": [38, 122, 140, 146, 170], "reformat": 100, "reforuml": 170, "refoucs": 152, "refous": 155, "refresh_d": [87, 88], "refresh_fieldsweep_after_fit": [73, 77, 82, 83], "refresh_relax": [73, 77, 82, 83], "refresh_relax_figur": [73, 77, 82, 83], "refresh_respro": [73, 77, 82, 83], "refresh_t2": [73, 77, 82, 83], "refresh_tim": 158, "region": [18, 122, 152, 167], "regparam": 158, "regular": 162, "reim_color": 62, "rejectattr": [3, 8], "rejectionratio": 23, "rel": [31, 33, 100], "relat": [33, 167], "relativecr": [31, 33], "relax": [17, 18, 37, 40, 53, 75, 76, 122, 135, 137, 144, 146, 149, 156, 170], "relax2d_result": [74, 76], "relax_process": 83, "relax_result": [74, 76], "relax_toolbar": [73, 77, 82, 83], "releas": [150, 154], "releat": 33, "reliabl": 170, "relib": 115, "remain": [17, 122, 137, 146, 156, 159], "rememb": 162, "remov": [18, 19, 122, 124, 132, 164], "remove_cross": [18, 122], "remove_dynam": [34, 60, 61, 122], "remove_echo": 18, "render": [3, 8, 134, 135], "repet": [93, 94, 101, 102], "repetit": [13, 17, 25, 29, 38, 45, 49, 51, 53, 54, 56, 57, 122, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 155, 164], "repettit": [12, 39, 42, 122], "replacemod": [100, 109, 115], "report": [43, 122, 133, 149, 150, 157, 166, 167, 170], "reportlab": [43, 122, 133, 134, 135], "repositori": 154, "repres": [13, 14, 17, 19, 20, 25, 27, 28, 29, 30, 34, 35, 36, 38, 45, 51, 52, 53, 54, 59, 60, 61, 93, 94, 95, 96, 101, 102, 106, 107, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 160], "represent": [35, 122, 129, 132], "reptim": [13, 17, 25, 29, 38, 41, 42, 44, 45, 49, 51, 53, 54, 75, 76, 93, 94, 101, 102, 106, 107, 122, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 156, 162, 164], "reptime_max": [45, 122, 141, 146], "reptime_scan_result": [74, 76], "reptimeanalysi": [41, 42, 44, 122], "reptimescan": [45, 122, 141, 146], "request": [156, 166], "requir": [17, 18, 56, 57, 104, 105, 108, 115, 122, 137, 146, 152, 154, 157, 160, 162, 163, 164, 167, 169], "requr": [46, 47, 48, 122], "rerun_exp": [104, 105], "resampl": 18, "resample_and_shift_vector": 18, "reset_bg_data": [93, 94, 95, 96], "reset_cur_exp": [93, 94, 95, 96, 101, 102], "resfield": 23, "reson": [18, 30, 35, 46, 47, 48, 49, 54, 59, 61, 75, 76, 122, 129, 132, 135, 142, 145, 146, 148, 156, 157, 158, 159, 162, 163, 165], "resonator_profil": [47, 122, 155], "resonatorprofil": [18, 35, 51, 122, 129, 132, 143, 146], "resonatorprofileanalysi": [18, 46, 47, 48, 122, 135, 155], "resonatorprofilesequ": [49, 122, 142, 146, 155], "respect": [95, 96], "respons": [31, 33, 152, 154], "respro": [18, 122, 135, 149, 155], "respro_process": 83, "respro_result": [74, 76], "respro_toolbar": [73, 77, 82, 83], "restart": 167, "result": [18, 31, 33, 71, 74, 75, 76, 77, 81, 83, 91, 92, 122, 135, 169], "result_sign": [85, 86], "retrospect": 167, "return": [12, 16, 21, 23, 24, 31, 33, 34, 35, 37, 39, 40, 42, 46, 47, 48, 51, 55, 56, 57, 60, 61, 64, 66, 67, 71, 74, 76, 77, 81, 83, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 104, 105, 107, 109, 111, 115, 119, 120, 121, 129, 132, 134, 135, 143, 146, 147, 148, 156, 162, 164], "return_annot": [3, 6, 7], "rewrit": 100, "rf": 164, "rfc": [31, 33], "rhel": 154, "right": [56, 57, 122, 135, 157], "risen": 167, "risk": 154, "rml": [134, 135], "rng": 107, "roger": [50, 65, 67, 122], "roi": [18, 122, 152, 155], "root": 154, "rotat": 23, "roughli": 167, "round_step": [122, 148], "row": [37, 40, 42, 77, 92, 122], "rowcount": [77, 92], "rpseq": 155, "rst": [2, 5, 8, 9], "run": [0, 16, 64, 67, 70, 71, 74, 75, 76, 77, 80, 81, 83, 85, 86, 90, 91, 92, 98, 100, 101, 102, 104, 105, 108, 115, 120, 121, 122, 152, 155, 157, 159, 162, 165, 167, 169], "run_2d_relax": [75, 76], "run_4p": [117, 121], "run_5p": [117, 121], "run_cp": [117, 121], "run_cp_relax": [75, 76], "run_deer": [75, 76], "run_exp": [104, 105, 108, 115], "run_fsweep": [75, 76], "run_gener": 100, "run_long_d": [75, 76], "run_quick_d": [75, 76], "run_reptime_opt": [75, 76], "run_respro": [75, 76], "run_t2_relax": [75, 76], "runadvancedautod": [73, 77, 82, 83], "runautod": [73, 77, 82, 83], "runfullyautod": [73, 77, 82, 83], "runner": [70, 75, 76, 77, 80, 83, 90, 92], "runtimeerror": 147, "safe": 167, "safeti": 167, "same": [23, 156], "samepl": [56, 57], "sampl": [152, 156, 157, 158, 162, 169], "sampleconccombobox_opt": 83, "samplenam": [75, 76, 77, 92], "sampling_freq": 103, "sat": 115, "satisfi": 165, "satisifi": [30, 59, 61, 122], "satur": [41, 42, 44, 122], "save": [34, 35, 51, 60, 61, 68, 69, 96, 99, 100, 101, 102, 104, 105, 108, 115, 122, 129, 132, 143, 146, 157, 167, 169], "save_data": [73, 77, 82, 83, 86], "save_fil": [122, 148], "save_log_to_fil": [78, 79], "save_path": 135, "save_pulsespel_def": [104, 105], "save_pulsespel_exp": [104, 105], "savefold": [30, 59, 61, 93, 94, 95, 96, 101, 102, 122], "savenam": [30, 59, 61, 75, 76, 93, 94, 95, 96, 101, 102, 106, 107, 122, 155, 162], "sbin": 154, "scale": [14, 19, 20, 26, 28, 35, 95, 96, 122, 123, 124, 125, 126, 128, 129, 132, 155, 160, 162], "scan": [13, 17, 25, 29, 38, 45, 49, 51, 53, 54, 56, 57, 103, 104, 105, 108, 115, 117, 121, 122, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 162], "scan_num": [104, 105, 108, 115], "scenario": 162, "schweiger": [35, 122, 129, 132, 148], "scientif": 157, "scipi": [96, 119, 121], "scipy_filter_dc": 103, "scope": 8, "screen": 157, "script": [56, 57, 96, 104, 105, 108, 115, 119, 121, 159, 163, 164, 167], "se": [17, 122, 137, 146, 156], "search": [18, 109, 111, 115, 122], "secant": [28, 122, 128, 132, 152], "second": [12, 17, 39, 42, 47, 51, 55, 66, 67, 122, 137, 143, 146, 156], "section": 157, "secur": 154, "see": [17, 122, 137, 146, 162], "seen": 162, "select": [17, 56, 57, 122, 137, 146, 157, 159, 162, 167], "select_pcyc": [17, 122, 137, 146, 155, 156], "select_reson": [73, 77, 82, 83], "selectattr": [3, 8], "self": [164, 171], "sensit": [152, 156], "sent": 167, "separ": [163, 164, 167], "seper": [120, 121, 155], "seq": [41, 42, 44, 94, 96, 100, 102, 122, 155], "seqtable_step": [51, 122, 143, 146], "sequec": 164, "sequenc": [12, 13, 17, 18, 25, 29, 30, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 49, 51, 53, 54, 59, 60, 61, 68, 69, 77, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 122, 129, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 155, 156, 159, 160, 163, 165, 169], "sequr": [18, 122], "seri": [46, 47, 48, 50, 65, 67, 122, 152], "serial": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "seriou": 167, "session": [101, 102, 163], "set": [3, 8, 18, 32, 33, 56, 57, 88, 95, 96, 100, 104, 105, 108, 115, 122, 152, 154, 156, 160, 165, 167, 170], "set_2d_max_tau": [75, 76], "set_acquisition_mod": [104, 105], "set_attenu": [104, 105], "set_config_fil": [104, 105], "set_eldor_freq": [104, 105], "set_field": [104, 105], "set_freq": [104, 105], "set_hidden_param": [104, 105], "set_mw_amp": [104, 105], "set_noise_mod": [75, 76], "set_param": [104, 105], "set_phas": [104, 105], "set_phasecycl": [104, 105], "set_pulsespel_def_filepath": [104, 105], "set_pulsespel_exp_filepath": [104, 105], "set_pulsespel_experi": [104, 105], "set_pulsespel_phase_cycl": [104, 105], "set_pulsespel_var": [104, 105, 108, 115], "set_replacemod": [104, 105], "set_snr_target": [56, 57], "set_snr_threshold": [56, 57], "set_spectrometer_connected_light": [73, 77, 82, 83], "set_sweep_width": [104, 105], "set_time_target": [56, 57], "set_video_bandwidth": [104, 105], "set_video_gain": [104, 105], "setup": [33, 70, 75, 76, 77, 80, 83, 90, 92, 93, 94, 95, 96, 120, 121, 152, 162, 167], "setup_flag": [93, 94, 95, 96], "setup_input": [87, 88], "setup_log": [33, 167], "seven": [17, 122, 137, 146, 159], "seven_puls": [17, 122, 137, 146, 156], "shade_color": 62, "shape": [52, 122, 131, 132, 134, 135, 152, 156, 165], "share": 154, "shell": 153, "shift": [18, 170], "shift_detfreq_to_zero": [51, 122, 143, 146], "shift_pulse_freq": 18, "short": [17, 122, 137, 146, 156, 163], "short_nam": [3, 6, 7, 8, 10], "shortest": 152, "shot": [12, 13, 17, 25, 29, 37, 38, 39, 40, 42, 45, 49, 51, 53, 54, 56, 57, 75, 76, 93, 94, 101, 102, 106, 107, 122, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 155, 156, 162, 164], "shotreptim": [109, 115], "shotsploop": [109, 115], "should": [15, 16, 18, 30, 50, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 100, 118, 119, 120, 121, 122, 147, 152, 154, 155, 157, 163, 167, 169], "shouldn": 167, "show": [3, 4, 8, 18, 122, 155], "shrt": [56, 57], "side": [18, 157, 164], "sign": [35, 122, 129, 132, 164], "signal": [12, 18, 32, 33, 37, 39, 40, 42, 50, 56, 57, 65, 67, 70, 71, 74, 75, 76, 77, 80, 81, 83, 85, 86, 90, 91, 92, 122, 152, 156, 162], "signalphas": [111, 115], "signific": [160, 163], "similar": 163, "simpl": [50, 65, 67, 122, 157, 158, 159, 160, 162, 164], "simplest": 164, "simpli": [162, 164], "simplifi": 159, "simplist": 164, "simul": [17, 35, 122, 129, 132, 137, 146, 148], "simultan": 160, "sinc": [52, 55, 66, 67, 122, 131, 132, 160, 164, 167], "sincpuls": [52, 122, 131, 132], "singl": [46, 47, 48, 93, 94, 101, 102, 103, 122, 156, 163, 164, 165, 169], "site": 159, "size": [12, 23, 37, 39, 40, 42, 110, 115, 122, 134, 135, 152], "slack": 167, "sleep": 155, "slice": [56, 57], "slightli": [160, 169], "small": [17, 122, 137, 146, 156], "smallest": [51, 122, 143, 146], "smith": [50, 65, 67, 122], "smooth": [21, 23, 24, 37, 40, 42, 122], "snr": [42, 50, 56, 57, 65, 67, 68, 69, 77, 92, 106, 107, 122, 152, 156, 162], "snr_normal": [56, 57], "snr_target": [12, 21, 23, 24, 37, 39, 40, 42, 50, 56, 57, 65, 67, 122, 155], "snr_threshold": [56, 57], "snrcriteria": [50, 65, 67, 122, 162], "snrpshot": [56, 57], "so": [32, 33, 35, 46, 47, 48, 56, 57, 122, 129, 132, 152, 155, 160, 162, 164, 167], "softwar": [35, 50, 65, 67, 103, 122, 129, 132, 148, 150, 154, 159, 167], "solv": 162, "some": [56, 57, 101, 102, 152, 154, 167], "someth": 167, "somewhat": 157, "soon": [19, 122, 124, 132, 161, 162, 166], "sop": [35, 122, 129, 132, 148], "sourc": [0, 18, 23, 31, 33, 42, 47, 57, 58, 61, 62, 67, 69, 72, 76, 77, 79, 83, 86, 88, 92, 94, 96, 100, 102, 103, 105, 107, 115, 121, 122, 132, 135, 146, 147, 148, 154, 160, 163], "space": [35, 56, 57, 122, 129, 132], "spec_config": [93, 94, 95, 96], "special": [31, 33, 163], "specif": [30, 32, 33, 55, 59, 61, 66, 67, 101, 102, 104, 105, 108, 115, 122, 154, 157, 159, 160, 162, 163, 164, 165, 169], "specifi": [13, 25, 29, 31, 32, 33, 35, 38, 49, 53, 55, 56, 57, 66, 67, 122, 129, 132, 136, 138, 139, 140, 142, 144, 146, 152, 156, 158, 162, 169], "spectra": [35, 122, 129, 132, 148], "spectral": [35, 122, 129, 132, 148], "spectromet": [20, 30, 34, 59, 60, 61, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 115, 118, 121, 122, 125, 132, 150, 154, 155, 158, 159, 160, 162, 163, 164, 165], "spectrometerinfo": 135, "spectrometr": [119, 120, 121], "spectrometrist": 164, "spectromt": 115, "spectromterinterfac": [73, 77, 82, 83], "spectroscop": [50, 65, 67, 122], "spectroscopi": [35, 122, 129, 132, 156], "spectrum": [23, 152], "speed": [16, 64, 67, 101, 102, 122, 155, 156], "speedup": [106, 107], "spel": [100, 104, 105], "spell": [104, 105, 108, 115], "spfu": [122, 132], "spfutun": 96, "sphere": 154, "sphinx": 0, "sphinx_copybutton": 0, "sphinx_toolbox": 0, "spin": [22, 23, 122, 148, 155, 156, 159], "spindler": 156, "spinsystem": [22, 23], "spintyp": [21, 23, 24, 122], "spinx": 0, "spline": [21, 23, 24, 122], "split": 163, "splitlin": 4, "srt": [117, 118, 119, 120, 121], "ss": 155, "ssl": 154, "stabil": 163, "stabl": [56, 57, 104, 105], "stage": [35, 122, 129, 132], "stand": 167, "standard": [56, 57, 96, 119, 121, 162, 164, 167], "standardis": 157, "start": [14, 19, 26, 28, 35, 55, 66, 67, 93, 94, 95, 96, 100, 101, 102, 104, 105, 120, 121, 122, 123, 124, 126, 128, 129, 132, 152, 155, 163], "start_mode_tun": [84, 86], "start_tim": [106, 107], "starttim": [73, 77, 82, 83], "startup": [31, 33], "state": [51, 73, 77, 82, 83, 104, 105, 106, 107, 122, 143, 146, 167], "static": [17, 34, 35, 60, 61, 122, 129, 132, 137, 146, 155, 164], "statment": 164, "statu": [74, 76, 157, 169], "std": [18, 56, 57], "stefan": [35, 122, 129, 132, 148], "step": [12, 17, 31, 33, 37, 39, 40, 42, 53, 56, 57, 98, 100, 104, 105, 108, 115, 120, 121, 122, 137, 144, 146, 148, 154, 155, 156, 159, 164], "step_paramet": 96, "stepper": [104, 105, 121], "still": [104, 105, 108, 115, 150, 157, 159, 162, 163, 165], "stoehr": [50, 65, 67, 122], "stoher": [50, 65, 67, 122], "stoll": [35, 122, 129, 132, 148], "stop": [75, 76, 101, 102, 104, 105, 108, 115, 167], "stop_exp": [104, 105, 108, 115], "stop_flag": [75, 76, 102], "stope": 167, "store": [93, 94, 95, 96, 101, 102], "store_loc": [73, 77, 82, 83, 92], "stori": [43, 122, 133, 135], "str": [12, 16, 17, 18, 21, 23, 24, 30, 31, 33, 34, 35, 37, 39, 40, 42, 50, 51, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 77, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 115, 119, 121, 122, 129, 132, 135, 137, 143, 145, 146, 147, 148], "str_to_list_typ": [77, 92], "streasm": [134, 135], "string": [4, 18, 31, 33, 56, 57, 77, 92, 100, 101, 102, 109, 111, 115, 122], "strongli": 163, "structur": 167, "stuck": 154, "style": [31, 33, 101, 102, 103, 135, 162, 170], "sub": 163, "subclass": [15, 16, 32, 33, 50, 55, 63, 64, 65, 66, 67, 122, 163], "sublogg": 167, "submit": 166, "submodul": 8, "subpackag": 8, "subplot": [56, 57], "success": 169, "sudo": 154, "suggest": [154, 167], "suit": 157, "sum": [17, 35, 46, 47, 48, 122, 129, 132, 137, 146], "summari": [8, 122, 135, 157], "superimpos": [42, 122], "suppli": [31, 33, 70, 75, 76, 77, 80, 83, 90, 92, 100], "support": [20, 71, 74, 76, 77, 81, 83, 91, 92, 122, 125, 132, 154, 156, 159, 162, 163, 165, 170], "svd": [37, 40, 42, 122], "svg": [134, 135], "svgflowabl": [134, 135], "sweep": [14, 18, 21, 23, 24, 25, 26, 28, 49, 93, 94, 95, 96, 104, 105, 108, 115, 120, 121, 122, 123, 126, 128, 132, 135, 138, 142, 146, 152, 162, 165], "sweeprat": [14, 26, 28, 122, 123, 126, 128, 132], "sweepspexp": [109, 115], "sweepwidth": [109, 115], "swept": [14, 26, 28, 122, 123, 126, 128, 132, 156], "switch": 167, "symetr": [20, 122, 125, 132], "sypport": [18, 122], "system": [23, 31, 33, 50, 65, 67, 122, 152, 154, 159, 165, 167], "t": [14, 18, 19, 20, 26, 28, 35, 36, 46, 47, 48, 50, 56, 57, 65, 67, 103, 107, 110, 115, 122, 123, 124, 125, 126, 128, 129, 130, 132, 155, 157, 164, 167], "t2": [53, 122, 144, 146], "t2_process": 83, "t2_result": [74, 76], "t2relaxationsequ": [53, 122, 144, 146], "tab": 157, "tabl": [17, 35, 43, 77, 92, 101, 102, 104, 105, 122, 129, 132, 133, 135, 137, 146, 156, 164], "take": [32, 33, 35, 101, 102, 104, 105, 108, 115, 122, 129, 132, 154, 155, 164, 169], "taken": [12, 37, 39, 40, 42, 122], "tar": 154, "target": [12, 18, 37, 39, 40, 42, 56, 57, 96, 118, 119, 121, 122], "target_mnr": [18, 122], "target_shrt": [12, 39, 42, 122, 155], "target_step": [12, 37, 39, 40, 42, 122, 155], "target_tim": [12, 18, 37, 39, 40, 42, 122, 155], "tau": [13, 17, 38, 53, 117, 120, 121, 122, 136, 137, 140, 144, 146, 155, 156], "tau1": [16, 17, 18, 37, 38, 40, 42, 49, 56, 57, 64, 67, 117, 118, 119, 121, 122, 137, 140, 142, 146, 155, 156], "tau1u": [17, 122, 137, 146], "tau2": [16, 17, 18, 37, 38, 40, 42, 49, 56, 57, 64, 67, 117, 118, 119, 121, 122, 137, 140, 142, 146, 155, 156], "tau3": [16, 17, 18, 64, 67, 122, 137, 146, 155, 156], "tau4": [17, 122, 137, 146, 156], "tau_": 152, "tau_1": 152, "tau_2": 152, "tau_valu": 96, "tck_": 47, "tcl": 154, "team": [154, 163], "techniqu": 159, "teleport": 167, "temp_dir": [93, 94, 95, 96], "temperatur": [157, 167], "templat": [31, 33], "term": [154, 164], "termin": [15, 16, 30, 50, 55, 59, 61, 63, 64, 65, 66, 67, 93, 94, 95, 96, 101, 102, 106, 107, 122, 162], "terminate_at": [30, 59, 61, 122, 155, 162], "test": [15, 30, 50, 55, 59, 61, 63, 65, 66, 67, 122, 150, 154, 162], "test_if_mpfu_compat": [94, 96], "test_interv": [30, 59, 61, 75, 76, 122, 162], "test_main": [77, 122, 149], "test_puls": [93, 94, 164], "test_snr": [77, 92], "test_tp": 96, "text": [18, 31, 33, 43, 122, 133, 135, 157], "textual": [31, 33], "than": [12, 18, 39, 42, 77, 92, 100, 101, 102, 118, 119, 120, 121, 122, 152, 156, 162, 167], "thei": [31, 33, 46, 47, 48, 56, 57, 122, 152, 156, 162, 164, 165], "them": [17, 35, 122, 129, 132, 137, 146, 156, 163], "theme": 0, "thi": [1, 15, 16, 18, 19, 20, 29, 30, 32, 33, 34, 35, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 70, 75, 76, 77, 80, 83, 90, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 115, 118, 119, 120, 121, 122, 124, 125, 129, 131, 132, 139, 141, 143, 144, 145, 146, 148, 149, 150, 152, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 167, 169, 171], "think": [155, 164], "third": [156, 160], "thompson": [50, 65, 67, 122], "thre": [74, 75, 76], "thread": [31, 33, 70, 71, 75, 76, 77, 80, 81, 83, 90, 91, 92, 93, 94, 95, 96], "threadnam": [31, 33], "threadpool": [73, 77, 82, 83, 84, 86, 87, 88], "three": [155, 156, 158, 166], "three_puls": [17, 122, 137, 146], "threshold": [23, 42, 46, 47, 48, 56, 57, 122, 155, 162], "through": [56, 57, 70, 75, 76, 77, 80, 83, 90, 92, 100, 104, 105, 156, 159, 163], "thrown": [56, 57], "ti": 154, "time": [12, 13, 14, 17, 18, 19, 20, 25, 26, 28, 29, 31, 33, 35, 36, 37, 38, 39, 40, 42, 45, 49, 51, 53, 54, 55, 56, 57, 66, 67, 73, 77, 82, 83, 93, 94, 100, 101, 102, 122, 123, 124, 125, 126, 128, 129, 130, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 155, 156, 157, 160, 162, 163, 164, 167, 169], "time_target": [56, 57], "timecriteria": [55, 66, 67, 122], "timei": [56, 57], "timeout": [73, 74, 76, 77, 82, 83], "timestamp": [30, 59, 61, 77, 92, 93, 94, 95, 96, 101, 102, 106, 107, 122], "timex": [56, 57], "titl": [8, 43, 56, 57, 104, 105, 113, 114, 115, 122, 133, 135], "titlesonli": 8, "tk": 154, "tmin": 88, "tmp": 167, "toctre": 8, "todai": 167, "togeth": [156, 162], "tol": [96, 119, 121], "toler": [96, 119, 121], "too": [101, 102, 167], "tool": [73, 77, 80, 81, 82, 83, 101, 102, 122, 149, 158], "toolbar": [87, 88], "toolbox": [159, 165], "top": [56, 57, 122, 135, 157], "total": [12, 13, 17, 18, 20, 37, 38, 39, 40, 42, 56, 57, 122, 125, 132, 136, 137, 140, 146, 155, 156], "total_shot": [56, 57], "tp": [14, 17, 19, 20, 26, 27, 28, 35, 36, 52, 93, 94, 95, 96, 101, 102, 106, 107, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 146, 155, 162, 164], "trace": [17, 46, 47, 48, 122, 137, 146], "trace_length": [56, 57], "traceback": [71, 74, 76, 77, 81, 83, 91, 92], "tradit": [159, 165], "train": 164, "transfer": [35, 122, 129, 132, 165], "transient": [104, 105], "transpose_dict_of_list": [122, 148], "transpose_list_of_dict": [122, 148], "trival": 162, "trivial": 162, "true": [4, 12, 18, 21, 23, 24, 30, 31, 33, 35, 37, 39, 40, 42, 51, 59, 61, 75, 76, 77, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 117, 121, 122, 129, 132, 143, 146, 148, 155, 158, 160], "truli": 162, "truncat": 4, "try": [104, 105, 166], "tun": [93, 94, 101, 102, 119, 121, 165], "tune": [45, 93, 94, 95, 96, 101, 102, 118, 119, 120, 121, 122, 141, 146, 155, 159], "tune_nut": [93, 94], "tune_phas": [96, 119, 121], "tune_pow": [96, 119, 121], "tune_puls": [75, 76, 93, 94, 95, 96, 101, 102, 106, 107, 155, 162], "tune_rect": 162, "tune_rectpuls": [93, 94, 95, 96, 101, 102, 106, 107, 155], "tupl": [18, 46, 47, 48, 55, 56, 57, 66, 67, 71, 74, 76, 77, 81, 83, 91, 92, 100, 122], "turn": [122, 148, 154, 169], "two": [18, 33, 34, 35, 46, 47, 48, 55, 60, 61, 66, 67, 100, 122, 129, 132, 156, 160, 163, 164, 167, 171], "twod_experi": [122, 149], "twodexperimentanalysi": [56, 57], "twt": [54, 100, 122, 145, 146, 163, 165], "twtprofilesequ": [54, 122, 145, 146], "txt": [56, 57], "type": [3, 4, 8, 10, 12, 17, 18, 23, 37, 39, 40, 42, 61, 68, 69, 77, 92, 94, 96, 100, 102, 103, 105, 107, 109, 111, 112, 115, 119, 121, 122, 135, 137, 146, 147, 148, 154, 155, 158, 160, 163, 164, 169], "typeerror": [34, 35, 51, 60, 61, 122, 129, 132, 143, 146], "typic": [31, 33], "u": [12, 13, 17, 18, 25, 29, 34, 37, 38, 39, 40, 42, 45, 49, 51, 53, 54, 56, 57, 60, 61, 93, 94, 100, 101, 102, 122, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 156, 161], "ui": [84, 86], "uncert": [77, 92], "uncertainti": 167, "unchang": [95, 96], "unclear": 150, "underlin": 11, "uniqu": 96, "unit": [34, 60, 61, 122, 155, 159, 165], "unitless": [34, 60, 61, 122, 158], "unix": 167, "unknown": 152, "unless": [152, 167], "unlik": 164, "unnecessari": 167, "until": [104, 105, 152, 154], "unwant": 164, "up": [70, 73, 75, 76, 77, 80, 82, 83, 90, 92, 156, 164, 165, 167, 170], "updat": [56, 57, 154, 169, 170], "update_analysis_t": [87, 88], "update_deer_set": [73, 77, 82, 83], "update_deerset": [75, 76], "update_dip": [84, 86], "update_fieldsweep": [73, 77, 82, 83], "update_figur": [84, 86, 87, 88], "update_fit_result": [87, 88], "update_func": [16, 64, 67, 87, 88, 122], "update_gyro": [75, 76], "update_inputs_from_dataset": [87, 88], "update_lo": [75, 76], "update_log_text": [78, 79], "update_longd": [73, 77, 82, 83], "update_optimise_pulses_figur": [73, 77, 82, 83], "update_pulsespel": [93, 94, 95, 96], "update_quickd": [73, 77, 82, 83], "update_relax": [73, 77, 82, 83], "update_relax2d": [73, 77, 82, 83], "update_reptim": [73, 75, 76, 77, 82, 83], "update_respro": [73, 77, 82, 83], "update_t2": [73, 77, 82, 83], "updater": [75, 76], "upgrad": [0, 160], "upon": [18, 30, 35, 59, 61, 103, 122, 129, 132, 163], "uprog": 100, "us": [0, 13, 15, 16, 17, 18, 21, 23, 24, 25, 29, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 93, 94, 96, 101, 102, 103, 104, 105, 108, 115, 118, 119, 120, 121, 122, 136, 137, 138, 139, 140, 141, 142, 144, 146, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 167, 169, 171], "useful": [56, 57], "user": [31, 33, 56, 57, 150, 155, 157, 158, 159, 162, 165, 167, 169, 170, 171], "user_input": [75, 76], "userinput": [73, 77, 82, 83, 135], "usestim": [31, 33], "usr": 154, "usual": [31, 33], "utf": 167, "util": [122, 149], "uuid": [35, 122, 129, 132], "uwb_ev": 103, "uwb_eval_match": 103, "uwb_load": 103, "v": [110, 115], "val": [104, 105, 112, 115], "val_in_n": [107, 122, 148], "val_in_u": [18, 107, 122, 148], "valid": [31, 33], "valu": [4, 17, 18, 30, 31, 33, 34, 35, 50, 56, 57, 59, 60, 61, 65, 67, 71, 74, 76, 77, 81, 83, 91, 92, 93, 94, 95, 96, 101, 102, 104, 105, 106, 107, 108, 112, 115, 119, 121, 122, 129, 132, 137, 146, 148, 155, 162], "value_at_po": [56, 57], "value_at_tim": [56, 57], "valueerror": [100, 147], "var": 100, "var_hash": [99, 100], "vari": [34, 56, 57, 60, 61, 122, 152], "variabl": [35, 56, 57, 96, 100, 104, 105, 108, 115, 122, 129, 132, 164], "variant": 159, "varieti": [159, 165], "vector": [18, 122], "verbos": [16, 18, 30, 47, 50, 59, 61, 64, 65, 67, 101, 102, 103, 122, 155], "veri": [56, 57, 150, 160], "version": [21, 23, 24, 31, 32, 33, 103, 122, 147, 153, 154, 155, 160], "vertic": [18, 122], "vexp": 18, "via": 150, "video": [104, 105, 158], "view": 164, "vim": 18, "virtual": [34, 60, 61, 122], "visible_attribut": [3, 8], "visible_children": 8, "visible_class": [3, 8], "visible_funct": 8, "visible_method": 3, "visible_properti": 3, "visible_submodul": 8, "visible_subpackag": 8, "vol": [50, 65, 67, 122], "voltag": 160, "vpsave": [113, 114, 115], "vre": 18, "w": [50, 65, 67, 122, 158], "wa": [31, 33, 56, 57, 154, 156, 165, 167], "wai": [153, 154, 157, 160, 162, 164, 166, 171], "wait": [75, 76, 104, 105], "wait_condit": [87, 88], "waitcondit": [73, 77, 82, 83], "walk": [159, 165], "want": [31, 33, 154, 155, 162, 164], "warn": [19, 31, 33, 56, 57, 122, 124, 132, 167], "waveform": [18, 122], "waveform_precis": [18, 122], "we": [152, 153, 154, 155, 160, 162, 163, 164, 166, 167, 169], "wee": [56, 57], "week": 167, "weekli": 167, "well": [18, 122, 150, 155, 157, 164], "wget": 154, "what": [18, 122, 152, 153, 155, 163, 167], "whatev": [32, 33], "when": [31, 33, 152, 153, 155, 159, 160, 162, 163, 164, 167], "where": [31, 33, 53, 122, 144, 146, 152, 156, 162], "which": [17, 18, 31, 32, 33, 46, 47, 48, 50, 51, 54, 56, 57, 65, 67, 122, 137, 143, 145, 146, 152, 154, 156, 157, 162, 163, 164], "while": 155, "whilst": [33, 104, 105, 108, 115, 156, 159, 160, 162, 165], "white": [50, 65, 67, 122], "whole": 162, "whose": 18, "wide": [33, 157, 159], "wideband": 164, "wider": 164, "width": [4, 25, 27, 49, 103, 104, 105, 122, 127, 132, 134, 135, 138, 142, 146, 155], "win": 103, "window": [52, 72, 122, 131, 132], "wish": 157, "within": [155, 157], "without": [18, 115, 164], "work": [17, 50, 65, 67, 101, 102, 104, 105, 108, 115, 122, 137, 146, 150, 152, 162, 163, 165, 169], "worker": [70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 90, 91, 92], "workersign": [71, 77, 81, 83, 91, 92], "world": 115, "would": [17, 122, 137, 146, 156, 162], "wrap": [70, 75, 76, 77, 80, 83, 90, 92, 134, 135], "write": [100, 159, 160, 162, 163, 164, 165], "write_pulsespel_fil": 100, "writen": 160, "written": [159, 165, 167], "wrong": [100, 167], "x": [13, 17, 35, 38, 47, 56, 57, 96, 119, 121, 122, 129, 132, 136, 137, 140, 146, 148, 155, 156, 158, 160], "xarrai": [21, 23, 24, 46, 47, 48, 122, 147], "xarray_obj": [68, 69], "xaxi": 23, "xepr": [100, 104, 105, 115, 121, 160, 163], "xepr_experi": [116, 122, 149], "xepr_inst": [104, 105], "xepr_path": 105, "xepr_sav": [104, 105], "xeprapi": [154, 159, 160, 163, 165], "xeprapi_link": [108, 115, 116, 122, 149], "xeprapilink": [104, 105, 108, 115, 118, 120, 121], "xeprcmd": [104, 105, 113, 114, 115], "xeprdataset": [113, 115], "xeprexperi": [113, 115], "xp": [17, 122, 137, 146, 156], "xr": [42, 46, 47, 48, 122], "xspecr": [109, 115], "xthe": 167, "xtol": 158, "xvf": 154, "xvii": [50, 65, 67, 122], "y": [17, 23, 35, 38, 56, 57, 96, 119, 121, 122, 129, 132, 137, 140, 146, 148, 154, 155, 156, 158, 160], "yaml": [93, 94, 95, 96, 158, 160, 169], "year": 156, "yet": [150, 160], "yield": [31, 33], "you": [17, 31, 33, 122, 137, 146, 153, 154, 156, 157, 160, 161, 162, 163, 164, 166, 167, 169], "your": [31, 33, 155, 157, 160, 163, 166], "yum": 154, "z": [35, 122, 129, 132, 148], "zero": [35, 46, 47, 48, 51, 54, 122, 129, 132, 143, 145, 146, 164], "zlib": 154, "zsh": 153, "z\u00fcrich": [101, 102], "\u03c0": 155}, "titles": ["Building the documentation", "API Reference", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.DEER_analysis</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.FieldSweep</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.Logging</span></code>", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.Relaxation</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.ResPro</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.TwoD_Experiment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer._version</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.colors</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.criteria</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.dataset</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.__main__</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.autoDEER_worker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.log</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.main</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.modetune</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.quickdeer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.test_main</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.tools</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_AWG</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_MPFU</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_tools</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.ETH_awg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.ETH_awg_load</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.XeprAPI_link</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.dummy</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.dummy_xepr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.xepr_experiments</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.pulses</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.reporter</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.sequences</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.tools</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.utils</span></code>", "API Reference", "Welcome to autoDEER!", "API doc", "The Automated Algorithum", "Installation", "Installing Python", "Jupyter Interface", "DEER Variants", "GUI Interface", "Configuration File", "autoDEER", "Bruker Interface", "Creating a custom interface", "Getting Started", "Interfaces", "Creating a Custom Sequence", "autoEPR", "Contributing Guide", "Logging:", "Developing", "autoDEER GUI", "Release Notes", "Tutorial"], "titleterms": {"": 150, "0": 170, "01": 170, "04": 170, "1": [152, 162, 169], "2": [152, 162, 169], "2024": 170, "3": [152, 162, 169], "4": [152, 156, 162, 169], "5": [152, 156, 162], "6": 152, "7": [152, 154, 156, 170], "8": [152, 170], "The": [152, 154], "__main__": 72, "_version": 58, "advanc": [157, 169], "after": 157, "algorithum": 152, "an": [157, 169], "analysi": [151, 162, 169], "api": [1, 149, 151], "attribut": [18, 42, 67, 79, 83, 86, 88, 96, 100, 102, 105, 107, 115, 121, 122, 135, 147], "autod": [18, 23, 33, 42, 47, 57, 58, 61, 62, 67, 69, 72, 76, 77, 79, 83, 86, 88, 89, 92, 94, 96, 100, 102, 103, 105, 107, 115, 116, 121, 122, 132, 135, 146, 147, 148, 150, 159, 169], "autodeer_work": 76, "autoepr": 165, "autom": 152, "automat": 157, "bruker": [160, 163], "bruker_awg": 94, "bruker_mpfu": 96, "bruker_tool": 100, "brukermpfu": 158, "build": 0, "call": 167, "cento": 154, "chirp": 164, "class": [23, 33, 42, 47, 57, 61, 67, 69, 76, 77, 79, 83, 86, 88, 92, 94, 96, 100, 102, 105, 107, 115, 121, 122, 132, 135, 146, 151], "color": 62, "configur": [158, 160], "connect": [157, 169], "content": [18, 23, 33, 42, 47, 57, 58, 61, 62, 67, 69, 72, 76, 77, 79, 83, 86, 88, 92, 94, 96, 100, 102, 103, 105, 107, 115, 121, 122, 132, 135, 146, 147, 148], "contribut": 166, "creat": [161, 164], "criteria": [67, 151], "current": 164, "custom": [161, 163, 164], "cycl": 156, "data": 162, "dataset": 69, "deer": [152, 155, 156], "deer_analysi": 18, "defin": 162, "develop": 168, "doc": [0, 151], "document": 0, "dummi": 107, "dummy_xepr": 115, "dure": 157, "eth_awg": 102, "eth_awg_load": 103, "ethawg": 158, "exampl": 158, "experi": [152, 157, 169], "explain": 152, "faq": 154, "featur": [150, 165], "field": 155, "fieldsweep": [23, 152], "file": [158, 160], "final": 152, "first": 164, "from": 153, "fulli": 157, "function": [18, 23, 33, 42, 47, 69, 77, 83, 86, 88, 92, 94, 96, 100, 102, 103, 107, 121, 122, 132, 135, 147, 148, 151], "get": [160, 162], "gui": [72, 76, 77, 79, 83, 86, 88, 89, 92, 157, 169], "guid": 166, "hardwar": [94, 96, 100, 102, 103, 105, 107, 115, 116, 121], "i": [151, 164], "includ": 165, "initi": 152, "input": 152, "instal": [0, 153, 154], "interfac": [151, 155, 157, 160, 161, 163], "jupyt": 155, "kei": 150, "lab": 169, "level": 167, "limit": 152, "log": [33, 79, 167], "logger": 167, "main": [83, 151], "messag": 167, "method": [18, 122], "mode": [157, 169], "modetun": 86, "modul": [18, 23, 33, 42, 47, 57, 58, 61, 62, 67, 69, 72, 76, 79, 83, 86, 88, 92, 94, 96, 100, 102, 103, 105, 107, 115, 121, 132, 135, 146, 147, 148, 151], "ndeer": 156, "next": 162, "note": 170, "o": 151, "optimis": [151, 152], "overview": 158, "packag": [0, 77, 122], "paramet": 152, "pdf": 169, "phase": 156, "plot": 151, "post": 167, "print": 169, "profil": [152, 155], "puls": [132, 151, 156, 164], "python": 154, "quickdeer": 88, "recommend": 157, "refer": [1, 35, 122, 129, 132, 148, 149, 156], "relax": [42, 152], "releas": 170, "report": [135, 169], "reson": [152, 155], "respro": 47, "return": [18, 122], "rollov": 167, "scan": 152, "script": 162, "select": 156, "sequenc": [146, 151, 152, 162, 164], "set": 162, "setup": 155, "shape": 164, "solut": 154, "sourc": 153, "spectromet": [157, 169], "srt": 152, "start": [157, 160, 162, 167, 169], "step": [152, 162], "stop": 162, "studi": 152, "submodul": [77, 116, 122], "subpackag": 122, "support": 164, "sweep": 155, "tba": 170, "termin": 151, "test_main": 89, "tool": [92, 147], "tune": 162, "tutori": 171, "twod_experi": 57, "up": 162, "us": 164, "user": 152, "util": [148, 151], "variant": 156, "version": [156, 170], "view": 169, "welcom": 150, "what": 164, "window": 154, "xepr_experi": 121, "xeprapi_link": 105, "your": [162, 164]}})