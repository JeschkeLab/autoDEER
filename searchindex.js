Search.setIndex({"alltitles": {"1. Connecting to the spectrometer": [[164, "connecting-to-the-spectrometer"]], "1. Defining the sequence": [[157, "defining-the-sequence"]], "1. User Inputs": [[147, "user-inputs"]], "2. Fieldsweep": [[147, "fieldsweep"]], "2. Starting an autoDEER Experiment": [[164, "starting-an-autodeer-experiment"]], "2. Tuning for the sequence": [[157, "tuning-for-the-sequence"]], "3. SRT Scan": [[147, "srt-scan"]], "3. Starting the sequence": [[157, "starting-the-sequence"]], "3. Viewing the analysis": [[164, "viewing-the-analysis"]], "4-pulse DEER": [[151, "pulse-deer"]], "4. Printing a PDF lab-report": [[164, "printing-a-pdf-lab-report"]], "4. Resonator Profile": [[147, "resonator-profile"]], "4. Stopping the sequence": [[157, "stopping-the-sequence"]], "5-pulse DEER": [[151, "id1"]], "5. Data analysis": [[157, "data-analysis"]], "5. Relaxation Studies": [[147, "relaxation-studies"]], "6. Optimising DEER Sequence Parameters": [[147, "optimising-deer-sequence-parameters"]], "7-pulse DEER": [[151, "id2"]], "7. Initial DEER Experiment": [[147, "initial-deer-experiment"]], "8. Final DEER Experiment": [[147, "final-deer-experiment"]], "API Reference": [[1, null], [144, null]], "API doc": [[146, null]], "Advanced Mode": [[152, "advanced-mode"], [164, "advanced-mode"]], "After an Experiment": [[152, "after-an-experiment"]], "Analysis Modules": [[146, "analysis-modules"]], "Attributes": [[16, "attributes"], [41, "attributes"], [62, "attributes"], [74, "attributes"], [78, "attributes"], [81, "attributes"], [83, "attributes"], [91, "attributes"], [95, "attributes"], [97, "attributes"], [100, "attributes"], [102, "attributes"], [110, "attributes"], [116, "attributes"], [117, "attributes"], [130, "attributes"], [142, "attributes"]], "Bruker Interface": [[155, null], [158, "bruker-interface"]], "BrukerMPFU": [[153, "brukermpfu"]], "Building docs": [[0, "building-docs"]], "Building the documentation": [[0, null]], "Calling a Logger": [[162, "calling-a-logger"]], "Chirped pulses": [[159, "chirped-pulses"]], "Classes": [[22, "classes"], [32, "classes"], [41, "classes"], [46, "classes"], [56, "classes"], [62, "classes"], [64, "classes"], [71, "classes"], [72, "classes"], [74, "classes"], [78, "classes"], [81, "classes"], [83, "classes"], [87, "classes"], [89, "classes"], [91, "classes"], [95, "classes"], [97, "classes"], [100, "classes"], [102, "classes"], [110, "classes"], [116, "classes"], [117, "classes"], [127, "classes"], [130, "classes"], [141, "classes"], [146, "classes"]], "Configuration File": [[153, null]], "Configuration file": [[155, "configuration-file"]], "Connecting to a spectrometer": [[152, "connecting-to-a-spectrometer"]], "Contributing Guide": [[161, null]], "Creating a Custom Sequence": [[159, null]], "Creating a custom interface": [[156, null]], "Creating your first sequence": [[159, "creating-your-first-sequence"]], "Custom Interface": [[158, "custom-interface"]], "Custom pulses": [[159, "custom-pulses"]], "DEER": [[150, "deer"]], "DEER Variants": [[151, null]], "DEER versions": [[151, "deer-versions"]], "Developing": [[163, null]], "During an Experiment": [[152, "during-an-experiment"]], "ETHAWG": [[153, "ethawg"]], "Examples": [[153, "examples"]], "FAQs": [[149, "faqs"]], "Features included in autoEPR:": [[160, "features-included-in-autoepr"]], "Field Sweep": [[150, "field-sweep"]], "Fully automatic experiment (recommended)": [[152, "fully-automatic-experiment-recommended"]], "Functions": [[16, "functions"], [22, "functions"], [32, "functions"], [41, "functions"], [46, "functions"], [64, "functions"], [72, "functions"], [78, "functions"], [81, "functions"], [83, "functions"], [87, "functions"], [89, "functions"], [91, "functions"], [95, "functions"], [97, "functions"], [98, "functions"], [102, "functions"], [116, "functions"], [117, "functions"], [127, "functions"], [130, "functions"], [142, "functions"], [143, "functions"], [146, "functions"]], "GUI Interface": [[152, null]], "Getting Started": [[157, null]], "Getting started": [[155, "getting-started"]], "I/O": [[146, "i-o"]], "Installation": [[148, null]], "Installing Python": [[149, null]], "Installing Python CentOS 7": [[149, "installing-python-centos-7"]], "Installing Python Windows": [[149, "installing-python-windows"]], "Installing from source": [[148, "installing-from-source"]], "Installing packages": [[0, "installing-packages"]], "Interfaces": [[146, "interfaces"], [158, null]], "Jupyter Interface": [[150, null]], "Limitations": [[147, "limitations"]], "Logging Levels": [[162, "logging-levels"]], "Logging:": [[162, null]], "Logs": [[162, "logs"]], "Main Classes": [[146, "main-classes"]], "Methods": [[16, "methods"]], "Module Contents": [[16, "module-contents"], [22, "module-contents"], [32, "module-contents"], [41, "module-contents"], [46, "module-contents"], [53, "module-contents"], [56, "module-contents"], [57, "module-contents"], [62, "module-contents"], [64, "module-contents"], [67, "module-contents"], [71, "module-contents"], [74, "module-contents"], [78, "module-contents"], [81, "module-contents"], [83, "module-contents"], [87, "module-contents"], [89, "module-contents"], [91, "module-contents"], [95, "module-contents"], [97, "module-contents"], [98, "module-contents"], [100, "module-contents"], [102, "module-contents"], [110, "module-contents"], [116, "module-contents"], [127, "module-contents"], [130, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"]], "Next Steps": [[157, "next-steps"]], "Optimisation": [[146, "optimisation"]], "Overview": [[153, "overview"]], "Package Contents": [[72, "package-contents"], [117, "package-contents"]], "Parameter": [[147, "parameter"]], "Plotting": [[146, "plotting"]], "Posting a log message": [[162, "posting-a-log-message"]], "Pulses": [[146, "pulses"]], "References": [[151, "references"]], "References:": [[34, null], [34, "id1"], [117, "references"], [117, "id40"], [117, "id41"], [117, "id105"], [117, "id122"], [117, "id124"], [117, "id162"], [117, "id164"], [124, null], [124, "id1"], [127, "references"], [127, "id1"], [143, "references"]], "Release Notes": [[165, null]], "Resonator Profile": [[150, "resonator-profile"]], "Returns": [[16, "returns"]], "Rollover": [[162, "rollover"]], "Selecting a phase cycle": [[151, "selecting-a-phase-cycle"]], "Selecting a version": [[151, "selecting-a-version"]], "Sequences": [[146, "sequences"]], "Setting up your script": [[157, "setting-up-your-script"]], "Setup": [[150, "setup"]], "Starting an experiment": [[152, "starting-an-experiment"]], "Starting the logger": [[162, "starting-the-logger"]], "Steps Explained": [[147, "steps-explained"]], "Submodules": [[72, "submodules"], [111, "submodules"], [117, "submodules"]], "Subpackages": [[117, "subpackages"]], "Termination Criteria": [[146, "termination-criteria"]], "The Automated Algorithum": [[147, null]], "The solution": [[149, "the-solution"]], "Tutorial": [[166, null]], "Using Shaped and Chirped pulses": [[159, "using-shaped-and-chirped-pulses"]], "Utilities": [[146, "utilities"], [146, "id4"]], "Version 0.7.0 (2024-04-01):": [[165, "version-0-7-0-2024-04-01"]], "Version 0.8.0 (TBA):": [[165, "version-0-8-0-tba"]], "Welcome to autoDEER!": [[145, null]], "What is not currently supported?": [[159, "what-is-not-currently-supported"]], "autoDEER": [[154, null]], "autoDEER GUI": [[164, null]], "autoDEER\u2019s Key Features": [[145, "autodeer-s-key-features"]], "autoEPR": [[160, null]], "autodeer": [[117, null]], "autodeer.DEER_analysis": [[16, null]], "autodeer.FieldSweep": [[22, null]], "autodeer.Logging": [[32, null]], "autodeer.Relaxation": [[41, null]], "autodeer.ResPro": [[46, null]], "autodeer._version": [[53, null]], "autodeer.classes": [[56, null]], "autodeer.colors": [[57, null]], "autodeer.criteria": [[62, null]], "autodeer.dataset": [[64, null]], "autodeer.gui": [[72, null]], "autodeer.gui.__main__": [[67, null]], "autodeer.gui.autoDEER_worker": [[71, null]], "autodeer.gui.log": [[74, null]], "autodeer.gui.main": [[78, null]], "autodeer.gui.modetune": [[81, null]], "autodeer.gui.quickdeer": [[83, null]], "autodeer.gui.test_main": [[84, null]], "autodeer.gui.tools": [[87, null]], "autodeer.hardware": [[111, null]], "autodeer.hardware.Bruker_AWG": [[89, null]], "autodeer.hardware.Bruker_MPFU": [[91, null]], "autodeer.hardware.Bruker_tools": [[95, null]], "autodeer.hardware.ETH_awg": [[97, null]], "autodeer.hardware.ETH_awg_load": [[98, null]], "autodeer.hardware.XeprAPI_link": [[100, null]], "autodeer.hardware.dummy": [[102, null]], "autodeer.hardware.dummy_xepr": [[110, null]], "autodeer.hardware.xepr_experiments": [[116, null]], "autodeer.pulses": [[127, null]], "autodeer.reporter": [[130, null]], "autodeer.sequences": [[141, null]], "autodeer.tools": [[142, null]], "autodeer.utils": [[143, null]], "nDEER": [[151, "ndeer"]]}, "docnames": ["README", "_templates/autoapi/index", "_templates/autoapi/python/attribute", "_templates/autoapi/python/class", "_templates/autoapi/python/data", "_templates/autoapi/python/exception", "_templates/autoapi/python/function", "_templates/autoapi/python/method", "_templates/autoapi/python/module", "_templates/autoapi/python/package", "_templates/autoapi/python/property", "_templates/custom_class_template", "autoapi/autodeer/CarrPurcellAnalysis", "autoapi/autodeer/CarrPurcellSequence", "autoapi/autodeer/ChirpPulse", "autoapi/autodeer/DEERSequence", "autoapi/autodeer/DEER_analysis/index", "autoapi/autodeer/Delay", "autoapi/autodeer/Detection", "autoapi/autodeer/EPRAccessor", "autoapi/autodeer/FieldSweep/FieldSweepAnalysis", "autoapi/autodeer/FieldSweep/SpinSystem", "autoapi/autodeer/FieldSweep/index", "autoapi/autodeer/FieldSweepAnalysis", "autoapi/autodeer/FieldSweepSequence", "autoapi/autodeer/FrequencySweptPulse", "autoapi/autodeer/GaussianPulse", "autoapi/autodeer/HSPulse", "autoapi/autodeer/HahnEchoSequence", "autoapi/autodeer/Interface", "autoapi/autodeer/Logging/DictFormater", "autoapi/autodeer/Logging/QtLogHandler", "autoapi/autodeer/Logging/index", "autoapi/autodeer/Parameter", "autoapi/autodeer/Pulse", "autoapi/autodeer/RectPulse", "autoapi/autodeer/RefocusedEcho2DAnalysis", "autoapi/autodeer/RefocusedEcho2DSequence", "autoapi/autodeer/Relaxation/CarrPurcellAnalysis", "autoapi/autodeer/Relaxation/RefocusedEcho2DAnalysis", "autoapi/autodeer/Relaxation/ReptimeAnalysis", "autoapi/autodeer/Relaxation/index", "autoapi/autodeer/Reporter", "autoapi/autodeer/ReptimeAnalysis", "autoapi/autodeer/ReptimeScan", "autoapi/autodeer/ResPro/ResonatorProfileAnalysis", "autoapi/autodeer/ResPro/index", "autoapi/autodeer/ResonatorProfileAnalysis", "autoapi/autodeer/ResonatorProfileSequence", "autoapi/autodeer/Sequence", "autoapi/autodeer/SincPulse", "autoapi/autodeer/T2RelaxationSequence", "autoapi/autodeer/TWTProfileSequence", "autoapi/autodeer/_version/index", "autoapi/autodeer/classes/Interface", "autoapi/autodeer/classes/Parameter", "autoapi/autodeer/classes/index", "autoapi/autodeer/colors/index", "autoapi/autodeer/criteria/Criteria", "autoapi/autodeer/criteria/DEERCriteria", "autoapi/autodeer/criteria/SNRCriteria", "autoapi/autodeer/criteria/TimeCriteria", "autoapi/autodeer/criteria/index", "autoapi/autodeer/dataset/EPRAccessor", "autoapi/autodeer/dataset/index", "autoapi/autodeer/gui/Worker", "autoapi/autodeer/gui/WorkerSignals", "autoapi/autodeer/gui/__main__/index", "autoapi/autodeer/gui/autoDEERUI", "autoapi/autodeer/gui/autoDEER_worker/autoDEERSignals", "autoapi/autodeer/gui/autoDEER_worker/autoDEERWorker", "autoapi/autodeer/gui/autoDEER_worker/index", "autoapi/autodeer/gui/index", "autoapi/autodeer/gui/log/LogDialog", "autoapi/autodeer/gui/log/index", "autoapi/autodeer/gui/main/Worker", "autoapi/autodeer/gui/main/WorkerSignals", "autoapi/autodeer/gui/main/autoDEERUI", "autoapi/autodeer/gui/main/index", "autoapi/autodeer/gui/modetune/ModeTune", "autoapi/autodeer/gui/modetune/get_dataWorker", "autoapi/autodeer/gui/modetune/index", "autoapi/autodeer/gui/quickdeer/DEERplot", "autoapi/autodeer/gui/quickdeer/index", "autoapi/autodeer/gui/test_main/index", "autoapi/autodeer/gui/tools/Worker", "autoapi/autodeer/gui/tools/WorkerSignals", "autoapi/autodeer/gui/tools/index", "autoapi/autodeer/hardware/Bruker_AWG/BrukerAWG", "autoapi/autodeer/hardware/Bruker_AWG/index", "autoapi/autodeer/hardware/Bruker_MPFU/BrukerMPFU", "autoapi/autodeer/hardware/Bruker_MPFU/index", "autoapi/autodeer/hardware/Bruker_tools/PSPhaseCycle", "autoapi/autodeer/hardware/Bruker_tools/PSparvar", "autoapi/autodeer/hardware/Bruker_tools/PulseSpel", "autoapi/autodeer/hardware/Bruker_tools/index", "autoapi/autodeer/hardware/ETH_awg/ETH_awg_interface", "autoapi/autodeer/hardware/ETH_awg/index", "autoapi/autodeer/hardware/ETH_awg_load/index", "autoapi/autodeer/hardware/XeprAPI_link/XeprAPILink", "autoapi/autodeer/hardware/XeprAPI_link/index", "autoapi/autodeer/hardware/dummy/dummyInterface", "autoapi/autodeer/hardware/dummy/index", "autoapi/autodeer/hardware/dummy_xepr/dummy_api", "autoapi/autodeer/hardware/dummy_xepr/dummy_cur_exp", "autoapi/autodeer/hardware/dummy_xepr/dummy_dataset", "autoapi/autodeer/hardware/dummy_xepr/dummy_hidden", "autoapi/autodeer/hardware/dummy_xepr/dummy_param", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.XeprCmds", "autoapi/autodeer/hardware/dummy_xepr/index", "autoapi/autodeer/hardware/index", "autoapi/autodeer/hardware/xepr_experiments/DEER", "autoapi/autodeer/hardware/xepr_experiments/ELDORtune", "autoapi/autodeer/hardware/xepr_experiments/MPFUtune", "autoapi/autodeer/hardware/xepr_experiments/PulseProfile", "autoapi/autodeer/hardware/xepr_experiments/index", "autoapi/autodeer/index", "autoapi/autodeer/pulses/ChirpPulse", "autoapi/autodeer/pulses/Delay", "autoapi/autodeer/pulses/Detection", "autoapi/autodeer/pulses/FrequencySweptPulse", "autoapi/autodeer/pulses/GaussianPulse", "autoapi/autodeer/pulses/HSPulse", "autoapi/autodeer/pulses/Pulse", "autoapi/autodeer/pulses/RectPulse", "autoapi/autodeer/pulses/SincPulse", "autoapi/autodeer/pulses/index", "autoapi/autodeer/reporter/Reporter", "autoapi/autodeer/reporter/SvgFlowable", "autoapi/autodeer/reporter/index", "autoapi/autodeer/sequences/CarrPurcellSequence", "autoapi/autodeer/sequences/DEERSequence", "autoapi/autodeer/sequences/FieldSweepSequence", "autoapi/autodeer/sequences/HahnEchoSequence", "autoapi/autodeer/sequences/RefocusedEcho2DSequence", "autoapi/autodeer/sequences/ReptimeScan", "autoapi/autodeer/sequences/ResonatorProfileSequence", "autoapi/autodeer/sequences/Sequence", "autoapi/autodeer/sequences/T2RelaxationSequence", "autoapi/autodeer/sequences/TWTProfileSequence", "autoapi/autodeer/sequences/index", "autoapi/autodeer/tools/index", "autoapi/autodeer/utils/index", "autoapi/index", "index", "source/API_docs", "source/Algorithum", "source/Install", "source/Install_python", "source/Jupyter_interface", "source/autoDEER/DEER_variants", "source/autoDEER/GUI_interface", "source/autoDEER/config_file", "source/autoDEER/index", "source/autoEPR/Bruker_interface", "source/autoEPR/Custom_interface", "source/autoEPR/Getting_Started", "source/autoEPR/Interface", "source/autoEPR/Sequencer", "source/autoEPR/index", "source/contributing", "source/dev_guide/Logging", "source/dev_guide/index", "source/gui_guide", "source/releasenotes", "source/tutorial"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["README.md", "_templates/autoapi/index.rst", "_templates/autoapi/python/attribute.rst", "_templates/autoapi/python/class.rst", "_templates/autoapi/python/data.rst", "_templates/autoapi/python/exception.rst", "_templates/autoapi/python/function.rst", "_templates/autoapi/python/method.rst", "_templates/autoapi/python/module.rst", "_templates/autoapi/python/package.rst", "_templates/autoapi/python/property.rst", "_templates/custom_class_template.rst", "autoapi/autodeer/CarrPurcellAnalysis.rst", "autoapi/autodeer/CarrPurcellSequence.rst", "autoapi/autodeer/ChirpPulse.rst", "autoapi/autodeer/DEERSequence.rst", "autoapi/autodeer/DEER_analysis/index.rst", "autoapi/autodeer/Delay.rst", "autoapi/autodeer/Detection.rst", "autoapi/autodeer/EPRAccessor.rst", "autoapi/autodeer/FieldSweep/FieldSweepAnalysis.rst", "autoapi/autodeer/FieldSweep/SpinSystem.rst", "autoapi/autodeer/FieldSweep/index.rst", "autoapi/autodeer/FieldSweepAnalysis.rst", "autoapi/autodeer/FieldSweepSequence.rst", "autoapi/autodeer/FrequencySweptPulse.rst", "autoapi/autodeer/GaussianPulse.rst", "autoapi/autodeer/HSPulse.rst", "autoapi/autodeer/HahnEchoSequence.rst", "autoapi/autodeer/Interface.rst", "autoapi/autodeer/Logging/DictFormater.rst", "autoapi/autodeer/Logging/QtLogHandler.rst", "autoapi/autodeer/Logging/index.rst", "autoapi/autodeer/Parameter.rst", "autoapi/autodeer/Pulse.rst", "autoapi/autodeer/RectPulse.rst", "autoapi/autodeer/RefocusedEcho2DAnalysis.rst", "autoapi/autodeer/RefocusedEcho2DSequence.rst", "autoapi/autodeer/Relaxation/CarrPurcellAnalysis.rst", "autoapi/autodeer/Relaxation/RefocusedEcho2DAnalysis.rst", "autoapi/autodeer/Relaxation/ReptimeAnalysis.rst", "autoapi/autodeer/Relaxation/index.rst", "autoapi/autodeer/Reporter.rst", "autoapi/autodeer/ReptimeAnalysis.rst", "autoapi/autodeer/ReptimeScan.rst", "autoapi/autodeer/ResPro/ResonatorProfileAnalysis.rst", "autoapi/autodeer/ResPro/index.rst", "autoapi/autodeer/ResonatorProfileAnalysis.rst", "autoapi/autodeer/ResonatorProfileSequence.rst", "autoapi/autodeer/Sequence.rst", "autoapi/autodeer/SincPulse.rst", "autoapi/autodeer/T2RelaxationSequence.rst", "autoapi/autodeer/TWTProfileSequence.rst", "autoapi/autodeer/_version/index.rst", "autoapi/autodeer/classes/Interface.rst", "autoapi/autodeer/classes/Parameter.rst", "autoapi/autodeer/classes/index.rst", "autoapi/autodeer/colors/index.rst", "autoapi/autodeer/criteria/Criteria.rst", "autoapi/autodeer/criteria/DEERCriteria.rst", "autoapi/autodeer/criteria/SNRCriteria.rst", "autoapi/autodeer/criteria/TimeCriteria.rst", "autoapi/autodeer/criteria/index.rst", "autoapi/autodeer/dataset/EPRAccessor.rst", "autoapi/autodeer/dataset/index.rst", "autoapi/autodeer/gui/Worker.rst", "autoapi/autodeer/gui/WorkerSignals.rst", "autoapi/autodeer/gui/__main__/index.rst", "autoapi/autodeer/gui/autoDEERUI.rst", "autoapi/autodeer/gui/autoDEER_worker/autoDEERSignals.rst", "autoapi/autodeer/gui/autoDEER_worker/autoDEERWorker.rst", "autoapi/autodeer/gui/autoDEER_worker/index.rst", "autoapi/autodeer/gui/index.rst", "autoapi/autodeer/gui/log/LogDialog.rst", "autoapi/autodeer/gui/log/index.rst", "autoapi/autodeer/gui/main/Worker.rst", "autoapi/autodeer/gui/main/WorkerSignals.rst", "autoapi/autodeer/gui/main/autoDEERUI.rst", "autoapi/autodeer/gui/main/index.rst", "autoapi/autodeer/gui/modetune/ModeTune.rst", "autoapi/autodeer/gui/modetune/get_dataWorker.rst", "autoapi/autodeer/gui/modetune/index.rst", "autoapi/autodeer/gui/quickdeer/DEERplot.rst", "autoapi/autodeer/gui/quickdeer/index.rst", "autoapi/autodeer/gui/test_main/index.rst", "autoapi/autodeer/gui/tools/Worker.rst", "autoapi/autodeer/gui/tools/WorkerSignals.rst", "autoapi/autodeer/gui/tools/index.rst", "autoapi/autodeer/hardware/Bruker_AWG/BrukerAWG.rst", "autoapi/autodeer/hardware/Bruker_AWG/index.rst", "autoapi/autodeer/hardware/Bruker_MPFU/BrukerMPFU.rst", "autoapi/autodeer/hardware/Bruker_MPFU/index.rst", "autoapi/autodeer/hardware/Bruker_tools/PSPhaseCycle.rst", "autoapi/autodeer/hardware/Bruker_tools/PSparvar.rst", "autoapi/autodeer/hardware/Bruker_tools/PulseSpel.rst", "autoapi/autodeer/hardware/Bruker_tools/index.rst", "autoapi/autodeer/hardware/ETH_awg/ETH_awg_interface.rst", "autoapi/autodeer/hardware/ETH_awg/index.rst", "autoapi/autodeer/hardware/ETH_awg_load/index.rst", "autoapi/autodeer/hardware/XeprAPI_link/XeprAPILink.rst", "autoapi/autodeer/hardware/XeprAPI_link/index.rst", "autoapi/autodeer/hardware/dummy/dummyInterface.rst", "autoapi/autodeer/hardware/dummy/index.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_api.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_cur_exp.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_dataset.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_hidden.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_param.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.XeprCmds.rst", "autoapi/autodeer/hardware/dummy_xepr/index.rst", "autoapi/autodeer/hardware/index.rst", "autoapi/autodeer/hardware/xepr_experiments/DEER.rst", "autoapi/autodeer/hardware/xepr_experiments/ELDORtune.rst", "autoapi/autodeer/hardware/xepr_experiments/MPFUtune.rst", "autoapi/autodeer/hardware/xepr_experiments/PulseProfile.rst", "autoapi/autodeer/hardware/xepr_experiments/index.rst", "autoapi/autodeer/index.rst", "autoapi/autodeer/pulses/ChirpPulse.rst", "autoapi/autodeer/pulses/Delay.rst", "autoapi/autodeer/pulses/Detection.rst", "autoapi/autodeer/pulses/FrequencySweptPulse.rst", "autoapi/autodeer/pulses/GaussianPulse.rst", "autoapi/autodeer/pulses/HSPulse.rst", "autoapi/autodeer/pulses/Pulse.rst", "autoapi/autodeer/pulses/RectPulse.rst", "autoapi/autodeer/pulses/SincPulse.rst", "autoapi/autodeer/pulses/index.rst", "autoapi/autodeer/reporter/Reporter.rst", "autoapi/autodeer/reporter/SvgFlowable.rst", "autoapi/autodeer/reporter/index.rst", "autoapi/autodeer/sequences/CarrPurcellSequence.rst", "autoapi/autodeer/sequences/DEERSequence.rst", "autoapi/autodeer/sequences/FieldSweepSequence.rst", "autoapi/autodeer/sequences/HahnEchoSequence.rst", "autoapi/autodeer/sequences/RefocusedEcho2DSequence.rst", "autoapi/autodeer/sequences/ReptimeScan.rst", "autoapi/autodeer/sequences/ResonatorProfileSequence.rst", "autoapi/autodeer/sequences/Sequence.rst", "autoapi/autodeer/sequences/T2RelaxationSequence.rst", "autoapi/autodeer/sequences/TWTProfileSequence.rst", "autoapi/autodeer/sequences/index.rst", "autoapi/autodeer/tools/index.rst", "autoapi/autodeer/utils/index.rst", "autoapi/index.rst", "index.rst", "source/API_docs.rst", "source/Algorithum.rst", "source/Install.rst", "source/Install_python.rst", "source/Jupyter_interface.rst", "source/autoDEER/DEER_variants.rst", "source/autoDEER/GUI_interface.rst", "source/autoDEER/config_file.rst", "source/autoDEER/index.rst", "source/autoEPR/Bruker_interface.rst", "source/autoEPR/Custom_interface.rst", "source/autoEPR/Getting_Started.rst", "source/autoEPR/Interface.rst", "source/autoEPR/Sequencer.rst", "source/autoEPR/index.rst", "source/contributing.rst", "source/dev_guide/Logging.md", "source/dev_guide/index.rst", "source/gui_guide.rst", "source/releasenotes.rst", "source/tutorial.rst"], "indexentries": {"__add__() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter.__add__", false]], "__add__() (autodeer.criteria.criteria method)": [[62, "autodeer.criteria.Criteria.__add__", false]], "__add__() (autodeer.parameter method)": [[117, "autodeer.Parameter.__add__", false], [117, "id200", false], [117, "id29", false], [117, "id92", false]], "__add__() (criteria method)": [[58, "Criteria.__add__", false]], "__add__() (parameter method)": [[33, "Parameter.__add__", false], [55, "Parameter.__add__", false]], "__eq__() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter.__eq__", false]], "__eq__() (autodeer.parameter method)": [[117, "autodeer.Parameter.__eq__", false], [117, "id199", false], [117, "id28", false], [117, "id91", false]], "__eq__() (parameter method)": [[33, "Parameter.__eq__", false], [55, "Parameter.__eq__", false]], "__getitem__() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.__getitem__", false]], "__getitem__() (autodeer.hardware.dummy_xepr.dummy_hidden method)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden.__getitem__", false]], "__getitem__() (dummy_cur_exp method)": [[104, "dummy_cur_exp.__getitem__", false]], "__getitem__() (dummy_hidden method)": [[106, "dummy_hidden.__getitem__", false]], "__mul__() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter.__mul__", false]], "__mul__() (autodeer.parameter method)": [[117, "autodeer.Parameter.__mul__", false], [117, "id202", false], [117, "id31", false], [117, "id94", false]], "__mul__() (parameter method)": [[33, "Parameter.__mul__", false], [55, "Parameter.__mul__", false]], "__rmul__() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter.__rmul__", false]], "__rmul__() (autodeer.parameter method)": [[117, "autodeer.Parameter.__rmul__", false], [117, "id203", false], [117, "id32", false], [117, "id95", false]], "__rmul__() (parameter method)": [[33, "Parameter.__rmul__", false], [55, "Parameter.__rmul__", false]], "__str__() (autodeer.hardware.bruker_tools.psphasecycle method)": [[95, "autodeer.hardware.Bruker_tools.PSPhaseCycle.__str__", false]], "__str__() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.__str__", false]], "__str__() (autodeer.pulse method)": [[117, "autodeer.Pulse.__str__", false], [117, "id127", false], [117, "id167", false]], "__str__() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.__str__", false]], "__str__() (autodeer.sequence method)": [[117, "autodeer.Sequence.__str__", false], [117, "id241", false], [117, "id63", false]], "__str__() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence.__str__", false]], "__str__() (psphasecycle method)": [[92, "PSPhaseCycle.__str__", false]], "__str__() (pulse method)": [[34, "Pulse.__str__", false], [124, "Pulse.__str__", false]], "__str__() (pulsespel method)": [[94, "PulseSpel.__str__", false]], "__str__() (sequence method)": [[49, "Sequence.__str__", false], [138, "Sequence.__str__", false]], "__sub__() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter.__sub__", false]], "__sub__() (autodeer.parameter method)": [[117, "autodeer.Parameter.__sub__", false], [117, "id201", false], [117, "id30", false], [117, "id93", false]], "__sub__() (parameter method)": [[33, "Parameter.__sub__", false], [55, "Parameter.__sub__", false]], "__version__ (in module autodeer)": [[117, "autodeer.__version__", false]], "__version__ (in module autodeer._version)": [[53, "autodeer._version.__version__", false]], "_addawgpulse() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._addAWGPulse", false]], "_addawgpulse() (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools._addAWGPulse", false]], "_addawgpulse() (pulsespel method)": [[94, "PulseSpel._addAWGPulse", false]], "_adddef() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._addDef", false]], "_adddef() (pulsespel method)": [[94, "PulseSpel._addDef", false]], "_addexp() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._addExp", false]], "_addexp() (pulsespel method)": [[94, "PulseSpel._addExp", false]], "_addphasecycle() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._addPhaseCycle", false]], "_addphasecycle() (autodeer.pulse method)": [[117, "autodeer.Pulse._addPhaseCycle", false], [117, "id112", false], [117, "id152", false]], "_addphasecycle() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse._addPhaseCycle", false]], "_addphasecycle() (pulse method)": [[34, "Pulse._addPhaseCycle", false], [124, "Pulse._addPhaseCycle", false]], "_addphasecycle() (pulsespel method)": [[94, "PulseSpel._addPhaseCycle", false]], "_addscanloop() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._addScanLoop", false]], "_addscanloop() (pulsespel method)": [[94, "PulseSpel._addScanLoop", false]], "_build() (autodeer.reporter method)": [[117, "autodeer.Reporter._build", false]], "_build() (autodeer.reporter.reporter method)": [[130, "autodeer.reporter.Reporter._build", false]], "_build() (reporter method)": [[42, "Reporter._build", false], [128, "Reporter._build", false]], "_build_exp_struct() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_exp_struct", false]], "_build_exp_struct() (eth_awg_interface method)": [[96, "ETH_awg_interface._build_exp_struct", false]], "_build_methods() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker._build_methods", false]], "_build_methods() (autodeerworker method)": [[70, "autoDEERWorker._build_methods", false]], "_build_parvar() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_parvar", false]], "_build_parvar() (eth_awg_interface method)": [[96, "ETH_awg_interface._build_parvar", false]], "_build_phase_cycle() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_phase_cycle", false]], "_build_phase_cycle() (eth_awg_interface method)": [[96, "ETH_awg_interface._build_phase_cycle", false]], "_build_pulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_pulse", false]], "_build_pulse() (eth_awg_interface method)": [[96, "ETH_awg_interface._build_pulse", false]], "_build_sequence() (autodeer.carrpurcellsequence method)": [[117, "autodeer.CarrPurcellSequence._build_sequence", false]], "_build_sequence() (autodeer.refocusedecho2dsequence method)": [[117, "autodeer.RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (autodeer.resonatorprofilesequence method)": [[117, "autodeer.ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.carrpurcellsequence method)": [[141, "autodeer.sequences.CarrPurcellSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.refocusedecho2dsequence method)": [[141, "autodeer.sequences.RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.resonatorprofilesequence method)": [[141, "autodeer.sequences.ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.twtprofilesequence method)": [[141, "autodeer.sequences.TWTProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.twtprofilesequence method)": [[117, "autodeer.TWTProfileSequence._build_sequence", false]], "_build_sequence() (carrpurcellsequence method)": [[13, "CarrPurcellSequence._build_sequence", false], [131, "CarrPurcellSequence._build_sequence", false]], "_build_sequence() (refocusedecho2dsequence method)": [[37, "RefocusedEcho2DSequence._build_sequence", false], [135, "RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (resonatorprofilesequence method)": [[48, "ResonatorProfileSequence._build_sequence", false], [137, "ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (twtprofilesequence method)": [[52, "TWTProfileSequence._build_sequence", false], [140, "TWTProfileSequence._build_sequence", false]], "_buildfmam() (autodeer.pulse method)": [[117, "autodeer.Pulse._buildFMAM", false], [117, "id113", false], [117, "id153", false]], "_buildfmam() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse._buildFMAM", false]], "_buildfmam() (pulse method)": [[34, "Pulse._buildFMAM", false], [124, "Pulse._buildFMAM", false]], "_buildphasecycle() (autodeer.sequence method)": [[117, "autodeer.Sequence._buildPhaseCycle", false], [117, "id237", false], [117, "id59", false]], "_buildphasecycle() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence._buildPhaseCycle", false]], "_buildphasecycle() (sequence method)": [[49, "Sequence._buildPhaseCycle", false], [138, "Sequence._buildPhaseCycle", false]], "_calc_fft() (autodeer.pulse method)": [[117, "autodeer.Pulse._calc_fft", false], [117, "id120", false], [117, "id160", false]], "_calc_fft() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse._calc_fft", false]], "_calc_fft() (pulse method)": [[34, "Pulse._calc_fft", false], [124, "Pulse._calc_fft", false]], "_check_sequence() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._check_sequence", false]], "_check_sequence() (pulsespel method)": [[94, "PulseSpel._check_sequence", false]], "_checkrect() (autodeer.sequence method)": [[117, "autodeer.Sequence._checkRect", false], [117, "id240", false], [117, "id62", false]], "_checkrect() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence._checkRect", false]], "_checkrect() (sequence method)": [[49, "Sequence._checkRect", false], [138, "Sequence._checkRect", false]], "_cmpl_def() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._cmpl_def", false]], "_cmpl_def() (pulsespel method)": [[94, "PulseSpel._cmpl_def", false]], "_cmpl_exp() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._cmpl_Exp", false]], "_cmpl_exp() (pulsespel method)": [[94, "PulseSpel._cmpl_Exp", false]], "_detect() (autodeer.hardware.bruker_tools.psphasecycle method)": [[95, "autodeer.hardware.Bruker_tools.PSPhaseCycle._detect", false]], "_detect() (psphasecycle method)": [[92, "PSPhaseCycle._detect", false]], "_estimate_time() (autodeer.sequence method)": [[117, "autodeer.Sequence._estimate_time", false], [117, "id236", false], [117, "id58", false]], "_estimate_time() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence._estimate_time", false]], "_estimate_time() (sequence method)": [[49, "Sequence._estimate_time", false], [138, "Sequence._estimate_time", false]], "_expdefs() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._ExpDefs", false]], "_expdefs() (pulsespel method)": [[94, "PulseSpel._ExpDefs", false]], "_freq_sweep() (autodeer.hardware.xepr_experiments.pulseprofile method)": [[116, "autodeer.hardware.xepr_experiments.PulseProfile._freq_sweep", false]], "_freq_sweep() (pulseprofile method)": [[115, "PulseProfile._freq_sweep", false]], "_from_dict() (autodeer.classes.parameter static method)": [[56, "autodeer.classes.Parameter._from_dict", false]], "_from_dict() (autodeer.parameter static method)": [[117, "autodeer.Parameter._from_dict", false], [117, "id100", false], [117, "id208", false], [117, "id37", false]], "_from_dict() (autodeer.pulse class method)": [[117, "autodeer.Pulse._from_dict", false], [117, "id132", false], [117, "id172", false]], "_from_dict() (autodeer.pulses.pulse class method)": [[127, "autodeer.pulses.Pulse._from_dict", false]], "_from_dict() (autodeer.sequence class method)": [[117, "autodeer.Sequence._from_dict", false], [117, "id246", false], [117, "id68", false]], "_from_dict() (autodeer.sequences.sequence class method)": [[141, "autodeer.sequences.Sequence._from_dict", false]], "_from_dict() (parameter static method)": [[33, "Parameter._from_dict", false], [55, "Parameter._from_dict", false]], "_from_dict() (pulse class method)": [[34, "Pulse._from_dict", false], [124, "Pulse._from_dict", false]], "_from_dict() (sequence class method)": [[49, "Sequence._from_dict", false], [138, "Sequence._from_dict", false]], "_from_json() (autodeer.classes.parameter class method)": [[56, "autodeer.classes.Parameter._from_json", false]], "_from_json() (autodeer.parameter class method)": [[117, "autodeer.Parameter._from_json", false], [117, "id101", false], [117, "id209", false], [117, "id38", false]], "_from_json() (autodeer.pulse class method)": [[117, "autodeer.Pulse._from_json", false], [117, "id133", false], [117, "id173", false]], "_from_json() (autodeer.pulses.pulse class method)": [[127, "autodeer.pulses.Pulse._from_json", false]], "_from_json() (autodeer.sequence class method)": [[117, "autodeer.Sequence._from_json", false], [117, "id247", false], [117, "id69", false]], "_from_json() (autodeer.sequences.sequence class method)": [[141, "autodeer.sequences.Sequence._from_json", false]], "_from_json() (parameter class method)": [[33, "Parameter._from_json", false], [55, "Parameter._from_json", false]], "_from_json() (pulse class method)": [[34, "Pulse._from_json", false], [124, "Pulse._from_json", false]], "_from_json() (sequence class method)": [[49, "Sequence._from_json", false], [138, "Sequence._from_json", false]], "_gen_eseem() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy._gen_ESEEM", false]], "_get_cur_exp_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink._get_cur_exp_global", false]], "_get_cur_exp_global() (xeprapilink method)": [[99, "XeprAPILink._get_cur_exp_global", false]], "_get_exp() (autodeer.hardware.xepr_experiments.eldortune method)": [[116, "autodeer.hardware.xepr_experiments.ELDORtune._get_exp", false]], "_get_exp() (eldortune method)": [[113, "ELDORtune._get_exp", false]], "_get_xepr_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink._get_Xepr_global", false]], "_get_xepr_global() (xeprapilink method)": [[99, "XeprAPILink._get_Xepr_global", false]], "_launch_complex_thread() (autodeer.hardware.bruker_awg.brukerawg method)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG._launch_complex_thread", false]], "_launch_complex_thread() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU._launch_complex_thread", false]], "_launch_complex_thread() (brukerawg method)": [[88, "BrukerAWG._launch_complex_thread", false]], "_launch_complex_thread() (brukermpfu method)": [[90, "BrukerMPFU._launch_complex_thread", false]], "_main() (autodeer.hardware.bruker_tools.psphasecycle method)": [[95, "autodeer.hardware.Bruker_tools.PSPhaseCycle._main", false]], "_main() (psphasecycle method)": [[92, "PSPhaseCycle._main", false]], "_mpfu() (autodeer.hardware.bruker_tools.psphasecycle method)": [[95, "autodeer.hardware.Bruker_tools.PSPhaseCycle._MPFU", false]], "_mpfu() (psphasecycle method)": [[92, "PSPhaseCycle._MPFU", false]], "_mpfu_channels() (in module autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU._MPFU_channels", false]], "_new_delay() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._new_delay", false]], "_new_delay() (pulsespel method)": [[94, "PulseSpel._new_delay", false]], "_new_pulse() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._new_pulse", false]], "_new_pulse() (pulsespel method)": [[94, "PulseSpel._new_pulse", false]], "_new_var() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel._new_var", false]], "_new_var() (pulsespel method)": [[94, "PulseSpel._new_var", false]], "_obj (autodeer.dataset.epraccessor attribute)": [[64, "autodeer.dataset.EPRAccessor._obj", false]], "_obj (autodeer.epraccessor attribute)": [[117, "autodeer.EPRAccessor._obj", false]], "_obj (epraccessor attribute)": [[19, "EPRAccessor._obj", false], [63, "EPRAccessor._obj", false]], "_pcyc_str() (autodeer.pulse method)": [[117, "autodeer.Pulse._pcyc_str", false], [117, "id126", false], [117, "id166", false]], "_pcyc_str() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse._pcyc_str", false]], "_pcyc_str() (pulse method)": [[34, "Pulse._pcyc_str", false], [124, "Pulse._pcyc_str", false]], "_process_fit() (autodeer.resonatorprofileanalysis method)": [[117, "autodeer.ResonatorProfileAnalysis._process_fit", false]], "_process_fit() (autodeer.respro.resonatorprofileanalysis method)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis._process_fit", false]], "_process_fit() (resonatorprofileanalysis method)": [[45, "ResonatorProfileAnalysis._process_fit", false], [47, "ResonatorProfileAnalysis._process_fit", false]], "_set_cur_exp_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_cur_exp_global", false]], "_set_cur_exp_global() (xeprapilink method)": [[99, "XeprAPILink._set_cur_exp_global", false]], "_set_cur_exp_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_cur_exp_param", false]], "_set_cur_exp_param() (xeprapilink method)": [[99, "XeprAPILink._set_cur_exp_param", false]], "_set_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_hidden_param", false]], "_set_hidden_param() (xeprapilink method)": [[99, "XeprAPILink._set_hidden_param", false]], "_set_xepr_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_Xepr_global", false]], "_set_xepr_global() (xeprapilink method)": [[99, "XeprAPILink._set_Xepr_global", false]], "_setup_echo() (autodeer.hardware.xepr_experiments.mpfutune method)": [[116, "autodeer.hardware.xepr_experiments.MPFUtune._setup_echo", false]], "_setup_echo() (mpfutune method)": [[114, "MPFUtune._setup_echo", false]], "_setup_exp() (autodeer.hardware.xepr_experiments.eldortune method)": [[116, "autodeer.hardware.xepr_experiments.ELDORtune._setup_exp", false]], "_setup_exp() (autodeer.hardware.xepr_experiments.pulseprofile method)": [[116, "autodeer.hardware.xepr_experiments.PulseProfile._setup_exp", false]], "_setup_exp() (eldortune method)": [[113, "ELDORtune._setup_exp", false]], "_setup_exp() (pulseprofile method)": [[115, "PulseProfile._setup_exp", false]], "_similate_respro() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy._similate_respro", false]], "_simulate_2d_relax() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy._simulate_2D_relax", false]], "_simulate_cp() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy._simulate_CP", false]], "_simulate_deer() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy._simulate_deer", false]], "_simulate_field_sweep() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy._simulate_field_sweep", false]], "_simulate_reptimescan() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy._simulate_reptimescan", false]], "_simulate_t2() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy._simulate_T2", false]], "_smooth() (autodeer.refocusedecho2danalysis method)": [[117, "autodeer.RefocusedEcho2DAnalysis._smooth", false]], "_smooth() (autodeer.relaxation.refocusedecho2danalysis method)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis._smooth", false]], "_smooth() (refocusedecho2danalysis method)": [[36, "RefocusedEcho2DAnalysis._smooth", false], [39, "RefocusedEcho2DAnalysis._smooth", false]], "_spfu_channels() (in module autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU._SPFU_channels", false]], "_tmp_dir (autodeer.hardware.dummy_xepr.dummy_api attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_api._tmp_dir", false]], "_tmp_dir (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink._tmp_dir", false]], "_tmp_dir (dummy_api attribute)": [[103, "dummy_api._tmp_dir", false]], "_tmp_dir (xeprapilink attribute)": [[99, "XeprAPILink._tmp_dir", false]], "_to_dict() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter._to_dict", false]], "_to_dict() (autodeer.parameter method)": [[117, "autodeer.Parameter._to_dict", false], [117, "id205", false], [117, "id34", false], [117, "id97", false]], "_to_dict() (autodeer.pulse method)": [[117, "autodeer.Pulse._to_dict", false], [117, "id129", false], [117, "id169", false]], "_to_dict() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse._to_dict", false]], "_to_dict() (autodeer.sequence method)": [[117, "autodeer.Sequence._to_dict", false], [117, "id243", false], [117, "id65", false]], "_to_dict() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence._to_dict", false]], "_to_dict() (parameter method)": [[33, "Parameter._to_dict", false], [55, "Parameter._to_dict", false]], "_to_dict() (pulse method)": [[34, "Pulse._to_dict", false], [124, "Pulse._to_dict", false]], "_to_dict() (sequence method)": [[49, "Sequence._to_dict", false], [138, "Sequence._to_dict", false]], "_to_json() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter._to_json", false]], "_to_json() (autodeer.parameter method)": [[117, "autodeer.Parameter._to_json", false], [117, "id206", false], [117, "id35", false], [117, "id98", false]], "_to_json() (autodeer.pulse method)": [[117, "autodeer.Pulse._to_json", false], [117, "id130", false], [117, "id170", false]], "_to_json() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse._to_json", false]], "_to_json() (autodeer.sequence method)": [[117, "autodeer.Sequence._to_json", false], [117, "id244", false], [117, "id66", false]], "_to_json() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence._to_json", false]], "_to_json() (parameter method)": [[33, "Parameter._to_json", false], [55, "Parameter._to_json", false]], "_to_json() (pulse method)": [[34, "Pulse._to_json", false], [124, "Pulse._to_json", false]], "_to_json() (sequence method)": [[49, "Sequence._to_json", false], [138, "Sequence._to_json", false]], "_xepr_retry() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink._xepr_retry", false]], "_xepr_retry() (xeprapilink method)": [[99, "XeprAPILink._xepr_retry", false]], "a (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.A", false]], "a (spinsystem attribute)": [[21, "SpinSystem.A", false]], "abort_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.abort_exp", false]], "abort_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.abort_exp", false]], "abort_exp() (dummy_api method)": [[103, "dummy_api.abort_exp", false]], "abort_exp() (xeprapilink method)": [[99, "XeprAPILink.abort_exp", false]], "acquire_dataset() (autodeer.classes.interface method)": [[56, "autodeer.classes.Interface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.bruker_awg.brukerawg method)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.dummy.dummyinterface method)": [[102, "autodeer.hardware.dummy.dummyInterface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_dataset", false]], "acquire_dataset() (autodeer.interface method)": [[117, "autodeer.Interface.acquire_dataset", false], [117, "id217", false]], "acquire_dataset() (brukerawg method)": [[88, "BrukerAWG.acquire_dataset", false]], "acquire_dataset() (brukermpfu method)": [[90, "BrukerMPFU.acquire_dataset", false]], "acquire_dataset() (dummyinterface method)": [[101, "dummyInterface.acquire_dataset", false]], "acquire_dataset() (eth_awg_interface method)": [[96, "ETH_awg_interface.acquire_dataset", false]], "acquire_dataset() (interface method)": [[29, "Interface.acquire_dataset", false], [54, "Interface.acquire_dataset", false]], "acquire_dataset() (xeprapilink method)": [[99, "XeprAPILink.acquire_dataset", false]], "acquire_dataset_from_matlab() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.acquire_dataset_from_matlab", false]], "acquire_dataset_from_matlab() (eth_awg_interface method)": [[96, "ETH_awg_interface.acquire_dataset_from_matlab", false]], "acquire_scan() (autodeer.hardware.dummy_xepr.dummy_api method)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan", false]], "acquire_scan() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan", false]], "acquire_scan() (dummy_api method)": [[103, "dummy_api.acquire_scan", false]], "acquire_scan() (xeprapilink method)": [[99, "XeprAPILink.acquire_scan", false]], "acquire_scan_2d() (autodeer.hardware.dummy_xepr.dummy_api method)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan_2d", false]], "acquire_scan_2d() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan_2d", false]], "acquire_scan_2d() (dummy_api method)": [[103, "dummy_api.acquire_scan_2d", false]], "acquire_scan_2d() (xeprapilink method)": [[99, "XeprAPILink.acquire_scan_2d", false]], "acquire_scan_at() (autodeer.hardware.dummy_xepr.dummy_api method)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan_at", false]], "acquire_scan_at() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan_at", false]], "acquire_scan_at() (dummy_api method)": [[103, "dummy_api.acquire_scan_at", false]], "acquire_scan_at() (xeprapilink method)": [[99, "XeprAPILink.acquire_scan_at", false]], "add_axis() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter.add_axis", false]], "add_axis() (autodeer.parameter method)": [[117, "autodeer.Parameter.add_axis", false], [117, "id195", false], [117, "id24", false], [117, "id87", false]], "add_axis() (parameter method)": [[33, "Parameter.add_axis", false], [55, "Parameter.add_axis", false]], "add_code_block() (autodeer.reporter method)": [[117, "autodeer.Reporter.add_code_block", false]], "add_code_block() (autodeer.reporter.reporter method)": [[130, "autodeer.reporter.Reporter.add_code_block", false]], "add_code_block() (reporter method)": [[42, "Reporter.add_code_block", false], [128, "Reporter.add_code_block", false]], "add_eseem_avg() (autodeer.deersequence method)": [[117, "autodeer.DEERSequence.add_ESEEM_avg", false], [117, "id257", false]], "add_eseem_avg() (autodeer.sequences.deersequence method)": [[141, "autodeer.sequences.DEERSequence.add_ESEEM_avg", false]], "add_eseem_avg() (deersequence method)": [[15, "DEERSequence.add_ESEEM_avg", false], [132, "DEERSequence.add_ESEEM_avg", false]], "add_figure() (autodeer.reporter method)": [[117, "autodeer.Reporter.add_figure", false]], "add_figure() (autodeer.reporter.reporter method)": [[130, "autodeer.reporter.Reporter.add_figure", false]], "add_figure() (reporter method)": [[42, "Reporter.add_figure", false], [128, "Reporter.add_figure", false]], "add_new_entry() (autodeer.gui.log.logdialog method)": [[74, "autodeer.gui.log.LogDialog.add_new_entry", false]], "add_new_entry() (logdialog method)": [[73, "LogDialog.add_new_entry", false]], "add_new_section() (autodeer.reporter method)": [[117, "autodeer.Reporter.add_new_section", false]], "add_new_section() (autodeer.reporter.reporter method)": [[130, "autodeer.reporter.Reporter.add_new_section", false]], "add_new_section() (reporter method)": [[42, "Reporter.add_new_section", false], [128, "Reporter.add_new_section", false]], "add_noise() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy.add_noise", false]], "add_page_break() (autodeer.reporter method)": [[117, "autodeer.Reporter.add_page_break", false]], "add_page_break() (autodeer.reporter.reporter method)": [[130, "autodeer.reporter.Reporter.add_page_break", false]], "add_page_break() (reporter method)": [[42, "Reporter.add_page_break", false], [128, "Reporter.add_page_break", false]], "add_phaseshift() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy.add_phaseshift", false]], "add_space() (autodeer.reporter method)": [[117, "autodeer.Reporter.add_space", false]], "add_space() (autodeer.reporter.reporter method)": [[130, "autodeer.reporter.Reporter.add_space", false]], "add_space() (reporter method)": [[42, "Reporter.add_space", false], [128, "Reporter.add_space", false]], "add_table() (autodeer.reporter method)": [[117, "autodeer.Reporter.add_table", false]], "add_table() (autodeer.reporter.reporter method)": [[130, "autodeer.reporter.Reporter.add_table", false]], "add_table() (reporter method)": [[42, "Reporter.add_table", false], [128, "Reporter.add_table", false]], "add_text() (autodeer.reporter method)": [[117, "autodeer.Reporter.add_text", false]], "add_text() (autodeer.reporter.reporter method)": [[130, "autodeer.reporter.Reporter.add_text", false]], "add_text() (reporter method)": [[42, "Reporter.add_text", false], [128, "Reporter.add_text", false]], "add_title() (autodeer.reporter method)": [[117, "autodeer.Reporter.add_title", false]], "add_title() (autodeer.reporter.reporter method)": [[130, "autodeer.reporter.Reporter.add_title", false]], "add_title() (reporter method)": [[42, "Reporter.add_title", false], [128, "Reporter.add_title", false]], "addpulse() (autodeer.sequence method)": [[117, "autodeer.Sequence.addPulse", false], [117, "id235", false], [117, "id57", false]], "addpulse() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence.addPulse", false]], "addpulse() (sequence method)": [[49, "Sequence.addPulse", false], [138, "Sequence.addPulse", false]], "advanced_mode_inputs() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.advanced_mode_inputs", false]], "advanced_mode_inputs() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.advanced_mode_inputs", false]], "advanced_mode_inputs() (autodeerui method)": [[68, "autoDEERUI.advanced_mode_inputs", false], [77, "autoDEERUI.advanced_mode_inputs", false]], "amp_factor (autodeer.frequencysweptpulse property)": [[117, "autodeer.FrequencySweptPulse.amp_factor", false]], "amp_factor (autodeer.pulse property)": [[117, "autodeer.Pulse.amp_factor", false], [117, "id109", false], [117, "id149", false]], "amp_factor (autodeer.pulses.frequencysweptpulse property)": [[127, "autodeer.pulses.FrequencySweptPulse.amp_factor", false]], "amp_factor (autodeer.pulses.pulse property)": [[127, "autodeer.pulses.Pulse.amp_factor", false]], "amp_factor (frequencysweptpulse property)": [[25, "FrequencySweptPulse.amp_factor", false], [121, "FrequencySweptPulse.amp_factor", false]], "amp_factor (pulse property)": [[34, "Pulse.amp_factor", false], [124, "Pulse.amp_factor", false]], "api (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.api", false]], "api (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.api", false]], "api (autodeer.hardware.xepr_experiments.deer attribute)": [[116, "autodeer.hardware.xepr_experiments.DEER.api", false]], "api (autodeer.hardware.xepr_experiments.eldortune attribute)": [[116, "autodeer.hardware.xepr_experiments.ELDORtune.api", false]], "api (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[116, "autodeer.hardware.xepr_experiments.MPFUtune.api", false]], "api (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[116, "autodeer.hardware.xepr_experiments.PulseProfile.api", false]], "api (brukerawg attribute)": [[88, "BrukerAWG.api", false]], "api (brukermpfu attribute)": [[90, "BrukerMPFU.api", false]], "api (deer attribute)": [[112, "DEER.api", false]], "api (eldortune attribute)": [[113, "ELDORtune.api", false]], "api (mpfutune attribute)": [[114, "MPFUtune.api", false]], "api (pulseprofile attribute)": [[115, "PulseProfile.api", false]], "app (in module autodeer.gui.__main__)": [[67, "autodeer.gui.__main__.app", false]], "app (in module autodeer.gui.main)": [[78, "autodeer.gui.main.app", false]], "app (in module autodeer.gui.quickdeer)": [[83, "autodeer.gui.quickdeer.app", false]], "aqexprun() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.aqExpRun", false]], "aqexprun() (dummy_cur_exp method)": [[104, "dummy_cur_exp.aqExpRun", false]], "aqexpselect() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqExpSelect", false]], "aqexpselect() (dummy_xepr.xeprcmds method)": [[108, "dummy_xepr.XeprCmds.aqExpSelect", false]], "aqexpselect() (xeprcmds method)": [[109, "XeprCmds.aqExpSelect", false]], "aqgetparmaxvalue (autodeer.hardware.dummy_xepr.dummy_param attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_param.aqGetParMaxValue", false]], "aqgetparmaxvalue (dummy_param attribute)": [[107, "dummy_param.aqGetParMaxValue", false]], "aqgetparminvalue (autodeer.hardware.dummy_xepr.dummy_param attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_param.aqGetParMinValue", false]], "aqgetparminvalue (dummy_param attribute)": [[107, "dummy_param.aqGetParMinValue", false]], "aqpgcompile() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgCompile", false]], "aqpgcompile() (dummy_xepr.xeprcmds method)": [[108, "dummy_xepr.XeprCmds.aqPgCompile", false]], "aqpgcompile() (xeprcmds method)": [[109, "XeprCmds.aqPgCompile", false]], "aqpgdefload() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgDefLoad", false]], "aqpgdefload() (dummy_xepr.xeprcmds method)": [[108, "dummy_xepr.XeprCmds.aqPgDefLoad", false]], "aqpgdefload() (xeprcmds method)": [[109, "XeprCmds.aqPgDefLoad", false]], "aqpgdefsaveas() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgDefSaveAs", false]], "aqpgdefsaveas() (dummy_xepr.xeprcmds method)": [[108, "dummy_xepr.XeprCmds.aqPgDefSaveAs", false]], "aqpgdefsaveas() (xeprcmds method)": [[109, "XeprCmds.aqPgDefSaveAs", false]], "aqpgload() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgLoad", false]], "aqpgload() (dummy_xepr.xeprcmds method)": [[108, "dummy_xepr.XeprCmds.aqPgLoad", false]], "aqpgload() (xeprcmds method)": [[109, "XeprCmds.aqPgLoad", false]], "aqpgsaveas() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgSaveAs", false]], "aqpgsaveas() (dummy_xepr.xeprcmds method)": [[108, "dummy_xepr.XeprCmds.aqPgSaveAs", false]], "aqpgsaveas() (xeprcmds method)": [[109, "XeprCmds.aqPgSaveAs", false]], "aqpgshowprg() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgShowPrg", false]], "aqpgshowprg() (dummy_xepr.xeprcmds method)": [[108, "dummy_xepr.XeprCmds.aqPgShowPrg", false]], "aqpgshowprg() (xeprcmds method)": [[109, "XeprCmds.aqPgShowPrg", false]], "args (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.args", false]], "args (autodeer.gui.main.worker attribute)": [[78, "autodeer.gui.main.Worker.args", false]], "args (autodeer.gui.tools.worker attribute)": [[87, "autodeer.gui.tools.Worker.args", false]], "args (autodeer.gui.worker attribute)": [[72, "autodeer.gui.Worker.args", false]], "args (autodeerworker attribute)": [[70, "autoDEERWorker.args", false]], "args (worker attribute)": [[65, "Worker.args", false], [75, "Worker.args", false], [85, "Worker.args", false]], "autodeer": [[117, "module-autodeer", false]], "autodeer._version": [[53, "module-autodeer._version", false]], "autodeer.classes": [[56, "module-autodeer.classes", false]], "autodeer.colors": [[57, "module-autodeer.colors", false]], "autodeer.criteria": [[62, "module-autodeer.criteria", false]], "autodeer.dataset": [[64, "module-autodeer.dataset", false]], "autodeer.deer_analysis": [[16, "module-autodeer.DEER_analysis", false]], "autodeer.fieldsweep": [[22, "module-autodeer.FieldSweep", false]], "autodeer.gui": [[72, "module-autodeer.gui", false]], "autodeer.gui.__main__": [[67, "module-autodeer.gui.__main__", false]], "autodeer.gui.autodeer_worker": [[71, "module-autodeer.gui.autoDEER_worker", false]], "autodeer.gui.log": [[74, "module-autodeer.gui.log", false]], "autodeer.gui.main": [[78, "module-autodeer.gui.main", false]], "autodeer.gui.modetune": [[81, "module-autodeer.gui.modetune", false]], "autodeer.gui.quickdeer": [[83, "module-autodeer.gui.quickdeer", false]], "autodeer.gui.test_main": [[84, "module-autodeer.gui.test_main", false]], "autodeer.gui.tools": [[87, "module-autodeer.gui.tools", false]], "autodeer.hardware": [[111, "module-autodeer.hardware", false]], "autodeer.hardware.bruker_awg": [[89, "module-autodeer.hardware.Bruker_AWG", false]], "autodeer.hardware.bruker_mpfu": [[91, "module-autodeer.hardware.Bruker_MPFU", false]], "autodeer.hardware.bruker_tools": [[95, "module-autodeer.hardware.Bruker_tools", false]], "autodeer.hardware.dummy": [[102, "module-autodeer.hardware.dummy", false]], "autodeer.hardware.dummy_xepr": [[110, "module-autodeer.hardware.dummy_xepr", false]], "autodeer.hardware.eth_awg": [[97, "module-autodeer.hardware.ETH_awg", false]], "autodeer.hardware.eth_awg_load": [[98, "module-autodeer.hardware.ETH_awg_load", false]], "autodeer.hardware.xepr_experiments": [[116, "module-autodeer.hardware.xepr_experiments", false]], "autodeer.hardware.xeprapi_link": [[100, "module-autodeer.hardware.XeprAPI_link", false]], "autodeer.logging": [[32, "module-autodeer.Logging", false]], "autodeer.pulses": [[127, "module-autodeer.pulses", false]], "autodeer.relaxation": [[41, "module-autodeer.Relaxation", false]], "autodeer.reporter": [[130, "module-autodeer.reporter", false]], "autodeer.respro": [[46, "module-autodeer.ResPro", false]], "autodeer.sequences": [[141, "module-autodeer.sequences", false]], "autodeer.tools": [[142, "module-autodeer.tools", false]], "autodeer.utils": [[143, "module-autodeer.utils", false]], "autodeersignals (built-in class)": [[69, "autoDEERSignals", false]], "autodeersignals (class in autodeer.gui.autodeer_worker)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals", false]], "autodeerui (built-in class)": [[68, "autoDEERUI", false], [77, "autoDEERUI", false]], "autodeerui (class in autodeer.gui)": [[72, "autodeer.gui.autoDEERUI", false]], "autodeerui (class in autodeer.gui.main)": [[78, "autodeer.gui.main.autoDEERUI", false]], "autodeerworker (built-in class)": [[70, "autoDEERWorker", false]], "autodeerworker (class in autodeer.gui.autodeer_worker)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker", false]], "autoeprdecoder() (in module autodeer)": [[117, "autodeer.autoEPRDecoder", false], [117, "id106", false], [117, "id146", false], [117, "id43", false]], "autoeprdecoder() (in module autodeer.utils)": [[143, "autodeer.utils.autoEPRDecoder", false]], "averages (autodeer.sequence attribute)": [[117, "autodeer.Sequence.averages", false], [117, "id229", false], [117, "id51", false]], "averages (autodeer.sequences.sequence attribute)": [[141, "autodeer.sequences.Sequence.averages", false]], "averages (sequence attribute)": [[49, "Sequence.averages", false], [138, "Sequence.averages", false]], "awg (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.AWG", false]], "awg (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.AWG", false]], "awg (autodeer.hardware.xepr_experiments.deer attribute)": [[116, "autodeer.hardware.xepr_experiments.DEER.awg", false]], "awg (autodeerworker attribute)": [[70, "autoDEERWorker.AWG", false]], "awg (deer attribute)": [[112, "DEER.awg", false]], "awg (pulsespel attribute)": [[94, "PulseSpel.AWG", false]], "awg_freq (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.awg_freq", false]], "awg_freq (eth_awg_interface attribute)": [[96, "ETH_awg_interface.awg_freq", false]], "ax_id (autodeer.classes.parameter attribute)": [[56, "autodeer.classes.Parameter.ax_id", false]], "ax_id (autodeer.parameter attribute)": [[117, "autodeer.Parameter.ax_id", false], [117, "id194", false], [117, "id23", false], [117, "id86", false]], "ax_id (parameter attribute)": [[33, "Parameter.ax_id", false], [55, "Parameter.ax_id", false]], "axes_uuid (autodeer.sequence attribute)": [[117, "autodeer.Sequence.axes_uuid", false], [117, "id226", false], [117, "id48", false]], "axes_uuid (autodeer.sequences.sequence attribute)": [[141, "autodeer.sequences.Sequence.axes_uuid", false]], "axes_uuid (sequence attribute)": [[49, "Sequence.axes_uuid", false], [138, "Sequence.axes_uuid", false]], "axis (autodeer.classes.parameter attribute)": [[56, "autodeer.classes.Parameter.axis", false]], "axis (autodeer.parameter attribute)": [[117, "autodeer.Parameter.axis", false], [117, "id193", false], [117, "id22", false], [117, "id85", false]], "axis (autodeer.refocusedecho2danalysis attribute)": [[117, "autodeer.RefocusedEcho2DAnalysis.axis", false]], "axis (autodeer.relaxation.refocusedecho2danalysis attribute)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.axis", false]], "axis (autodeer.relaxation.reptimeanalysis attribute)": [[41, "autodeer.Relaxation.ReptimeAnalysis.axis", false]], "axis (autodeer.reptimeanalysis attribute)": [[117, "autodeer.ReptimeAnalysis.axis", false]], "axis (parameter attribute)": [[33, "Parameter.axis", false], [55, "Parameter.axis", false]], "axis (refocusedecho2danalysis attribute)": [[36, "RefocusedEcho2DAnalysis.axis", false], [39, "RefocusedEcho2DAnalysis.axis", false]], "axis (reptimeanalysis attribute)": [[40, "ReptimeAnalysis.axis", false], [43, "ReptimeAnalysis.axis", false]], "b (autodeer.fieldsweepsequence attribute)": [[117, "autodeer.FieldSweepSequence.B", false]], "b (autodeer.sequences.fieldsweepsequence attribute)": [[141, "autodeer.sequences.FieldSweepSequence.B", false]], "b (fieldsweepsequence attribute)": [[24, "FieldSweepSequence.B", false], [133, "FieldSweepSequence.B", false]], "background_func() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.background_func", false]], "bandwidth (autodeer.pulse property)": [[117, "autodeer.Pulse.bandwidth", false], [117, "id108", false], [117, "id148", false]], "bandwidth (autodeer.pulses.pulse property)": [[127, "autodeer.pulses.Pulse.bandwidth", false]], "bandwidth (pulse property)": [[34, "Pulse.bandwidth", false], [124, "Pulse.bandwidth", false]], "beta (autodeer.hspulse attribute)": [[117, "autodeer.HSPulse.beta", false]], "beta (autodeer.pulses.hspulse attribute)": [[127, "autodeer.pulses.HSPulse.beta", false]], "beta (hspulse attribute)": [[27, "HSPulse.beta", false], [123, "HSPulse.beta", false]], "bg_data (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.bg_data", false]], "bg_data (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.bg_data", false]], "bg_data (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.bg_data", false]], "bg_data (brukerawg attribute)": [[88, "BrukerAWG.bg_data", false]], "bg_data (brukermpfu attribute)": [[90, "BrukerMPFU.bg_data", false]], "bg_data (eth_awg_interface attribute)": [[96, "ETH_awg_interface.bg_data", false]], "bg_thread (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.bg_thread", false]], "bg_thread (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.bg_thread", false]], "bg_thread (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.bg_thread", false]], "bg_thread (brukerawg attribute)": [[88, "BrukerAWG.bg_thread", false]], "bg_thread (brukermpfu attribute)": [[90, "BrukerMPFU.bg_thread", false]], "bg_thread (eth_awg_interface attribute)": [[96, "ETH_awg_interface.bg_thread", false]], "bg_thread() (in module autodeer.hardware.eth_awg)": [[97, "autodeer.hardware.ETH_awg.bg_thread", false]], "bphasecycles (autodeer.hardware.bruker_tools.psphasecycle attribute)": [[95, "autodeer.hardware.Bruker_tools.PSPhaseCycle.BPhaseCycles", false]], "bphasecycles (psphasecycle attribute)": [[92, "PSPhaseCycle.BPhaseCycles", false]], "branch (in module autodeer._version)": [[53, "autodeer._version.branch", false]], "bridge (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.Bridge", false]], "bridge (dummyinterface attribute)": [[101, "dummyInterface.Bridge", false]], "bridge_config (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.bridge_config", false]], "bridge_config (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.bridge_config", false]], "bridge_config (brukerawg attribute)": [[88, "BrukerAWG.bridge_config", false]], "bridge_config (brukermpfu attribute)": [[90, "BrukerMPFU.bridge_config", false]], "bruker (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.Bruker", false]], "bruker (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.Bruker", false]], "bruker (autodeerui attribute)": [[68, "autoDEERUI.Bruker", false], [77, "autoDEERUI.Bruker", false]], "brukerawg (built-in class)": [[88, "BrukerAWG", false]], "brukerawg (class in autodeer.hardware.bruker_awg)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG", false]], "brukermpfu (built-in class)": [[90, "BrukerMPFU", false]], "brukermpfu (class in autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU", false]], "brxamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden.BrXAmp", false]], "brxamp (dummy_hidden attribute)": [[106, "dummy_hidden.BrXAmp", false]], "brxphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden.BrXPhase", false]], "brxphase (dummy_hidden attribute)": [[106, "dummy_hidden.BrXPhase", false]], "bryamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden.BrYAmp", false]], "bryamp (dummy_hidden attribute)": [[106, "dummy_hidden.BrYAmp", false]], "bryphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden.BrYPhase", false]], "bryphase (dummy_hidden attribute)": [[106, "dummy_hidden.BrYPhase", false]], "bspline_extra() (in module autodeer.respro)": [[46, "autodeer.ResPro.BSpline_extra", false]], "build__lowpass_butter_filter() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.build__lowpass_butter_filter", false]], "build_default_pulses() (in module autodeer)": [[117, "autodeer.build_default_pulses", false]], "build_default_pulses() (in module autodeer.pulses)": [[127, "autodeer.pulses.build_default_pulses", false]], "build_shape() (autodeer.pulse method)": [[117, "autodeer.Pulse.build_shape", false], [117, "id114", false], [117, "id154", false]], "build_shape() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.build_shape", false]], "build_shape() (pulse method)": [[34, "Pulse.build_shape", false], [124, "Pulse.build_shape", false]], "build_spectrum() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.build_spectrum", false]], "build_table() (autodeer.pulse method)": [[117, "autodeer.Pulse.build_table", false], [117, "id115", false], [117, "id155", false]], "build_table() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.build_table", false]], "build_table() (in module autodeer)": [[117, "autodeer.build_table", false], [117, "id103", false], [117, "id42", false]], "build_table() (in module autodeer.utils)": [[143, "autodeer.utils.build_table", false]], "build_table() (pulse method)": [[34, "Pulse.build_table", false], [124, "Pulse.build_table", false]], "build_unique_progtable() (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.build_unique_progtable", false]], "calc_correction_factor() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.calc_correction_factor", false]], "calc_d0() (autodeer.hardware.bruker_awg.brukerawg method)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.calc_d0", false]], "calc_d0() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.calc_d0", false]], "calc_d0() (autodeer.hardware.xepr_experiments.mpfutune method)": [[116, "autodeer.hardware.xepr_experiments.MPFUtune.calc_d0", false]], "calc_d0() (brukerawg method)": [[88, "BrukerAWG.calc_d0", false]], "calc_d0() (brukermpfu method)": [[90, "BrukerMPFU.calc_d0", false]], "calc_d0() (mpfutune method)": [[114, "MPFUtune.calc_d0", false]], "calc_d0_from_hahn_echo() (autodeer.hardware.bruker_awg.brukerawg method)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (brukerawg method)": [[88, "BrukerAWG.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (brukermpfu method)": [[90, "BrukerMPFU.calc_d0_from_Hahn_Echo", false]], "calc_deer_settings() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.calc_deer_settings", false]], "calc_gyro() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.calc_gyro", false]], "calc_gyro() (autodeer.fieldsweepanalysis method)": [[117, "autodeer.FieldSweepAnalysis.calc_gyro", false]], "calc_gyro() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.calc_gyro", false], [23, "FieldSweepAnalysis.calc_gyro", false]], "calc_identifiability() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.calc_identifiability", false]], "calc_noise_level() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.calc_noise_level", false]], "calc_noise_level() (autodeer.fieldsweepanalysis method)": [[117, "autodeer.FieldSweepAnalysis.calc_noise_level", false]], "calc_noise_level() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.calc_noise_level", false], [23, "FieldSweepAnalysis.calc_noise_level", false]], "calc_optimal_reptime() (autodeer.relaxation.reptimeanalysis method)": [[41, "autodeer.Relaxation.ReptimeAnalysis.calc_optimal_reptime", false]], "calc_optimal_reptime() (autodeer.reptimeanalysis method)": [[117, "autodeer.ReptimeAnalysis.calc_optimal_reptime", false]], "calc_optimal_reptime() (reptimeanalysis method)": [[40, "ReptimeAnalysis.calc_optimal_reptime", false], [43, "ReptimeAnalysis.calc_optimal_reptime", false]], "calc_overlap() (in module autodeer.respro)": [[46, "autodeer.ResPro.calc_overlap", false]], "calc_percieved_freq() (in module autodeer.hardware.eth_awg_load)": [[98, "autodeer.hardware.ETH_awg_load.calc_percieved_freq", false]], "calc_rel_positions() (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.calc_rel_positions", false]], "calibratefreq() (in module autodeer.hardware.xepr_experiments)": [[116, "autodeer.hardware.xepr_experiments.CalibrateFreq", false]], "carrpurcellanalysis (built-in class)": [[12, "CarrPurcellAnalysis", false], [38, "CarrPurcellAnalysis", false]], "carrpurcellanalysis (class in autodeer)": [[117, "autodeer.CarrPurcellAnalysis", false]], "carrpurcellanalysis (class in autodeer.relaxation)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis", false]], "carrpurcellsequence (built-in class)": [[13, "CarrPurcellSequence", false], [131, "CarrPurcellSequence", false]], "carrpurcellsequence (class in autodeer)": [[117, "autodeer.CarrPurcellSequence", false]], "carrpurcellsequence (class in autodeer.sequences)": [[141, "autodeer.sequences.CarrPurcellSequence", false]], "ceil() (in module autodeer.respro)": [[46, "autodeer.ResPro.ceil", false]], "centerfield (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.CenterField", false]], "centerfield (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.CenterField", false]], "change_dimensions() (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.change_dimensions", false]], "change_lo() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.change_LO", false]], "change_lo() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.change_LO", false]], "change_lo() (autodeerui method)": [[68, "autoDEERUI.change_LO", false], [77, "autoDEERUI.change_LO", false]], "change_log_level() (in module autodeer.logging)": [[32, "autodeer.Logging.change_log_level", false]], "check_cp() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.check_CP", false]], "check_cp() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.check_CP", false]], "check_cp() (autodeerui method)": [[68, "autoDEERUI.check_CP", false], [77, "autoDEERUI.check_CP", false]], "check_decay() (autodeer.carrpurcellanalysis method)": [[117, "autodeer.CarrPurcellAnalysis.check_decay", false]], "check_decay() (autodeer.relaxation.carrpurcellanalysis method)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.check_decay", false]], "check_decay() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.check_decay", false], [38, "CarrPurcellAnalysis.check_decay", false]], "check_t2() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.check_T2", false]], "check_t2() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.check_T2", false]], "check_t2() (autodeerui method)": [[68, "autoDEERUI.check_T2", false], [77, "autoDEERUI.check_T2", false]], "check_variable() (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.check_variable", false]], "checkpulsespel() (autodeer.hardware.bruker_tools.psparvar method)": [[95, "autodeer.hardware.Bruker_tools.PSparvar.checkPulseSpel", false]], "checkpulsespel() (psparvar method)": [[93, "PSparvar.checkPulseSpel", false]], "chirppulse (built-in class)": [[14, "ChirpPulse", false], [118, "ChirpPulse", false]], "chirppulse (class in autodeer)": [[117, "autodeer.ChirpPulse", false]], "chirppulse (class in autodeer.pulses)": [[127, "autodeer.pulses.ChirpPulse", false]], "clear_all() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.clear_all", false]], "clear_all() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.clear_all", false]], "clear_all() (autodeer.gui.quickdeer.deerplot method)": [[83, "autodeer.gui.quickdeer.DEERplot.clear_all", false]], "clear_all() (autodeerui method)": [[68, "autoDEERUI.clear_all", false], [77, "autoDEERUI.clear_all", false]], "clear_all() (deerplot method)": [[82, "DEERplot.clear_all", false]], "clear_log() (autodeer.gui.log.logdialog method)": [[74, "autodeer.gui.log.LogDialog.clear_log", false]], "clear_log() (logdialog method)": [[73, "LogDialog.clear_log", false]], "clearlayout() (autodeer.gui.quickdeer.deerplot method)": [[83, "autodeer.gui.quickdeer.DEERplot.clearLayout", false]], "clearlayout() (deerplot method)": [[82, "DEERplot.clearLayout", false]], "cmap (in module autodeer)": [[117, "autodeer.cmap", false]], "cmap (in module autodeer.relaxation)": [[41, "autodeer.Relaxation.cmap", false]], "combo_figure() (in module autodeer)": [[117, "autodeer.combo_figure", false]], "combo_figure() (in module autodeer.reporter)": [[130, "autodeer.reporter.combo_figure", false]], "compile_pulsespel_def() (autodeer.hardware.dummy_xepr.dummy_api method)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.compile_PulseSpel_def", false]], "compile_pulsespel_def() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.compile_PulseSpel_def", false]], "compile_pulsespel_def() (dummy_api method)": [[103, "dummy_api.compile_PulseSpel_def", false]], "compile_pulsespel_def() (xeprapilink method)": [[99, "XeprAPILink.compile_PulseSpel_def", false]], "compile_pulsespel_prg() (autodeer.hardware.dummy_xepr.dummy_api method)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (dummy_api method)": [[103, "dummy_api.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (xeprapilink method)": [[99, "XeprAPILink.compile_PulseSpel_prg", false]], "config (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.config", false]], "config (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.config", false]], "config (autodeerui attribute)": [[68, "autoDEERUI.config", false], [77, "autoDEERUI.config", false]], "connect() (autodeer.classes.interface method)": [[56, "autodeer.classes.Interface.connect", false]], "connect() (autodeer.hardware.bruker_awg.brukerawg method)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.connect", false]], "connect() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.connect", false]], "connect() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.connect", false]], "connect() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.connect", false]], "connect() (autodeer.interface method)": [[117, "autodeer.Interface.connect", false], [117, "id216", false]], "connect() (brukerawg method)": [[88, "BrukerAWG.connect", false]], "connect() (brukermpfu method)": [[90, "BrukerMPFU.connect", false]], "connect() (eth_awg_interface method)": [[96, "ETH_awg_interface.connect", false]], "connect() (interface method)": [[29, "Interface.connect", false], [54, "Interface.connect", false]], "connect() (xeprapilink method)": [[99, "XeprAPILink.connect", false]], "connect_spectrometer() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.connect_spectrometer", false]], "connect_spectrometer() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.connect_spectrometer", false]], "connect_spectrometer() (autodeerui method)": [[68, "autoDEERUI.connect_spectrometer", false], [77, "autoDEERUI.connect_spectrometer", false]], "connected (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.connected", false]], "connected (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.connected", false]], "connected (autodeerui attribute)": [[68, "autoDEERUI.connected", false], [77, "autoDEERUI.connected", false]], "convert_progtable() (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.convert_progtable", false]], "copy() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter.copy", false]], "copy() (autodeer.parameter method)": [[117, "autodeer.Parameter.copy", false], [117, "id204", false], [117, "id33", false], [117, "id96", false]], "copy() (autodeer.pulse method)": [[117, "autodeer.Pulse.copy", false], [117, "id128", false], [117, "id168", false]], "copy() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.copy", false]], "copy() (autodeer.sequence method)": [[117, "autodeer.Sequence.copy", false], [117, "id242", false], [117, "id64", false]], "copy() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence.copy", false]], "copy() (parameter method)": [[33, "Parameter.copy", false], [55, "Parameter.copy", false]], "copy() (pulse method)": [[34, "Pulse.copy", false], [124, "Pulse.copy", false]], "copy() (sequence method)": [[49, "Sequence.copy", false], [138, "Sequence.copy", false]], "core_logger (autodeer.gui.log.logdialog attribute)": [[74, "autodeer.gui.log.LogDialog.core_logger", false]], "core_logger (logdialog attribute)": [[73, "LogDialog.core_logger", false]], "cores (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.cores", false]], "cores (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.cores", false]], "cores (autodeer.gui.quickdeer.deerplot attribute)": [[83, "autodeer.gui.quickdeer.DEERplot.cores", false]], "cores (autodeerui attribute)": [[68, "autoDEERUI.cores", false], [77, "autoDEERUI.cores", false]], "cores (deerplot attribute)": [[82, "DEERplot.cores", false]], "correction_factor (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.correction_factor", false]], "correction_factor (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.correction_factor", false]], "correction_factor (autodeerui attribute)": [[68, "autoDEERUI.correction_factor", false], [77, "autoDEERUI.correction_factor", false]], "correctphase (autodeer.dataset.epraccessor property)": [[64, "autodeer.dataset.EPRAccessor.correctphase", false]], "correctphase (autodeer.epraccessor property)": [[117, "autodeer.EPRAccessor.correctphase", false]], "correctphase (epraccessor property)": [[19, "EPRAccessor.correctphase", false], [63, "EPRAccessor.correctphase", false]], "correctphasefull (autodeer.dataset.epraccessor property)": [[64, "autodeer.dataset.EPRAccessor.correctphasefull", false]], "correctphasefull (autodeer.epraccessor property)": [[117, "autodeer.EPRAccessor.correctphasefull", false]], "correctphasefull (epraccessor property)": [[19, "EPRAccessor.correctphasefull", false], [63, "EPRAccessor.correctphasefull", false]], "cp_run() (in module autodeer.hardware.xepr_experiments)": [[116, "autodeer.hardware.xepr_experiments.CP_run", false]], "create_dataset_from_axes() (in module autodeer)": [[117, "autodeer.create_dataset_from_axes", false]], "create_dataset_from_axes() (in module autodeer.dataset)": [[64, "autodeer.dataset.create_dataset_from_axes", false]], "create_dataset_from_bruker() (in module autodeer)": [[117, "autodeer.create_dataset_from_bruker", false]], "create_dataset_from_bruker() (in module autodeer.dataset)": [[64, "autodeer.dataset.create_dataset_from_bruker", false]], "create_dataset_from_sequence() (in module autodeer)": [[117, "autodeer.create_dataset_from_sequence", false]], "create_dataset_from_sequence() (in module autodeer.dataset)": [[64, "autodeer.dataset.create_dataset_from_sequence", false]], "create_fieldsweep_figure() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.create_fieldsweep_figure", false]], "create_fieldsweep_figure() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.create_fieldsweep_figure", false]], "create_fieldsweep_figure() (autodeerui method)": [[68, "autoDEERUI.create_fieldsweep_figure", false], [77, "autoDEERUI.create_fieldsweep_figure", false]], "create_figure() (autodeer.gui.modetune.modetune method)": [[81, "autodeer.gui.modetune.ModeTune.create_figure", false]], "create_figure() (autodeer.gui.quickdeer.deerplot method)": [[83, "autodeer.gui.quickdeer.DEERplot.create_figure", false]], "create_figure() (deerplot method)": [[82, "DEERplot.create_figure", false]], "create_figure() (modetune method)": [[79, "ModeTune.create_figure", false]], "create_nmodel() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.create_Nmodel", false]], "create_relax_figure() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.create_relax_figure", false]], "create_relax_figure() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.create_relax_figure", false]], "create_relax_figure() (autodeerui method)": [[68, "autoDEERUI.create_relax_figure", false], [77, "autoDEERUI.create_relax_figure", false]], "create_report() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.create_report", false]], "create_report() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.create_report", false]], "create_report() (autodeerui method)": [[68, "autoDEERUI.create_report", false], [77, "autoDEERUI.create_report", false]], "create_report() (in module autodeer.reporter)": [[130, "autodeer.reporter.create_report", false]], "create_respro_figure() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.create_respro_figure", false]], "create_respro_figure() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.create_respro_figure", false]], "create_respro_figure() (autodeerui method)": [[68, "autoDEERUI.create_respro_figure", false], [77, "autoDEERUI.create_respro_figure", false]], "create_save_name() (in module autodeer.gui)": [[72, "autodeer.gui.create_save_name", false]], "create_save_name() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.create_save_name", false]], "criteria (built-in class)": [[58, "Criteria", false]], "criteria (class in autodeer.criteria)": [[62, "autodeer.criteria.Criteria", false]], "cur_exp (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.cur_exp", false]], "cur_exp (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.cur_exp", false]], "cur_exp (autodeer.hardware.dummy_xepr.dummy_xepr attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.cur_exp", false]], "cur_exp (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.cur_exp", false]], "cur_exp (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.cur_exp", false]], "cur_exp (brukerawg attribute)": [[88, "BrukerAWG.cur_exp", false]], "cur_exp (brukermpfu attribute)": [[90, "BrukerMPFU.cur_exp", false]], "cur_exp (dummy_xepr attribute)": [[108, "dummy_xepr.cur_exp", false]], "cur_exp (eth_awg_interface attribute)": [[96, "ETH_awg_interface.cur_exp", false]], "cur_exp (xeprapilink attribute)": [[99, "XeprAPILink.cur_exp", false]], "current_data (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.current_data", false]], "current_data (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.current_data", false]], "current_data (autodeer.gui.quickdeer.deerplot attribute)": [[83, "autodeer.gui.quickdeer.DEERplot.current_data", false]], "current_data (autodeerui attribute)": [[68, "autoDEERUI.current_data", false], [77, "autoDEERUI.current_data", false]], "current_data (deerplot attribute)": [[82, "DEERplot.current_data", false]], "current_folder (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.current_folder", false]], "current_folder (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.current_folder", false]], "current_folder (autodeer.gui.quickdeer.deerplot attribute)": [[83, "autodeer.gui.quickdeer.DEERplot.current_folder", false]], "current_folder (autodeerui attribute)": [[68, "autoDEERUI.current_folder", false], [77, "autoDEERUI.current_folder", false]], "current_folder (deerplot attribute)": [[82, "DEERplot.current_folder", false]], "current_results (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.current_results", false]], "current_results (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.current_results", false]], "current_results (autodeer.gui.quickdeer.deerplot attribute)": [[83, "autodeer.gui.quickdeer.DEERplot.current_results", false]], "current_results (autodeerui attribute)": [[68, "autoDEERUI.current_results", false], [77, "autoDEERUI.current_results", false]], "current_results (deerplot attribute)": [[82, "DEERplot.current_results", false]], "d0 (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.d0", false]], "d0 (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.d0", false]], "d0 (autodeer.hardware.xepr_experiments.deer attribute)": [[116, "autodeer.hardware.xepr_experiments.DEER.d0", false]], "d0 (autodeer.hardware.xepr_experiments.eldortune attribute)": [[116, "autodeer.hardware.xepr_experiments.ELDORtune.d0", false]], "d0 (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[116, "autodeer.hardware.xepr_experiments.MPFUtune.d0", false]], "d0 (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[116, "autodeer.hardware.xepr_experiments.PulseProfile.d0", false]], "d0 (brukerawg attribute)": [[88, "BrukerAWG.d0", false]], "d0 (brukermpfu attribute)": [[90, "BrukerMPFU.d0", false]], "d0 (deer attribute)": [[112, "DEER.d0", false]], "d0 (eldortune attribute)": [[113, "ELDORtune.d0", false]], "d0 (mpfutune attribute)": [[114, "MPFUtune.d0", false]], "d0 (pulseprofile attribute)": [[115, "PulseProfile.d0", false]], "data (autodeer.carrpurcellanalysis attribute)": [[117, "autodeer.CarrPurcellAnalysis.data", false]], "data (autodeer.fieldsweep.fieldsweepanalysis attribute)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.data", false]], "data (autodeer.fieldsweepanalysis attribute)": [[117, "autodeer.FieldSweepAnalysis.data", false]], "data (autodeer.refocusedecho2danalysis attribute)": [[117, "autodeer.RefocusedEcho2DAnalysis.data", false]], "data (autodeer.relaxation.carrpurcellanalysis attribute)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.data", false]], "data (autodeer.relaxation.refocusedecho2danalysis attribute)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.data", false]], "data (carrpurcellanalysis attribute)": [[12, "CarrPurcellAnalysis.data", false], [38, "CarrPurcellAnalysis.data", false]], "data (fieldsweepanalysis attribute)": [[20, "FieldSweepAnalysis.data", false], [23, "FieldSweepAnalysis.data", false]], "data (refocusedecho2danalysis attribute)": [[36, "RefocusedEcho2DAnalysis.data", false], [39, "RefocusedEcho2DAnalysis.data", false]], "dataset (autodeer.carrpurcellanalysis attribute)": [[117, "autodeer.CarrPurcellAnalysis.dataset", false]], "dataset (autodeer.refocusedecho2danalysis attribute)": [[117, "autodeer.RefocusedEcho2DAnalysis.dataset", false]], "dataset (autodeer.relaxation.carrpurcellanalysis attribute)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.dataset", false]], "dataset (autodeer.relaxation.refocusedecho2danalysis attribute)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.dataset", false]], "dataset (autodeer.resonatorprofileanalysis attribute)": [[117, "autodeer.ResonatorProfileAnalysis.dataset", false]], "dataset (autodeer.respro.resonatorprofileanalysis attribute)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.dataset", false]], "dataset (carrpurcellanalysis attribute)": [[12, "CarrPurcellAnalysis.dataset", false], [38, "CarrPurcellAnalysis.dataset", false]], "dataset (refocusedecho2danalysis attribute)": [[36, "RefocusedEcho2DAnalysis.dataset", false], [39, "RefocusedEcho2DAnalysis.dataset", false]], "dataset (resonatorprofileanalysis attribute)": [[45, "ResonatorProfileAnalysis.dataset", false], [47, "ResonatorProfileAnalysis.dataset", false]], "deadtime (autodeer.deersequence attribute)": [[117, "autodeer.DEERSequence.deadtime", false], [117, "id255", false]], "deadtime (autodeer.sequences.deersequence attribute)": [[141, "autodeer.sequences.DEERSequence.deadtime", false]], "deadtime (deersequence attribute)": [[15, "DEERSequence.deadtime", false], [132, "DEERSequence.deadtime", false]], "deer (built-in class)": [[112, "DEER", false]], "deer (class in autodeer.hardware.xepr_experiments)": [[116, "autodeer.hardware.xepr_experiments.DEER", false]], "deer5p_run() (in module autodeer.hardware.xepr_experiments)": [[116, "autodeer.hardware.xepr_experiments.DEER5p_run", false]], "deer_inputs (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.deer_inputs", false]], "deer_inputs (autodeerworker attribute)": [[70, "autoDEERWorker.deer_inputs", false]], "deer_settings (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.deer_settings", false]], "deer_settings (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.deer_settings", false]], "deer_settings (autodeerui attribute)": [[68, "autoDEERUI.deer_settings", false], [77, "autoDEERUI.deer_settings", false]], "deeranalysis() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.DEERanalysis", false]], "deeranalysis_plot() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.DEERanalysis_plot", false]], "deeranalysis_plot_pub() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.DEERanalysis_plot_pub", false]], "deeranalysis_process() (in module autodeer.gui.quickdeer)": [[83, "autodeer.gui.quickdeer.deeranalysis_process", false]], "deercriteria (built-in class)": [[59, "DEERCriteria", false]], "deercriteria (class in autodeer.criteria)": [[62, "autodeer.criteria.DEERCriteria", false]], "deerplot (built-in class)": [[82, "DEERplot", false]], "deerplot (class in autodeer.gui.quickdeer)": [[83, "autodeer.gui.quickdeer.DEERplot", false]], "deersequence (built-in class)": [[15, "DEERSequence", false], [132, "DEERSequence", false]], "deersequence (class in autodeer)": [[117, "autodeer.DEERSequence", false], [117, "id249", false]], "deersequence (class in autodeer.sequences)": [[141, "autodeer.sequences.DEERSequence", false]], "def_file_str (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.def_file_str", false]], "def_file_str (pulsespel attribute)": [[94, "PulseSpel.def_file_str", false]], "delay (built-in class)": [[17, "Delay", false], [119, "Delay", false]], "delay (class in autodeer)": [[117, "autodeer.Delay", false], [117, "id139", false]], "delay (class in autodeer.pulses)": [[127, "autodeer.pulses.Delay", false]], "description (autodeer.classes.parameter attribute)": [[56, "autodeer.classes.Parameter.description", false]], "description (autodeer.criteria.criteria attribute)": [[62, "autodeer.criteria.Criteria.description", false]], "description (autodeer.criteria.deercriteria attribute)": [[62, "autodeer.criteria.DEERCriteria.description", false]], "description (autodeer.parameter attribute)": [[117, "autodeer.Parameter.description", false], [117, "id191", false], [117, "id20", false], [117, "id83", false]], "description (criteria attribute)": [[58, "Criteria.description", false]], "description (deercriteria attribute)": [[59, "DEERCriteria.description", false]], "description (parameter attribute)": [[33, "Parameter.description", false], [55, "Parameter.description", false]], "det_frq (autodeer.hardware.xepr_experiments.deer attribute)": [[116, "autodeer.hardware.xepr_experiments.DEER.det_frq", false]], "det_frq (deer attribute)": [[112, "DEER.det_frq", false]], "detect_dicts (autodeer.hardware.bruker_tools.psphasecycle attribute)": [[95, "autodeer.hardware.Bruker_tools.PSPhaseCycle.detect_dicts", false]], "detect_dicts (psphasecycle attribute)": [[92, "PSPhaseCycle.detect_dicts", false]], "detect_eseem() (in module autodeer)": [[117, "autodeer.detect_ESEEM", false]], "detect_eseem() (in module autodeer.relaxation)": [[41, "autodeer.Relaxation.detect_ESEEM", false]], "detection (built-in class)": [[18, "Detection", false], [120, "Detection", false]], "detection (class in autodeer)": [[117, "autodeer.Detection", false], [117, "id135", false], [117, "id175", false]], "detection (class in autodeer.pulses)": [[127, "autodeer.pulses.Detection", false]], "determine_twt_split() (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.determine_TWT_split", false]], "dictformater (built-in class)": [[30, "DictFormater", false]], "dictformater (class in autodeer.logging)": [[32, "autodeer.Logging.DictFormater", false]], "dig_rate (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.dig_rate", false]], "dig_rate (eth_awg_interface attribute)": [[96, "ETH_awg_interface.dig_rate", false]], "digitally_upconvert() (in module autodeer.hardware.eth_awg_load)": [[98, "autodeer.hardware.ETH_awg_load.digitally_upconvert", false]], "dim (autodeer.carrpurcellsequence attribute)": [[117, "autodeer.CarrPurcellSequence.dim", false]], "dim (autodeer.classes.parameter property)": [[56, "autodeer.classes.Parameter.dim", false]], "dim (autodeer.parameter property)": [[117, "autodeer.Parameter.dim", false], [117, "id17", false], [117, "id188", false], [117, "id80", false]], "dim (autodeer.reptimescan attribute)": [[117, "autodeer.ReptimeScan.dim", false]], "dim (autodeer.sequences.carrpurcellsequence attribute)": [[141, "autodeer.sequences.CarrPurcellSequence.dim", false]], "dim (autodeer.sequences.reptimescan attribute)": [[141, "autodeer.sequences.ReptimeScan.dim", false]], "dim (carrpurcellsequence attribute)": [[13, "CarrPurcellSequence.dim", false], [131, "CarrPurcellSequence.dim", false]], "dim (parameter property)": [[33, "Parameter.dim", false], [55, "Parameter.dim", false]], "dim (reptimescan attribute)": [[44, "ReptimeScan.dim", false], [136, "ReptimeScan.dim", false]], "dims (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.dims", false]], "dims (pulsespel attribute)": [[94, "PulseSpel.dims", false]], "discussion_url (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.discussion_url", false]], "discussion_url (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.discussion_url", false]], "discussion_url (autodeerui attribute)": [[68, "autoDEERUI.discussion_url", false], [77, "autoDEERUI.discussion_url", false]], "dl_params (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.DL_params", false]], "dl_params (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.DL_params", false]], "dl_params (autodeer.gui.quickdeer.deerplot attribute)": [[83, "autodeer.gui.quickdeer.DEERplot.DL_params", false]], "dl_params (autodeerui attribute)": [[68, "autoDEERUI.DL_params", false], [77, "autoDEERUI.DL_params", false]], "dl_params (deerplot attribute)": [[82, "DEERplot.DL_params", false]], "docs_url (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.docs_url", false]], "docs_url (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.docs_url", false]], "docs_url (autodeerui attribute)": [[68, "autoDEERUI.docs_url", false], [77, "autoDEERUI.docs_url", false]], "draw() (autodeer.reporter.svgflowable method)": [[130, "autodeer.reporter.SvgFlowable.draw", false]], "draw() (svgflowable method)": [[129, "SvgFlowable.draw", false]], "drawing (autodeer.reporter.svgflowable attribute)": [[130, "autodeer.reporter.SvgFlowable.drawing", false]], "drawing (svgflowable attribute)": [[129, "SvgFlowable.drawing", false]], "dt (autodeer.deersequence attribute)": [[117, "autodeer.DEERSequence.dt", false], [117, "id254", false]], "dt (autodeer.refocusedecho2dsequence attribute)": [[117, "autodeer.RefocusedEcho2DSequence.dt", false]], "dt (autodeer.sequences.deersequence attribute)": [[141, "autodeer.sequences.DEERSequence.dt", false]], "dt (autodeer.sequences.refocusedecho2dsequence attribute)": [[141, "autodeer.sequences.RefocusedEcho2DSequence.dt", false]], "dt (deersequence attribute)": [[15, "DEERSequence.dt", false], [132, "DEERSequence.dt", false]], "dt (refocusedecho2dsequence attribute)": [[37, "RefocusedEcho2DSequence.dt", false], [135, "RefocusedEcho2DSequence.dt", false]], "dummy (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.Dummy", false]], "dummy (dummyinterface attribute)": [[101, "dummyInterface.Dummy", false]], "dummy_api (built-in class)": [[103, "dummy_api", false]], "dummy_api (class in autodeer.hardware.dummy_xepr)": [[110, "autodeer.hardware.dummy_xepr.dummy_api", false]], "dummy_cur_exp (built-in class)": [[104, "dummy_cur_exp", false]], "dummy_cur_exp (class in autodeer.hardware.dummy_xepr)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp", false]], "dummy_dataset (built-in class)": [[105, "dummy_dataset", false]], "dummy_dataset (class in autodeer.hardware.dummy_xepr)": [[110, "autodeer.hardware.dummy_xepr.dummy_dataset", false]], "dummy_hidden (built-in class)": [[106, "dummy_hidden", false]], "dummy_hidden (class in autodeer.hardware.dummy_xepr)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden", false]], "dummy_param (built-in class)": [[107, "dummy_param", false]], "dummy_param (class in autodeer.hardware.dummy_xepr)": [[110, "autodeer.hardware.dummy_xepr.dummy_param", false]], "dummy_xepr (built-in class)": [[108, "dummy_xepr", false]], "dummy_xepr (class in autodeer.hardware.dummy_xepr)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr", false]], "dummy_xepr.xeprcmds (built-in class)": [[108, "dummy_xepr.XeprCmds", false]], "dummy_xepr.xeprcmds (class in autodeer.hardware.dummy_xepr)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds", false]], "dummyinterface (built-in class)": [[101, "dummyInterface", false]], "dummyinterface (class in autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy.dummyInterface", false]], "eldortune (built-in class)": [[113, "ELDORtune", false]], "eldortune (class in autodeer.hardware.xepr_experiments)": [[116, "autodeer.hardware.xepr_experiments.ELDORtune", false]], "eldortune() (in module autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU.ELDORtune", false]], "emit() (autodeer.logging.qtloghandler method)": [[32, "autodeer.Logging.QtLogHandler.emit", false]], "emit() (qtloghandler method)": [[31, "QtLogHandler.emit", false]], "end_signal (autodeer.criteria.criteria attribute)": [[62, "autodeer.criteria.Criteria.end_signal", false]], "end_signal (criteria attribute)": [[58, "Criteria.end_signal", false]], "endtimecriteria (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.EndTimeCriteria", false]], "endtimecriteria (autodeerworker attribute)": [[70, "autoDEERWorker.EndTimeCriteria", false]], "epraccessor (built-in class)": [[19, "EPRAccessor", false], [63, "EPRAccessor", false]], "epraccessor (class in autodeer)": [[117, "autodeer.EPRAccessor", false]], "epraccessor (class in autodeer.dataset)": [[64, "autodeer.dataset.EPRAccessor", false]], "eprload() (in module autodeer)": [[117, "autodeer.eprload", false]], "eprload() (in module autodeer.tools)": [[142, "autodeer.tools.eprload", false]], "erot() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.erot", false]], "error (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.error", false]], "error (autodeer.gui.main.workersignals attribute)": [[78, "autodeer.gui.main.WorkerSignals.error", false]], "error (autodeer.gui.tools.workersignals attribute)": [[87, "autodeer.gui.tools.WorkerSignals.error", false]], "error (autodeer.gui.workersignals attribute)": [[72, "autodeer.gui.WorkerSignals.error", false]], "error (autodeersignals attribute)": [[69, "autoDEERSignals.error", false]], "error (workersignals attribute)": [[66, "WorkerSignals.error", false], [76, "WorkerSignals.error", false], [86, "WorkerSignals.error", false]], "eseem (autodeer.deersequence attribute)": [[117, "autodeer.DEERSequence.ESEEM", false], [117, "id256", false]], "eseem (autodeer.sequences.deersequence attribute)": [[141, "autodeer.sequences.DEERSequence.ESEEM", false]], "eseem (deersequence attribute)": [[15, "DEERSequence.ESEEM", false], [132, "DEERSequence.ESEEM", false]], "eth_awg_interface (built-in class)": [[96, "ETH_awg_interface", false]], "eth_awg_interface (class in autodeer.hardware.eth_awg)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface", false]], "events (autodeer.hardware.bruker_tools.psparvar attribute)": [[95, "autodeer.hardware.Bruker_tools.PSparvar.events", false]], "events (psparvar attribute)": [[93, "PSparvar.events", false]], "evolution() (autodeer.sequence method)": [[117, "autodeer.Sequence.evolution", false], [117, "id238", false], [117, "id60", false]], "evolution() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence.evolution", false]], "evolution() (sequence method)": [[49, "Sequence.evolution", false], [138, "Sequence.evolution", false]], "exciteprofile() (autodeer.pulse method)": [[117, "autodeer.Pulse.exciteprofile", false], [117, "id123", false], [117, "id163", false]], "exciteprofile() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.exciteprofile", false]], "exciteprofile() (pulse method)": [[34, "Pulse.exciteprofile", false], [124, "Pulse.exciteprofile", false]], "exciteprofile_old() (autodeer.pulse method)": [[117, "autodeer.Pulse.exciteprofile_old", false], [117, "id121", false], [117, "id161", false]], "exciteprofile_old() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.exciteprofile_old", false]], "exciteprofile_old() (pulse method)": [[34, "Pulse.exciteprofile_old", false], [124, "Pulse.exciteprofile_old", false]], "exp_file_str (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.exp_file_str", false]], "exp_file_str (pulsespel attribute)": [[94, "PulseSpel.exp_file_str", false]], "eyekron() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.eyekron", false]], "f_lims (autodeer.resonatorprofileanalysis attribute)": [[117, "autodeer.ResonatorProfileAnalysis.f_lims", false]], "f_lims (autodeer.respro.resonatorprofileanalysis attribute)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.f_lims", false]], "f_lims (resonatorprofileanalysis attribute)": [[45, "ResonatorProfileAnalysis.f_lims", false], [47, "ResonatorProfileAnalysis.f_lims", false]], "fc (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.fc", false]], "fc (dummyinterface attribute)": [[101, "dummyInterface.fc", false]], "fft (autodeer.dataset.epraccessor property)": [[64, "autodeer.dataset.EPRAccessor.fft", false]], "fft (autodeer.epraccessor property)": [[117, "autodeer.EPRAccessor.fft", false]], "fft (epraccessor property)": [[19, "EPRAccessor.fft", false], [63, "EPRAccessor.fft", false]], "fieldsweep_fit() (in module autodeer.gui.main)": [[78, "autodeer.gui.main.fieldsweep_fit", false]], "fieldsweepanalysis (built-in class)": [[20, "FieldSweepAnalysis", false], [23, "FieldSweepAnalysis", false]], "fieldsweepanalysis (class in autodeer)": [[117, "autodeer.FieldSweepAnalysis", false]], "fieldsweepanalysis (class in autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis", false]], "fieldsweepsequence (built-in class)": [[24, "FieldSweepSequence", false], [133, "FieldSweepSequence", false]], "fieldsweepsequence (class in autodeer)": [[117, "autodeer.FieldSweepSequence", false]], "fieldsweepsequence (class in autodeer.sequences)": [[141, "autodeer.sequences.FieldSweepSequence", false]], "fill_table() (in module autodeer.gui)": [[72, "autodeer.gui.fill_table", false]], "fill_table() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.fill_table", false]], "find_cur_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_cur_exp", false]], "find_cur_exp() (xeprapilink method)": [[99, "XeprAPILink.find_cur_exp", false]], "find_hidden() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_hidden", false]], "find_hidden() (xeprapilink method)": [[99, "XeprAPILink.find_hidden", false]], "find_longest_pulse() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.find_longest_pulse", false]], "find_max() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.find_max", false]], "find_max() (autodeer.fieldsweepanalysis method)": [[117, "autodeer.FieldSweepAnalysis.find_max", false]], "find_max() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.find_max", false], [23, "FieldSweepAnalysis.find_max", false]], "find_max_pulse_length() (in module autodeer.hardware.eth_awg_load)": [[98, "autodeer.hardware.ETH_awg_load.find_max_pulse_length", false]], "find_min() (autodeer.hardware.xepr_experiments.eldortune method)": [[116, "autodeer.hardware.xepr_experiments.ELDORtune.find_min", false]], "find_min() (eldortune method)": [[113, "ELDORtune.find_min", false]], "find_optimal() (autodeer.carrpurcellanalysis method)": [[117, "autodeer.CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (autodeer.refocusedecho2danalysis method)": [[117, "autodeer.RefocusedEcho2DAnalysis.find_optimal", false]], "find_optimal() (autodeer.relaxation.carrpurcellanalysis method)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (autodeer.relaxation.refocusedecho2danalysis method)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.find_optimal", false]], "find_optimal() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.find_optimal", false], [38, "CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (refocusedecho2danalysis method)": [[36, "RefocusedEcho2DAnalysis.find_optimal", false], [39, "RefocusedEcho2DAnalysis.find_optimal", false]], "find_xepr() (autodeer.hardware.dummy_xepr.dummy_api method)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.find_Xepr", false]], "find_xepr() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_Xepr", false]], "find_xepr() (dummy_api method)": [[103, "dummy_api.find_Xepr", false]], "find_xepr() (xeprapilink method)": [[99, "XeprAPILink.find_Xepr", false]], "finished (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.finished", false]], "finished (autodeer.gui.main.workersignals attribute)": [[78, "autodeer.gui.main.WorkerSignals.finished", false]], "finished (autodeer.gui.tools.workersignals attribute)": [[87, "autodeer.gui.tools.WorkerSignals.finished", false]], "finished (autodeer.gui.workersignals attribute)": [[72, "autodeer.gui.WorkerSignals.finished", false]], "finished (autodeersignals attribute)": [[69, "autoDEERSignals.finished", false]], "finished (workersignals attribute)": [[66, "WorkerSignals.finished", false], [76, "WorkerSignals.finished", false], [86, "WorkerSignals.finished", false]], "finished_signal (autodeer.gui.modetune.get_dataworker attribute)": [[81, "autodeer.gui.modetune.get_dataWorker.finished_signal", false]], "finished_signal (get_dataworker attribute)": [[80, "get_dataWorker.finished_signal", false]], "fit() (autodeer.carrpurcellanalysis method)": [[117, "autodeer.CarrPurcellAnalysis.fit", false]], "fit() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.fit", false]], "fit() (autodeer.fieldsweepanalysis method)": [[117, "autodeer.FieldSweepAnalysis.fit", false]], "fit() (autodeer.relaxation.carrpurcellanalysis method)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.fit", false]], "fit() (autodeer.relaxation.reptimeanalysis method)": [[41, "autodeer.Relaxation.ReptimeAnalysis.fit", false]], "fit() (autodeer.reptimeanalysis method)": [[117, "autodeer.ReptimeAnalysis.fit", false]], "fit() (autodeer.resonatorprofileanalysis method)": [[117, "autodeer.ResonatorProfileAnalysis.fit", false]], "fit() (autodeer.respro.resonatorprofileanalysis method)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.fit", false]], "fit() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.fit", false], [38, "CarrPurcellAnalysis.fit", false]], "fit() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.fit", false], [23, "FieldSweepAnalysis.fit", false]], "fit() (reptimeanalysis method)": [[40, "ReptimeAnalysis.fit", false], [43, "ReptimeAnalysis.fit", false]], "fit() (resonatorprofileanalysis method)": [[45, "ResonatorProfileAnalysis.fit", false], [47, "ResonatorProfileAnalysis.fit", false]], "five_pulse() (autodeer.deersequence method)": [[117, "autodeer.DEERSequence.five_pulse", false], [117, "id260", false]], "five_pulse() (autodeer.sequences.deersequence method)": [[141, "autodeer.sequences.DEERSequence.five_pulse", false]], "five_pulse() (deersequence method)": [[15, "DEERSequence.five_pulse", false], [132, "DEERSequence.five_pulse", false]], "floor() (in module autodeer.respro)": [[46, "autodeer.ResPro.floor", false]], "fn (autodeer.gui.main.worker attribute)": [[78, "autodeer.gui.main.Worker.fn", false]], "fn (autodeer.gui.tools.worker attribute)": [[87, "autodeer.gui.tools.Worker.fn", false]], "fn (autodeer.gui.worker attribute)": [[72, "autodeer.gui.Worker.fn", false]], "fn (worker attribute)": [[65, "Worker.fn", false], [75, "Worker.fn", false], [85, "Worker.fn", false]], "footer() (autodeer.reporter method)": [[117, "autodeer.Reporter.footer", false]], "footer() (autodeer.reporter.reporter method)": [[130, "autodeer.reporter.Reporter.footer", false]], "footer() (reporter method)": [[42, "Reporter.footer", false], [128, "Reporter.footer", false]], "format() (autodeer.logging.dictformater method)": [[32, "autodeer.Logging.DictFormater.format", false]], "format() (dictformater method)": [[30, "DictFormater.format", false]], "four_pulse() (autodeer.deersequence method)": [[117, "autodeer.DEERSequence.four_pulse", false], [117, "id259", false]], "four_pulse() (autodeer.sequences.deersequence method)": [[141, "autodeer.sequences.DEERSequence.four_pulse", false]], "four_pulse() (deersequence method)": [[15, "DEERSequence.four_pulse", false], [132, "DEERSequence.four_pulse", false]], "frame (autodeer.reporter attribute)": [[117, "autodeer.Reporter.frame", false]], "frame (autodeer.reporter.reporter attribute)": [[130, "autodeer.reporter.Reporter.frame", false]], "frame (reporter attribute)": [[42, "Reporter.frame", false], [128, "Reporter.frame", false]], "freq (autodeer.detection attribute)": [[117, "autodeer.Detection.freq", false], [117, "id137", false], [117, "id177", false]], "freq (autodeer.gaussianpulse attribute)": [[117, "autodeer.GaussianPulse.freq", false]], "freq (autodeer.pulses.detection attribute)": [[127, "autodeer.pulses.Detection.freq", false]], "freq (autodeer.pulses.gaussianpulse attribute)": [[127, "autodeer.pulses.GaussianPulse.freq", false]], "freq (autodeer.pulses.rectpulse attribute)": [[127, "autodeer.pulses.RectPulse.freq", false]], "freq (autodeer.pulses.sincpulse attribute)": [[127, "autodeer.pulses.SincPulse.freq", false]], "freq (autodeer.rectpulse attribute)": [[117, "autodeer.RectPulse.freq", false], [117, "id144", false]], "freq (autodeer.sincpulse attribute)": [[117, "autodeer.SincPulse.freq", false]], "freq (detection attribute)": [[18, "Detection.freq", false], [120, "Detection.freq", false]], "freq (gaussianpulse attribute)": [[26, "GaussianPulse.freq", false], [122, "GaussianPulse.freq", false]], "freq (rectpulse attribute)": [[35, "RectPulse.freq", false], [125, "RectPulse.freq", false]], "freq (sincpulse attribute)": [[50, "SincPulse.freq", false], [126, "SincPulse.freq", false]], "frequencymon (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.FrequencyMon", false]], "frequencymon (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.FrequencyMon", false]], "frequencysweptpulse (built-in class)": [[25, "FrequencySweptPulse", false], [121, "FrequencySweptPulse", false]], "frequencysweptpulse (class in autodeer)": [[117, "autodeer.FrequencySweptPulse", false]], "frequencysweptpulse (class in autodeer.pulses)": [[127, "autodeer.pulses.FrequencySweptPulse", false]], "fsweep_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.fsweep_result", false]], "fsweep_result (autodeersignals attribute)": [[69, "autoDEERSignals.fsweep_result", false]], "fsweep_toolbar() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.fsweep_toolbar", false]], "fsweep_toolbar() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.fsweep_toolbar", false]], "fsweep_toolbar() (autodeerui method)": [[68, "autoDEERUI.fsweep_toolbar", false], [77, "autoDEERUI.fsweep_toolbar", false]], "ftacqmodeslct (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.FTAcqModeSlct", false]], "ftacqmodeslct (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.FTAcqModeSlct", false]], "func() (autodeer.chirppulse method)": [[117, "autodeer.ChirpPulse.func", false]], "func() (autodeer.gaussianpulse method)": [[117, "autodeer.GaussianPulse.func", false]], "func() (autodeer.hspulse method)": [[117, "autodeer.HSPulse.func", false]], "func() (autodeer.pulses.chirppulse method)": [[127, "autodeer.pulses.ChirpPulse.func", false]], "func() (autodeer.pulses.gaussianpulse method)": [[127, "autodeer.pulses.GaussianPulse.func", false]], "func() (autodeer.pulses.hspulse method)": [[127, "autodeer.pulses.HSPulse.func", false]], "func() (autodeer.pulses.rectpulse method)": [[127, "autodeer.pulses.RectPulse.func", false]], "func() (autodeer.pulses.sincpulse method)": [[127, "autodeer.pulses.SincPulse.func", false]], "func() (autodeer.rectpulse method)": [[117, "autodeer.RectPulse.func", false], [117, "id145", false]], "func() (autodeer.sincpulse method)": [[117, "autodeer.SincPulse.func", false]], "func() (chirppulse method)": [[14, "ChirpPulse.func", false], [118, "ChirpPulse.func", false]], "func() (gaussianpulse method)": [[26, "GaussianPulse.func", false], [122, "GaussianPulse.func", false]], "func() (hspulse method)": [[27, "HSPulse.func", false], [123, "HSPulse.func", false]], "func() (rectpulse method)": [[35, "RectPulse.func", false], [125, "RectPulse.func", false]], "func() (sincpulse method)": [[50, "SincPulse.func", false], [126, "SincPulse.func", false]], "functional() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.functional", false]], "fwhm (autodeer.gaussianpulse attribute)": [[117, "autodeer.GaussianPulse.FWHM", false]], "fwhm (autodeer.pulses.gaussianpulse attribute)": [[127, "autodeer.pulses.GaussianPulse.FWHM", false]], "fwhm (gaussianpulse attribute)": [[26, "GaussianPulse.FWHM", false], [122, "GaussianPulse.FWHM", false]], "fwidth (autodeer.resonatorprofilesequence attribute)": [[117, "autodeer.ResonatorProfileSequence.fwidth", false]], "fwidth (autodeer.sequences.resonatorprofilesequence attribute)": [[141, "autodeer.sequences.ResonatorProfileSequence.fwidth", false]], "fwidth (resonatorprofilesequence attribute)": [[48, "ResonatorProfileSequence.fwidth", false], [137, "ResonatorProfileSequence.fwidth", false]], "g (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.g", false]], "g (spinsystem attribute)": [[21, "SpinSystem.g", false]], "gaussianpulse (built-in class)": [[26, "GaussianPulse", false], [122, "GaussianPulse", false]], "gaussianpulse (class in autodeer)": [[117, "autodeer.GaussianPulse", false]], "gaussianpulse (class in autodeer.pulses)": [[127, "autodeer.pulses.GaussianPulse", false]], "gcd() (in module autodeer)": [[117, "autodeer.gcd", false]], "gcd() (in module autodeer.utils)": [[143, "autodeer.utils.gcd", false]], "get_acquisition_mode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_Acquisition_mode", false]], "get_acquisition_mode() (xeprapilink method)": [[99, "XeprAPILink.get_Acquisition_mode", false]], "get_all_axes() (in module autodeer)": [[117, "autodeer.get_all_axes", false]], "get_all_axes() (in module autodeer.dataset)": [[64, "autodeer.dataset.get_all_axes", false]], "get_all_fixed_param() (in module autodeer)": [[117, "autodeer.get_all_fixed_param", false]], "get_all_fixed_param() (in module autodeer.dataset)": [[64, "autodeer.dataset.get_all_fixed_param", false]], "get_arange() (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.get_arange", false]], "get_attenuator() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_attenuator", false]], "get_attenuator() (xeprapilink method)": [[99, "XeprAPILink.get_attenuator", false]], "get_axis() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter.get_axis", false]], "get_axis() (autodeer.parameter method)": [[117, "autodeer.Parameter.get_axis", false], [117, "id196", false], [117, "id25", false], [117, "id88", false]], "get_axis() (parameter method)": [[33, "Parameter.get_axis", false], [55, "Parameter.get_axis", false]], "get_config_file() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_config_file", false]], "get_config_file() (xeprapilink method)": [[99, "XeprAPILink.get_config_file", false]], "get_counterfreq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_counterfreq", false]], "get_counterfreq() (xeprapilink method)": [[99, "XeprAPILink.get_counterfreq", false]], "get_dataworker (built-in class)": [[80, "get_dataWorker", false]], "get_dataworker (class in autodeer.gui.modetune)": [[81, "autodeer.gui.modetune.get_dataWorker", false]], "get_eldor_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_ELDOR_freq", false]], "get_eldor_freq() (xeprapilink method)": [[99, "XeprAPILink.get_ELDOR_freq", false]], "get_field() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_field", false]], "get_field() (xeprapilink method)": [[99, "XeprAPILink.get_field", false]], "get_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_freq", false]], "get_freq() (xeprapilink method)": [[99, "XeprAPILink.get_freq", false]], "get_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_hidden_param", false]], "get_hidden_param() (xeprapilink method)": [[99, "XeprAPILink.get_hidden_param", false]], "get_mw_amp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_MW_amp", false]], "get_mw_amp() (xeprapilink method)": [[99, "XeprAPILink.get_MW_amp", false]], "get_nutations() (in module autodeer.hardware.xepr_experiments)": [[116, "autodeer.hardware.xepr_experiments.get_nutations", false]], "get_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_param", false]], "get_param() (xeprapilink method)": [[99, "XeprAPILink.get_param", false]], "get_phase() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_phase", false]], "get_phase() (xeprapilink method)": [[99, "XeprAPILink.get_phase", false]], "get_phasecycle() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PhaseCycle", false]], "get_phasecycle() (xeprapilink method)": [[99, "XeprAPILink.get_PhaseCycle", false]], "get_pulsespel_def_filename() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_def_filename", false]], "get_pulsespel_def_filename() (xeprapilink method)": [[99, "XeprAPILink.get_PulseSpel_def_filename", false]], "get_pulsespel_def_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_def_filepath", false]], "get_pulsespel_def_filepath() (xeprapilink method)": [[99, "XeprAPILink.get_PulseSpel_def_filepath", false]], "get_pulsespel_exp_filename() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_exp_filename", false]], "get_pulsespel_exp_filename() (xeprapilink method)": [[99, "XeprAPILink.get_PulseSpel_exp_filename", false]], "get_pulsespel_exp_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_exp_filepath", false]], "get_pulsespel_exp_filepath() (xeprapilink method)": [[99, "XeprAPILink.get_PulseSpel_exp_filepath", false]], "get_pulsespel_experiment() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_experiment", false]], "get_pulsespel_experiment() (xeprapilink method)": [[99, "XeprAPILink.get_PulseSpel_experiment", false]], "get_pulsespel_phase_cycling() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_phase_cycling", false]], "get_pulsespel_phase_cycling() (xeprapilink method)": [[99, "XeprAPILink.get_PulseSpel_phase_cycling", false]], "get_replacemode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_ReplaceMode", false]], "get_replacemode() (xeprapilink method)": [[99, "XeprAPILink.get_ReplaceMode", false]], "get_sequence_rows() (in module autodeer.gui)": [[72, "autodeer.gui.get_sequence_rows", false]], "get_sequence_rows() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.get_sequence_rows", false]], "get_spec_config() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_spec_config", false]], "get_spec_config() (xeprapilink method)": [[99, "XeprAPILink.get_spec_config", false]], "get_specjet_data() (in module autodeer.hardware.bruker_awg)": [[89, "autodeer.hardware.Bruker_AWG.get_specjet_data", false]], "get_specjet_data() (in module autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU.get_specjet_data", false]], "get_sweep_width() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_sweep_width", false]], "get_sweep_width() (xeprapilink method)": [[99, "XeprAPILink.get_sweep_width", false]], "get_vexp() (in module autodeer.gui.quickdeer)": [[83, "autodeer.gui.quickdeer.get_Vexp", false]], "get_video_bandwidth() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_video_bandwidth", false]], "get_video_bandwidth() (xeprapilink method)": [[99, "XeprAPILink.get_video_bandwidth", false]], "get_video_gain() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_video_gain", false]], "get_video_gain() (xeprapilink method)": [[99, "XeprAPILink.get_video_gain", false]], "getcistring() (in module autodeer.gui)": [[72, "autodeer.gui.getCIstring", false]], "getcistring() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.getCIstring", false]], "getparam() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.getParam", false]], "getparam() (autodeer.hardware.dummy_xepr.dummy_hidden method)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden.getParam", false]], "getparam() (dummy_cur_exp method)": [[104, "dummy_cur_exp.getParam", false]], "getparam() (dummy_hidden method)": [[106, "dummy_hidden.getParam", false]], "github_url (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.github_url", false]], "github_url (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.github_url", false]], "github_url (autodeerui attribute)": [[68, "autoDEERUI.github_url", false], [77, "autoDEERUI.github_url", false]], "gnscale (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.gnscale", false]], "gnscale (spinsystem attribute)": [[21, "SpinSystem.gnscale", false]], "gyro (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.gyro", false]], "gyro (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.gyro", false]], "gyro (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.gyro", false]], "gyro (autodeer.resonatorprofilesequence attribute)": [[117, "autodeer.ResonatorProfileSequence.gyro", false]], "gyro (autodeer.sequences.resonatorprofilesequence attribute)": [[141, "autodeer.sequences.ResonatorProfileSequence.gyro", false]], "gyro (autodeerui attribute)": [[68, "autoDEERUI.gyro", false], [77, "autoDEERUI.gyro", false]], "gyro (autodeerworker attribute)": [[70, "autoDEERWorker.gyro", false]], "gyro (resonatorprofilesequence attribute)": [[48, "ResonatorProfileSequence.gyro", false], [137, "ResonatorProfileSequence.gyro", false]], "hahnechosequence (built-in class)": [[28, "HahnEchoSequence", false], [134, "HahnEchoSequence", false]], "hahnechosequence (class in autodeer)": [[117, "autodeer.HahnEchoSequence", false]], "hahnechosequence (class in autodeer.sequences)": [[141, "autodeer.sequences.HahnEchoSequence", false]], "ham() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.ham", false]], "ham_ez() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.ham_ez", false]], "ham_nz() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.ham_nz", false]], "hardware_logger (autodeer.gui.log.logdialog attribute)": [[74, "autodeer.gui.log.LogDialog.hardware_logger", false]], "hardware_logger (logdialog attribute)": [[73, "LogDialog.hardware_logger", false]], "hardware_meta (in module autodeer.hardware.dummy_xepr)": [[110, "autodeer.hardware.dummy_xepr.hardware_meta", false]], "hardware_wait (autodeer.hardware.xepr_experiments.eldortune attribute)": [[116, "autodeer.hardware.xepr_experiments.ELDORtune.hardware_wait", false]], "hardware_wait (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[116, "autodeer.hardware.xepr_experiments.MPFUtune.hardware_wait", false]], "hardware_wait (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[116, "autodeer.hardware.xepr_experiments.PulseProfile.hardware_wait", false]], "hardware_wait (eldortune attribute)": [[113, "ELDORtune.hardware_wait", false]], "hardware_wait (mpfutune attribute)": [[114, "MPFUtune.hardware_wait", false]], "hardware_wait (pulseprofile attribute)": [[115, "PulseProfile.hardware_wait", false]], "header (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.header", false]], "header() (autodeer.reporter method)": [[117, "autodeer.Reporter.header", false]], "header() (autodeer.reporter.reporter method)": [[130, "autodeer.reporter.Reporter.header", false]], "header() (reporter method)": [[42, "Reporter.header", false], [128, "Reporter.header", false]], "height (autodeer.reporter.svgflowable attribute)": [[130, "autodeer.reporter.SvgFlowable.height", false]], "height (svgflowable attribute)": [[129, "SvgFlowable.height", false]], "hidden (autodeer.hardware.dummy_xepr.dummy_xepr attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.hidden", false]], "hidden (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.hidden", false]], "hidden (dummy_xepr attribute)": [[108, "dummy_xepr.hidden", false]], "hidden (xeprapilink attribute)": [[99, "XeprAPILink.hidden", false]], "hspulse (built-in class)": [[27, "HSPulse", false], [123, "HSPulse", false]], "hspulse (class in autodeer)": [[117, "autodeer.HSPulse", false]], "hspulse (class in autodeer.pulses)": [[127, "autodeer.pulses.HSPulse", false]], "hw_log (in module autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU.hw_log", false]], "hw_log (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.hw_log", false]], "hw_log (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy.hw_log", false]], "hw_log (in module autodeer.hardware.dummy_xepr)": [[110, "autodeer.hardware.dummy_xepr.hw_log", false]], "hw_log (in module autodeer.hardware.xeprapi_link)": [[100, "autodeer.hardware.XeprAPI_link.hw_log", false]], "hybrid (autodeer.hardware.xepr_experiments.deer attribute)": [[116, "autodeer.hardware.xepr_experiments.DEER.hybrid", false]], "hybrid (deer attribute)": [[112, "DEER.hybrid", false]], "i (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.I", false]], "i (spinsystem attribute)": [[21, "SpinSystem.I", false]], "identifyroi() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.IdentifyROI", false]], "ifgain (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.IFgain", false]], "ifgain (eth_awg_interface attribute)": [[96, "ETH_awg_interface.IFgain", false]], "ifgain_options (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.IFgain_options", false]], "ifgain_options (eth_awg_interface attribute)": [[96, "ETH_awg_interface.IFgain_options", false]], "initialise_deer_settings() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.initialise_deer_settings", false]], "initialise_deer_settings() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.initialise_deer_settings", false]], "initialise_deer_settings() (autodeerui method)": [[68, "autoDEERUI.initialise_deer_settings", false], [77, "autoDEERUI.initialise_deer_settings", false]], "interface (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.interface", false]], "interface (autodeer.gui.modetune.get_dataworker attribute)": [[81, "autodeer.gui.modetune.get_dataWorker.interface", false]], "interface (autodeer.gui.modetune.modetune attribute)": [[81, "autodeer.gui.modetune.ModeTune.interface", false]], "interface (autodeerworker attribute)": [[70, "autoDEERWorker.interface", false]], "interface (built-in class)": [[29, "Interface", false], [54, "Interface", false]], "interface (class in autodeer)": [[117, "autodeer.Interface", false], [117, "id211", false]], "interface (class in autodeer.classes)": [[56, "autodeer.classes.Interface", false]], "interface (get_dataworker attribute)": [[80, "get_dataWorker.interface", false]], "interface (modetune attribute)": [[79, "ModeTune.interface", false]], "is_exp_running() (autodeer.hardware.dummy_xepr.dummy_api method)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.is_exp_running", false]], "is_exp_running() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.is_exp_running", false]], "is_exp_running() (dummy_api method)": [[103, "dummy_api.is_exp_running", false]], "is_exp_running() (xeprapilink method)": [[99, "XeprAPILink.is_exp_running", false]], "is_static() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter.is_static", false]], "is_static() (autodeer.parameter method)": [[117, "autodeer.Parameter.is_static", false], [117, "id198", false], [117, "id27", false], [117, "id90", false]], "is_static() (autodeer.pulse method)": [[117, "autodeer.Pulse.is_static", false], [117, "id116", false], [117, "id156", false]], "is_static() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.is_static", false]], "is_static() (parameter method)": [[33, "Parameter.is_static", false], [55, "Parameter.is_static", false]], "is_static() (pulse method)": [[34, "Pulse.is_static", false], [124, "Pulse.is_static", false]], "isdelayfocused() (autodeer.pulse method)": [[117, "autodeer.Pulse.isDelayFocused", false], [117, "id117", false], [117, "id157", false]], "isdelayfocused() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.isDelayFocused", false]], "isdelayfocused() (pulse method)": [[34, "Pulse.isDelayFocused", false], [124, "Pulse.isDelayFocused", false]], "ispulsefocused() (autodeer.pulse method)": [[117, "autodeer.Pulse.isPulseFocused", false], [117, "id118", false], [117, "id158", false]], "ispulsefocused() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.isPulseFocused", false]], "ispulsefocused() (pulse method)": [[34, "Pulse.isPulseFocused", false], [124, "Pulse.isPulseFocused", false]], "isrunning() (autodeer.classes.interface method)": [[56, "autodeer.classes.Interface.isrunning", false]], "isrunning() (autodeer.hardware.bruker_awg.brukerawg method)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.isrunning", false]], "isrunning() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.isrunning", false]], "isrunning() (autodeer.hardware.dummy.dummyinterface method)": [[102, "autodeer.hardware.dummy.dummyInterface.isrunning", false]], "isrunning() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.isrunning", false]], "isrunning() (autodeer.interface method)": [[117, "autodeer.Interface.isrunning", false], [117, "id219", false]], "isrunning() (brukerawg method)": [[88, "BrukerAWG.isrunning", false]], "isrunning() (brukermpfu method)": [[90, "BrukerMPFU.isrunning", false]], "isrunning() (dummyinterface method)": [[101, "dummyInterface.isrunning", false]], "isrunning() (eth_awg_interface method)": [[96, "ETH_awg_interface.isrunning", false]], "isrunning() (interface method)": [[29, "Interface.isrunning", false], [54, "Interface.isrunning", false]], "issues_url (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.issues_url", false]], "issues_url (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.issues_url", false]], "issues_url (autodeerui attribute)": [[68, "autoDEERUI.issues_url", false], [77, "autoDEERUI.issues_url", false]], "key1 (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.key1", false]], "key1 (dummyinterface attribute)": [[101, "dummyInterface.key1", false]], "kroneye() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.kroneye", false]], "kwargs (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.kwargs", false]], "kwargs (autodeer.gui.main.worker attribute)": [[78, "autodeer.gui.main.Worker.kwargs", false]], "kwargs (autodeer.gui.tools.worker attribute)": [[87, "autodeer.gui.tools.Worker.kwargs", false]], "kwargs (autodeer.gui.worker attribute)": [[72, "autodeer.gui.Worker.kwargs", false]], "kwargs (autodeerworker attribute)": [[70, "autoDEERWorker.kwargs", false]], "kwargs (worker attribute)": [[65, "Worker.kwargs", false], [75, "Worker.kwargs", false], [85, "Worker.kwargs", false]], "launch() (autodeer.classes.interface method)": [[56, "autodeer.classes.Interface.launch", false]], "launch() (autodeer.hardware.bruker_awg.brukerawg method)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.launch", false]], "launch() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.launch", false]], "launch() (autodeer.hardware.dummy.dummyinterface method)": [[102, "autodeer.hardware.dummy.dummyInterface.launch", false]], "launch() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch", false]], "launch() (autodeer.interface method)": [[117, "autodeer.Interface.launch", false], [117, "id218", false]], "launch() (brukerawg method)": [[88, "BrukerAWG.launch", false]], "launch() (brukermpfu method)": [[90, "BrukerMPFU.launch", false]], "launch() (dummyinterface method)": [[101, "dummyInterface.launch", false]], "launch() (eth_awg_interface method)": [[96, "ETH_awg_interface.launch", false]], "launch() (interface method)": [[29, "Interface.launch", false], [54, "Interface.launch", false]], "launch_long() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_long", false]], "launch_long() (eth_awg_interface method)": [[96, "ETH_awg_interface.launch_long", false]], "launch_normal() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_normal", false]], "launch_normal() (eth_awg_interface method)": [[96, "ETH_awg_interface.launch_normal", false]], "launch_withifgain() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_withIFGain", false]], "launch_withifgain() (eth_awg_interface method)": [[96, "ETH_awg_interface.launch_withIFGain", false]], "list_str_to_type() (in module autodeer.gui)": [[72, "autodeer.gui.list_str_to_type", false]], "list_str_to_type() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.list_str_to_type", false]], "lo (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.LO", false]], "lo (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.LO", false]], "lo (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.LO", false]], "lo (autodeer.sequence attribute)": [[117, "autodeer.Sequence.LO", false], [117, "id228", false], [117, "id50", false]], "lo (autodeer.sequences.sequence attribute)": [[141, "autodeer.sequences.Sequence.LO", false]], "lo (autodeerui attribute)": [[68, "autoDEERUI.LO", false], [77, "autoDEERUI.LO", false]], "lo (autodeerworker attribute)": [[70, "autoDEERWorker.LO", false]], "lo (sequence attribute)": [[49, "Sequence.LO", false], [138, "Sequence.LO", false]], "load() (autodeer.classes.parameter class method)": [[56, "autodeer.classes.Parameter.load", false]], "load() (autodeer.parameter class method)": [[117, "autodeer.Parameter.load", false], [117, "id102", false], [117, "id210", false], [117, "id39", false]], "load() (autodeer.pulse class method)": [[117, "autodeer.Pulse.load", false], [117, "id134", false], [117, "id174", false]], "load() (autodeer.pulses.pulse class method)": [[127, "autodeer.pulses.Pulse.load", false]], "load() (autodeer.sequence class method)": [[117, "autodeer.Sequence.load", false], [117, "id248", false], [117, "id70", false]], "load() (autodeer.sequences.sequence class method)": [[141, "autodeer.sequences.Sequence.load", false]], "load() (parameter class method)": [[33, "Parameter.load", false], [55, "Parameter.load", false]], "load() (pulse class method)": [[34, "Pulse.load", false], [124, "Pulse.load", false]], "load() (sequence class method)": [[49, "Sequence.load", false], [138, "Sequence.load", false]], "load_epr_file() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.load_epr_file", false]], "load_epr_file() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.load_epr_file", false]], "load_epr_file() (autodeerui method)": [[68, "autoDEERUI.load_epr_file", false], [77, "autoDEERUI.load_epr_file", false]], "load_epr_file() (in module autodeer.gui)": [[72, "autodeer.gui.load_epr_file", false]], "load_epr_file() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.load_epr_file", false]], "load_folder() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.load_folder", false]], "load_folder() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.load_folder", false]], "load_folder() (autodeerui method)": [[68, "autoDEERUI.load_folder", false], [77, "autoDEERUI.load_folder", false]], "load_spectrometer_config() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.load_spectrometer_config", false]], "load_spectrometer_config() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.load_spectrometer_config", false]], "load_spectrometer_config() (autodeerui method)": [[68, "autoDEERUI.load_spectrometer_config", false], [77, "autoDEERUI.load_spectrometer_config", false]], "log (autodeer.gui.log.logdialog attribute)": [[74, "autodeer.gui.log.LogDialog.log", false]], "log (in module autodeer.criteria)": [[62, "autodeer.criteria.log", false]], "log (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.log", false]], "log (in module autodeer.hardware.eth_awg)": [[97, "autodeer.hardware.ETH_awg.log", false]], "log (in module autodeer.tools)": [[142, "autodeer.tools.log", false]], "log (logdialog attribute)": [[73, "LogDialog.log", false]], "log_levels (autodeer.gui.log.logdialog attribute)": [[74, "autodeer.gui.log.LogDialog.log_levels", false]], "log_levels (logdialog attribute)": [[73, "LogDialog.log_levels", false]], "logdialog (built-in class)": [[73, "LogDialog", false]], "logdialog (class in autodeer.gui.log)": [[74, "autodeer.gui.log.LogDialog", false]], "logo_pixmap (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.logo_pixmap", false]], "logo_pixmap (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.logo_pixmap", false]], "logo_pixmap (autodeerui attribute)": [[68, "autoDEERUI.logo_pixmap", false], [77, "autoDEERUI.logo_pixmap", false]], "longdeer (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.longDEER", false]], "longdeer (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.longDEER", false]], "longdeer (autodeerui attribute)": [[68, "autoDEERUI.longDEER", false], [77, "autoDEERUI.longDEER", false]], "longdeer_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.longdeer_result", false]], "longdeer_result (autodeersignals attribute)": [[69, "autoDEERSignals.longdeer_result", false]], "longdeer_update (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.longdeer_update", false]], "longdeer_update (autodeersignals attribute)": [[69, "autoDEERSignals.longdeer_update", false]], "match_filter_dc() (in module autodeer.hardware.eth_awg_load)": [[98, "autodeer.hardware.ETH_awg_load.match_filter_dc", false]], "max_tau (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.max_tau", false]], "max_tau (autodeerworker attribute)": [[70, "autoDEERWorker.max_tau", false]], "measurementtime (autodeer.dataset.epraccessor property)": [[64, "autodeer.dataset.EPRAccessor.MeasurementTime", false]], "measurementtime (autodeer.epraccessor property)": [[117, "autodeer.EPRAccessor.MeasurementTime", false]], "measurementtime (epraccessor property)": [[19, "EPRAccessor.MeasurementTime", false], [63, "EPRAccessor.MeasurementTime", false]], "meta (autodeer.hardware.dummy_xepr.dummy_api attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.meta", false]], "meta (dummy_api attribute)": [[103, "dummy_api.meta", false]], "min_reptime (autodeer.reptimescan attribute)": [[117, "autodeer.ReptimeScan.min_reptime", false]], "min_reptime (autodeer.sequences.reptimescan attribute)": [[141, "autodeer.sequences.ReptimeScan.min_reptime", false]], "min_reptime (reptimescan attribute)": [[44, "ReptimeScan.min_reptime", false], [136, "ReptimeScan.min_reptime", false]], "min_tp (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.Min_tp", false]], "min_tp (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.Min_tp", false]], "min_tp (autodeerui attribute)": [[68, "autoDEERUI.Min_tp", false], [77, "autoDEERUI.Min_tp", false]], "minbrxamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrXAmp", false]], "minbrxamp (dummy_hidden attribute)": [[106, "dummy_hidden.MinBrXAmp", false]], "minbrxphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrXPhase", false]], "minbrxphase (dummy_hidden attribute)": [[106, "dummy_hidden.MinBrXPhase", false]], "minbryamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrYAmp", false]], "minbryamp (dummy_hidden attribute)": [[106, "dummy_hidden.MinBrYAmp", false]], "minbryphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrYPhase", false]], "minbryphase (dummy_hidden attribute)": [[106, "dummy_hidden.MinBrYPhase", false]], "mnr_estimate() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.MNR_estimate", false]], "mode (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.mode", false]], "mode (dummyinterface attribute)": [[101, "dummyInterface.mode", false]], "modetune (built-in class)": [[79, "ModeTune", false]], "modetune (class in autodeer.gui.modetune)": [[81, "autodeer.gui.modetune.ModeTune", false]], "module": [[16, "module-autodeer.DEER_analysis", false], [22, "module-autodeer.FieldSweep", false], [32, "module-autodeer.Logging", false], [41, "module-autodeer.Relaxation", false], [46, "module-autodeer.ResPro", false], [53, "module-autodeer._version", false], [56, "module-autodeer.classes", false], [57, "module-autodeer.colors", false], [62, "module-autodeer.criteria", false], [64, "module-autodeer.dataset", false], [67, "module-autodeer.gui.__main__", false], [71, "module-autodeer.gui.autoDEER_worker", false], [72, "module-autodeer.gui", false], [74, "module-autodeer.gui.log", false], [78, "module-autodeer.gui.main", false], [81, "module-autodeer.gui.modetune", false], [83, "module-autodeer.gui.quickdeer", false], [84, "module-autodeer.gui.test_main", false], [87, "module-autodeer.gui.tools", false], [89, "module-autodeer.hardware.Bruker_AWG", false], [91, "module-autodeer.hardware.Bruker_MPFU", false], [95, "module-autodeer.hardware.Bruker_tools", false], [97, "module-autodeer.hardware.ETH_awg", false], [98, "module-autodeer.hardware.ETH_awg_load", false], [100, "module-autodeer.hardware.XeprAPI_link", false], [102, "module-autodeer.hardware.dummy", false], [110, "module-autodeer.hardware.dummy_xepr", false], [111, "module-autodeer.hardware", false], [116, "module-autodeer.hardware.xepr_experiments", false], [117, "module-autodeer", false], [127, "module-autodeer.pulses", false], [130, "module-autodeer.reporter", false], [141, "module-autodeer.sequences", false], [142, "module-autodeer.tools", false], [143, "module-autodeer.utils", false]], "module_dir (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.MODULE_DIR", false]], "module_dir (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.MODULE_DIR", false]], "module_dir (in module autodeer.hardware.xepr_experiments)": [[116, "autodeer.hardware.xepr_experiments.MODULE_DIR", false]], "mpfu (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.MPFU", false]], "mpfu (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.MPFU", false]], "mpfu (autodeer.hardware.xepr_experiments.deer attribute)": [[116, "autodeer.hardware.xepr_experiments.DEER.mpfu", false]], "mpfu (brukermpfu attribute)": [[90, "BrukerMPFU.MPFU", false]], "mpfu (deer attribute)": [[112, "DEER.mpfu", false]], "mpfu (pulsespel attribute)": [[94, "PulseSpel.MPFU", false]], "mpfutune (built-in class)": [[114, "MPFUtune", false]], "mpfutune (class in autodeer.hardware.xepr_experiments)": [[116, "autodeer.hardware.xepr_experiments.MPFUtune", false]], "mpfutune() (in module autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU.MPFUtune", false]], "mutex (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.mutex", false]], "mutex (autodeerworker attribute)": [[70, "autoDEERWorker.mutex", false]], "n (autodeer.carrpurcellsequence attribute)": [[117, "autodeer.CarrPurcellSequence.n", false]], "n (autodeer.sequences.carrpurcellsequence attribute)": [[141, "autodeer.sequences.CarrPurcellSequence.n", false]], "n (carrpurcellsequence attribute)": [[13, "CarrPurcellSequence.n", false], [131, "CarrPurcellSequence.n", false]], "n_files (autodeer.resonatorprofileanalysis attribute)": [[117, "autodeer.ResonatorProfileAnalysis.n_files", false]], "n_files (autodeer.respro.resonatorprofileanalysis attribute)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.n_files", false]], "n_files (resonatorprofileanalysis attribute)": [[45, "ResonatorProfileAnalysis.n_files", false], [47, "ResonatorProfileAnalysis.n_files", false]], "name (autodeer.carrpurcellsequence attribute)": [[117, "autodeer.CarrPurcellSequence.name", false]], "name (autodeer.classes.parameter attribute)": [[56, "autodeer.classes.Parameter.name", false]], "name (autodeer.criteria.criteria attribute)": [[62, "autodeer.criteria.Criteria.name", false]], "name (autodeer.criteria.deercriteria attribute)": [[62, "autodeer.criteria.DEERCriteria.name", false]], "name (autodeer.deersequence attribute)": [[117, "autodeer.DEERSequence.name", false], [117, "id250", false]], "name (autodeer.fieldsweepsequence attribute)": [[117, "autodeer.FieldSweepSequence.name", false]], "name (autodeer.hahnechosequence attribute)": [[117, "autodeer.HahnEchoSequence.name", false]], "name (autodeer.parameter attribute)": [[117, "autodeer.Parameter.name", false], [117, "id18", false], [117, "id189", false], [117, "id81", false]], "name (autodeer.pulse attribute)": [[117, "autodeer.Pulse.name", false], [117, "id110", false], [117, "id150", false]], "name (autodeer.pulses.pulse attribute)": [[127, "autodeer.pulses.Pulse.name", false]], "name (autodeer.refocusedecho2dsequence attribute)": [[117, "autodeer.RefocusedEcho2DSequence.name", false]], "name (autodeer.reptimescan attribute)": [[117, "autodeer.ReptimeScan.name", false]], "name (autodeer.resonatorprofilesequence attribute)": [[117, "autodeer.ResonatorProfileSequence.name", false]], "name (autodeer.sequence attribute)": [[117, "autodeer.Sequence.name", false], [117, "id231", false], [117, "id53", false]], "name (autodeer.sequences.carrpurcellsequence attribute)": [[141, "autodeer.sequences.CarrPurcellSequence.name", false]], "name (autodeer.sequences.deersequence attribute)": [[141, "autodeer.sequences.DEERSequence.name", false]], "name (autodeer.sequences.fieldsweepsequence attribute)": [[141, "autodeer.sequences.FieldSweepSequence.name", false]], "name (autodeer.sequences.hahnechosequence attribute)": [[141, "autodeer.sequences.HahnEchoSequence.name", false]], "name (autodeer.sequences.refocusedecho2dsequence attribute)": [[141, "autodeer.sequences.RefocusedEcho2DSequence.name", false]], "name (autodeer.sequences.reptimescan attribute)": [[141, "autodeer.sequences.ReptimeScan.name", false]], "name (autodeer.sequences.resonatorprofilesequence attribute)": [[141, "autodeer.sequences.ResonatorProfileSequence.name", false]], "name (autodeer.sequences.sequence attribute)": [[141, "autodeer.sequences.Sequence.name", false]], "name (autodeer.sequences.t2relaxationsequence attribute)": [[141, "autodeer.sequences.T2RelaxationSequence.name", false]], "name (autodeer.sequences.twtprofilesequence attribute)": [[141, "autodeer.sequences.TWTProfileSequence.name", false]], "name (autodeer.t2relaxationsequence attribute)": [[117, "autodeer.T2RelaxationSequence.name", false]], "name (autodeer.twtprofilesequence attribute)": [[117, "autodeer.TWTProfileSequence.name", false]], "name (carrpurcellsequence attribute)": [[13, "CarrPurcellSequence.name", false], [131, "CarrPurcellSequence.name", false]], "name (criteria attribute)": [[58, "Criteria.name", false]], "name (deercriteria attribute)": [[59, "DEERCriteria.name", false]], "name (deersequence attribute)": [[15, "DEERSequence.name", false], [132, "DEERSequence.name", false]], "name (fieldsweepsequence attribute)": [[24, "FieldSweepSequence.name", false], [133, "FieldSweepSequence.name", false]], "name (hahnechosequence attribute)": [[28, "HahnEchoSequence.name", false], [134, "HahnEchoSequence.name", false]], "name (parameter attribute)": [[33, "Parameter.name", false], [55, "Parameter.name", false]], "name (pulse attribute)": [[34, "Pulse.name", false], [124, "Pulse.name", false]], "name (refocusedecho2dsequence attribute)": [[37, "RefocusedEcho2DSequence.name", false], [135, "RefocusedEcho2DSequence.name", false]], "name (reptimescan attribute)": [[44, "ReptimeScan.name", false], [136, "ReptimeScan.name", false]], "name (resonatorprofilesequence attribute)": [[48, "ResonatorProfileSequence.name", false], [137, "ResonatorProfileSequence.name", false]], "name (sequence attribute)": [[49, "Sequence.name", false], [138, "Sequence.name", false]], "name (t2relaxationsequence attribute)": [[51, "T2RelaxationSequence.name", false], [139, "T2RelaxationSequence.name", false]], "name (twtprofilesequence attribute)": [[52, "TWTProfileSequence.name", false], [140, "TWTProfileSequence.name", false]], "nbscansdone (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.NbScansDone", false]], "nbscansdone (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.NbScansDone", false]], "nbscanstodo (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.NbScansToDo", false]], "nbscanstodo (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.NbScansToDo", false]], "ndeer_cp() (autodeer.deersequence method)": [[117, "autodeer.DEERSequence.nDEER_CP", false], [117, "id262", false]], "ndeer_cp() (autodeer.sequences.deersequence method)": [[141, "autodeer.sequences.DEERSequence.nDEER_CP", false]], "ndeer_cp() (deersequence method)": [[15, "DEERSequence.nDEER_CP", false], [132, "DEERSequence.nDEER_CP", false]], "nelectrons (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.nElectrons", false]], "nelectrons (spinsystem attribute)": [[21, "SpinSystem.nElectrons", false]], "new_data() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.new_data", false]], "new_data() (autodeerworker method)": [[70, "autoDEERWorker.new_data", false]], "new_pulses() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.new_pulses", false]], "new_pulses() (autodeerworker method)": [[70, "autoDEERWorker.new_pulses", false]], "nnuclei (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.nNuclei", false]], "nnuclei (spinsystem attribute)": [[21, "SpinSystem.nNuclei", false]], "normalise (autodeer.dataset.epraccessor property)": [[64, "autodeer.dataset.EPRAccessor.normalise", false]], "normalise (autodeer.epraccessor property)": [[117, "autodeer.EPRAccessor.normalise", false]], "normalise (epraccessor property)": [[19, "EPRAccessor.normalise", false], [63, "EPRAccessor.normalise", false]], "normalise_01() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.normalise_01", false]], "nstates (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.nStates", false]], "nstates (spinsystem attribute)": [[21, "SpinSystem.nStates", false]], "num_pulses (autodeer.sequence attribute)": [[117, "autodeer.Sequence.num_pulses", false], [117, "id225", false], [117, "id47", false]], "num_pulses (autodeer.sequences.sequence attribute)": [[141, "autodeer.sequences.Sequence.num_pulses", false]], "num_pulses (sequence attribute)": [[49, "Sequence.num_pulses", false], [138, "Sequence.num_pulses", false]], "o (autodeer.hardware.dummy_xepr.dummy_dataset attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_dataset.O", false]], "o (dummy_dataset attribute)": [[105, "dummy_dataset.O", false]], "optimal_tau1() (autodeer.refocusedecho2danalysis method)": [[117, "autodeer.RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimal_tau1() (autodeer.relaxation.refocusedecho2danalysis method)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimal_tau1() (refocusedecho2danalysis method)": [[36, "RefocusedEcho2DAnalysis.optimal_tau1", false], [39, "RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimise_pulses() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.optimise_pulses", false]], "optimise_pulses() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.optimise_pulses", false]], "optimise_pulses() (autodeerui method)": [[68, "autoDEERUI.optimise_pulses", false], [77, "autoDEERUI.optimise_pulses", false]], "optimise_pulses() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.optimise_pulses", false]], "optimise_pulses_button() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.optimise_pulses_button", false]], "optimise_pulses_button() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.optimise_pulses_button", false]], "optimise_pulses_button() (autodeerui method)": [[68, "autoDEERUI.optimise_pulses_button", false], [77, "autoDEERUI.optimise_pulses_button", false]], "optimise_spectra_position() (in module autodeer)": [[117, "autodeer.optimise_spectra_position", false]], "optimise_spectra_position() (in module autodeer.respro)": [[46, "autodeer.ResPro.optimise_spectra_position", false]], "order (autodeer.pulses.sincpulse attribute)": [[127, "autodeer.pulses.SincPulse.order", false]], "order (autodeer.sincpulse attribute)": [[117, "autodeer.SincPulse.order", false]], "order (sincpulse attribute)": [[50, "SincPulse.order", false], [126, "SincPulse.order", false]], "order1 (autodeer.hspulse attribute)": [[117, "autodeer.HSPulse.order1", false]], "order1 (autodeer.pulses.hspulse attribute)": [[127, "autodeer.pulses.HSPulse.order1", false]], "order1 (hspulse attribute)": [[27, "HSPulse.order1", false], [123, "HSPulse.order1", false]], "order2 (autodeer.hspulse attribute)": [[117, "autodeer.HSPulse.order2", false]], "order2 (autodeer.pulses.hspulse attribute)": [[127, "autodeer.pulses.HSPulse.order2", false]], "order2 (hspulse attribute)": [[27, "HSPulse.order2", false], [123, "HSPulse.order2", false]], "package_dir (in module autodeer.reporter)": [[130, "autodeer.reporter.package_dir", false]], "package_directory (in module autodeer.gui.log)": [[74, "autodeer.gui.log.package_directory", false]], "package_directory (in module autodeer.gui.main)": [[78, "autodeer.gui.main.package_directory", false]], "package_directory (in module autodeer.gui.modetune)": [[81, "autodeer.gui.modetune.package_directory", false]], "package_directory (in module autodeer.gui.quickdeer)": [[83, "autodeer.gui.quickdeer.package_directory", false]], "param_in_mhz() (in module autodeer.gui)": [[72, "autodeer.gui.param_in_MHz", false]], "param_in_mhz() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.param_in_MHz", false]], "param_in_us() (in module autodeer.gui)": [[72, "autodeer.gui.param_in_us", false]], "param_in_us() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.param_in_us", false]], "parameter (built-in class)": [[33, "Parameter", false], [55, "Parameter", false]], "parameter (class in autodeer)": [[117, "autodeer.Parameter", false], [117, "id0", false], [117, "id179", false], [117, "id71", false]], "parameter (class in autodeer.classes)": [[56, "autodeer.classes.Parameter", false]], "parvar (autodeer.hardware.bruker_tools.psparvar attribute)": [[95, "autodeer.hardware.Bruker_tools.PSparvar.parvar", false]], "parvar (psparvar attribute)": [[93, "PSparvar.parvar", false]], "parvars (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.parvars", false]], "parvars (pulsespel attribute)": [[94, "PulseSpel.parvars", false]], "pause_and_wait() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.pause_and_wait", false]], "pause_and_wait() (autodeerworker method)": [[70, "autoDEERWorker.pause_and_wait", false]], "pause_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.pause_exp", false]], "pause_exp() (xeprapilink method)": [[99, "XeprAPILink.pause_exp", false]], "pcyc (autodeer.delay attribute)": [[117, "autodeer.Delay.pcyc", false], [117, "id141", false]], "pcyc (autodeer.detection attribute)": [[117, "autodeer.Detection.pcyc", false], [117, "id138", false], [117, "id178", false]], "pcyc (autodeer.pulses.delay attribute)": [[127, "autodeer.pulses.Delay.pcyc", false]], "pcyc (autodeer.pulses.detection attribute)": [[127, "autodeer.pulses.Detection.pcyc", false]], "pcyc (delay attribute)": [[17, "Delay.pcyc", false], [119, "Delay.pcyc", false]], "pcyc (detection attribute)": [[18, "Detection.pcyc", false], [120, "Detection.pcyc", false]], "pcyc_str (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.pcyc_str", false]], "pcyc_str (pulsespel attribute)": [[94, "PulseSpel.pcyc_str", false]], "pdf (autodeer.reporter attribute)": [[117, "autodeer.Reporter.pdf", false]], "pdf (autodeer.reporter.reporter attribute)": [[130, "autodeer.reporter.Reporter.pdf", false]], "pdf (reporter attribute)": [[42, "Reporter.pdf", false], [128, "Reporter.pdf", false]], "phasecorrect_all_points() (in module autodeer.gui.modetune)": [[81, "autodeer.gui.modetune.phasecorrect_all_points", false]], "place_hash (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.place_hash", false]], "place_hash (pulsespel attribute)": [[94, "PulseSpel.place_hash", false]], "plot() (autodeer.carrpurcellanalysis method)": [[117, "autodeer.CarrPurcellAnalysis.plot", false]], "plot() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.plot", false]], "plot() (autodeer.fieldsweepanalysis method)": [[117, "autodeer.FieldSweepAnalysis.plot", false]], "plot() (autodeer.pulse method)": [[117, "autodeer.Pulse.plot", false], [117, "id119", false], [117, "id159", false]], "plot() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.plot", false]], "plot() (autodeer.relaxation.carrpurcellanalysis method)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.plot", false]], "plot() (autodeer.relaxation.reptimeanalysis method)": [[41, "autodeer.Relaxation.ReptimeAnalysis.plot", false]], "plot() (autodeer.reptimeanalysis method)": [[117, "autodeer.ReptimeAnalysis.plot", false]], "plot() (autodeer.resonatorprofileanalysis method)": [[117, "autodeer.ResonatorProfileAnalysis.plot", false]], "plot() (autodeer.respro.resonatorprofileanalysis method)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.plot", false]], "plot() (autodeer.sequence method)": [[117, "autodeer.Sequence.plot", false], [117, "id233", false], [117, "id55", false]], "plot() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence.plot", false]], "plot() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.plot", false], [38, "CarrPurcellAnalysis.plot", false]], "plot() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.plot", false], [23, "FieldSweepAnalysis.plot", false]], "plot() (pulse method)": [[34, "Pulse.plot", false], [124, "Pulse.plot", false]], "plot() (reptimeanalysis method)": [[40, "ReptimeAnalysis.plot", false], [43, "ReptimeAnalysis.plot", false]], "plot() (resonatorprofileanalysis method)": [[45, "ResonatorProfileAnalysis.plot", false], [47, "ResonatorProfileAnalysis.plot", false]], "plot() (sequence method)": [[49, "Sequence.plot", false], [138, "Sequence.plot", false]], "plot1d() (autodeer.refocusedecho2danalysis method)": [[117, "autodeer.RefocusedEcho2DAnalysis.plot1D", false]], "plot1d() (autodeer.relaxation.refocusedecho2danalysis method)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.plot1D", false]], "plot1d() (refocusedecho2danalysis method)": [[36, "RefocusedEcho2DAnalysis.plot1D", false], [39, "RefocusedEcho2DAnalysis.plot1D", false]], "plot2d() (autodeer.refocusedecho2danalysis method)": [[117, "autodeer.RefocusedEcho2DAnalysis.plot2D", false]], "plot2d() (autodeer.relaxation.refocusedecho2danalysis method)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.plot2D", false]], "plot2d() (refocusedecho2danalysis method)": [[36, "RefocusedEcho2DAnalysis.plot2D", false], [39, "RefocusedEcho2DAnalysis.plot2D", false]], "plot_1drelax() (in module autodeer)": [[117, "autodeer.plot_1Drelax", false]], "plot_1drelax() (in module autodeer.relaxation)": [[41, "autodeer.Relaxation.plot_1Drelax", false]], "plot_fft() (autodeer.pulse method)": [[117, "autodeer.Pulse.plot_fft", false], [117, "id125", false], [117, "id165", false]], "plot_fft() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.plot_fft", false]], "plot_fft() (pulse method)": [[34, "Pulse.plot_fft", false], [124, "Pulse.plot_fft", false]], "plot_overlap() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.plot_overlap", false]], "plot_pulse_exc() (autodeer.sequence method)": [[117, "autodeer.Sequence.plot_pulse_exc", false], [117, "id234", false], [117, "id56", false]], "plot_pulse_exc() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence.plot_pulse_exc", false]], "plot_pulse_exc() (sequence method)": [[49, "Sequence.plot_pulse_exc", false], [138, "Sequence.plot_pulse_exc", false]], "plsspelexpslct (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELEXPSlct", false]], "plsspelexpslct (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.PlsSPELEXPSlct", false]], "plsspelglbpaf (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELGlbPaF", false]], "plsspelglbpaf (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.PlsSPELGlbPaF", false]], "plsspellistslct (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELLISTSlct", false]], "plsspellistslct (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.PlsSPELLISTSlct", false]], "plsspelprgpaf (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELPrgPaF", false]], "plsspelprgpaf (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.PlsSPELPrgPaF", false]], "pool (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.pool", false]], "pool (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.pool", false]], "pool (brukerawg attribute)": [[88, "BrukerAWG.pool", false]], "pool (brukermpfu attribute)": [[90, "BrukerMPFU.pool", false]], "possible_delays (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.possible_delays", false]], "possible_delays (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.possible_delays", false]], "possible_delays (pulsespel attribute)": [[94, "PulseSpel.possible_delays", false]], "possible_pulses (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.possible_pulses", false]], "possible_pulses (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.possible_pulses", false]], "possible_pulses (pulsespel attribute)": [[94, "PulseSpel.possible_pulses", false]], "possible_vars (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.possible_vars", false]], "possible_vars (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.possible_vars", false]], "possible_vars (pulsespel attribute)": [[94, "PulseSpel.possible_vars", false]], "primary_colors (in module autodeer)": [[117, "autodeer.primary_colors", false]], "primary_colors (in module autodeer.colors)": [[57, "autodeer.colors.primary_colors", false]], "priorties (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.priorties", false]], "priorties (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.priorties", false]], "priorties (autodeerui attribute)": [[68, "autoDEERUI.priorties", false], [77, "autoDEERUI.priorties", false]], "process_deeranalysis() (autodeer.gui.quickdeer.deerplot method)": [[83, "autodeer.gui.quickdeer.DEERplot.process_deeranalysis", false]], "process_deeranalysis() (deerplot method)": [[82, "DEERplot.process_deeranalysis", false]], "process_nutations() (autodeer.resonatorprofileanalysis method)": [[117, "autodeer.ResonatorProfileAnalysis.process_nutations", false]], "process_nutations() (autodeer.respro.resonatorprofileanalysis method)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.process_nutations", false]], "process_nutations() (resonatorprofileanalysis method)": [[45, "ResonatorProfileAnalysis.process_nutations", false], [47, "ResonatorProfileAnalysis.process_nutations", false]], "progress (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.progress", false]], "progress (autodeer.gui.main.workersignals attribute)": [[78, "autodeer.gui.main.WorkerSignals.progress", false]], "progress (autodeersignals attribute)": [[69, "autoDEERSignals.progress", false]], "progress (workersignals attribute)": [[76, "WorkerSignals.progress", false]], "progress_bar() (in module autodeer.tools)": [[142, "autodeer.tools.progress_bar", false]], "progress_bar_frac() (in module autodeer.tools)": [[142, "autodeer.tools.progress_bar_frac", false]], "progression (autodeer.pulse attribute)": [[117, "autodeer.Pulse.Progression", false], [117, "id111", false], [117, "id151", false]], "progression (autodeer.pulses.pulse attribute)": [[127, "autodeer.pulses.Pulse.Progression", false]], "progression (pulse attribute)": [[34, "Pulse.Progression", false], [124, "Pulse.Progression", false]], "progtable (autodeer.hardware.bruker_tools.psparvar attribute)": [[95, "autodeer.hardware.Bruker_tools.PSparvar.progTable", false]], "progtable (autodeer.sequence attribute)": [[117, "autodeer.Sequence.progTable", false], [117, "id232", false], [117, "id54", false]], "progtable (autodeer.sequences.sequence attribute)": [[141, "autodeer.sequences.Sequence.progTable", false]], "progtable (psparvar attribute)": [[93, "PSparvar.progTable", false]], "progtable (sequence attribute)": [[49, "Sequence.progTable", false], [138, "Sequence.progTable", false]], "progtable_n (autodeer.hardware.bruker_tools.psparvar attribute)": [[95, "autodeer.hardware.Bruker_tools.PSparvar.progTable_n", false]], "progtable_n (psparvar attribute)": [[93, "PSparvar.progTable_n", false]], "project (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.project", false]], "project (autodeerworker attribute)": [[70, "autoDEERWorker.project", false]], "ps_length (autodeer.hardware.xepr_experiments.eldortune attribute)": [[116, "autodeer.hardware.xepr_experiments.ELDORtune.ps_length", false]], "ps_length (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[116, "autodeer.hardware.xepr_experiments.MPFUtune.ps_length", false]], "ps_length (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[116, "autodeer.hardware.xepr_experiments.PulseProfile.ps_length", false]], "ps_length (eldortune attribute)": [[113, "ELDORtune.ps_length", false]], "ps_length (mpfutune attribute)": [[114, "MPFUtune.ps_length", false]], "ps_length (pulseprofile attribute)": [[115, "PulseProfile.ps_length", false]], "psparvar (built-in class)": [[93, "PSparvar", false]], "psparvar (class in autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.PSparvar", false]], "psphasecycle (built-in class)": [[92, "PSPhaseCycle", false]], "psphasecycle (class in autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.PSPhaseCycle", false]], "pulse (built-in class)": [[34, "Pulse", false], [124, "Pulse", false]], "pulse (class in autodeer)": [[117, "autodeer.Pulse", false], [117, "id107", false], [117, "id147", false]], "pulse (class in autodeer.pulses)": [[127, "autodeer.pulses.Pulse", false]], "pulseprofile (built-in class)": [[115, "PulseProfile", false]], "pulseprofile (class in autodeer.hardware.xepr_experiments)": [[116, "autodeer.hardware.xepr_experiments.PulseProfile", false]], "pulses (autodeer.classes.interface attribute)": [[56, "autodeer.classes.Interface.pulses", false]], "pulses (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.pulses", false]], "pulses (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.pulses", false]], "pulses (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.pulses", false]], "pulses (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.pulses", false]], "pulses (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.pulses", false]], "pulses (autodeer.interface attribute)": [[117, "autodeer.Interface.pulses", false], [117, "id212", false]], "pulses (autodeer.sequence attribute)": [[117, "autodeer.Sequence.pulses", false], [117, "id224", false], [117, "id46", false]], "pulses (autodeer.sequences.sequence attribute)": [[141, "autodeer.sequences.Sequence.pulses", false]], "pulses (autodeerui attribute)": [[68, "autoDEERUI.pulses", false], [77, "autoDEERUI.pulses", false]], "pulses (autodeerworker attribute)": [[70, "autoDEERWorker.pulses", false]], "pulses (dummyinterface attribute)": [[101, "dummyInterface.pulses", false]], "pulses (eth_awg_interface attribute)": [[96, "ETH_awg_interface.pulses", false]], "pulses (interface attribute)": [[29, "Interface.pulses", false], [54, "Interface.pulses", false]], "pulses (sequence attribute)": [[49, "Sequence.pulses", false], [138, "Sequence.pulses", false]], "pulsespel (autodeer.hardware.bruker_tools.psparvar attribute)": [[95, "autodeer.hardware.Bruker_tools.PSparvar.PulseSpel", false]], "pulsespel (built-in class)": [[94, "PulseSpel", false]], "pulsespel (class in autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel", false]], "pulsespel (psparvar attribute)": [[93, "PSparvar.PulseSpel", false]], "pump_frq (autodeer.hardware.xepr_experiments.deer attribute)": [[116, "autodeer.hardware.xepr_experiments.DEER.pump_frq", false]], "pump_frq (deer attribute)": [[112, "DEER.pump_frq", false]], "pyqt_table_from_dict() (in module autodeer.gui)": [[72, "autodeer.gui.pyqt_table_from_dict", false]], "pyqt_table_from_dict() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.pyqt_table_from_dict", false]], "q (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.Q", false]], "q (dummyinterface attribute)": [[101, "dummyInterface.Q", false]], "q_deer (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.q_DEER", false]], "q_deer (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.q_DEER", false]], "q_deer (autodeerui attribute)": [[68, "autoDEERUI.q_DEER", false], [77, "autoDEERUI.q_DEER", false]], "qcrit (autodeer.frequencysweptpulse property)": [[117, "autodeer.FrequencySweptPulse.Qcrit", false]], "qcrit (autodeer.pulses.frequencysweptpulse property)": [[127, "autodeer.pulses.FrequencySweptPulse.Qcrit", false]], "qcrit (frequencysweptpulse property)": [[25, "FrequencySweptPulse.Qcrit", false], [121, "FrequencySweptPulse.Qcrit", false]], "qtloghandler (built-in class)": [[31, "QtLogHandler", false]], "qtloghandler (class in autodeer.logging)": [[32, "autodeer.Logging.QtLogHandler", false]], "queue (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.queue", false]], "queue (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.queue", false]], "queue (autodeerui attribute)": [[68, "autoDEERUI.queue", false], [77, "autoDEERUI.queue", false]], "quick_deer_state (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.quick_deer_state", false]], "quick_deer_state (autodeerworker attribute)": [[70, "autoDEERWorker.quick_deer_state", false]], "quickdeer_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.quickdeer_result", false]], "quickdeer_result (autodeersignals attribute)": [[69, "autoDEERSignals.quickdeer_result", false]], "quickdeer_update (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.quickdeer_update", false]], "quickdeer_update (autodeersignals attribute)": [[69, "autoDEERSignals.quickdeer_update", false]], "raise_warning() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.raise_warning", false]], "raise_warning() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.raise_warning", false]], "raise_warning() (autodeerui method)": [[68, "autoDEERUI.raise_warning", false], [77, "autoDEERUI.raise_warning", false]], "read_table() (in module autodeer.gui)": [[72, "autodeer.gui.read_table", false]], "read_table() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.read_table", false]], "rectpulse (built-in class)": [[35, "RectPulse", false], [125, "RectPulse", false]], "rectpulse (class in autodeer)": [[117, "autodeer.RectPulse", false], [117, "id143", false]], "rectpulse (class in autodeer.pulses)": [[127, "autodeer.pulses.RectPulse", false]], "reduce_uuid (autodeer.sequence attribute)": [[117, "autodeer.Sequence.reduce_uuid", false], [117, "id227", false], [117, "id49", false]], "reduce_uuid (autodeer.sequences.sequence attribute)": [[141, "autodeer.sequences.Sequence.reduce_uuid", false]], "reduce_uuid (sequence attribute)": [[49, "Sequence.reduce_uuid", false], [138, "Sequence.reduce_uuid", false]], "refocusedecho2danalysis (built-in class)": [[36, "RefocusedEcho2DAnalysis", false], [39, "RefocusedEcho2DAnalysis", false]], "refocusedecho2danalysis (class in autodeer)": [[117, "autodeer.RefocusedEcho2DAnalysis", false]], "refocusedecho2danalysis (class in autodeer.relaxation)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis", false]], "refocusedecho2dsequence (built-in class)": [[37, "RefocusedEcho2DSequence", false], [135, "RefocusedEcho2DSequence", false]], "refocusedecho2dsequence (class in autodeer)": [[117, "autodeer.RefocusedEcho2DSequence", false]], "refocusedecho2dsequence (class in autodeer.sequences)": [[141, "autodeer.sequences.RefocusedEcho2DSequence", false]], "refresh_deer() (autodeer.gui.quickdeer.deerplot method)": [[83, "autodeer.gui.quickdeer.DEERplot.refresh_deer", false]], "refresh_deer() (deerplot method)": [[82, "DEERplot.refresh_deer", false]], "refresh_fieldsweep_after_fit() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_fieldsweep_after_fit() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_fieldsweep_after_fit() (autodeerui method)": [[68, "autoDEERUI.refresh_fieldsweep_after_fit", false], [77, "autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_relax() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.refresh_relax", false]], "refresh_relax() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.refresh_relax", false]], "refresh_relax() (autodeerui method)": [[68, "autoDEERUI.refresh_relax", false], [77, "autoDEERUI.refresh_relax", false]], "refresh_relax_figure() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.refresh_relax_figure", false]], "refresh_relax_figure() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.refresh_relax_figure", false]], "refresh_relax_figure() (autodeerui method)": [[68, "autoDEERUI.refresh_relax_figure", false], [77, "autoDEERUI.refresh_relax_figure", false]], "refresh_respro() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.refresh_respro", false]], "refresh_respro() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.refresh_respro", false]], "refresh_respro() (autodeerui method)": [[68, "autoDEERUI.refresh_respro", false], [77, "autoDEERUI.refresh_respro", false]], "refresh_t2() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.refresh_T2", false]], "refresh_t2() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.refresh_T2", false]], "refresh_t2() (autodeerui method)": [[68, "autoDEERUI.refresh_T2", false], [77, "autoDEERUI.refresh_T2", false]], "reim_colors (in module autodeer.colors)": [[57, "autodeer.colors.ReIm_colors", false]], "rel_positions (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.rel_positions", false]], "rel_positions (pulsespel attribute)": [[94, "PulseSpel.rel_positions", false]], "relax2d_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.Relax2D_result", false]], "relax2d_result (autodeersignals attribute)": [[69, "autoDEERSignals.Relax2D_result", false]], "relax_process() (in module autodeer.gui.main)": [[78, "autodeer.gui.main.relax_process", false]], "relax_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.relax_result", false]], "relax_result (autodeersignals attribute)": [[69, "autoDEERSignals.relax_result", false]], "relax_toolbar() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.relax_toolbar", false]], "relax_toolbar() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.relax_toolbar", false]], "relax_toolbar() (autodeerui method)": [[68, "autoDEERUI.relax_toolbar", false], [77, "autoDEERUI.relax_toolbar", false]], "remove_dynamic() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter.remove_dynamic", false]], "remove_dynamic() (autodeer.parameter method)": [[117, "autodeer.Parameter.remove_dynamic", false], [117, "id197", false], [117, "id26", false], [117, "id89", false]], "remove_dynamic() (parameter method)": [[33, "Parameter.remove_dynamic", false], [55, "Parameter.remove_dynamic", false]], "remove_echo() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.remove_echo", false]], "replacemode (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.ReplaceMode", false]], "replacemode (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.ReplaceMode", false]], "reporter (built-in class)": [[42, "Reporter", false], [128, "Reporter", false]], "reporter (class in autodeer)": [[117, "autodeer.Reporter", false]], "reporter (class in autodeer.reporter)": [[130, "autodeer.reporter.Reporter", false]], "reptime (autodeer.reptimescan attribute)": [[117, "autodeer.ReptimeScan.reptime", false]], "reptime (autodeer.sequences.reptimescan attribute)": [[141, "autodeer.sequences.ReptimeScan.reptime", false]], "reptime (reptimescan attribute)": [[44, "ReptimeScan.reptime", false], [136, "ReptimeScan.reptime", false]], "reptime_scan_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.reptime_scan_result", false]], "reptime_scan_result (autodeersignals attribute)": [[69, "autoDEERSignals.reptime_scan_result", false]], "reptimeanalysis (built-in class)": [[40, "ReptimeAnalysis", false], [43, "ReptimeAnalysis", false]], "reptimeanalysis (class in autodeer)": [[117, "autodeer.ReptimeAnalysis", false]], "reptimeanalysis (class in autodeer.relaxation)": [[41, "autodeer.Relaxation.ReptimeAnalysis", false]], "reptimescan (built-in class)": [[44, "ReptimeScan", false], [136, "ReptimeScan", false]], "reptimescan (class in autodeer)": [[117, "autodeer.ReptimeScan", false]], "reptimescan (class in autodeer.sequences)": [[141, "autodeer.sequences.ReptimeScan", false]], "rerun_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.rerun_exp", false]], "rerun_exp() (xeprapilink method)": [[99, "XeprAPILink.rerun_exp", false]], "resample_and_shift_vector() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.resample_and_shift_vector", false]], "resfields() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.resfields", false]], "resonator (autodeer.classes.interface attribute)": [[56, "autodeer.classes.Interface.resonator", false]], "resonator (autodeer.interface attribute)": [[117, "autodeer.Interface.resonator", false], [117, "id215", false]], "resonator (interface attribute)": [[29, "Interface.resonator", false], [54, "Interface.resonator", false]], "resonator_list (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.resonator_list", false]], "resonator_list (dummyinterface attribute)": [[101, "dummyInterface.resonator_list", false]], "resonatorprofileanalysis (built-in class)": [[45, "ResonatorProfileAnalysis", false], [47, "ResonatorProfileAnalysis", false]], "resonatorprofileanalysis (class in autodeer)": [[117, "autodeer.ResonatorProfileAnalysis", false]], "resonatorprofileanalysis (class in autodeer.respro)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis", false]], "resonatorprofilesequence (built-in class)": [[48, "ResonatorProfileSequence", false], [137, "ResonatorProfileSequence", false]], "resonatorprofilesequence (class in autodeer)": [[117, "autodeer.ResonatorProfileSequence", false]], "resonatorprofilesequence (class in autodeer.sequences)": [[141, "autodeer.sequences.ResonatorProfileSequence", false]], "respro_process() (in module autodeer.gui.main)": [[78, "autodeer.gui.main.respro_process", false]], "respro_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.respro_result", false]], "respro_result (autodeersignals attribute)": [[69, "autoDEERSignals.respro_result", false]], "respro_toolbar() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.respro_toolbar", false]], "respro_toolbar() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.respro_toolbar", false]], "respro_toolbar() (autodeerui method)": [[68, "autoDEERUI.respro_toolbar", false], [77, "autoDEERUI.respro_toolbar", false]], "result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.result", false]], "result (autodeer.gui.main.workersignals attribute)": [[78, "autodeer.gui.main.WorkerSignals.result", false]], "result (autodeer.gui.tools.workersignals attribute)": [[87, "autodeer.gui.tools.WorkerSignals.result", false]], "result (autodeer.gui.workersignals attribute)": [[72, "autodeer.gui.WorkerSignals.result", false]], "result (autodeersignals attribute)": [[69, "autoDEERSignals.result", false]], "result (workersignals attribute)": [[66, "WorkerSignals.result", false], [76, "WorkerSignals.result", false], [86, "WorkerSignals.result", false]], "result_signal (autodeer.gui.modetune.get_dataworker attribute)": [[81, "autodeer.gui.modetune.get_dataWorker.result_signal", false]], "result_signal (get_dataworker attribute)": [[80, "get_dataWorker.result_signal", false]], "results (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.results", false]], "results (autodeerworker attribute)": [[70, "autoDEERWorker.results", false]], "rng (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy.rng", false]], "round_step() (in module autodeer)": [[117, "autodeer.round_step", false]], "round_step() (in module autodeer.utils)": [[143, "autodeer.utils.round_step", false]], "run() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.run", false]], "run() (autodeer.gui.main.worker method)": [[78, "autodeer.gui.main.Worker.run", false]], "run() (autodeer.gui.modetune.get_dataworker method)": [[81, "autodeer.gui.modetune.get_dataWorker.run", false]], "run() (autodeer.gui.tools.worker method)": [[87, "autodeer.gui.tools.Worker.run", false]], "run() (autodeer.gui.worker method)": [[72, "autodeer.gui.Worker.run", false]], "run() (autodeerworker method)": [[70, "autoDEERWorker.run", false]], "run() (get_dataworker method)": [[80, "get_dataWorker.run", false]], "run() (worker method)": [[65, "Worker.run", false], [75, "Worker.run", false], [85, "Worker.run", false]], "run_2d_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_2D_relax", false]], "run_2d_relax() (autodeerworker method)": [[70, "autoDEERWorker.run_2D_relax", false]], "run_4p() (autodeer.hardware.xepr_experiments.deer method)": [[116, "autodeer.hardware.xepr_experiments.DEER.run_4p", false]], "run_4p() (deer method)": [[112, "DEER.run_4p", false]], "run_5p() (autodeer.hardware.xepr_experiments.deer method)": [[116, "autodeer.hardware.xepr_experiments.DEER.run_5p", false]], "run_5p() (deer method)": [[112, "DEER.run_5p", false]], "run_cp() (autodeer.hardware.xepr_experiments.deer method)": [[116, "autodeer.hardware.xepr_experiments.DEER.run_CP", false]], "run_cp() (deer method)": [[112, "DEER.run_CP", false]], "run_cp_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_CP_relax", false]], "run_cp_relax() (autodeerworker method)": [[70, "autoDEERWorker.run_CP_relax", false]], "run_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_deer", false]], "run_deer() (autodeerworker method)": [[70, "autoDEERWorker.run_deer", false]], "run_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.run_exp", false]], "run_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.run_exp", false]], "run_exp() (dummy_api method)": [[103, "dummy_api.run_exp", false]], "run_exp() (xeprapilink method)": [[99, "XeprAPILink.run_exp", false]], "run_fsweep() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_fsweep", false]], "run_fsweep() (autodeerworker method)": [[70, "autoDEERWorker.run_fsweep", false]], "run_general() (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.run_general", false]], "run_long_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_long_deer", false]], "run_long_deer() (autodeerworker method)": [[70, "autoDEERWorker.run_long_deer", false]], "run_quick_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_quick_deer", false]], "run_quick_deer() (autodeerworker method)": [[70, "autoDEERWorker.run_quick_deer", false]], "run_reptime_opt() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_reptime_opt", false]], "run_reptime_opt() (autodeerworker method)": [[70, "autoDEERWorker.run_reptime_opt", false]], "run_respro() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_respro", false]], "run_respro() (autodeerworker method)": [[70, "autoDEERWorker.run_respro", false]], "run_t2_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_T2_relax", false]], "run_t2_relax() (autodeerworker method)": [[70, "autoDEERWorker.run_T2_relax", false]], "runadvancedautodeer() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.RunAdvancedAutoDEER", false]], "runadvancedautodeer() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.RunAdvancedAutoDEER", false]], "runadvancedautodeer() (autodeerui method)": [[68, "autoDEERUI.RunAdvancedAutoDEER", false], [77, "autoDEERUI.RunAdvancedAutoDEER", false]], "runautodeer() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.RunAutoDEER", false]], "runautodeer() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.RunAutoDEER", false]], "runautodeer() (autodeerui method)": [[68, "autoDEERUI.RunAutoDEER", false], [77, "autoDEERUI.RunAutoDEER", false]], "runfullyautodeer() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.RunFullyAutoDEER", false]], "runfullyautodeer() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.RunFullyAutoDEER", false]], "runfullyautodeer() (autodeerui method)": [[68, "autoDEERUI.RunFullyAutoDEER", false], [77, "autoDEERUI.RunFullyAutoDEER", false]], "s (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.S", false]], "s (spinsystem attribute)": [[21, "SpinSystem.S", false]], "sampleconccombobox_opts (in module autodeer.gui.main)": [[78, "autodeer.gui.main.SampleConcComboBox_opts", false]], "samplename (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.samplename", false]], "samplename (autodeerworker attribute)": [[70, "autoDEERWorker.samplename", false]], "save() (autodeer.classes.parameter method)": [[56, "autodeer.classes.Parameter.save", false]], "save() (autodeer.dataset.epraccessor method)": [[64, "autodeer.dataset.EPRAccessor.save", false]], "save() (autodeer.epraccessor method)": [[117, "autodeer.EPRAccessor.save", false]], "save() (autodeer.hardware.bruker_tools.pulsespel method)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.save", false]], "save() (autodeer.parameter method)": [[117, "autodeer.Parameter.save", false], [117, "id207", false], [117, "id36", false], [117, "id99", false]], "save() (autodeer.pulse method)": [[117, "autodeer.Pulse.save", false], [117, "id131", false], [117, "id171", false]], "save() (autodeer.pulses.pulse method)": [[127, "autodeer.pulses.Pulse.save", false]], "save() (autodeer.sequence method)": [[117, "autodeer.Sequence.save", false], [117, "id245", false], [117, "id67", false]], "save() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence.save", false]], "save() (epraccessor method)": [[19, "EPRAccessor.save", false], [63, "EPRAccessor.save", false]], "save() (parameter method)": [[33, "Parameter.save", false], [55, "Parameter.save", false]], "save() (pulse method)": [[34, "Pulse.save", false], [124, "Pulse.save", false]], "save() (pulsespel method)": [[94, "PulseSpel.save", false]], "save() (sequence method)": [[49, "Sequence.save", false], [138, "Sequence.save", false]], "save_data() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.save_data", false]], "save_data() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.save_data", false]], "save_data() (autodeerui method)": [[68, "autoDEERUI.save_data", false], [77, "autoDEERUI.save_data", false]], "save_data() (in module autodeer.gui.modetune)": [[81, "autodeer.gui.modetune.save_data", false]], "save_file() (in module autodeer)": [[117, "autodeer.save_file", false]], "save_file() (in module autodeer.utils)": [[143, "autodeer.utils.save_file", false]], "save_log_to_file() (autodeer.gui.log.logdialog method)": [[74, "autodeer.gui.log.LogDialog.save_log_to_file", false]], "save_log_to_file() (logdialog method)": [[73, "LogDialog.save_log_to_file", false]], "save_pulsespel_def() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.save_PulseSpel_def", false]], "save_pulsespel_def() (xeprapilink method)": [[99, "XeprAPILink.save_PulseSpel_def", false]], "save_pulsespel_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.save_PulseSpel_exp", false]], "save_pulsespel_exp() (xeprapilink method)": [[99, "XeprAPILink.save_PulseSpel_exp", false]], "savefolder (autodeer.classes.interface attribute)": [[56, "autodeer.classes.Interface.savefolder", false]], "savefolder (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.savefolder", false]], "savefolder (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.savefolder", false]], "savefolder (autodeer.hardware.eth_awg.eth_awg_interface property)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.savefolder", false]], "savefolder (autodeer.interface attribute)": [[117, "autodeer.Interface.savefolder", false], [117, "id213", false]], "savefolder (brukerawg attribute)": [[88, "BrukerAWG.savefolder", false]], "savefolder (brukermpfu attribute)": [[90, "BrukerMPFU.savefolder", false]], "savefolder (eth_awg_interface property)": [[96, "ETH_awg_interface.savefolder", false]], "savefolder (interface attribute)": [[29, "Interface.savefolder", false], [54, "Interface.savefolder", false]], "savename (autodeer.classes.interface attribute)": [[56, "autodeer.classes.Interface.savename", false]], "savename (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.savename", false]], "savename (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.savename", false]], "savename (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.savename", false]], "savename (autodeer.interface attribute)": [[117, "autodeer.Interface.savename", false], [117, "id214", false]], "savename (autodeerworker attribute)": [[70, "autoDEERWorker.savename", false]], "savename (brukerawg attribute)": [[88, "BrukerAWG.savename", false]], "savename (brukermpfu attribute)": [[90, "BrukerMPFU.savename", false]], "savename (interface attribute)": [[29, "Interface.savename", false], [54, "Interface.savename", false]], "scale (autodeer.delay attribute)": [[117, "autodeer.Delay.scale", false], [117, "id142", false]], "scale (autodeer.detection attribute)": [[117, "autodeer.Detection.scale", false], [117, "id136", false], [117, "id176", false]], "scale (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.scale", false]], "scale (autodeer.pulses.delay attribute)": [[127, "autodeer.pulses.Delay.scale", false]], "scale (autodeer.pulses.detection attribute)": [[127, "autodeer.pulses.Detection.scale", false]], "scale (delay attribute)": [[17, "Delay.scale", false], [119, "Delay.scale", false]], "scale (detection attribute)": [[18, "Detection.scale", false], [120, "Detection.scale", false]], "scale (dummyinterface attribute)": [[101, "dummyInterface.scale", false]], "scipy_filter_dc() (in module autodeer.hardware.eth_awg_load)": [[98, "autodeer.hardware.ETH_awg_load.scipy_filter_dc", false]], "select_pcyc() (autodeer.deersequence method)": [[117, "autodeer.DEERSequence.select_pcyc", false], [117, "id263", false]], "select_pcyc() (autodeer.sequences.deersequence method)": [[141, "autodeer.sequences.DEERSequence.select_pcyc", false]], "select_pcyc() (deersequence method)": [[15, "DEERSequence.select_pcyc", false], [132, "DEERSequence.select_pcyc", false]], "select_resonator() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.select_resonator", false]], "select_resonator() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.select_resonator", false]], "select_resonator() (autodeerui method)": [[68, "autoDEERUI.select_resonator", false], [77, "autoDEERUI.select_resonator", false]], "seq (autodeer.relaxation.reptimeanalysis attribute)": [[41, "autodeer.Relaxation.ReptimeAnalysis.seq", false]], "seq (autodeer.reptimeanalysis attribute)": [[117, "autodeer.ReptimeAnalysis.seq", false]], "seq (reptimeanalysis attribute)": [[40, "ReptimeAnalysis.seq", false], [43, "ReptimeAnalysis.seq", false]], "seqtable_steps (autodeer.sequence property)": [[117, "autodeer.Sequence.seqtable_steps", false], [117, "id223", false], [117, "id45", false]], "seqtable_steps (autodeer.sequences.sequence property)": [[141, "autodeer.sequences.Sequence.seqtable_steps", false]], "seqtable_steps (sequence property)": [[49, "Sequence.seqtable_steps", false], [138, "Sequence.seqtable_steps", false]], "sequence (autodeer.dataset.epraccessor property)": [[64, "autodeer.dataset.EPRAccessor.sequence", false]], "sequence (autodeer.epraccessor property)": [[117, "autodeer.EPRAccessor.sequence", false]], "sequence (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.sequence", false]], "sequence (built-in class)": [[49, "Sequence", false], [138, "Sequence", false]], "sequence (class in autodeer)": [[117, "autodeer.Sequence", false], [117, "id222", false], [117, "id44", false]], "sequence (class in autodeer.sequences)": [[141, "autodeer.sequences.Sequence", false]], "sequence (epraccessor property)": [[19, "EPRAccessor.sequence", false], [63, "EPRAccessor.sequence", false]], "sequence (pulsespel attribute)": [[94, "PulseSpel.sequence", false]], "set_2d_max_tau() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.set_2D_max_tau", false]], "set_2d_max_tau() (autodeerworker method)": [[70, "autoDEERWorker.set_2D_max_tau", false]], "set_acquisition_mode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_Acquisition_mode", false]], "set_acquisition_mode() (xeprapilink method)": [[99, "XeprAPILink.set_Acquisition_mode", false]], "set_attenuator() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_attenuator", false]], "set_attenuator() (xeprapilink method)": [[99, "XeprAPILink.set_attenuator", false]], "set_config_file() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_config_file", false]], "set_config_file() (xeprapilink method)": [[99, "XeprAPILink.set_config_file", false]], "set_eldor_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_ELDOR_freq", false]], "set_eldor_freq() (xeprapilink method)": [[99, "XeprAPILink.set_ELDOR_freq", false]], "set_field() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_field", false]], "set_field() (xeprapilink method)": [[99, "XeprAPILink.set_field", false]], "set_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_freq", false]], "set_freq() (xeprapilink method)": [[99, "XeprAPILink.set_freq", false]], "set_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_hidden_param", false]], "set_hidden_param() (xeprapilink method)": [[99, "XeprAPILink.set_hidden_param", false]], "set_mw_amp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_MW_amp", false]], "set_mw_amp() (xeprapilink method)": [[99, "XeprAPILink.set_MW_amp", false]], "set_noise_mode() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.set_noise_mode", false]], "set_noise_mode() (autodeerworker method)": [[70, "autoDEERWorker.set_noise_mode", false]], "set_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_param", false]], "set_param() (xeprapilink method)": [[99, "XeprAPILink.set_param", false]], "set_phase() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_phase", false]], "set_phase() (xeprapilink method)": [[99, "XeprAPILink.set_phase", false]], "set_phasecycle() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PhaseCycle", false]], "set_phasecycle() (xeprapilink method)": [[99, "XeprAPILink.set_PhaseCycle", false]], "set_pulsespel_def_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_def_filepath", false]], "set_pulsespel_def_filepath() (xeprapilink method)": [[99, "XeprAPILink.set_PulseSpel_def_filepath", false]], "set_pulsespel_exp_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_exp_filepath", false]], "set_pulsespel_exp_filepath() (xeprapilink method)": [[99, "XeprAPILink.set_PulseSpel_exp_filepath", false]], "set_pulsespel_experiment() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_experiment", false]], "set_pulsespel_experiment() (xeprapilink method)": [[99, "XeprAPILink.set_PulseSpel_experiment", false]], "set_pulsespel_phase_cycling() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_phase_cycling", false]], "set_pulsespel_phase_cycling() (xeprapilink method)": [[99, "XeprAPILink.set_PulseSpel_phase_cycling", false]], "set_pulsespel_var() (autodeer.hardware.dummy_xepr.dummy_api method)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.set_PulseSpel_var", false]], "set_pulsespel_var() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_var", false]], "set_pulsespel_var() (dummy_api method)": [[103, "dummy_api.set_PulseSpel_var", false]], "set_pulsespel_var() (xeprapilink method)": [[99, "XeprAPILink.set_PulseSpel_var", false]], "set_replacemode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_ReplaceMode", false]], "set_replacemode() (xeprapilink method)": [[99, "XeprAPILink.set_ReplaceMode", false]], "set_spectrometer_connected_light() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.set_spectrometer_connected_light", false]], "set_spectrometer_connected_light() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.set_spectrometer_connected_light", false]], "set_spectrometer_connected_light() (autodeerui method)": [[68, "autoDEERUI.set_spectrometer_connected_light", false], [77, "autoDEERUI.set_spectrometer_connected_light", false]], "set_sweep_width() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_sweep_width", false]], "set_sweep_width() (xeprapilink method)": [[99, "XeprAPILink.set_sweep_width", false]], "set_video_bandwidth() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_video_bandwidth", false]], "set_video_bandwidth() (xeprapilink method)": [[99, "XeprAPILink.set_video_bandwidth", false]], "set_video_gain() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_video_gain", false]], "set_video_gain() (xeprapilink method)": [[99, "XeprAPILink.set_video_gain", false]], "setup() (autodeer.hardware.bruker_awg.brukerawg method)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.setup", false]], "setup() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.setup", false]], "setup() (brukerawg method)": [[88, "BrukerAWG.setup", false]], "setup() (brukermpfu method)": [[90, "BrukerMPFU.setup", false]], "setup_flag (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.setup_flag", false]], "setup_flag (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.setup_flag", false]], "setup_flag (brukerawg attribute)": [[88, "BrukerAWG.setup_flag", false]], "setup_flag (brukermpfu attribute)": [[90, "BrukerMPFU.setup_flag", false]], "setup_inputs() (autodeer.gui.quickdeer.deerplot method)": [[83, "autodeer.gui.quickdeer.DEERplot.setup_inputs", false]], "setup_inputs() (deerplot method)": [[82, "DEERplot.setup_inputs", false]], "setup_logs() (in module autodeer.logging)": [[32, "autodeer.Logging.setup_logs", false]], "seven_pulse() (autodeer.deersequence method)": [[117, "autodeer.DEERSequence.seven_pulse", false], [117, "id261", false]], "seven_pulse() (autodeer.sequences.deersequence method)": [[141, "autodeer.sequences.DEERSequence.seven_pulse", false]], "seven_pulse() (deersequence method)": [[15, "DEERSequence.seven_pulse", false], [132, "DEERSequence.seven_pulse", false]], "shade_colors (in module autodeer.colors)": [[57, "autodeer.colors.shade_colors", false]], "shift_detfreq_to_zero() (autodeer.sequence method)": [[117, "autodeer.Sequence.shift_detfreq_to_zero", false], [117, "id239", false], [117, "id61", false]], "shift_detfreq_to_zero() (autodeer.sequences.sequence method)": [[141, "autodeer.sequences.Sequence.shift_detfreq_to_zero", false]], "shift_detfreq_to_zero() (sequence method)": [[49, "Sequence.shift_detfreq_to_zero", false], [138, "Sequence.shift_detfreq_to_zero", false]], "shift_pulse_freq() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.shift_pulse_freq", false]], "shotreptime (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.ShotRepTime", false]], "shotreptime (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.ShotRepTime", false]], "shots (autodeer.sequence attribute)": [[117, "autodeer.Sequence.shots", false], [117, "id230", false], [117, "id52", false]], "shots (autodeer.sequences.sequence attribute)": [[141, "autodeer.sequences.Sequence.shots", false]], "shots (sequence attribute)": [[49, "Sequence.shots", false], [138, "Sequence.shots", false]], "shotsploop (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.ShotsPLoop", false]], "shotsploop (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.ShotsPLoop", false]], "signal (autodeer.logging.qtloghandler attribute)": [[32, "autodeer.Logging.QtLogHandler.signal", false]], "signal (qtloghandler attribute)": [[31, "QtLogHandler.signal", false]], "signalphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_hidden.SignalPhase", false]], "signalphase (dummy_hidden attribute)": [[106, "dummy_hidden.SignalPhase", false]], "signals (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.signals", false]], "signals (autodeer.gui.main.worker attribute)": [[78, "autodeer.gui.main.Worker.signals", false]], "signals (autodeer.gui.modetune.get_dataworker attribute)": [[81, "autodeer.gui.modetune.get_dataWorker.signals", false]], "signals (autodeer.gui.tools.worker attribute)": [[87, "autodeer.gui.tools.Worker.signals", false]], "signals (autodeer.gui.worker attribute)": [[72, "autodeer.gui.Worker.signals", false]], "signals (autodeerworker attribute)": [[70, "autoDEERWorker.signals", false]], "signals (get_dataworker attribute)": [[80, "get_dataWorker.signals", false]], "signals (worker attribute)": [[65, "Worker.signals", false], [75, "Worker.signals", false], [85, "Worker.signals", false]], "simulate() (autodeer.deersequence method)": [[117, "autodeer.DEERSequence.simulate", false], [117, "id264", false]], "simulate() (autodeer.sequences.deersequence method)": [[141, "autodeer.sequences.DEERSequence.simulate", false]], "simulate() (deersequence method)": [[15, "DEERSequence.simulate", false], [132, "DEERSequence.simulate", false]], "sincpulse (built-in class)": [[50, "SincPulse", false], [126, "SincPulse", false]], "sincpulse (class in autodeer)": [[117, "autodeer.SincPulse", false]], "sincpulse (class in autodeer.pulses)": [[127, "autodeer.pulses.SincPulse", false]], "size (autodeer.hardware.dummy_xepr.dummy_dataset attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_dataset.size", false]], "size (dummy_dataset attribute)": [[105, "dummy_dataset.size", false]], "smooth() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.smooth", false]], "smooth() (autodeer.fieldsweepanalysis method)": [[117, "autodeer.FieldSweepAnalysis.smooth", false]], "smooth() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.smooth", false], [23, "FieldSweepAnalysis.smooth", false]], "snr (autodeer.dataset.epraccessor property)": [[64, "autodeer.dataset.EPRAccessor.SNR", false]], "snr (autodeer.epraccessor property)": [[117, "autodeer.EPRAccessor.SNR", false]], "snr (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.SNR", false]], "snr (dummyinterface attribute)": [[101, "dummyInterface.SNR", false]], "snr (epraccessor property)": [[19, "EPRAccessor.SNR", false], [63, "EPRAccessor.SNR", false]], "snrcriteria (built-in class)": [[60, "SNRCriteria", false]], "snrcriteria (class in autodeer.criteria)": [[62, "autodeer.criteria.SNRCriteria", false]], "sop() (in module autodeer)": [[117, "autodeer.sop", false], [117, "id104", false]], "sop() (in module autodeer.utils)": [[143, "autodeer.utils.sop", false]], "spec_config (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.spec_config", false]], "spec_config (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.spec_config", false]], "spec_config (brukerawg attribute)": [[88, "BrukerAWG.spec_config", false]], "spec_config (brukermpfu attribute)": [[90, "BrukerMPFU.spec_config", false]], "spectromterinterface (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.spectromterInterface", false]], "spectromterinterface (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.spectromterInterface", false]], "spectromterinterface (autodeerui attribute)": [[68, "autoDEERUI.spectromterInterface", false], [77, "autoDEERUI.spectromterInterface", false]], "speedup (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.speedup", false]], "speedup (dummyinterface attribute)": [[101, "dummyInterface.speedup", false]], "spfutune() (in module autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU.SPFUtune", false]], "spins (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.Spins", false]], "spins (spinsystem attribute)": [[21, "SpinSystem.Spins", false]], "spinsystem (built-in class)": [[21, "SpinSystem", false]], "spinsystem (class in autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.SpinSystem", false]], "srt (autodeer.hardware.xepr_experiments.deer attribute)": [[116, "autodeer.hardware.xepr_experiments.DEER.srt", false]], "srt (autodeer.hardware.xepr_experiments.eldortune attribute)": [[116, "autodeer.hardware.xepr_experiments.ELDORtune.srt", false]], "srt (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[116, "autodeer.hardware.xepr_experiments.MPFUtune.srt", false]], "srt (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[116, "autodeer.hardware.xepr_experiments.PulseProfile.srt", false]], "srt (deer attribute)": [[112, "DEER.srt", false]], "srt (eldortune attribute)": [[113, "ELDORtune.srt", false]], "srt (mpfutune attribute)": [[114, "MPFUtune.srt", false]], "srt (pulseprofile attribute)": [[115, "PulseProfile.srt", false]], "start_mode_tune() (autodeer.gui.modetune.modetune method)": [[81, "autodeer.gui.modetune.ModeTune.start_mode_tune", false]], "start_mode_tune() (modetune method)": [[79, "ModeTune.start_mode_tune", false]], "start_time (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.start_time", false]], "start_time (dummyinterface attribute)": [[101, "dummyInterface.start_time", false]], "starttime (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.starttime", false]], "starttime (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.starttime", false]], "starttime (autodeerui attribute)": [[68, "autoDEERUI.starttime", false], [77, "autoDEERUI.starttime", false]], "state (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.state", false]], "state (dummyinterface attribute)": [[101, "dummyInterface.state", false]], "status (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.status", false]], "status (autodeersignals attribute)": [[69, "autoDEERSignals.status", false]], "step (autodeer.reptimescan attribute)": [[117, "autodeer.ReptimeScan.step", false]], "step (autodeer.sequences.reptimescan attribute)": [[141, "autodeer.sequences.ReptimeScan.step", false]], "step (reptimescan attribute)": [[44, "ReptimeScan.step", false], [136, "ReptimeScan.step", false]], "step_hash (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.step_hash", false]], "step_hash (pulsespel attribute)": [[94, "PulseSpel.step_hash", false]], "step_parameters() (in module autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU.step_parameters", false]], "stop() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.stop", false]], "stop() (autodeerworker method)": [[70, "autoDEERWorker.stop", false]], "stop_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[110, "autodeer.hardware.dummy_xepr.dummy_api.stop_exp", false]], "stop_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.stop_exp", false]], "stop_exp() (dummy_api method)": [[103, "dummy_api.stop_exp", false]], "stop_exp() (xeprapilink method)": [[99, "XeprAPILink.stop_exp", false]], "stop_flag (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.stop_flag", false]], "stop_flag (autodeerworker attribute)": [[70, "autoDEERWorker.stop_flag", false]], "story (autodeer.reporter attribute)": [[117, "autodeer.Reporter.story", false]], "story (autodeer.reporter.reporter attribute)": [[130, "autodeer.reporter.Reporter.story", false]], "story (reporter attribute)": [[42, "Reporter.story", false], [128, "Reporter.story", false]], "str_to_list_type() (in module autodeer.gui)": [[72, "autodeer.gui.str_to_list_type", false]], "str_to_list_type() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.str_to_list_type", false]], "styles (in module autodeer.reporter)": [[130, "autodeer.reporter.styles", false]], "svgflowable (built-in class)": [[129, "SvgFlowable", false]], "svgflowable (class in autodeer.reporter)": [[130, "autodeer.reporter.SvgFlowable", false]], "sweeprate (autodeer.chirppulse property)": [[117, "autodeer.ChirpPulse.sweeprate", false]], "sweeprate (autodeer.frequencysweptpulse property)": [[117, "autodeer.FrequencySweptPulse.sweeprate", false]], "sweeprate (autodeer.hspulse property)": [[117, "autodeer.HSPulse.sweeprate", false]], "sweeprate (autodeer.pulses.chirppulse property)": [[127, "autodeer.pulses.ChirpPulse.sweeprate", false]], "sweeprate (autodeer.pulses.frequencysweptpulse property)": [[127, "autodeer.pulses.FrequencySweptPulse.sweeprate", false]], "sweeprate (autodeer.pulses.hspulse property)": [[127, "autodeer.pulses.HSPulse.sweeprate", false]], "sweeprate (chirppulse property)": [[14, "ChirpPulse.sweeprate", false], [118, "ChirpPulse.sweeprate", false]], "sweeprate (frequencysweptpulse property)": [[25, "FrequencySweptPulse.sweeprate", false], [121, "FrequencySweptPulse.sweeprate", false]], "sweeprate (hspulse property)": [[27, "HSPulse.sweeprate", false], [123, "HSPulse.sweeprate", false]], "sweepspexp (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.SweepsPExp", false]], "sweepspexp (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.SweepsPExp", false]], "sweepwidth (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.SweepWidth", false]], "sweepwidth (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.SweepWidth", false]], "t (autodeer.resonatorprofileanalysis attribute)": [[117, "autodeer.ResonatorProfileAnalysis.t", false]], "t (autodeer.respro.resonatorprofileanalysis attribute)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.t", false]], "t (resonatorprofileanalysis attribute)": [[45, "ResonatorProfileAnalysis.t", false], [47, "ResonatorProfileAnalysis.t", false]], "t2_process() (in module autodeer.gui.main)": [[78, "autodeer.gui.main.T2_process", false]], "t2_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.T2_result", false]], "t2_result (autodeersignals attribute)": [[69, "autoDEERSignals.T2_result", false]], "t2relaxationsequence (built-in class)": [[51, "T2RelaxationSequence", false], [139, "T2RelaxationSequence", false]], "t2relaxationsequence (class in autodeer)": [[117, "autodeer.T2RelaxationSequence", false]], "t2relaxationsequence (class in autodeer.sequences)": [[141, "autodeer.sequences.T2RelaxationSequence", false]], "tau (autodeer.carrpurcellsequence attribute)": [[117, "autodeer.CarrPurcellSequence.tau", false]], "tau (autodeer.sequences.carrpurcellsequence attribute)": [[141, "autodeer.sequences.CarrPurcellSequence.tau", false]], "tau (autodeer.sequences.t2relaxationsequence attribute)": [[141, "autodeer.sequences.T2RelaxationSequence.tau", false]], "tau (autodeer.t2relaxationsequence attribute)": [[117, "autodeer.T2RelaxationSequence.tau", false]], "tau (carrpurcellsequence attribute)": [[13, "CarrPurcellSequence.tau", false], [131, "CarrPurcellSequence.tau", false]], "tau (t2relaxationsequence attribute)": [[51, "T2RelaxationSequence.tau", false], [139, "T2RelaxationSequence.tau", false]], "tau1 (autodeer.deersequence attribute)": [[117, "autodeer.DEERSequence.tau1", false], [117, "id252", false]], "tau1 (autodeer.refocusedecho2dsequence attribute)": [[117, "autodeer.RefocusedEcho2DSequence.tau1", false]], "tau1 (autodeer.sequences.deersequence attribute)": [[141, "autodeer.sequences.DEERSequence.tau1", false]], "tau1 (autodeer.sequences.refocusedecho2dsequence attribute)": [[141, "autodeer.sequences.RefocusedEcho2DSequence.tau1", false]], "tau1 (deersequence attribute)": [[15, "DEERSequence.tau1", false], [132, "DEERSequence.tau1", false]], "tau1 (refocusedecho2dsequence attribute)": [[37, "RefocusedEcho2DSequence.tau1", false], [135, "RefocusedEcho2DSequence.tau1", false]], "tau1us (autodeer.deersequence attribute)": [[117, "autodeer.DEERSequence.tau1us", false], [117, "id251", false]], "tau1us (autodeer.sequences.deersequence attribute)": [[141, "autodeer.sequences.DEERSequence.tau1us", false]], "tau1us (deersequence attribute)": [[15, "DEERSequence.tau1us", false], [132, "DEERSequence.tau1us", false]], "tau2 (autodeer.deersequence attribute)": [[117, "autodeer.DEERSequence.tau2", false], [117, "id253", false]], "tau2 (autodeer.refocusedecho2dsequence attribute)": [[117, "autodeer.RefocusedEcho2DSequence.tau2", false]], "tau2 (autodeer.sequences.deersequence attribute)": [[141, "autodeer.sequences.DEERSequence.tau2", false]], "tau2 (autodeer.sequences.refocusedecho2dsequence attribute)": [[141, "autodeer.sequences.RefocusedEcho2DSequence.tau2", false]], "tau2 (deersequence attribute)": [[15, "DEERSequence.tau2", false], [132, "DEERSequence.tau2", false]], "tau2 (refocusedecho2dsequence attribute)": [[37, "RefocusedEcho2DSequence.tau2", false], [135, "RefocusedEcho2DSequence.tau2", false]], "tau_init (autodeer.refocusedecho2dsequence attribute)": [[117, "autodeer.RefocusedEcho2DSequence.tau_init", false]], "tau_init (autodeer.sequences.refocusedecho2dsequence attribute)": [[141, "autodeer.sequences.RefocusedEcho2DSequence.tau_init", false]], "tau_init (refocusedecho2dsequence attribute)": [[37, "RefocusedEcho2DSequence.tau_init", false], [135, "RefocusedEcho2DSequence.tau_init", false]], "temp_dir (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.temp_dir", false]], "temp_dir (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.temp_dir", false]], "temp_dir (brukerawg attribute)": [[88, "BrukerAWG.temp_dir", false]], "temp_dir (brukermpfu attribute)": [[90, "BrukerMPFU.temp_dir", false]], "template (autodeer.reporter attribute)": [[117, "autodeer.Reporter.template", false]], "template (autodeer.reporter.reporter attribute)": [[130, "autodeer.reporter.Reporter.template", false]], "template (reporter attribute)": [[42, "Reporter.template", false], [128, "Reporter.template", false]], "terminate() (autodeer.classes.interface method)": [[56, "autodeer.classes.Interface.terminate", false]], "terminate() (autodeer.hardware.bruker_awg.brukerawg method)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.terminate", false]], "terminate() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.terminate", false]], "terminate() (autodeer.hardware.dummy.dummyinterface method)": [[102, "autodeer.hardware.dummy.dummyInterface.terminate", false]], "terminate() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.terminate", false]], "terminate() (autodeer.interface method)": [[117, "autodeer.Interface.terminate", false], [117, "id220", false]], "terminate() (brukerawg method)": [[88, "BrukerAWG.terminate", false]], "terminate() (brukermpfu method)": [[90, "BrukerMPFU.terminate", false]], "terminate() (dummyinterface method)": [[101, "dummyInterface.terminate", false]], "terminate() (eth_awg_interface method)": [[96, "ETH_awg_interface.terminate", false]], "terminate() (interface method)": [[29, "Interface.terminate", false], [54, "Interface.terminate", false]], "terminate_at() (autodeer.classes.interface method)": [[56, "autodeer.classes.Interface.terminate_at", false]], "terminate_at() (autodeer.interface method)": [[117, "autodeer.Interface.terminate_at", false], [117, "id221", false]], "terminate_at() (interface method)": [[29, "Interface.terminate_at", false], [54, "Interface.terminate_at", false]], "test (autodeer.criteria.criteria attribute)": [[62, "autodeer.criteria.Criteria.test", false]], "test (criteria attribute)": [[58, "Criteria.test", false]], "test_if_mpfu_compatability() (in module autodeer.hardware.bruker_awg)": [[89, "autodeer.hardware.Bruker_AWG.test_if_MPFU_compatability", false]], "test_if_mpfu_compatability() (in module autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU.test_if_MPFU_compatability", false]], "test_interval (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.test_interval", false]], "test_interval (autodeerworker attribute)": [[70, "autoDEERWorker.test_interval", false]], "test_snr() (in module autodeer.gui)": [[72, "autodeer.gui.test_SNR", false]], "test_snr() (in module autodeer.gui.tools)": [[87, "autodeer.gui.tools.test_SNR", false]], "threadpool (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.threadpool", false]], "threadpool (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.threadpool", false]], "threadpool (autodeer.gui.quickdeer.deerplot attribute)": [[83, "autodeer.gui.quickdeer.DEERplot.threadpool", false]], "threadpool (autodeerui attribute)": [[68, "autoDEERUI.threadpool", false], [77, "autoDEERUI.threadpool", false]], "threadpool (deerplot attribute)": [[82, "DEERplot.threadpool", false]], "three_pulse() (autodeer.deersequence method)": [[117, "autodeer.DEERSequence.three_pulse", false], [117, "id258", false]], "three_pulse() (autodeer.sequences.deersequence method)": [[141, "autodeer.sequences.DEERSequence.three_pulse", false]], "three_pulse() (deersequence method)": [[15, "DEERSequence.three_pulse", false], [132, "DEERSequence.three_pulse", false]], "timecriteria (built-in class)": [[61, "TimeCriteria", false]], "timecriteria (class in autodeer.criteria)": [[62, "autodeer.criteria.TimeCriteria", false]], "timeout (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERSignals.timeout", false]], "timeout (autodeersignals attribute)": [[69, "autoDEERSignals.timeout", false]], "timeout() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.timeout", false]], "timeout() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.timeout", false]], "timeout() (autodeerui method)": [[68, "autoDEERUI.timeout", false], [77, "autoDEERUI.timeout", false]], "toolbar() (autodeer.gui.quickdeer.deerplot method)": [[83, "autodeer.gui.quickdeer.DEERplot.toolbar", false]], "toolbar() (deerplot method)": [[82, "DEERplot.toolbar", false]], "tp (autodeer.delay attribute)": [[117, "autodeer.Delay.tp", false], [117, "id140", false]], "tp (autodeer.pulses.delay attribute)": [[127, "autodeer.pulses.Delay.tp", false]], "tp (delay attribute)": [[17, "Delay.tp", false], [119, "Delay.tp", false]], "transpose_dict_of_list() (in module autodeer)": [[117, "autodeer.transpose_dict_of_list", false]], "transpose_dict_of_list() (in module autodeer.utils)": [[143, "autodeer.utils.transpose_dict_of_list", false]], "transpose_list_of_dicts() (in module autodeer)": [[117, "autodeer.transpose_list_of_dicts", false]], "transpose_list_of_dicts() (in module autodeer.utils)": [[143, "autodeer.utils.transpose_list_of_dicts", false]], "tune() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune", false]], "tune() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune", false]], "tune() (autodeer.hardware.xepr_experiments.eldortune method)": [[116, "autodeer.hardware.xepr_experiments.ELDORtune.tune", false]], "tune() (autodeer.hardware.xepr_experiments.mpfutune method)": [[116, "autodeer.hardware.xepr_experiments.MPFUtune.tune", false]], "tune() (brukermpfu method)": [[90, "BrukerMPFU.tune", false]], "tune() (eldortune method)": [[113, "ELDORtune.tune", false]], "tune() (eth_awg_interface method)": [[96, "ETH_awg_interface.tune", false]], "tune() (mpfutune method)": [[114, "MPFUtune.tune", false]], "tune_phase() (autodeer.hardware.xepr_experiments.mpfutune method)": [[116, "autodeer.hardware.xepr_experiments.MPFUtune.tune_phase", false]], "tune_phase() (in module autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU.tune_phase", false]], "tune_phase() (mpfutune method)": [[114, "MPFUtune.tune_phase", false]], "tune_power() (autodeer.hardware.xepr_experiments.mpfutune method)": [[116, "autodeer.hardware.xepr_experiments.MPFUtune.tune_power", false]], "tune_power() (in module autodeer.hardware.bruker_mpfu)": [[91, "autodeer.hardware.Bruker_MPFU.tune_power", false]], "tune_power() (mpfutune method)": [[114, "MPFUtune.tune_power", false]], "tune_pulse() (autodeer.hardware.bruker_awg.brukerawg method)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_pulse", false]], "tune_pulse() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune_pulse", false]], "tune_pulse() (autodeer.hardware.dummy.dummyinterface method)": [[102, "autodeer.hardware.dummy.dummyInterface.tune_pulse", false]], "tune_pulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune_pulse", false]], "tune_pulse() (brukerawg method)": [[88, "BrukerAWG.tune_pulse", false]], "tune_pulse() (brukermpfu method)": [[90, "BrukerMPFU.tune_pulse", false]], "tune_pulse() (dummyinterface method)": [[101, "dummyInterface.tune_pulse", false]], "tune_pulse() (eth_awg_interface method)": [[96, "ETH_awg_interface.tune_pulse", false]], "tune_pulses() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.tune_pulses", false]], "tune_pulses() (autodeerworker method)": [[70, "autoDEERWorker.tune_pulses", false]], "tune_rectpulse() (autodeer.hardware.bruker_awg.brukerawg method)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.dummy.dummyinterface method)": [[102, "autodeer.hardware.dummy.dummyInterface.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[97, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune_rectpulse", false]], "tune_rectpulse() (brukerawg method)": [[88, "BrukerAWG.tune_rectpulse", false]], "tune_rectpulse() (brukermpfu method)": [[90, "BrukerMPFU.tune_rectpulse", false]], "tune_rectpulse() (dummyinterface method)": [[101, "dummyInterface.tune_rectpulse", false]], "tune_rectpulse() (eth_awg_interface method)": [[96, "ETH_awg_interface.tune_rectpulse", false]], "tuning (autodeer.hardware.bruker_awg.brukerawg attribute)": [[89, "autodeer.hardware.Bruker_AWG.BrukerAWG.tuning", false]], "tuning (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[91, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tuning", false]], "tuning (brukerawg attribute)": [[88, "BrukerAWG.tuning", false]], "tuning (brukermpfu attribute)": [[90, "BrukerMPFU.tuning", false]], "twtprofilesequence (built-in class)": [[52, "TWTProfileSequence", false], [140, "TWTProfileSequence", false]], "twtprofilesequence (class in autodeer)": [[117, "autodeer.TWTProfileSequence", false]], "twtprofilesequence (class in autodeer.sequences)": [[141, "autodeer.sequences.TWTProfileSequence", false]], "ui (autodeer.gui.modetune.modetune attribute)": [[81, "autodeer.gui.modetune.ModeTune.ui", false]], "ui (modetune attribute)": [[79, "ModeTune.ui", false]], "unique_parvars (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.unique_parvars", false]], "unique_parvars (pulsespel attribute)": [[94, "PulseSpel.unique_parvars", false]], "unit (autodeer.classes.parameter attribute)": [[56, "autodeer.classes.Parameter.unit", false]], "unit (autodeer.parameter attribute)": [[117, "autodeer.Parameter.unit", false], [117, "id19", false], [117, "id190", false], [117, "id82", false]], "unit (parameter attribute)": [[33, "Parameter.unit", false], [55, "Parameter.unit", false]], "update_analysis_table() (autodeer.gui.quickdeer.deerplot method)": [[83, "autodeer.gui.quickdeer.DEERplot.update_analysis_table", false]], "update_analysis_table() (deerplot method)": [[82, "DEERplot.update_analysis_table", false]], "update_deer_settings() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.update_deer_settings", false]], "update_deer_settings() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.update_deer_settings", false]], "update_deer_settings() (autodeerui method)": [[68, "autoDEERUI.update_deer_settings", false], [77, "autoDEERUI.update_deer_settings", false]], "update_deersettings() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_deersettings", false]], "update_deersettings() (autodeerworker method)": [[70, "autoDEERWorker.update_deersettings", false]], "update_dip() (autodeer.gui.modetune.modetune method)": [[81, "autodeer.gui.modetune.ModeTune.update_dip", false]], "update_dip() (modetune method)": [[79, "ModeTune.update_dip", false]], "update_fieldsweep() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.update_fieldsweep", false]], "update_fieldsweep() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.update_fieldsweep", false]], "update_fieldsweep() (autodeerui method)": [[68, "autoDEERUI.update_fieldsweep", false], [77, "autoDEERUI.update_fieldsweep", false]], "update_figure() (autodeer.gui.modetune.modetune method)": [[81, "autodeer.gui.modetune.ModeTune.update_figure", false]], "update_figure() (autodeer.gui.quickdeer.deerplot method)": [[83, "autodeer.gui.quickdeer.DEERplot.update_figure", false]], "update_figure() (deerplot method)": [[82, "DEERplot.update_figure", false]], "update_figure() (modetune method)": [[79, "ModeTune.update_figure", false]], "update_fit_result() (autodeer.gui.quickdeer.deerplot method)": [[83, "autodeer.gui.quickdeer.DEERplot.update_fit_result", false]], "update_fit_result() (deerplot method)": [[82, "DEERplot.update_fit_result", false]], "update_gyro() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_gyro", false]], "update_gyro() (autodeerworker method)": [[70, "autoDEERWorker.update_gyro", false]], "update_inputs_from_dataset() (autodeer.gui.quickdeer.deerplot method)": [[83, "autodeer.gui.quickdeer.DEERplot.update_inputs_from_dataset", false]], "update_inputs_from_dataset() (deerplot method)": [[82, "DEERplot.update_inputs_from_dataset", false]], "update_lo() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_LO", false]], "update_lo() (autodeerworker method)": [[70, "autoDEERWorker.update_LO", false]], "update_log_text() (autodeer.gui.log.logdialog method)": [[74, "autodeer.gui.log.LogDialog.update_log_text", false]], "update_log_text() (logdialog method)": [[73, "LogDialog.update_log_text", false]], "update_longdeer() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.update_longdeer", false]], "update_longdeer() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.update_longdeer", false]], "update_longdeer() (autodeerui method)": [[68, "autoDEERUI.update_longdeer", false], [77, "autoDEERUI.update_longdeer", false]], "update_optimise_pulses_figure() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.update_optimise_pulses_figure", false]], "update_optimise_pulses_figure() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.update_optimise_pulses_figure", false]], "update_optimise_pulses_figure() (autodeerui method)": [[68, "autoDEERUI.update_optimise_pulses_figure", false], [77, "autoDEERUI.update_optimise_pulses_figure", false]], "update_quickdeer() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.update_quickdeer", false]], "update_quickdeer() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.update_quickdeer", false]], "update_quickdeer() (autodeerui method)": [[68, "autoDEERUI.update_quickdeer", false], [77, "autoDEERUI.update_quickdeer", false]], "update_relax() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.update_relax", false]], "update_relax() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.update_relax", false]], "update_relax() (autodeerui method)": [[68, "autoDEERUI.update_relax", false], [77, "autoDEERUI.update_relax", false]], "update_relax2d() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.update_relax2D", false]], "update_relax2d() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.update_relax2D", false]], "update_relax2d() (autodeerui method)": [[68, "autoDEERUI.update_relax2D", false], [77, "autoDEERUI.update_relax2D", false]], "update_reptime() (autodeer.gui.autodeer_worker.autodeerworker method)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_reptime", false]], "update_reptime() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.update_reptime", false]], "update_reptime() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.update_reptime", false]], "update_reptime() (autodeerui method)": [[68, "autoDEERUI.update_reptime", false], [77, "autoDEERUI.update_reptime", false]], "update_reptime() (autodeerworker method)": [[70, "autoDEERWorker.update_reptime", false]], "update_respro() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.update_respro", false]], "update_respro() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.update_respro", false]], "update_respro() (autodeerui method)": [[68, "autoDEERUI.update_respro", false], [77, "autoDEERUI.update_respro", false]], "update_t2() (autodeer.gui.autodeerui method)": [[72, "autodeer.gui.autoDEERUI.update_T2", false]], "update_t2() (autodeer.gui.main.autodeerui method)": [[78, "autodeer.gui.main.autoDEERUI.update_T2", false]], "update_t2() (autodeerui method)": [[68, "autoDEERUI.update_T2", false], [77, "autoDEERUI.update_T2", false]], "updaterate (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.updaterate", false]], "updaterate (autodeerworker attribute)": [[70, "autoDEERWorker.updaterate", false]], "user_inputs (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.user_inputs", false]], "user_inputs (autodeerworker attribute)": [[70, "autoDEERWorker.user_inputs", false]], "userinput (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.userinput", false]], "userinput (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.userinput", false]], "userinput (autodeerui attribute)": [[68, "autoDEERUI.userinput", false], [77, "autoDEERUI.userinput", false]], "uwb_eval_match() (in module autodeer.hardware.eth_awg_load)": [[98, "autodeer.hardware.ETH_awg_load.uwb_eval_match", false]], "uwb_load() (in module autodeer.hardware.eth_awg_load)": [[98, "autodeer.hardware.ETH_awg_load.uwb_load", false]], "val (autodeer.hardware.dummy_xepr.dummy_param attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_param.val", false]], "val (dummy_param attribute)": [[107, "dummy_param.val", false]], "val_in_ns() (in module autodeer)": [[117, "autodeer.val_in_ns", false]], "val_in_ns() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy.val_in_ns", false]], "val_in_ns() (in module autodeer.utils)": [[143, "autodeer.utils.val_in_ns", false]], "val_in_us() (in module autodeer)": [[117, "autodeer.val_in_us", false]], "val_in_us() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.val_in_us", false]], "val_in_us() (in module autodeer.hardware.dummy)": [[102, "autodeer.hardware.dummy.val_in_us", false]], "val_in_us() (in module autodeer.utils)": [[143, "autodeer.utils.val_in_us", false]], "value (autodeer.hardware.dummy_xepr.dummy_param property)": [[110, "autodeer.hardware.dummy_xepr.dummy_param.value", false]], "value (dummy_param property)": [[107, "dummy_param.value", false]], "var_hash (autodeer.hardware.bruker_tools.pulsespel attribute)": [[95, "autodeer.hardware.Bruker_tools.PulseSpel.var_hash", false]], "var_hash (pulsespel attribute)": [[94, "PulseSpel.var_hash", false]], "virtual (autodeer.classes.parameter attribute)": [[56, "autodeer.classes.Parameter.virtual", false]], "virtual (autodeer.parameter attribute)": [[117, "autodeer.Parameter.virtual", false], [117, "id192", false], [117, "id21", false], [117, "id84", false]], "virtual (parameter attribute)": [[33, "Parameter.virtual", false], [55, "Parameter.virtual", false]], "vpsave() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.vpSave", false]], "vpsave() (dummy_xepr.xeprcmds method)": [[108, "dummy_xepr.XeprCmds.vpSave", false]], "vpsave() (xeprcmds method)": [[109, "XeprCmds.vpSave", false]], "wait (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[71, "autodeer.gui.autoDEER_worker.autoDEERWorker.wait", false]], "wait (autodeerworker attribute)": [[70, "autoDEERWorker.wait", false]], "waitcondition (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.waitCondition", false]], "waitcondition (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.waitCondition", false]], "waitcondition (autodeerui attribute)": [[68, "autoDEERUI.waitCondition", false], [77, "autoDEERUI.waitCondition", false]], "width (autodeer.reporter.svgflowable attribute)": [[130, "autodeer.reporter.SvgFlowable.width", false]], "width (svgflowable attribute)": [[129, "SvgFlowable.width", false]], "window (autodeer.pulses.sincpulse attribute)": [[127, "autodeer.pulses.SincPulse.window", false]], "window (autodeer.sincpulse attribute)": [[117, "autodeer.SincPulse.window", false]], "window (in module autodeer.gui.__main__)": [[67, "autodeer.gui.__main__.window", false]], "window (sincpulse attribute)": [[50, "SincPulse.window", false], [126, "SincPulse.window", false]], "worker (autodeer.gui.autodeerui attribute)": [[72, "autodeer.gui.autoDEERUI.worker", false]], "worker (autodeer.gui.main.autodeerui attribute)": [[78, "autodeer.gui.main.autoDEERUI.worker", false]], "worker (autodeerui attribute)": [[68, "autoDEERUI.worker", false], [77, "autoDEERUI.worker", false]], "worker (built-in class)": [[65, "Worker", false], [75, "Worker", false], [85, "Worker", false]], "worker (class in autodeer.gui)": [[72, "autodeer.gui.Worker", false]], "worker (class in autodeer.gui.main)": [[78, "autodeer.gui.main.Worker", false]], "worker (class in autodeer.gui.tools)": [[87, "autodeer.gui.tools.Worker", false]], "workersignals (built-in class)": [[66, "WorkerSignals", false], [76, "WorkerSignals", false], [86, "WorkerSignals", false]], "workersignals (class in autodeer.gui)": [[72, "autodeer.gui.WorkerSignals", false]], "workersignals (class in autodeer.gui.main)": [[78, "autodeer.gui.main.WorkerSignals", false]], "workersignals (class in autodeer.gui.tools)": [[87, "autodeer.gui.tools.WorkerSignals", false]], "wrap() (autodeer.reporter.svgflowable method)": [[130, "autodeer.reporter.SvgFlowable.wrap", false]], "wrap() (svgflowable method)": [[129, "SvgFlowable.wrap", false]], "write_pulsespel_file() (in module autodeer.hardware.bruker_tools)": [[95, "autodeer.hardware.Bruker_tools.write_pulsespel_file", false]], "x (autodeer.hardware.dummy.dummyinterface attribute)": [[102, "autodeer.hardware.dummy.dummyInterface.x", false]], "x (dummyinterface attribute)": [[101, "dummyInterface.x", false]], "xepr (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.Xepr", false]], "xepr (xeprapilink attribute)": [[99, "XeprAPILink.Xepr", false]], "xepr_path (in module autodeer.hardware.xeprapi_link)": [[100, "autodeer.hardware.XeprAPI_link.xepr_path", false]], "xepr_save() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.xepr_save", false]], "xepr_save() (xeprapilink method)": [[99, "XeprAPILink.xepr_save", false]], "xeprapilink (built-in class)": [[99, "XeprAPILink", false]], "xeprapilink (class in autodeer.hardware.xeprapi_link)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink", false]], "xeprcmds (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[100, "autodeer.hardware.XeprAPI_link.XeprAPILink.XeprCmds", false]], "xeprcmds (built-in class)": [[109, "XeprCmds", false]], "xeprcmds (xeprapilink attribute)": [[99, "XeprAPILink.XeprCmds", false]], "xeprdataset() (autodeer.hardware.dummy_xepr.dummy_xepr method)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprDataset", false]], "xeprdataset() (dummy_xepr method)": [[108, "dummy_xepr.XeprDataset", false]], "xeprexperiment() (autodeer.hardware.dummy_xepr.dummy_xepr method)": [[110, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprExperiment", false]], "xeprexperiment() (dummy_xepr method)": [[108, "dummy_xepr.XeprExperiment", false]], "xspecres (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[110, "autodeer.hardware.dummy_xepr.dummy_cur_exp.XSpecRes", false]], "xspecres (dummy_cur_exp attribute)": [[104, "dummy_cur_exp.XSpecRes", false]]}, "objects": {"": [[88, 0, 1, "", "BrukerAWG"], [90, 0, 1, "", "BrukerMPFU"], [38, 0, 1, "", "CarrPurcellAnalysis"], [131, 0, 1, "", "CarrPurcellSequence"], [118, 0, 1, "", "ChirpPulse"], [58, 0, 1, "", "Criteria"], [112, 0, 1, "", "DEER"], [59, 0, 1, "", "DEERCriteria"], [132, 0, 1, "", "DEERSequence"], [82, 0, 1, "", "DEERplot"], [119, 0, 1, "", "Delay"], [120, 0, 1, "", "Detection"], [30, 0, 1, "", "DictFormater"], [113, 0, 1, "", "ELDORtune"], [63, 0, 1, "", "EPRAccessor"], [96, 0, 1, "", "ETH_awg_interface"], [23, 0, 1, "", "FieldSweepAnalysis"], [133, 0, 1, "", "FieldSweepSequence"], [121, 0, 1, "", "FrequencySweptPulse"], [122, 0, 1, "", "GaussianPulse"], [123, 0, 1, "", "HSPulse"], [134, 0, 1, "", "HahnEchoSequence"], [54, 0, 1, "", "Interface"], [73, 0, 1, "", "LogDialog"], [114, 0, 1, "", "MPFUtune"], [79, 0, 1, "", "ModeTune"], [92, 0, 1, "", "PSPhaseCycle"], [93, 0, 1, "", "PSparvar"], [55, 0, 1, "", "Parameter"], [124, 0, 1, "", "Pulse"], [115, 0, 1, "", "PulseProfile"], [94, 0, 1, "", "PulseSpel"], [31, 0, 1, "", "QtLogHandler"], [125, 0, 1, "", "RectPulse"], [39, 0, 1, "", "RefocusedEcho2DAnalysis"], [135, 0, 1, "", "RefocusedEcho2DSequence"], [128, 0, 1, "", "Reporter"], [43, 0, 1, "", "ReptimeAnalysis"], [136, 0, 1, "", "ReptimeScan"], [47, 0, 1, "", "ResonatorProfileAnalysis"], [137, 0, 1, "", "ResonatorProfileSequence"], [60, 0, 1, "", "SNRCriteria"], [138, 0, 1, "", "Sequence"], [126, 0, 1, "", "SincPulse"], [21, 0, 1, "", "SpinSystem"], [129, 0, 1, "", "SvgFlowable"], [139, 0, 1, "", "T2RelaxationSequence"], [140, 0, 1, "", "TWTProfileSequence"], [61, 0, 1, "", "TimeCriteria"], [85, 0, 1, "", "Worker"], [86, 0, 1, "", "WorkerSignals"], [99, 0, 1, "", "XeprAPILink"], [109, 0, 1, "", "XeprCmds"], [69, 0, 1, "", "autoDEERSignals"], [77, 0, 1, "", "autoDEERUI"], [70, 0, 1, "", "autoDEERWorker"], [117, 4, 0, "-", "autodeer"], [101, 0, 1, "", "dummyInterface"], [103, 0, 1, "", "dummy_api"], [104, 0, 1, "", "dummy_cur_exp"], [105, 0, 1, "", "dummy_dataset"], [106, 0, 1, "", "dummy_hidden"], [107, 0, 1, "", "dummy_param"], [108, 0, 1, "", "dummy_xepr"], [80, 0, 1, "", "get_dataWorker"]], "BrukerAWG": [[88, 1, 1, "", "_launch_complex_thread"], [88, 1, 1, "", "acquire_dataset"], [88, 2, 1, "", "api"], [88, 2, 1, "", "bg_data"], [88, 2, 1, "", "bg_thread"], [88, 2, 1, "", "bridge_config"], [88, 1, 1, "", "calc_d0"], [88, 1, 1, "", "calc_d0_from_Hahn_Echo"], [88, 1, 1, "", "connect"], [88, 2, 1, "", "cur_exp"], [88, 2, 1, "", "d0"], [88, 1, 1, "", "isrunning"], [88, 1, 1, "", "launch"], [88, 2, 1, "", "pool"], [88, 2, 1, "", "savefolder"], [88, 2, 1, "", "savename"], [88, 1, 1, "", "setup"], [88, 2, 1, "", "setup_flag"], [88, 2, 1, "", "spec_config"], [88, 2, 1, "", "temp_dir"], [88, 1, 1, "", "terminate"], [88, 1, 1, "", "tune_pulse"], [88, 1, 1, "", "tune_rectpulse"], [88, 2, 1, "", "tuning"]], "BrukerMPFU": [[90, 2, 1, "", "MPFU"], [90, 1, 1, "", "_launch_complex_thread"], [90, 1, 1, "", "acquire_dataset"], [90, 2, 1, "", "api"], [90, 2, 1, "", "bg_data"], [90, 2, 1, "", "bg_thread"], [90, 2, 1, "", "bridge_config"], [90, 1, 1, "", "calc_d0"], [90, 1, 1, "", "calc_d0_from_Hahn_Echo"], [90, 1, 1, "", "connect"], [90, 2, 1, "", "cur_exp"], [90, 2, 1, "", "d0"], [90, 1, 1, "", "isrunning"], [90, 1, 1, "", "launch"], [90, 2, 1, "", "pool"], [90, 2, 1, "", "savefolder"], [90, 2, 1, "", "savename"], [90, 1, 1, "", "setup"], [90, 2, 1, "", "setup_flag"], [90, 2, 1, "", "spec_config"], [90, 2, 1, "", "temp_dir"], [90, 1, 1, "", "terminate"], [90, 1, 1, "", "tune"], [90, 1, 1, "", "tune_pulse"], [90, 1, 1, "", "tune_rectpulse"], [90, 2, 1, "", "tuning"]], "CarrPurcellAnalysis": [[38, 1, 1, "", "check_decay"], [38, 2, 1, "", "data"], [38, 2, 1, "", "dataset"], [38, 1, 1, "", "find_optimal"], [38, 1, 1, "", "fit"], [38, 1, 1, "", "plot"]], "CarrPurcellSequence": [[131, 1, 1, "", "_build_sequence"], [131, 2, 1, "", "dim"], [131, 2, 1, "", "n"], [131, 2, 1, "", "name"], [131, 2, 1, "", "tau"]], "ChirpPulse": [[118, 1, 1, "", "func"], [118, 3, 1, "", "sweeprate"]], "Criteria": [[58, 1, 1, "", "__add__"], [58, 2, 1, "", "description"], [58, 2, 1, "", "end_signal"], [58, 2, 1, "", "name"], [58, 2, 1, "", "test"]], "DEER": [[112, 2, 1, "", "api"], [112, 2, 1, "", "awg"], [112, 2, 1, "", "d0"], [112, 2, 1, "", "det_frq"], [112, 2, 1, "", "hybrid"], [112, 2, 1, "", "mpfu"], [112, 2, 1, "", "pump_frq"], [112, 1, 1, "", "run_4p"], [112, 1, 1, "", "run_5p"], [112, 1, 1, "", "run_CP"], [112, 2, 1, "", "srt"]], "DEERCriteria": [[59, 2, 1, "", "description"], [59, 2, 1, "", "name"]], "DEERSequence": [[132, 2, 1, "", "ESEEM"], [132, 1, 1, "", "add_ESEEM_avg"], [132, 2, 1, "", "deadtime"], [132, 2, 1, "", "dt"], [132, 1, 1, "", "five_pulse"], [132, 1, 1, "", "four_pulse"], [132, 1, 1, "", "nDEER_CP"], [132, 2, 1, "", "name"], [132, 1, 1, "", "select_pcyc"], [132, 1, 1, "", "seven_pulse"], [132, 1, 1, "", "simulate"], [132, 2, 1, "", "tau1"], [132, 2, 1, "", "tau1us"], [132, 2, 1, "", "tau2"], [132, 1, 1, "", "three_pulse"]], "DEERplot": [[82, 2, 1, "", "DL_params"], [82, 1, 1, "", "clearLayout"], [82, 1, 1, "", "clear_all"], [82, 2, 1, "", "cores"], [82, 1, 1, "", "create_figure"], [82, 2, 1, "", "current_data"], [82, 2, 1, "", "current_folder"], [82, 2, 1, "", "current_results"], [82, 1, 1, "", "process_deeranalysis"], [82, 1, 1, "", "refresh_deer"], [82, 1, 1, "", "setup_inputs"], [82, 2, 1, "", "threadpool"], [82, 1, 1, "", "toolbar"], [82, 1, 1, "", "update_analysis_table"], [82, 1, 1, "", "update_figure"], [82, 1, 1, "", "update_fit_result"], [82, 1, 1, "", "update_inputs_from_dataset"]], "Delay": [[119, 2, 1, "", "pcyc"], [119, 2, 1, "", "scale"], [119, 2, 1, "", "tp"]], "Detection": [[120, 2, 1, "", "freq"], [120, 2, 1, "", "pcyc"], [120, 2, 1, "", "scale"]], "DictFormater": [[30, 1, 1, "", "format"]], "ELDORtune": [[113, 1, 1, "", "_get_exp"], [113, 1, 1, "", "_setup_exp"], [113, 2, 1, "", "api"], [113, 2, 1, "", "d0"], [113, 1, 1, "", "find_min"], [113, 2, 1, "", "hardware_wait"], [113, 2, 1, "", "ps_length"], [113, 2, 1, "", "srt"], [113, 1, 1, "", "tune"]], "EPRAccessor": [[63, 3, 1, "", "MeasurementTime"], [63, 3, 1, "", "SNR"], [63, 2, 1, "", "_obj"], [63, 3, 1, "", "correctphase"], [63, 3, 1, "", "correctphasefull"], [63, 3, 1, "", "fft"], [63, 3, 1, "", "normalise"], [63, 1, 1, "", "save"], [63, 3, 1, "", "sequence"]], "ETH_awg_interface": [[96, 2, 1, "", "IFgain"], [96, 2, 1, "", "IFgain_options"], [96, 1, 1, "", "_build_exp_struct"], [96, 1, 1, "", "_build_parvar"], [96, 1, 1, "", "_build_phase_cycle"], [96, 1, 1, "", "_build_pulse"], [96, 1, 1, "", "acquire_dataset"], [96, 1, 1, "", "acquire_dataset_from_matlab"], [96, 2, 1, "", "awg_freq"], [96, 2, 1, "", "bg_data"], [96, 2, 1, "", "bg_thread"], [96, 1, 1, "", "connect"], [96, 2, 1, "", "cur_exp"], [96, 2, 1, "", "dig_rate"], [96, 1, 1, "", "isrunning"], [96, 1, 1, "", "launch"], [96, 1, 1, "", "launch_long"], [96, 1, 1, "", "launch_normal"], [96, 1, 1, "", "launch_withIFGain"], [96, 2, 1, "", "pulses"], [96, 3, 1, "", "savefolder"], [96, 1, 1, "", "terminate"], [96, 1, 1, "", "tune"], [96, 1, 1, "", "tune_pulse"], [96, 1, 1, "", "tune_rectpulse"]], "FieldSweepAnalysis": [[23, 1, 1, "", "calc_gyro"], [23, 1, 1, "", "calc_noise_level"], [23, 2, 1, "", "data"], [23, 1, 1, "", "find_max"], [23, 1, 1, "", "fit"], [23, 1, 1, "", "plot"], [23, 1, 1, "", "smooth"]], "FieldSweepSequence": [[133, 2, 1, "", "B"], [133, 2, 1, "", "name"]], "FrequencySweptPulse": [[121, 3, 1, "", "Qcrit"], [121, 3, 1, "", "amp_factor"], [121, 3, 1, "", "sweeprate"]], "GaussianPulse": [[122, 2, 1, "", "FWHM"], [122, 2, 1, "", "freq"], [122, 1, 1, "", "func"]], "HSPulse": [[123, 2, 1, "", "beta"], [123, 1, 1, "", "func"], [123, 2, 1, "", "order1"], [123, 2, 1, "", "order2"], [123, 3, 1, "", "sweeprate"]], "HahnEchoSequence": [[134, 2, 1, "", "name"]], "Interface": [[54, 1, 1, "", "acquire_dataset"], [54, 1, 1, "", "connect"], [54, 1, 1, "", "isrunning"], [54, 1, 1, "", "launch"], [54, 2, 1, "", "pulses"], [54, 2, 1, "", "resonator"], [54, 2, 1, "", "savefolder"], [54, 2, 1, "", "savename"], [54, 1, 1, "", "terminate"], [54, 1, 1, "", "terminate_at"]], "LogDialog": [[73, 1, 1, "", "add_new_entry"], [73, 1, 1, "", "clear_log"], [73, 2, 1, "", "core_logger"], [73, 2, 1, "", "hardware_logger"], [73, 2, 1, "", "log"], [73, 2, 1, "", "log_levels"], [73, 1, 1, "", "save_log_to_file"], [73, 1, 1, "", "update_log_text"]], "MPFUtune": [[114, 1, 1, "", "_setup_echo"], [114, 2, 1, "", "api"], [114, 1, 1, "", "calc_d0"], [114, 2, 1, "", "d0"], [114, 2, 1, "", "hardware_wait"], [114, 2, 1, "", "ps_length"], [114, 2, 1, "", "srt"], [114, 1, 1, "", "tune"], [114, 1, 1, "", "tune_phase"], [114, 1, 1, "", "tune_power"]], "ModeTune": [[79, 1, 1, "", "create_figure"], [79, 2, 1, "", "interface"], [79, 1, 1, "", "start_mode_tune"], [79, 2, 1, "", "ui"], [79, 1, 1, "", "update_dip"], [79, 1, 1, "", "update_figure"]], "PSPhaseCycle": [[92, 2, 1, "", "BPhaseCycles"], [92, 1, 1, "", "_MPFU"], [92, 1, 1, "", "__str__"], [92, 1, 1, "", "_detect"], [92, 1, 1, "", "_main"], [92, 2, 1, "", "detect_dicts"]], "PSparvar": [[93, 2, 1, "", "PulseSpel"], [93, 1, 1, "", "checkPulseSpel"], [93, 2, 1, "", "events"], [93, 2, 1, "", "parvar"], [93, 2, 1, "", "progTable"], [93, 2, 1, "", "progTable_n"]], "Parameter": [[55, 1, 1, "", "__add__"], [55, 1, 1, "", "__eq__"], [55, 1, 1, "", "__mul__"], [55, 1, 1, "", "__rmul__"], [55, 1, 1, "", "__sub__"], [55, 1, 1, "", "_from_dict"], [55, 1, 1, "", "_from_json"], [55, 1, 1, "", "_to_dict"], [55, 1, 1, "", "_to_json"], [55, 1, 1, "", "add_axis"], [55, 2, 1, "", "ax_id"], [55, 2, 1, "", "axis"], [55, 1, 1, "", "copy"], [55, 2, 1, "", "description"], [55, 3, 1, "", "dim"], [55, 1, 1, "", "get_axis"], [55, 1, 1, "", "is_static"], [55, 1, 1, "", "load"], [55, 2, 1, "", "name"], [55, 1, 1, "", "remove_dynamic"], [55, 1, 1, "", "save"], [55, 2, 1, "", "unit"], [55, 2, 1, "", "virtual"]], "Pulse": [[124, 2, 1, "", "Progression"], [124, 1, 1, "", "__str__"], [124, 1, 1, "", "_addPhaseCycle"], [124, 1, 1, "", "_buildFMAM"], [124, 1, 1, "", "_calc_fft"], [124, 1, 1, "", "_from_dict"], [124, 1, 1, "", "_from_json"], [124, 1, 1, "", "_pcyc_str"], [124, 1, 1, "", "_to_dict"], [124, 1, 1, "", "_to_json"], [124, 3, 1, "", "amp_factor"], [124, 3, 1, "", "bandwidth"], [124, 1, 1, "", "build_shape"], [124, 1, 1, "", "build_table"], [124, 1, 1, "", "copy"], [124, 1, 1, "", "exciteprofile"], [124, 1, 1, "", "exciteprofile_old"], [124, 1, 1, "", "isDelayFocused"], [124, 1, 1, "", "isPulseFocused"], [124, 1, 1, "", "is_static"], [124, 1, 1, "", "load"], [124, 2, 1, "", "name"], [124, 1, 1, "", "plot"], [124, 1, 1, "", "plot_fft"], [124, 1, 1, "", "save"]], "PulseProfile": [[115, 1, 1, "", "_freq_sweep"], [115, 1, 1, "", "_setup_exp"], [115, 2, 1, "", "api"], [115, 2, 1, "", "d0"], [115, 2, 1, "", "hardware_wait"], [115, 2, 1, "", "ps_length"], [115, 2, 1, "", "srt"]], "PulseSpel": [[94, 2, 1, "", "AWG"], [94, 2, 1, "", "MPFU"], [94, 1, 1, "", "_ExpDefs"], [94, 1, 1, "", "__str__"], [94, 1, 1, "", "_addAWGPulse"], [94, 1, 1, "", "_addDef"], [94, 1, 1, "", "_addExp"], [94, 1, 1, "", "_addPhaseCycle"], [94, 1, 1, "", "_addScanLoop"], [94, 1, 1, "", "_check_sequence"], [94, 1, 1, "", "_cmpl_Exp"], [94, 1, 1, "", "_cmpl_def"], [94, 1, 1, "", "_new_delay"], [94, 1, 1, "", "_new_pulse"], [94, 1, 1, "", "_new_var"], [94, 2, 1, "", "def_file_str"], [94, 2, 1, "", "dims"], [94, 2, 1, "", "exp_file_str"], [94, 2, 1, "", "parvars"], [94, 2, 1, "", "pcyc_str"], [94, 2, 1, "", "place_hash"], [94, 2, 1, "", "possible_delays"], [94, 2, 1, "", "possible_pulses"], [94, 2, 1, "", "possible_vars"], [94, 2, 1, "", "rel_positions"], [94, 1, 1, "", "save"], [94, 2, 1, "", "sequence"], [94, 2, 1, "", "step_hash"], [94, 2, 1, "", "unique_parvars"], [94, 2, 1, "", "var_hash"]], "QtLogHandler": [[31, 1, 1, "", "emit"], [31, 2, 1, "", "signal"]], "RectPulse": [[125, 2, 1, "", "freq"], [125, 1, 1, "", "func"]], "RefocusedEcho2DAnalysis": [[39, 1, 1, "", "_smooth"], [39, 2, 1, "", "axis"], [39, 2, 1, "", "data"], [39, 2, 1, "", "dataset"], [39, 1, 1, "", "find_optimal"], [39, 1, 1, "", "optimal_tau1"], [39, 1, 1, "", "plot1D"], [39, 1, 1, "", "plot2D"]], "RefocusedEcho2DSequence": [[135, 1, 1, "", "_build_sequence"], [135, 2, 1, "", "dt"], [135, 2, 1, "", "name"], [135, 2, 1, "", "tau1"], [135, 2, 1, "", "tau2"], [135, 2, 1, "", "tau_init"]], "Reporter": [[128, 1, 1, "", "_build"], [128, 1, 1, "", "add_code_block"], [128, 1, 1, "", "add_figure"], [128, 1, 1, "", "add_new_section"], [128, 1, 1, "", "add_page_break"], [128, 1, 1, "", "add_space"], [128, 1, 1, "", "add_table"], [128, 1, 1, "", "add_text"], [128, 1, 1, "", "add_title"], [128, 1, 1, "", "footer"], [128, 2, 1, "", "frame"], [128, 1, 1, "", "header"], [128, 2, 1, "", "pdf"], [128, 2, 1, "", "story"], [128, 2, 1, "", "template"]], "ReptimeAnalysis": [[43, 2, 1, "", "axis"], [43, 1, 1, "", "calc_optimal_reptime"], [43, 1, 1, "", "fit"], [43, 1, 1, "", "plot"], [43, 2, 1, "", "seq"]], "ReptimeScan": [[136, 2, 1, "", "dim"], [136, 2, 1, "", "min_reptime"], [136, 2, 1, "", "name"], [136, 2, 1, "", "reptime"], [136, 2, 1, "", "step"]], "ResonatorProfileAnalysis": [[47, 1, 1, "", "_process_fit"], [47, 2, 1, "", "dataset"], [47, 2, 1, "", "f_lims"], [47, 1, 1, "", "fit"], [47, 2, 1, "", "n_files"], [47, 1, 1, "", "plot"], [47, 1, 1, "", "process_nutations"], [47, 2, 1, "", "t"]], "ResonatorProfileSequence": [[137, 1, 1, "", "_build_sequence"], [137, 2, 1, "", "fwidth"], [137, 2, 1, "", "gyro"], [137, 2, 1, "", "name"]], "Sequence": [[138, 2, 1, "", "LO"], [138, 1, 1, "", "__str__"], [138, 1, 1, "", "_buildPhaseCycle"], [138, 1, 1, "", "_checkRect"], [138, 1, 1, "", "_estimate_time"], [138, 1, 1, "", "_from_dict"], [138, 1, 1, "", "_from_json"], [138, 1, 1, "", "_to_dict"], [138, 1, 1, "", "_to_json"], [138, 1, 1, "", "addPulse"], [138, 2, 1, "", "averages"], [138, 2, 1, "", "axes_uuid"], [138, 1, 1, "", "copy"], [138, 1, 1, "", "evolution"], [138, 1, 1, "", "load"], [138, 2, 1, "", "name"], [138, 2, 1, "", "num_pulses"], [138, 1, 1, "", "plot"], [138, 1, 1, "", "plot_pulse_exc"], [138, 2, 1, "", "progTable"], [138, 2, 1, "", "pulses"], [138, 2, 1, "", "reduce_uuid"], [138, 1, 1, "", "save"], [138, 3, 1, "", "seqtable_steps"], [138, 1, 1, "", "shift_detfreq_to_zero"], [138, 2, 1, "", "shots"]], "SincPulse": [[126, 2, 1, "", "freq"], [126, 1, 1, "", "func"], [126, 2, 1, "", "order"], [126, 2, 1, "", "window"]], "SpinSystem": [[21, 2, 1, "", "A"], [21, 2, 1, "", "I"], [21, 2, 1, "", "S"], [21, 2, 1, "", "Spins"], [21, 2, 1, "", "g"], [21, 2, 1, "", "gnscale"], [21, 2, 1, "", "nElectrons"], [21, 2, 1, "", "nNuclei"], [21, 2, 1, "", "nStates"]], "SvgFlowable": [[129, 1, 1, "", "draw"], [129, 2, 1, "", "drawing"], [129, 2, 1, "", "height"], [129, 2, 1, "", "width"], [129, 1, 1, "", "wrap"]], "T2RelaxationSequence": [[139, 2, 1, "", "name"], [139, 2, 1, "", "tau"]], "TWTProfileSequence": [[140, 1, 1, "", "_build_sequence"], [140, 2, 1, "", "name"]], "Worker": [[85, 2, 1, "", "args"], [85, 2, 1, "", "fn"], [85, 2, 1, "", "kwargs"], [85, 1, 1, "", "run"], [85, 2, 1, "", "signals"]], "WorkerSignals": [[86, 2, 1, "", "error"], [86, 2, 1, "", "finished"], [76, 2, 1, "", "progress"], [86, 2, 1, "", "result"]], "XeprAPILink": [[99, 2, 1, "", "Xepr"], [99, 2, 1, "", "XeprCmds"], [99, 1, 1, "", "_get_Xepr_global"], [99, 1, 1, "", "_get_cur_exp_global"], [99, 1, 1, "", "_set_Xepr_global"], [99, 1, 1, "", "_set_cur_exp_global"], [99, 1, 1, "", "_set_cur_exp_param"], [99, 1, 1, "", "_set_hidden_param"], [99, 2, 1, "", "_tmp_dir"], [99, 1, 1, "", "_xepr_retry"], [99, 1, 1, "", "abort_exp"], [99, 1, 1, "", "acquire_dataset"], [99, 1, 1, "", "acquire_scan"], [99, 1, 1, "", "acquire_scan_2d"], [99, 1, 1, "", "acquire_scan_at"], [99, 1, 1, "", "compile_PulseSpel_def"], [99, 1, 1, "", "compile_PulseSpel_prg"], [99, 1, 1, "", "connect"], [99, 2, 1, "", "cur_exp"], [99, 1, 1, "", "find_Xepr"], [99, 1, 1, "", "find_cur_exp"], [99, 1, 1, "", "find_hidden"], [99, 1, 1, "", "get_Acquisition_mode"], [99, 1, 1, "", "get_ELDOR_freq"], [99, 1, 1, "", "get_MW_amp"], [99, 1, 1, "", "get_PhaseCycle"], [99, 1, 1, "", "get_PulseSpel_def_filename"], [99, 1, 1, "", "get_PulseSpel_def_filepath"], [99, 1, 1, "", "get_PulseSpel_exp_filename"], [99, 1, 1, "", "get_PulseSpel_exp_filepath"], [99, 1, 1, "", "get_PulseSpel_experiment"], [99, 1, 1, "", "get_PulseSpel_phase_cycling"], [99, 1, 1, "", "get_ReplaceMode"], [99, 1, 1, "", "get_attenuator"], [99, 1, 1, "", "get_config_file"], [99, 1, 1, "", "get_counterfreq"], [99, 1, 1, "", "get_field"], [99, 1, 1, "", "get_freq"], [99, 1, 1, "", "get_hidden_param"], [99, 1, 1, "", "get_param"], [99, 1, 1, "", "get_phase"], [99, 1, 1, "", "get_spec_config"], [99, 1, 1, "", "get_sweep_width"], [99, 1, 1, "", "get_video_bandwidth"], [99, 1, 1, "", "get_video_gain"], [99, 2, 1, "", "hidden"], [99, 1, 1, "", "is_exp_running"], [99, 1, 1, "", "pause_exp"], [99, 1, 1, "", "rerun_exp"], [99, 1, 1, "", "run_exp"], [99, 1, 1, "", "save_PulseSpel_def"], [99, 1, 1, "", "save_PulseSpel_exp"], [99, 1, 1, "", "set_Acquisition_mode"], [99, 1, 1, "", "set_ELDOR_freq"], [99, 1, 1, "", "set_MW_amp"], [99, 1, 1, "", "set_PhaseCycle"], [99, 1, 1, "", "set_PulseSpel_def_filepath"], [99, 1, 1, "", "set_PulseSpel_exp_filepath"], [99, 1, 1, "", "set_PulseSpel_experiment"], [99, 1, 1, "", "set_PulseSpel_phase_cycling"], [99, 1, 1, "", "set_PulseSpel_var"], [99, 1, 1, "", "set_ReplaceMode"], [99, 1, 1, "", "set_attenuator"], [99, 1, 1, "", "set_config_file"], [99, 1, 1, "", "set_field"], [99, 1, 1, "", "set_freq"], [99, 1, 1, "", "set_hidden_param"], [99, 1, 1, "", "set_param"], [99, 1, 1, "", "set_phase"], [99, 1, 1, "", "set_sweep_width"], [99, 1, 1, "", "set_video_bandwidth"], [99, 1, 1, "", "set_video_gain"], [99, 1, 1, "", "stop_exp"], [99, 1, 1, "", "xepr_save"]], "XeprCmds": [[109, 1, 1, "", "aqExpSelect"], [109, 1, 1, "", "aqPgCompile"], [109, 1, 1, "", "aqPgDefLoad"], [109, 1, 1, "", "aqPgDefSaveAs"], [109, 1, 1, "", "aqPgLoad"], [109, 1, 1, "", "aqPgSaveAs"], [109, 1, 1, "", "aqPgShowPrg"], [109, 1, 1, "", "vpSave"]], "autoDEERSignals": [[69, 2, 1, "", "Relax2D_result"], [69, 2, 1, "", "T2_result"], [69, 2, 1, "", "error"], [69, 2, 1, "", "finished"], [69, 2, 1, "", "fsweep_result"], [69, 2, 1, "", "longdeer_result"], [69, 2, 1, "", "longdeer_update"], [69, 2, 1, "", "progress"], [69, 2, 1, "", "quickdeer_result"], [69, 2, 1, "", "quickdeer_update"], [69, 2, 1, "", "relax_result"], [69, 2, 1, "", "reptime_scan_result"], [69, 2, 1, "", "respro_result"], [69, 2, 1, "", "result"], [69, 2, 1, "", "status"], [69, 2, 1, "", "timeout"]], "autoDEERUI": [[77, 2, 1, "", "Bruker"], [77, 2, 1, "", "DL_params"], [77, 2, 1, "", "LO"], [77, 2, 1, "", "Min_tp"], [77, 1, 1, "", "RunAdvancedAutoDEER"], [77, 1, 1, "", "RunAutoDEER"], [77, 1, 1, "", "RunFullyAutoDEER"], [77, 1, 1, "", "advanced_mode_inputs"], [77, 1, 1, "", "change_LO"], [77, 1, 1, "", "check_CP"], [77, 1, 1, "", "check_T2"], [77, 1, 1, "", "clear_all"], [77, 2, 1, "", "config"], [77, 1, 1, "", "connect_spectrometer"], [77, 2, 1, "", "connected"], [77, 2, 1, "", "cores"], [77, 2, 1, "", "correction_factor"], [77, 1, 1, "", "create_fieldsweep_figure"], [77, 1, 1, "", "create_relax_figure"], [77, 1, 1, "", "create_report"], [77, 1, 1, "", "create_respro_figure"], [77, 2, 1, "", "current_data"], [77, 2, 1, "", "current_folder"], [77, 2, 1, "", "current_results"], [77, 2, 1, "", "deer_settings"], [77, 2, 1, "", "discussion_url"], [77, 2, 1, "", "docs_url"], [77, 1, 1, "", "fsweep_toolbar"], [77, 2, 1, "", "github_url"], [77, 2, 1, "", "gyro"], [77, 1, 1, "", "initialise_deer_settings"], [77, 2, 1, "", "issues_url"], [77, 1, 1, "", "load_epr_file"], [77, 1, 1, "", "load_folder"], [77, 1, 1, "", "load_spectrometer_config"], [77, 2, 1, "", "logo_pixmap"], [77, 2, 1, "", "longDEER"], [77, 1, 1, "", "optimise_pulses"], [77, 1, 1, "", "optimise_pulses_button"], [77, 2, 1, "", "priorties"], [77, 2, 1, "", "pulses"], [77, 2, 1, "", "q_DEER"], [77, 2, 1, "", "queue"], [77, 1, 1, "", "raise_warning"], [77, 1, 1, "", "refresh_T2"], [77, 1, 1, "", "refresh_fieldsweep_after_fit"], [77, 1, 1, "", "refresh_relax"], [77, 1, 1, "", "refresh_relax_figure"], [77, 1, 1, "", "refresh_respro"], [77, 1, 1, "", "relax_toolbar"], [77, 1, 1, "", "respro_toolbar"], [77, 1, 1, "", "save_data"], [77, 1, 1, "", "select_resonator"], [77, 1, 1, "", "set_spectrometer_connected_light"], [77, 2, 1, "", "spectromterInterface"], [77, 2, 1, "", "starttime"], [77, 2, 1, "", "threadpool"], [77, 1, 1, "", "timeout"], [77, 1, 1, "", "update_T2"], [77, 1, 1, "", "update_deer_settings"], [77, 1, 1, "", "update_fieldsweep"], [77, 1, 1, "", "update_longdeer"], [77, 1, 1, "", "update_optimise_pulses_figure"], [77, 1, 1, "", "update_quickdeer"], [77, 1, 1, "", "update_relax"], [77, 1, 1, "", "update_relax2D"], [77, 1, 1, "", "update_reptime"], [77, 1, 1, "", "update_respro"], [77, 2, 1, "", "userinput"], [77, 2, 1, "", "waitCondition"], [77, 2, 1, "", "worker"]], "autoDEERWorker": [[70, 2, 1, "", "AWG"], [70, 2, 1, "", "EndTimeCriteria"], [70, 2, 1, "", "LO"], [70, 1, 1, "", "_build_methods"], [70, 2, 1, "", "args"], [70, 2, 1, "", "deer_inputs"], [70, 2, 1, "", "gyro"], [70, 2, 1, "", "interface"], [70, 2, 1, "", "kwargs"], [70, 2, 1, "", "max_tau"], [70, 2, 1, "", "mutex"], [70, 1, 1, "", "new_data"], [70, 1, 1, "", "new_pulses"], [70, 1, 1, "", "pause_and_wait"], [70, 2, 1, "", "project"], [70, 2, 1, "", "pulses"], [70, 2, 1, "", "quick_deer_state"], [70, 2, 1, "", "results"], [70, 1, 1, "", "run"], [70, 1, 1, "", "run_2D_relax"], [70, 1, 1, "", "run_CP_relax"], [70, 1, 1, "", "run_T2_relax"], [70, 1, 1, "", "run_deer"], [70, 1, 1, "", "run_fsweep"], [70, 1, 1, "", "run_long_deer"], [70, 1, 1, "", "run_quick_deer"], [70, 1, 1, "", "run_reptime_opt"], [70, 1, 1, "", "run_respro"], [70, 2, 1, "", "samplename"], [70, 2, 1, "", "savename"], [70, 1, 1, "", "set_2D_max_tau"], [70, 1, 1, "", "set_noise_mode"], [70, 2, 1, "", "signals"], [70, 1, 1, "", "stop"], [70, 2, 1, "", "stop_flag"], [70, 2, 1, "", "test_interval"], [70, 1, 1, "", "tune_pulses"], [70, 1, 1, "", "update_LO"], [70, 1, 1, "", "update_deersettings"], [70, 1, 1, "", "update_gyro"], [70, 1, 1, "", "update_reptime"], [70, 2, 1, "", "updaterate"], [70, 2, 1, "", "user_inputs"], [70, 2, 1, "", "wait"]], "autodeer": [[117, 0, 1, "", "CarrPurcellAnalysis"], [117, 0, 1, "", "CarrPurcellSequence"], [117, 0, 1, "", "ChirpPulse"], [117, 0, 1, "id249", "DEERSequence"], [16, 4, 0, "-", "DEER_analysis"], [117, 0, 1, "id139", "Delay"], [117, 0, 1, "id175", "Detection"], [117, 0, 1, "", "EPRAccessor"], [22, 4, 0, "-", "FieldSweep"], [117, 0, 1, "", "FieldSweepAnalysis"], [117, 0, 1, "", "FieldSweepSequence"], [117, 0, 1, "", "FrequencySweptPulse"], [117, 0, 1, "", "GaussianPulse"], [117, 0, 1, "", "HSPulse"], [117, 0, 1, "", "HahnEchoSequence"], [117, 0, 1, "id211", "Interface"], [32, 4, 0, "-", "Logging"], [117, 0, 1, "id179", "Parameter"], [117, 0, 1, "id147", "Pulse"], [117, 0, 1, "id143", "RectPulse"], [117, 0, 1, "", "RefocusedEcho2DAnalysis"], [117, 0, 1, "", "RefocusedEcho2DSequence"], [41, 4, 0, "-", "Relaxation"], [117, 0, 1, "", "Reporter"], [117, 0, 1, "", "ReptimeAnalysis"], [117, 0, 1, "", "ReptimeScan"], [46, 4, 0, "-", "ResPro"], [117, 0, 1, "", "ResonatorProfileAnalysis"], [117, 0, 1, "", "ResonatorProfileSequence"], [117, 0, 1, "id222", "Sequence"], [117, 0, 1, "", "SincPulse"], [117, 0, 1, "", "T2RelaxationSequence"], [117, 0, 1, "", "TWTProfileSequence"], [117, 6, 1, "", "__version__"], [53, 4, 0, "-", "_version"], [117, 5, 1, "id146", "autoEPRDecoder"], [117, 5, 1, "", "build_default_pulses"], [117, 5, 1, "id103", "build_table"], [56, 4, 0, "-", "classes"], [117, 6, 1, "", "cmap"], [57, 4, 0, "-", "colors"], [117, 5, 1, "", "combo_figure"], [117, 5, 1, "", "create_dataset_from_axes"], [117, 5, 1, "", "create_dataset_from_bruker"], [117, 5, 1, "", "create_dataset_from_sequence"], [62, 4, 0, "-", "criteria"], [64, 4, 0, "-", "dataset"], [117, 5, 1, "", "detect_ESEEM"], [117, 5, 1, "", "eprload"], [117, 5, 1, "", "gcd"], [117, 5, 1, "", "get_all_axes"], [117, 5, 1, "", "get_all_fixed_param"], [72, 4, 0, "-", "gui"], [111, 4, 0, "-", "hardware"], [117, 5, 1, "", "optimise_spectra_position"], [117, 5, 1, "", "plot_1Drelax"], [117, 6, 1, "", "primary_colors"], [127, 4, 0, "-", "pulses"], [130, 4, 0, "-", "reporter"], [117, 5, 1, "", "round_step"], [117, 5, 1, "", "save_file"], [141, 4, 0, "-", "sequences"], [117, 5, 1, "id104", "sop"], [142, 4, 0, "-", "tools"], [117, 5, 1, "", "transpose_dict_of_list"], [117, 5, 1, "", "transpose_list_of_dicts"], [143, 4, 0, "-", "utils"], [117, 5, 1, "", "val_in_ns"], [117, 5, 1, "", "val_in_us"]], "autodeer.CarrPurcellAnalysis": [[117, 1, 1, "", "check_decay"], [117, 2, 1, "", "data"], [117, 2, 1, "", "dataset"], [117, 1, 1, "", "find_optimal"], [117, 1, 1, "", "fit"], [117, 1, 1, "", "plot"]], "autodeer.CarrPurcellSequence": [[117, 1, 1, "", "_build_sequence"], [117, 2, 1, "", "dim"], [117, 2, 1, "", "n"], [117, 2, 1, "", "name"], [117, 2, 1, "", "tau"]], "autodeer.ChirpPulse": [[117, 1, 1, "", "func"], [117, 3, 1, "", "sweeprate"]], "autodeer.DEERSequence": [[117, 2, 1, "id256", "ESEEM"], [117, 1, 1, "id257", "add_ESEEM_avg"], [117, 2, 1, "id255", "deadtime"], [117, 2, 1, "id254", "dt"], [117, 1, 1, "id260", "five_pulse"], [117, 1, 1, "id259", "four_pulse"], [117, 1, 1, "id262", "nDEER_CP"], [117, 2, 1, "id250", "name"], [117, 1, 1, "id263", "select_pcyc"], [117, 1, 1, "id261", "seven_pulse"], [117, 1, 1, "id264", "simulate"], [117, 2, 1, "id252", "tau1"], [117, 2, 1, "id251", "tau1us"], [117, 2, 1, "id253", "tau2"], [117, 1, 1, "id258", "three_pulse"]], "autodeer.DEER_analysis": [[16, 5, 1, "", "DEERanalysis"], [16, 5, 1, "", "DEERanalysis_plot"], [16, 5, 1, "", "DEERanalysis_plot_pub"], [16, 5, 1, "", "IdentifyROI"], [16, 5, 1, "", "MNR_estimate"], [16, 6, 1, "", "MODULE_DIR"], [16, 5, 1, "", "background_func"], [16, 5, 1, "", "build__lowpass_butter_filter"], [16, 5, 1, "", "calc_correction_factor"], [16, 5, 1, "", "calc_deer_settings"], [16, 5, 1, "", "calc_identifiability"], [16, 5, 1, "", "find_longest_pulse"], [16, 5, 1, "", "functional"], [16, 6, 1, "", "log"], [16, 5, 1, "", "normalise_01"], [16, 5, 1, "", "optimise_pulses"], [16, 5, 1, "", "plot_overlap"], [16, 5, 1, "", "remove_echo"], [16, 5, 1, "", "resample_and_shift_vector"], [16, 5, 1, "", "shift_pulse_freq"], [16, 5, 1, "", "val_in_us"]], "autodeer.Delay": [[117, 2, 1, "id141", "pcyc"], [117, 2, 1, "id142", "scale"], [117, 2, 1, "id140", "tp"]], "autodeer.Detection": [[117, 2, 1, "id177", "freq"], [117, 2, 1, "id178", "pcyc"], [117, 2, 1, "id176", "scale"]], "autodeer.EPRAccessor": [[117, 3, 1, "", "MeasurementTime"], [117, 3, 1, "", "SNR"], [117, 2, 1, "", "_obj"], [117, 3, 1, "", "correctphase"], [117, 3, 1, "", "correctphasefull"], [117, 3, 1, "", "fft"], [117, 3, 1, "", "normalise"], [117, 1, 1, "", "save"], [117, 3, 1, "", "sequence"]], "autodeer.FieldSweep": [[22, 0, 1, "", "FieldSweepAnalysis"], [22, 0, 1, "", "SpinSystem"], [22, 5, 1, "", "build_spectrum"], [22, 5, 1, "", "create_Nmodel"], [22, 5, 1, "", "erot"], [22, 5, 1, "", "eyekron"], [22, 5, 1, "", "ham"], [22, 5, 1, "", "ham_ez"], [22, 5, 1, "", "ham_nz"], [22, 5, 1, "", "kroneye"], [22, 5, 1, "", "resfields"]], "autodeer.FieldSweep.FieldSweepAnalysis": [[22, 1, 1, "", "calc_gyro"], [22, 1, 1, "", "calc_noise_level"], [22, 2, 1, "", "data"], [22, 1, 1, "", "find_max"], [22, 1, 1, "", "fit"], [22, 1, 1, "", "plot"], [22, 1, 1, "", "smooth"]], "autodeer.FieldSweep.SpinSystem": [[22, 2, 1, "", "A"], [22, 2, 1, "", "I"], [22, 2, 1, "", "S"], [22, 2, 1, "", "Spins"], [22, 2, 1, "", "g"], [22, 2, 1, "", "gnscale"], [22, 2, 1, "", "nElectrons"], [22, 2, 1, "", "nNuclei"], [22, 2, 1, "", "nStates"]], "autodeer.FieldSweepAnalysis": [[117, 1, 1, "", "calc_gyro"], [117, 1, 1, "", "calc_noise_level"], [117, 2, 1, "", "data"], [117, 1, 1, "", "find_max"], [117, 1, 1, "", "fit"], [117, 1, 1, "", "plot"], [117, 1, 1, "", "smooth"]], "autodeer.FieldSweepSequence": [[117, 2, 1, "", "B"], [117, 2, 1, "", "name"]], "autodeer.FrequencySweptPulse": [[117, 3, 1, "", "Qcrit"], [117, 3, 1, "", "amp_factor"], [117, 3, 1, "", "sweeprate"]], "autodeer.GaussianPulse": [[117, 2, 1, "", "FWHM"], [117, 2, 1, "", "freq"], [117, 1, 1, "", "func"]], "autodeer.HSPulse": [[117, 2, 1, "", "beta"], [117, 1, 1, "", "func"], [117, 2, 1, "", "order1"], [117, 2, 1, "", "order2"], [117, 3, 1, "", "sweeprate"]], "autodeer.HahnEchoSequence": [[117, 2, 1, "", "name"]], "autodeer.Interface": [[117, 1, 1, "id217", "acquire_dataset"], [117, 1, 1, "id216", "connect"], [117, 1, 1, "id219", "isrunning"], [117, 1, 1, "id218", "launch"], [117, 2, 1, "id212", "pulses"], [117, 2, 1, "id215", "resonator"], [117, 2, 1, "id213", "savefolder"], [117, 2, 1, "id214", "savename"], [117, 1, 1, "id220", "terminate"], [117, 1, 1, "id221", "terminate_at"]], "autodeer.Logging": [[32, 0, 1, "", "DictFormater"], [32, 0, 1, "", "QtLogHandler"], [32, 5, 1, "", "change_log_level"], [32, 5, 1, "", "setup_logs"]], "autodeer.Logging.DictFormater": [[32, 1, 1, "", "format"]], "autodeer.Logging.QtLogHandler": [[32, 1, 1, "", "emit"], [32, 2, 1, "", "signal"]], "autodeer.Parameter": [[117, 1, 1, "id200", "__add__"], [117, 1, 1, "id199", "__eq__"], [117, 1, 1, "id202", "__mul__"], [117, 1, 1, "id203", "__rmul__"], [117, 1, 1, "id201", "__sub__"], [117, 1, 1, "id208", "_from_dict"], [117, 1, 1, "id209", "_from_json"], [117, 1, 1, "id205", "_to_dict"], [117, 1, 1, "id206", "_to_json"], [117, 1, 1, "id195", "add_axis"], [117, 2, 1, "id194", "ax_id"], [117, 2, 1, "id193", "axis"], [117, 1, 1, "id204", "copy"], [117, 2, 1, "id191", "description"], [117, 3, 1, "id188", "dim"], [117, 1, 1, "id196", "get_axis"], [117, 1, 1, "id198", "is_static"], [117, 1, 1, "id210", "load"], [117, 2, 1, "id189", "name"], [117, 1, 1, "id197", "remove_dynamic"], [117, 1, 1, "id207", "save"], [117, 2, 1, "id190", "unit"], [117, 2, 1, "id192", "virtual"]], "autodeer.Pulse": [[117, 2, 1, "id151", "Progression"], [117, 1, 1, "id167", "__str__"], [117, 1, 1, "id152", "_addPhaseCycle"], [117, 1, 1, "id153", "_buildFMAM"], [117, 1, 1, "id160", "_calc_fft"], [117, 1, 1, "id172", "_from_dict"], [117, 1, 1, "id173", "_from_json"], [117, 1, 1, "id166", "_pcyc_str"], [117, 1, 1, "id169", "_to_dict"], [117, 1, 1, "id170", "_to_json"], [117, 3, 1, "id149", "amp_factor"], [117, 3, 1, "id148", "bandwidth"], [117, 1, 1, "id154", "build_shape"], [117, 1, 1, "id155", "build_table"], [117, 1, 1, "id168", "copy"], [117, 1, 1, "id163", "exciteprofile"], [117, 1, 1, "id161", "exciteprofile_old"], [117, 1, 1, "id157", "isDelayFocused"], [117, 1, 1, "id158", "isPulseFocused"], [117, 1, 1, "id156", "is_static"], [117, 1, 1, "id174", "load"], [117, 2, 1, "id150", "name"], [117, 1, 1, "id159", "plot"], [117, 1, 1, "id165", "plot_fft"], [117, 1, 1, "id171", "save"]], "autodeer.RectPulse": [[117, 2, 1, "id144", "freq"], [117, 1, 1, "id145", "func"]], "autodeer.RefocusedEcho2DAnalysis": [[117, 1, 1, "", "_smooth"], [117, 2, 1, "", "axis"], [117, 2, 1, "", "data"], [117, 2, 1, "", "dataset"], [117, 1, 1, "", "find_optimal"], [117, 1, 1, "", "optimal_tau1"], [117, 1, 1, "", "plot1D"], [117, 1, 1, "", "plot2D"]], "autodeer.RefocusedEcho2DSequence": [[117, 1, 1, "", "_build_sequence"], [117, 2, 1, "", "dt"], [117, 2, 1, "", "name"], [117, 2, 1, "", "tau1"], [117, 2, 1, "", "tau2"], [117, 2, 1, "", "tau_init"]], "autodeer.Relaxation": [[41, 0, 1, "", "CarrPurcellAnalysis"], [41, 0, 1, "", "RefocusedEcho2DAnalysis"], [41, 0, 1, "", "ReptimeAnalysis"], [41, 6, 1, "", "cmap"], [41, 5, 1, "", "detect_ESEEM"], [41, 5, 1, "", "plot_1Drelax"]], "autodeer.Relaxation.CarrPurcellAnalysis": [[41, 1, 1, "", "check_decay"], [41, 2, 1, "", "data"], [41, 2, 1, "", "dataset"], [41, 1, 1, "", "find_optimal"], [41, 1, 1, "", "fit"], [41, 1, 1, "", "plot"]], "autodeer.Relaxation.RefocusedEcho2DAnalysis": [[41, 1, 1, "", "_smooth"], [41, 2, 1, "", "axis"], [41, 2, 1, "", "data"], [41, 2, 1, "", "dataset"], [41, 1, 1, "", "find_optimal"], [41, 1, 1, "", "optimal_tau1"], [41, 1, 1, "", "plot1D"], [41, 1, 1, "", "plot2D"]], "autodeer.Relaxation.ReptimeAnalysis": [[41, 2, 1, "", "axis"], [41, 1, 1, "", "calc_optimal_reptime"], [41, 1, 1, "", "fit"], [41, 1, 1, "", "plot"], [41, 2, 1, "", "seq"]], "autodeer.Reporter": [[117, 1, 1, "", "_build"], [117, 1, 1, "", "add_code_block"], [117, 1, 1, "", "add_figure"], [117, 1, 1, "", "add_new_section"], [117, 1, 1, "", "add_page_break"], [117, 1, 1, "", "add_space"], [117, 1, 1, "", "add_table"], [117, 1, 1, "", "add_text"], [117, 1, 1, "", "add_title"], [117, 1, 1, "", "footer"], [117, 2, 1, "", "frame"], [117, 1, 1, "", "header"], [117, 2, 1, "", "pdf"], [117, 2, 1, "", "story"], [117, 2, 1, "", "template"]], "autodeer.ReptimeAnalysis": [[117, 2, 1, "", "axis"], [117, 1, 1, "", "calc_optimal_reptime"], [117, 1, 1, "", "fit"], [117, 1, 1, "", "plot"], [117, 2, 1, "", "seq"]], "autodeer.ReptimeScan": [[117, 2, 1, "", "dim"], [117, 2, 1, "", "min_reptime"], [117, 2, 1, "", "name"], [117, 2, 1, "", "reptime"], [117, 2, 1, "", "step"]], "autodeer.ResPro": [[46, 5, 1, "", "BSpline_extra"], [46, 0, 1, "", "ResonatorProfileAnalysis"], [46, 5, 1, "", "calc_overlap"], [46, 5, 1, "", "ceil"], [46, 5, 1, "", "floor"], [46, 5, 1, "", "optimise_spectra_position"]], "autodeer.ResPro.ResonatorProfileAnalysis": [[46, 1, 1, "", "_process_fit"], [46, 2, 1, "", "dataset"], [46, 2, 1, "", "f_lims"], [46, 1, 1, "", "fit"], [46, 2, 1, "", "n_files"], [46, 1, 1, "", "plot"], [46, 1, 1, "", "process_nutations"], [46, 2, 1, "", "t"]], "autodeer.ResonatorProfileAnalysis": [[117, 1, 1, "", "_process_fit"], [117, 2, 1, "", "dataset"], [117, 2, 1, "", "f_lims"], [117, 1, 1, "", "fit"], [117, 2, 1, "", "n_files"], [117, 1, 1, "", "plot"], [117, 1, 1, "", "process_nutations"], [117, 2, 1, "", "t"]], "autodeer.ResonatorProfileSequence": [[117, 1, 1, "", "_build_sequence"], [117, 2, 1, "", "fwidth"], [117, 2, 1, "", "gyro"], [117, 2, 1, "", "name"]], "autodeer.Sequence": [[117, 2, 1, "id228", "LO"], [117, 1, 1, "id241", "__str__"], [117, 1, 1, "id237", "_buildPhaseCycle"], [117, 1, 1, "id240", "_checkRect"], [117, 1, 1, "id236", "_estimate_time"], [117, 1, 1, "id246", "_from_dict"], [117, 1, 1, "id247", "_from_json"], [117, 1, 1, "id243", "_to_dict"], [117, 1, 1, "id244", "_to_json"], [117, 1, 1, "id235", "addPulse"], [117, 2, 1, "id229", "averages"], [117, 2, 1, "id226", "axes_uuid"], [117, 1, 1, "id242", "copy"], [117, 1, 1, "id238", "evolution"], [117, 1, 1, "id248", "load"], [117, 2, 1, "id231", "name"], [117, 2, 1, "id225", "num_pulses"], [117, 1, 1, "id233", "plot"], [117, 1, 1, "id234", "plot_pulse_exc"], [117, 2, 1, "id232", "progTable"], [117, 2, 1, "id224", "pulses"], [117, 2, 1, "id227", "reduce_uuid"], [117, 1, 1, "id245", "save"], [117, 3, 1, "id223", "seqtable_steps"], [117, 1, 1, "id239", "shift_detfreq_to_zero"], [117, 2, 1, "id230", "shots"]], "autodeer.SincPulse": [[117, 2, 1, "", "freq"], [117, 1, 1, "", "func"], [117, 2, 1, "", "order"], [117, 2, 1, "", "window"]], "autodeer.T2RelaxationSequence": [[117, 2, 1, "", "name"], [117, 2, 1, "", "tau"]], "autodeer.TWTProfileSequence": [[117, 1, 1, "", "_build_sequence"], [117, 2, 1, "", "name"]], "autodeer._version": [[53, 6, 1, "", "__version__"], [53, 6, 1, "", "branch"]], "autodeer.classes": [[56, 0, 1, "", "Interface"], [56, 0, 1, "", "Parameter"]], "autodeer.classes.Interface": [[56, 1, 1, "", "acquire_dataset"], [56, 1, 1, "", "connect"], [56, 1, 1, "", "isrunning"], [56, 1, 1, "", "launch"], [56, 2, 1, "", "pulses"], [56, 2, 1, "", "resonator"], [56, 2, 1, "", "savefolder"], [56, 2, 1, "", "savename"], [56, 1, 1, "", "terminate"], [56, 1, 1, "", "terminate_at"]], "autodeer.classes.Parameter": [[56, 1, 1, "", "__add__"], [56, 1, 1, "", "__eq__"], [56, 1, 1, "", "__mul__"], [56, 1, 1, "", "__rmul__"], [56, 1, 1, "", "__sub__"], [56, 1, 1, "", "_from_dict"], [56, 1, 1, "", "_from_json"], [56, 1, 1, "", "_to_dict"], [56, 1, 1, "", "_to_json"], [56, 1, 1, "", "add_axis"], [56, 2, 1, "", "ax_id"], [56, 2, 1, "", "axis"], [56, 1, 1, "", "copy"], [56, 2, 1, "", "description"], [56, 3, 1, "", "dim"], [56, 1, 1, "", "get_axis"], [56, 1, 1, "", "is_static"], [56, 1, 1, "", "load"], [56, 2, 1, "", "name"], [56, 1, 1, "", "remove_dynamic"], [56, 1, 1, "", "save"], [56, 2, 1, "", "unit"], [56, 2, 1, "", "virtual"]], "autodeer.colors": [[57, 6, 1, "", "ReIm_colors"], [57, 6, 1, "", "primary_colors"], [57, 6, 1, "", "shade_colors"]], "autodeer.criteria": [[62, 0, 1, "", "Criteria"], [62, 0, 1, "", "DEERCriteria"], [62, 0, 1, "", "SNRCriteria"], [62, 0, 1, "", "TimeCriteria"], [62, 6, 1, "", "log"]], "autodeer.criteria.Criteria": [[62, 1, 1, "", "__add__"], [62, 2, 1, "", "description"], [62, 2, 1, "", "end_signal"], [62, 2, 1, "", "name"], [62, 2, 1, "", "test"]], "autodeer.criteria.DEERCriteria": [[62, 2, 1, "", "description"], [62, 2, 1, "", "name"]], "autodeer.dataset": [[64, 0, 1, "", "EPRAccessor"], [64, 5, 1, "", "create_dataset_from_axes"], [64, 5, 1, "", "create_dataset_from_bruker"], [64, 5, 1, "", "create_dataset_from_sequence"], [64, 5, 1, "", "get_all_axes"], [64, 5, 1, "", "get_all_fixed_param"]], "autodeer.dataset.EPRAccessor": [[64, 3, 1, "", "MeasurementTime"], [64, 3, 1, "", "SNR"], [64, 2, 1, "", "_obj"], [64, 3, 1, "", "correctphase"], [64, 3, 1, "", "correctphasefull"], [64, 3, 1, "", "fft"], [64, 3, 1, "", "normalise"], [64, 1, 1, "", "save"], [64, 3, 1, "", "sequence"]], "autodeer.gui": [[72, 0, 1, "", "Worker"], [72, 0, 1, "", "WorkerSignals"], [67, 4, 0, "-", "__main__"], [72, 0, 1, "", "autoDEERUI"], [71, 4, 0, "-", "autoDEER_worker"], [72, 5, 1, "", "create_save_name"], [72, 5, 1, "", "fill_table"], [72, 5, 1, "", "getCIstring"], [72, 5, 1, "", "get_sequence_rows"], [72, 5, 1, "", "list_str_to_type"], [72, 5, 1, "", "load_epr_file"], [74, 4, 0, "-", "log"], [78, 4, 0, "-", "main"], [81, 4, 0, "-", "modetune"], [72, 5, 1, "", "param_in_MHz"], [72, 5, 1, "", "param_in_us"], [72, 5, 1, "", "pyqt_table_from_dict"], [83, 4, 0, "-", "quickdeer"], [72, 5, 1, "", "read_table"], [72, 5, 1, "", "str_to_list_type"], [72, 5, 1, "", "test_SNR"], [84, 4, 0, "-", "test_main"], [87, 4, 0, "-", "tools"]], "autodeer.gui.Worker": [[72, 2, 1, "", "args"], [72, 2, 1, "", "fn"], [72, 2, 1, "", "kwargs"], [72, 1, 1, "", "run"], [72, 2, 1, "", "signals"]], "autodeer.gui.WorkerSignals": [[72, 2, 1, "", "error"], [72, 2, 1, "", "finished"], [72, 2, 1, "", "result"]], "autodeer.gui.__main__": [[67, 6, 1, "", "app"], [67, 6, 1, "", "window"]], "autodeer.gui.autoDEERUI": [[72, 2, 1, "", "Bruker"], [72, 2, 1, "", "DL_params"], [72, 2, 1, "", "LO"], [72, 2, 1, "", "Min_tp"], [72, 1, 1, "", "RunAdvancedAutoDEER"], [72, 1, 1, "", "RunAutoDEER"], [72, 1, 1, "", "RunFullyAutoDEER"], [72, 1, 1, "", "advanced_mode_inputs"], [72, 1, 1, "", "change_LO"], [72, 1, 1, "", "check_CP"], [72, 1, 1, "", "check_T2"], [72, 1, 1, "", "clear_all"], [72, 2, 1, "", "config"], [72, 1, 1, "", "connect_spectrometer"], [72, 2, 1, "", "connected"], [72, 2, 1, "", "cores"], [72, 2, 1, "", "correction_factor"], [72, 1, 1, "", "create_fieldsweep_figure"], [72, 1, 1, "", "create_relax_figure"], [72, 1, 1, "", "create_report"], [72, 1, 1, "", "create_respro_figure"], [72, 2, 1, "", "current_data"], [72, 2, 1, "", "current_folder"], [72, 2, 1, "", "current_results"], [72, 2, 1, "", "deer_settings"], [72, 2, 1, "", "discussion_url"], [72, 2, 1, "", "docs_url"], [72, 1, 1, "", "fsweep_toolbar"], [72, 2, 1, "", "github_url"], [72, 2, 1, "", "gyro"], [72, 1, 1, "", "initialise_deer_settings"], [72, 2, 1, "", "issues_url"], [72, 1, 1, "", "load_epr_file"], [72, 1, 1, "", "load_folder"], [72, 1, 1, "", "load_spectrometer_config"], [72, 2, 1, "", "logo_pixmap"], [72, 2, 1, "", "longDEER"], [72, 1, 1, "", "optimise_pulses"], [72, 1, 1, "", "optimise_pulses_button"], [72, 2, 1, "", "priorties"], [72, 2, 1, "", "pulses"], [72, 2, 1, "", "q_DEER"], [72, 2, 1, "", "queue"], [72, 1, 1, "", "raise_warning"], [72, 1, 1, "", "refresh_T2"], [72, 1, 1, "", "refresh_fieldsweep_after_fit"], [72, 1, 1, "", "refresh_relax"], [72, 1, 1, "", "refresh_relax_figure"], [72, 1, 1, "", "refresh_respro"], [72, 1, 1, "", "relax_toolbar"], [72, 1, 1, "", "respro_toolbar"], [72, 1, 1, "", "save_data"], [72, 1, 1, "", "select_resonator"], [72, 1, 1, "", "set_spectrometer_connected_light"], [72, 2, 1, "", "spectromterInterface"], [72, 2, 1, "", "starttime"], [72, 2, 1, "", "threadpool"], [72, 1, 1, "", "timeout"], [72, 1, 1, "", "update_T2"], [72, 1, 1, "", "update_deer_settings"], [72, 1, 1, "", "update_fieldsweep"], [72, 1, 1, "", "update_longdeer"], [72, 1, 1, "", "update_optimise_pulses_figure"], [72, 1, 1, "", "update_quickdeer"], [72, 1, 1, "", "update_relax"], [72, 1, 1, "", "update_relax2D"], [72, 1, 1, "", "update_reptime"], [72, 1, 1, "", "update_respro"], [72, 2, 1, "", "userinput"], [72, 2, 1, "", "waitCondition"], [72, 2, 1, "", "worker"]], "autodeer.gui.autoDEER_worker": [[71, 0, 1, "", "autoDEERSignals"], [71, 0, 1, "", "autoDEERWorker"]], "autodeer.gui.autoDEER_worker.autoDEERSignals": [[71, 2, 1, "", "Relax2D_result"], [71, 2, 1, "", "T2_result"], [71, 2, 1, "", "error"], [71, 2, 1, "", "finished"], [71, 2, 1, "", "fsweep_result"], [71, 2, 1, "", "longdeer_result"], [71, 2, 1, "", "longdeer_update"], [71, 2, 1, "", "progress"], [71, 2, 1, "", "quickdeer_result"], [71, 2, 1, "", "quickdeer_update"], [71, 2, 1, "", "relax_result"], [71, 2, 1, "", "reptime_scan_result"], [71, 2, 1, "", "respro_result"], [71, 2, 1, "", "result"], [71, 2, 1, "", "status"], [71, 2, 1, "", "timeout"]], "autodeer.gui.autoDEER_worker.autoDEERWorker": [[71, 2, 1, "", "AWG"], [71, 2, 1, "", "EndTimeCriteria"], [71, 2, 1, "", "LO"], [71, 1, 1, "", "_build_methods"], [71, 2, 1, "", "args"], [71, 2, 1, "", "deer_inputs"], [71, 2, 1, "", "gyro"], [71, 2, 1, "", "interface"], [71, 2, 1, "", "kwargs"], [71, 2, 1, "", "max_tau"], [71, 2, 1, "", "mutex"], [71, 1, 1, "", "new_data"], [71, 1, 1, "", "new_pulses"], [71, 1, 1, "", "pause_and_wait"], [71, 2, 1, "", "project"], [71, 2, 1, "", "pulses"], [71, 2, 1, "", "quick_deer_state"], [71, 2, 1, "", "results"], [71, 1, 1, "", "run"], [71, 1, 1, "", "run_2D_relax"], [71, 1, 1, "", "run_CP_relax"], [71, 1, 1, "", "run_T2_relax"], [71, 1, 1, "", "run_deer"], [71, 1, 1, "", "run_fsweep"], [71, 1, 1, "", "run_long_deer"], [71, 1, 1, "", "run_quick_deer"], [71, 1, 1, "", "run_reptime_opt"], [71, 1, 1, "", "run_respro"], [71, 2, 1, "", "samplename"], [71, 2, 1, "", "savename"], [71, 1, 1, "", "set_2D_max_tau"], [71, 1, 1, "", "set_noise_mode"], [71, 2, 1, "", "signals"], [71, 1, 1, "", "stop"], [71, 2, 1, "", "stop_flag"], [71, 2, 1, "", "test_interval"], [71, 1, 1, "", "tune_pulses"], [71, 1, 1, "", "update_LO"], [71, 1, 1, "", "update_deersettings"], [71, 1, 1, "", "update_gyro"], [71, 1, 1, "", "update_reptime"], [71, 2, 1, "", "updaterate"], [71, 2, 1, "", "user_inputs"], [71, 2, 1, "", "wait"]], "autodeer.gui.log": [[74, 0, 1, "", "LogDialog"], [74, 6, 1, "", "package_directory"]], "autodeer.gui.log.LogDialog": [[74, 1, 1, "", "add_new_entry"], [74, 1, 1, "", "clear_log"], [74, 2, 1, "", "core_logger"], [74, 2, 1, "", "hardware_logger"], [74, 2, 1, "", "log"], [74, 2, 1, "", "log_levels"], [74, 1, 1, "", "save_log_to_file"], [74, 1, 1, "", "update_log_text"]], "autodeer.gui.main": [[78, 6, 1, "", "SampleConcComboBox_opts"], [78, 5, 1, "", "T2_process"], [78, 0, 1, "", "Worker"], [78, 0, 1, "", "WorkerSignals"], [78, 6, 1, "", "app"], [78, 0, 1, "", "autoDEERUI"], [78, 5, 1, "", "fieldsweep_fit"], [78, 6, 1, "", "package_directory"], [78, 5, 1, "", "relax_process"], [78, 5, 1, "", "respro_process"]], "autodeer.gui.main.Worker": [[78, 2, 1, "", "args"], [78, 2, 1, "", "fn"], [78, 2, 1, "", "kwargs"], [78, 1, 1, "", "run"], [78, 2, 1, "", "signals"]], "autodeer.gui.main.WorkerSignals": [[78, 2, 1, "", "error"], [78, 2, 1, "", "finished"], [78, 2, 1, "", "progress"], [78, 2, 1, "", "result"]], "autodeer.gui.main.autoDEERUI": [[78, 2, 1, "", "Bruker"], [78, 2, 1, "", "DL_params"], [78, 2, 1, "", "LO"], [78, 2, 1, "", "Min_tp"], [78, 1, 1, "", "RunAdvancedAutoDEER"], [78, 1, 1, "", "RunAutoDEER"], [78, 1, 1, "", "RunFullyAutoDEER"], [78, 1, 1, "", "advanced_mode_inputs"], [78, 1, 1, "", "change_LO"], [78, 1, 1, "", "check_CP"], [78, 1, 1, "", "check_T2"], [78, 1, 1, "", "clear_all"], [78, 2, 1, "", "config"], [78, 1, 1, "", "connect_spectrometer"], [78, 2, 1, "", "connected"], [78, 2, 1, "", "cores"], [78, 2, 1, "", "correction_factor"], [78, 1, 1, "", "create_fieldsweep_figure"], [78, 1, 1, "", "create_relax_figure"], [78, 1, 1, "", "create_report"], [78, 1, 1, "", "create_respro_figure"], [78, 2, 1, "", "current_data"], [78, 2, 1, "", "current_folder"], [78, 2, 1, "", "current_results"], [78, 2, 1, "", "deer_settings"], [78, 2, 1, "", "discussion_url"], [78, 2, 1, "", "docs_url"], [78, 1, 1, "", "fsweep_toolbar"], [78, 2, 1, "", "github_url"], [78, 2, 1, "", "gyro"], [78, 1, 1, "", "initialise_deer_settings"], [78, 2, 1, "", "issues_url"], [78, 1, 1, "", "load_epr_file"], [78, 1, 1, "", "load_folder"], [78, 1, 1, "", "load_spectrometer_config"], [78, 2, 1, "", "logo_pixmap"], [78, 2, 1, "", "longDEER"], [78, 1, 1, "", "optimise_pulses"], [78, 1, 1, "", "optimise_pulses_button"], [78, 2, 1, "", "priorties"], [78, 2, 1, "", "pulses"], [78, 2, 1, "", "q_DEER"], [78, 2, 1, "", "queue"], [78, 1, 1, "", "raise_warning"], [78, 1, 1, "", "refresh_T2"], [78, 1, 1, "", "refresh_fieldsweep_after_fit"], [78, 1, 1, "", "refresh_relax"], [78, 1, 1, "", "refresh_relax_figure"], [78, 1, 1, "", "refresh_respro"], [78, 1, 1, "", "relax_toolbar"], [78, 1, 1, "", "respro_toolbar"], [78, 1, 1, "", "save_data"], [78, 1, 1, "", "select_resonator"], [78, 1, 1, "", "set_spectrometer_connected_light"], [78, 2, 1, "", "spectromterInterface"], [78, 2, 1, "", "starttime"], [78, 2, 1, "", "threadpool"], [78, 1, 1, "", "timeout"], [78, 1, 1, "", "update_T2"], [78, 1, 1, "", "update_deer_settings"], [78, 1, 1, "", "update_fieldsweep"], [78, 1, 1, "", "update_longdeer"], [78, 1, 1, "", "update_optimise_pulses_figure"], [78, 1, 1, "", "update_quickdeer"], [78, 1, 1, "", "update_relax"], [78, 1, 1, "", "update_relax2D"], [78, 1, 1, "", "update_reptime"], [78, 1, 1, "", "update_respro"], [78, 2, 1, "", "userinput"], [78, 2, 1, "", "waitCondition"], [78, 2, 1, "", "worker"]], "autodeer.gui.modetune": [[81, 0, 1, "", "ModeTune"], [81, 0, 1, "", "get_dataWorker"], [81, 6, 1, "", "package_directory"], [81, 5, 1, "", "phasecorrect_all_points"], [81, 5, 1, "", "save_data"]], "autodeer.gui.modetune.ModeTune": [[81, 1, 1, "", "create_figure"], [81, 2, 1, "", "interface"], [81, 1, 1, "", "start_mode_tune"], [81, 2, 1, "", "ui"], [81, 1, 1, "", "update_dip"], [81, 1, 1, "", "update_figure"]], "autodeer.gui.modetune.get_dataWorker": [[81, 2, 1, "", "finished_signal"], [81, 2, 1, "", "interface"], [81, 2, 1, "", "result_signal"], [81, 1, 1, "", "run"], [81, 2, 1, "", "signals"]], "autodeer.gui.quickdeer": [[83, 0, 1, "", "DEERplot"], [83, 6, 1, "", "app"], [83, 5, 1, "", "deeranalysis_process"], [83, 5, 1, "", "get_Vexp"], [83, 6, 1, "", "package_directory"]], "autodeer.gui.quickdeer.DEERplot": [[83, 2, 1, "", "DL_params"], [83, 1, 1, "", "clearLayout"], [83, 1, 1, "", "clear_all"], [83, 2, 1, "", "cores"], [83, 1, 1, "", "create_figure"], [83, 2, 1, "", "current_data"], [83, 2, 1, "", "current_folder"], [83, 2, 1, "", "current_results"], [83, 1, 1, "", "process_deeranalysis"], [83, 1, 1, "", "refresh_deer"], [83, 1, 1, "", "setup_inputs"], [83, 2, 1, "", "threadpool"], [83, 1, 1, "", "toolbar"], [83, 1, 1, "", "update_analysis_table"], [83, 1, 1, "", "update_figure"], [83, 1, 1, "", "update_fit_result"], [83, 1, 1, "", "update_inputs_from_dataset"]], "autodeer.gui.tools": [[87, 0, 1, "", "Worker"], [87, 0, 1, "", "WorkerSignals"], [87, 5, 1, "", "create_save_name"], [87, 5, 1, "", "fill_table"], [87, 5, 1, "", "getCIstring"], [87, 5, 1, "", "get_sequence_rows"], [87, 5, 1, "", "list_str_to_type"], [87, 5, 1, "", "load_epr_file"], [87, 5, 1, "", "param_in_MHz"], [87, 5, 1, "", "param_in_us"], [87, 5, 1, "", "pyqt_table_from_dict"], [87, 5, 1, "", "read_table"], [87, 5, 1, "", "str_to_list_type"], [87, 5, 1, "", "test_SNR"]], "autodeer.gui.tools.Worker": [[87, 2, 1, "", "args"], [87, 2, 1, "", "fn"], [87, 2, 1, "", "kwargs"], [87, 1, 1, "", "run"], [87, 2, 1, "", "signals"]], "autodeer.gui.tools.WorkerSignals": [[87, 2, 1, "", "error"], [87, 2, 1, "", "finished"], [87, 2, 1, "", "result"]], "autodeer.hardware": [[89, 4, 0, "-", "Bruker_AWG"], [91, 4, 0, "-", "Bruker_MPFU"], [95, 4, 0, "-", "Bruker_tools"], [97, 4, 0, "-", "ETH_awg"], [98, 4, 0, "-", "ETH_awg_load"], [100, 4, 0, "-", "XeprAPI_link"], [102, 4, 0, "-", "dummy"], [110, 4, 0, "-", "dummy_xepr"], [116, 4, 0, "-", "xepr_experiments"]], "autodeer.hardware.Bruker_AWG": [[89, 0, 1, "", "BrukerAWG"], [89, 5, 1, "", "get_specjet_data"], [89, 5, 1, "", "test_if_MPFU_compatability"]], "autodeer.hardware.Bruker_AWG.BrukerAWG": [[89, 1, 1, "", "_launch_complex_thread"], [89, 1, 1, "", "acquire_dataset"], [89, 2, 1, "", "api"], [89, 2, 1, "", "bg_data"], [89, 2, 1, "", "bg_thread"], [89, 2, 1, "", "bridge_config"], [89, 1, 1, "", "calc_d0"], [89, 1, 1, "", "calc_d0_from_Hahn_Echo"], [89, 1, 1, "", "connect"], [89, 2, 1, "", "cur_exp"], [89, 2, 1, "", "d0"], [89, 1, 1, "", "isrunning"], [89, 1, 1, "", "launch"], [89, 2, 1, "", "pool"], [89, 2, 1, "", "savefolder"], [89, 2, 1, "", "savename"], [89, 1, 1, "", "setup"], [89, 2, 1, "", "setup_flag"], [89, 2, 1, "", "spec_config"], [89, 2, 1, "", "temp_dir"], [89, 1, 1, "", "terminate"], [89, 1, 1, "", "tune_pulse"], [89, 1, 1, "", "tune_rectpulse"], [89, 2, 1, "", "tuning"]], "autodeer.hardware.Bruker_MPFU": [[91, 0, 1, "", "BrukerMPFU"], [91, 5, 1, "", "ELDORtune"], [91, 5, 1, "", "MPFUtune"], [91, 5, 1, "", "SPFUtune"], [91, 5, 1, "", "_MPFU_channels"], [91, 5, 1, "", "_SPFU_channels"], [91, 5, 1, "", "get_specjet_data"], [91, 6, 1, "", "hw_log"], [91, 5, 1, "", "step_parameters"], [91, 5, 1, "", "test_if_MPFU_compatability"], [91, 5, 1, "", "tune_phase"], [91, 5, 1, "", "tune_power"]], "autodeer.hardware.Bruker_MPFU.BrukerMPFU": [[91, 2, 1, "", "MPFU"], [91, 1, 1, "", "_launch_complex_thread"], [91, 1, 1, "", "acquire_dataset"], [91, 2, 1, "", "api"], [91, 2, 1, "", "bg_data"], [91, 2, 1, "", "bg_thread"], [91, 2, 1, "", "bridge_config"], [91, 1, 1, "", "calc_d0"], [91, 1, 1, "", "calc_d0_from_Hahn_Echo"], [91, 1, 1, "", "connect"], [91, 2, 1, "", "cur_exp"], [91, 2, 1, "", "d0"], [91, 1, 1, "", "isrunning"], [91, 1, 1, "", "launch"], [91, 2, 1, "", "pool"], [91, 2, 1, "", "savefolder"], [91, 2, 1, "", "savename"], [91, 1, 1, "", "setup"], [91, 2, 1, "", "setup_flag"], [91, 2, 1, "", "spec_config"], [91, 2, 1, "", "temp_dir"], [91, 1, 1, "", "terminate"], [91, 1, 1, "", "tune"], [91, 1, 1, "", "tune_pulse"], [91, 1, 1, "", "tune_rectpulse"], [91, 2, 1, "", "tuning"]], "autodeer.hardware.Bruker_tools": [[95, 6, 1, "", "MODULE_DIR"], [95, 0, 1, "", "PSPhaseCycle"], [95, 0, 1, "", "PSparvar"], [95, 0, 1, "", "PulseSpel"], [95, 5, 1, "", "_addAWGPulse"], [95, 5, 1, "", "build_unique_progtable"], [95, 5, 1, "", "calc_rel_positions"], [95, 5, 1, "", "change_dimensions"], [95, 5, 1, "", "check_variable"], [95, 5, 1, "", "convert_progtable"], [95, 5, 1, "", "determine_TWT_split"], [95, 5, 1, "", "get_arange"], [95, 6, 1, "", "header"], [95, 6, 1, "", "hw_log"], [95, 6, 1, "", "possible_delays"], [95, 6, 1, "", "possible_pulses"], [95, 6, 1, "", "possible_vars"], [95, 5, 1, "", "run_general"], [95, 5, 1, "", "write_pulsespel_file"]], "autodeer.hardware.Bruker_tools.PSPhaseCycle": [[95, 2, 1, "", "BPhaseCycles"], [95, 1, 1, "", "_MPFU"], [95, 1, 1, "", "__str__"], [95, 1, 1, "", "_detect"], [95, 1, 1, "", "_main"], [95, 2, 1, "", "detect_dicts"]], "autodeer.hardware.Bruker_tools.PSparvar": [[95, 2, 1, "", "PulseSpel"], [95, 1, 1, "", "checkPulseSpel"], [95, 2, 1, "", "events"], [95, 2, 1, "", "parvar"], [95, 2, 1, "", "progTable"], [95, 2, 1, "", "progTable_n"]], "autodeer.hardware.Bruker_tools.PulseSpel": [[95, 2, 1, "", "AWG"], [95, 2, 1, "", "MPFU"], [95, 1, 1, "", "_ExpDefs"], [95, 1, 1, "", "__str__"], [95, 1, 1, "", "_addAWGPulse"], [95, 1, 1, "", "_addDef"], [95, 1, 1, "", "_addExp"], [95, 1, 1, "", "_addPhaseCycle"], [95, 1, 1, "", "_addScanLoop"], [95, 1, 1, "", "_check_sequence"], [95, 1, 1, "", "_cmpl_Exp"], [95, 1, 1, "", "_cmpl_def"], [95, 1, 1, "", "_new_delay"], [95, 1, 1, "", "_new_pulse"], [95, 1, 1, "", "_new_var"], [95, 2, 1, "", "def_file_str"], [95, 2, 1, "", "dims"], [95, 2, 1, "", "exp_file_str"], [95, 2, 1, "", "parvars"], [95, 2, 1, "", "pcyc_str"], [95, 2, 1, "", "place_hash"], [95, 2, 1, "", "possible_delays"], [95, 2, 1, "", "possible_pulses"], [95, 2, 1, "", "possible_vars"], [95, 2, 1, "", "rel_positions"], [95, 1, 1, "", "save"], [95, 2, 1, "", "sequence"], [95, 2, 1, "", "step_hash"], [95, 2, 1, "", "unique_parvars"], [95, 2, 1, "", "var_hash"]], "autodeer.hardware.ETH_awg": [[97, 0, 1, "", "ETH_awg_interface"], [97, 5, 1, "", "bg_thread"], [97, 6, 1, "", "log"]], "autodeer.hardware.ETH_awg.ETH_awg_interface": [[97, 2, 1, "", "IFgain"], [97, 2, 1, "", "IFgain_options"], [97, 1, 1, "", "_build_exp_struct"], [97, 1, 1, "", "_build_parvar"], [97, 1, 1, "", "_build_phase_cycle"], [97, 1, 1, "", "_build_pulse"], [97, 1, 1, "", "acquire_dataset"], [97, 1, 1, "", "acquire_dataset_from_matlab"], [97, 2, 1, "", "awg_freq"], [97, 2, 1, "", "bg_data"], [97, 2, 1, "", "bg_thread"], [97, 1, 1, "", "connect"], [97, 2, 1, "", "cur_exp"], [97, 2, 1, "", "dig_rate"], [97, 1, 1, "", "isrunning"], [97, 1, 1, "", "launch"], [97, 1, 1, "", "launch_long"], [97, 1, 1, "", "launch_normal"], [97, 1, 1, "", "launch_withIFGain"], [97, 2, 1, "", "pulses"], [97, 3, 1, "", "savefolder"], [97, 1, 1, "", "terminate"], [97, 1, 1, "", "tune"], [97, 1, 1, "", "tune_pulse"], [97, 1, 1, "", "tune_rectpulse"]], "autodeer.hardware.ETH_awg_load": [[98, 5, 1, "", "calc_percieved_freq"], [98, 5, 1, "", "digitally_upconvert"], [98, 5, 1, "", "find_max_pulse_length"], [98, 5, 1, "", "match_filter_dc"], [98, 5, 1, "", "scipy_filter_dc"], [98, 5, 1, "", "uwb_eval_match"], [98, 5, 1, "", "uwb_load"]], "autodeer.hardware.XeprAPI_link": [[100, 0, 1, "", "XeprAPILink"], [100, 6, 1, "", "hw_log"], [100, 6, 1, "", "xepr_path"]], "autodeer.hardware.XeprAPI_link.XeprAPILink": [[100, 2, 1, "", "Xepr"], [100, 2, 1, "", "XeprCmds"], [100, 1, 1, "", "_get_Xepr_global"], [100, 1, 1, "", "_get_cur_exp_global"], [100, 1, 1, "", "_set_Xepr_global"], [100, 1, 1, "", "_set_cur_exp_global"], [100, 1, 1, "", "_set_cur_exp_param"], [100, 1, 1, "", "_set_hidden_param"], [100, 2, 1, "", "_tmp_dir"], [100, 1, 1, "", "_xepr_retry"], [100, 1, 1, "", "abort_exp"], [100, 1, 1, "", "acquire_dataset"], [100, 1, 1, "", "acquire_scan"], [100, 1, 1, "", "acquire_scan_2d"], [100, 1, 1, "", "acquire_scan_at"], [100, 1, 1, "", "compile_PulseSpel_def"], [100, 1, 1, "", "compile_PulseSpel_prg"], [100, 1, 1, "", "connect"], [100, 2, 1, "", "cur_exp"], [100, 1, 1, "", "find_Xepr"], [100, 1, 1, "", "find_cur_exp"], [100, 1, 1, "", "find_hidden"], [100, 1, 1, "", "get_Acquisition_mode"], [100, 1, 1, "", "get_ELDOR_freq"], [100, 1, 1, "", "get_MW_amp"], [100, 1, 1, "", "get_PhaseCycle"], [100, 1, 1, "", "get_PulseSpel_def_filename"], [100, 1, 1, "", "get_PulseSpel_def_filepath"], [100, 1, 1, "", "get_PulseSpel_exp_filename"], [100, 1, 1, "", "get_PulseSpel_exp_filepath"], [100, 1, 1, "", "get_PulseSpel_experiment"], [100, 1, 1, "", "get_PulseSpel_phase_cycling"], [100, 1, 1, "", "get_ReplaceMode"], [100, 1, 1, "", "get_attenuator"], [100, 1, 1, "", "get_config_file"], [100, 1, 1, "", "get_counterfreq"], [100, 1, 1, "", "get_field"], [100, 1, 1, "", "get_freq"], [100, 1, 1, "", "get_hidden_param"], [100, 1, 1, "", "get_param"], [100, 1, 1, "", "get_phase"], [100, 1, 1, "", "get_spec_config"], [100, 1, 1, "", "get_sweep_width"], [100, 1, 1, "", "get_video_bandwidth"], [100, 1, 1, "", "get_video_gain"], [100, 2, 1, "", "hidden"], [100, 1, 1, "", "is_exp_running"], [100, 1, 1, "", "pause_exp"], [100, 1, 1, "", "rerun_exp"], [100, 1, 1, "", "run_exp"], [100, 1, 1, "", "save_PulseSpel_def"], [100, 1, 1, "", "save_PulseSpel_exp"], [100, 1, 1, "", "set_Acquisition_mode"], [100, 1, 1, "", "set_ELDOR_freq"], [100, 1, 1, "", "set_MW_amp"], [100, 1, 1, "", "set_PhaseCycle"], [100, 1, 1, "", "set_PulseSpel_def_filepath"], [100, 1, 1, "", "set_PulseSpel_exp_filepath"], [100, 1, 1, "", "set_PulseSpel_experiment"], [100, 1, 1, "", "set_PulseSpel_phase_cycling"], [100, 1, 1, "", "set_PulseSpel_var"], [100, 1, 1, "", "set_ReplaceMode"], [100, 1, 1, "", "set_attenuator"], [100, 1, 1, "", "set_config_file"], [100, 1, 1, "", "set_field"], [100, 1, 1, "", "set_freq"], [100, 1, 1, "", "set_hidden_param"], [100, 1, 1, "", "set_param"], [100, 1, 1, "", "set_phase"], [100, 1, 1, "", "set_sweep_width"], [100, 1, 1, "", "set_video_bandwidth"], [100, 1, 1, "", "set_video_gain"], [100, 1, 1, "", "stop_exp"], [100, 1, 1, "", "xepr_save"]], "autodeer.hardware.dummy": [[102, 5, 1, "", "_gen_ESEEM"], [102, 5, 1, "", "_similate_respro"], [102, 5, 1, "", "_simulate_2D_relax"], [102, 5, 1, "", "_simulate_CP"], [102, 5, 1, "", "_simulate_T2"], [102, 5, 1, "", "_simulate_deer"], [102, 5, 1, "", "_simulate_field_sweep"], [102, 5, 1, "", "_simulate_reptimescan"], [102, 5, 1, "", "add_noise"], [102, 5, 1, "", "add_phaseshift"], [102, 0, 1, "", "dummyInterface"], [102, 6, 1, "", "hw_log"], [102, 6, 1, "", "rng"], [102, 5, 1, "", "val_in_ns"], [102, 5, 1, "", "val_in_us"]], "autodeer.hardware.dummy.dummyInterface": [[102, 2, 1, "", "Bridge"], [102, 2, 1, "", "Dummy"], [102, 2, 1, "", "Q"], [102, 2, 1, "", "SNR"], [102, 1, 1, "", "acquire_dataset"], [102, 2, 1, "", "fc"], [102, 1, 1, "", "isrunning"], [102, 2, 1, "", "key1"], [102, 1, 1, "", "launch"], [102, 2, 1, "", "mode"], [102, 2, 1, "", "pulses"], [102, 2, 1, "", "resonator_list"], [102, 2, 1, "", "scale"], [102, 2, 1, "", "speedup"], [102, 2, 1, "", "start_time"], [102, 2, 1, "", "state"], [102, 1, 1, "", "terminate"], [102, 1, 1, "", "tune_pulse"], [102, 1, 1, "", "tune_rectpulse"], [102, 2, 1, "", "x"]], "autodeer.hardware.dummy_xepr": [[110, 0, 1, "", "dummy_api"], [110, 0, 1, "", "dummy_cur_exp"], [110, 0, 1, "", "dummy_dataset"], [110, 0, 1, "", "dummy_hidden"], [110, 0, 1, "", "dummy_param"], [110, 0, 1, "", "dummy_xepr"], [110, 6, 1, "", "hardware_meta"], [110, 6, 1, "", "hw_log"]], "autodeer.hardware.dummy_xepr.dummy_api": [[110, 2, 1, "", "_tmp_dir"], [110, 1, 1, "", "abort_exp"], [110, 1, 1, "", "acquire_scan"], [110, 1, 1, "", "acquire_scan_2d"], [110, 1, 1, "", "acquire_scan_at"], [110, 1, 1, "", "compile_PulseSpel_def"], [110, 1, 1, "", "compile_PulseSpel_prg"], [110, 1, 1, "", "find_Xepr"], [110, 1, 1, "", "is_exp_running"], [110, 2, 1, "", "meta"], [110, 1, 1, "", "run_exp"], [110, 1, 1, "", "set_PulseSpel_var"], [110, 1, 1, "", "stop_exp"]], "autodeer.hardware.dummy_xepr.dummy_cur_exp": [[110, 2, 1, "", "CenterField"], [110, 2, 1, "", "FTAcqModeSlct"], [110, 2, 1, "", "FrequencyMon"], [110, 2, 1, "", "NbScansDone"], [110, 2, 1, "", "NbScansToDo"], [110, 2, 1, "", "PlsSPELEXPSlct"], [110, 2, 1, "", "PlsSPELGlbPaF"], [110, 2, 1, "", "PlsSPELLISTSlct"], [110, 2, 1, "", "PlsSPELPrgPaF"], [110, 2, 1, "", "ReplaceMode"], [110, 2, 1, "", "ShotRepTime"], [110, 2, 1, "", "ShotsPLoop"], [110, 2, 1, "", "SweepWidth"], [110, 2, 1, "", "SweepsPExp"], [110, 2, 1, "", "XSpecRes"], [110, 1, 1, "", "__getitem__"], [110, 1, 1, "", "aqExpRun"], [110, 1, 1, "", "getParam"]], "autodeer.hardware.dummy_xepr.dummy_dataset": [[110, 2, 1, "", "O"], [110, 2, 1, "", "size"]], "autodeer.hardware.dummy_xepr.dummy_hidden": [[110, 2, 1, "", "BrXAmp"], [110, 2, 1, "", "BrXPhase"], [110, 2, 1, "", "BrYAmp"], [110, 2, 1, "", "BrYPhase"], [110, 2, 1, "", "MinBrXAmp"], [110, 2, 1, "", "MinBrXPhase"], [110, 2, 1, "", "MinBrYAmp"], [110, 2, 1, "", "MinBrYPhase"], [110, 2, 1, "", "SignalPhase"], [110, 1, 1, "", "__getitem__"], [110, 1, 1, "", "getParam"]], "autodeer.hardware.dummy_xepr.dummy_param": [[110, 2, 1, "", "aqGetParMaxValue"], [110, 2, 1, "", "aqGetParMinValue"], [110, 2, 1, "", "val"], [110, 3, 1, "", "value"]], "autodeer.hardware.dummy_xepr.dummy_xepr": [[110, 0, 1, "", "XeprCmds"], [110, 1, 1, "", "XeprDataset"], [110, 1, 1, "", "XeprExperiment"], [110, 2, 1, "", "cur_exp"], [110, 2, 1, "", "hidden"]], "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds": [[110, 1, 1, "", "aqExpSelect"], [110, 1, 1, "", "aqPgCompile"], [110, 1, 1, "", "aqPgDefLoad"], [110, 1, 1, "", "aqPgDefSaveAs"], [110, 1, 1, "", "aqPgLoad"], [110, 1, 1, "", "aqPgSaveAs"], [110, 1, 1, "", "aqPgShowPrg"], [110, 1, 1, "", "vpSave"]], "autodeer.hardware.xepr_experiments": [[116, 5, 1, "", "CP_run"], [116, 5, 1, "", "CalibrateFreq"], [116, 0, 1, "", "DEER"], [116, 5, 1, "", "DEER5p_run"], [116, 0, 1, "", "ELDORtune"], [116, 6, 1, "", "MODULE_DIR"], [116, 0, 1, "", "MPFUtune"], [116, 0, 1, "", "PulseProfile"], [116, 5, 1, "", "get_nutations"]], "autodeer.hardware.xepr_experiments.DEER": [[116, 2, 1, "", "api"], [116, 2, 1, "", "awg"], [116, 2, 1, "", "d0"], [116, 2, 1, "", "det_frq"], [116, 2, 1, "", "hybrid"], [116, 2, 1, "", "mpfu"], [116, 2, 1, "", "pump_frq"], [116, 1, 1, "", "run_4p"], [116, 1, 1, "", "run_5p"], [116, 1, 1, "", "run_CP"], [116, 2, 1, "", "srt"]], "autodeer.hardware.xepr_experiments.ELDORtune": [[116, 1, 1, "", "_get_exp"], [116, 1, 1, "", "_setup_exp"], [116, 2, 1, "", "api"], [116, 2, 1, "", "d0"], [116, 1, 1, "", "find_min"], [116, 2, 1, "", "hardware_wait"], [116, 2, 1, "", "ps_length"], [116, 2, 1, "", "srt"], [116, 1, 1, "", "tune"]], "autodeer.hardware.xepr_experiments.MPFUtune": [[116, 1, 1, "", "_setup_echo"], [116, 2, 1, "", "api"], [116, 1, 1, "", "calc_d0"], [116, 2, 1, "", "d0"], [116, 2, 1, "", "hardware_wait"], [116, 2, 1, "", "ps_length"], [116, 2, 1, "", "srt"], [116, 1, 1, "", "tune"], [116, 1, 1, "", "tune_phase"], [116, 1, 1, "", "tune_power"]], "autodeer.hardware.xepr_experiments.PulseProfile": [[116, 1, 1, "", "_freq_sweep"], [116, 1, 1, "", "_setup_exp"], [116, 2, 1, "", "api"], [116, 2, 1, "", "d0"], [116, 2, 1, "", "hardware_wait"], [116, 2, 1, "", "ps_length"], [116, 2, 1, "", "srt"]], "autodeer.pulses": [[127, 0, 1, "", "ChirpPulse"], [127, 0, 1, "", "Delay"], [127, 0, 1, "", "Detection"], [127, 0, 1, "", "FrequencySweptPulse"], [127, 0, 1, "", "GaussianPulse"], [127, 0, 1, "", "HSPulse"], [127, 0, 1, "", "Pulse"], [127, 0, 1, "", "RectPulse"], [127, 0, 1, "", "SincPulse"], [127, 5, 1, "", "build_default_pulses"]], "autodeer.pulses.ChirpPulse": [[127, 1, 1, "", "func"], [127, 3, 1, "", "sweeprate"]], "autodeer.pulses.Delay": [[127, 2, 1, "", "pcyc"], [127, 2, 1, "", "scale"], [127, 2, 1, "", "tp"]], "autodeer.pulses.Detection": [[127, 2, 1, "", "freq"], [127, 2, 1, "", "pcyc"], [127, 2, 1, "", "scale"]], "autodeer.pulses.FrequencySweptPulse": [[127, 3, 1, "", "Qcrit"], [127, 3, 1, "", "amp_factor"], [127, 3, 1, "", "sweeprate"]], "autodeer.pulses.GaussianPulse": [[127, 2, 1, "", "FWHM"], [127, 2, 1, "", "freq"], [127, 1, 1, "", "func"]], "autodeer.pulses.HSPulse": [[127, 2, 1, "", "beta"], [127, 1, 1, "", "func"], [127, 2, 1, "", "order1"], [127, 2, 1, "", "order2"], [127, 3, 1, "", "sweeprate"]], "autodeer.pulses.Pulse": [[127, 2, 1, "", "Progression"], [127, 1, 1, "", "__str__"], [127, 1, 1, "", "_addPhaseCycle"], [127, 1, 1, "", "_buildFMAM"], [127, 1, 1, "", "_calc_fft"], [127, 1, 1, "", "_from_dict"], [127, 1, 1, "", "_from_json"], [127, 1, 1, "", "_pcyc_str"], [127, 1, 1, "", "_to_dict"], [127, 1, 1, "", "_to_json"], [127, 3, 1, "", "amp_factor"], [127, 3, 1, "", "bandwidth"], [127, 1, 1, "", "build_shape"], [127, 1, 1, "", "build_table"], [127, 1, 1, "", "copy"], [127, 1, 1, "", "exciteprofile"], [127, 1, 1, "", "exciteprofile_old"], [127, 1, 1, "", "isDelayFocused"], [127, 1, 1, "", "isPulseFocused"], [127, 1, 1, "", "is_static"], [127, 1, 1, "", "load"], [127, 2, 1, "", "name"], [127, 1, 1, "", "plot"], [127, 1, 1, "", "plot_fft"], [127, 1, 1, "", "save"]], "autodeer.pulses.RectPulse": [[127, 2, 1, "", "freq"], [127, 1, 1, "", "func"]], "autodeer.pulses.SincPulse": [[127, 2, 1, "", "freq"], [127, 1, 1, "", "func"], [127, 2, 1, "", "order"], [127, 2, 1, "", "window"]], "autodeer.reporter": [[130, 0, 1, "", "Reporter"], [130, 0, 1, "", "SvgFlowable"], [130, 5, 1, "", "combo_figure"], [130, 5, 1, "", "create_report"], [130, 6, 1, "", "package_dir"], [130, 6, 1, "", "styles"]], "autodeer.reporter.Reporter": [[130, 1, 1, "", "_build"], [130, 1, 1, "", "add_code_block"], [130, 1, 1, "", "add_figure"], [130, 1, 1, "", "add_new_section"], [130, 1, 1, "", "add_page_break"], [130, 1, 1, "", "add_space"], [130, 1, 1, "", "add_table"], [130, 1, 1, "", "add_text"], [130, 1, 1, "", "add_title"], [130, 1, 1, "", "footer"], [130, 2, 1, "", "frame"], [130, 1, 1, "", "header"], [130, 2, 1, "", "pdf"], [130, 2, 1, "", "story"], [130, 2, 1, "", "template"]], "autodeer.reporter.SvgFlowable": [[130, 1, 1, "", "draw"], [130, 2, 1, "", "drawing"], [130, 2, 1, "", "height"], [130, 2, 1, "", "width"], [130, 1, 1, "", "wrap"]], "autodeer.sequences": [[141, 0, 1, "", "CarrPurcellSequence"], [141, 0, 1, "", "DEERSequence"], [141, 0, 1, "", "FieldSweepSequence"], [141, 0, 1, "", "HahnEchoSequence"], [141, 0, 1, "", "RefocusedEcho2DSequence"], [141, 0, 1, "", "ReptimeScan"], [141, 0, 1, "", "ResonatorProfileSequence"], [141, 0, 1, "", "Sequence"], [141, 0, 1, "", "T2RelaxationSequence"], [141, 0, 1, "", "TWTProfileSequence"]], "autodeer.sequences.CarrPurcellSequence": [[141, 1, 1, "", "_build_sequence"], [141, 2, 1, "", "dim"], [141, 2, 1, "", "n"], [141, 2, 1, "", "name"], [141, 2, 1, "", "tau"]], "autodeer.sequences.DEERSequence": [[141, 2, 1, "", "ESEEM"], [141, 1, 1, "", "add_ESEEM_avg"], [141, 2, 1, "", "deadtime"], [141, 2, 1, "", "dt"], [141, 1, 1, "", "five_pulse"], [141, 1, 1, "", "four_pulse"], [141, 1, 1, "", "nDEER_CP"], [141, 2, 1, "", "name"], [141, 1, 1, "", "select_pcyc"], [141, 1, 1, "", "seven_pulse"], [141, 1, 1, "", "simulate"], [141, 2, 1, "", "tau1"], [141, 2, 1, "", "tau1us"], [141, 2, 1, "", "tau2"], [141, 1, 1, "", "three_pulse"]], "autodeer.sequences.FieldSweepSequence": [[141, 2, 1, "", "B"], [141, 2, 1, "", "name"]], "autodeer.sequences.HahnEchoSequence": [[141, 2, 1, "", "name"]], "autodeer.sequences.RefocusedEcho2DSequence": [[141, 1, 1, "", "_build_sequence"], [141, 2, 1, "", "dt"], [141, 2, 1, "", "name"], [141, 2, 1, "", "tau1"], [141, 2, 1, "", "tau2"], [141, 2, 1, "", "tau_init"]], "autodeer.sequences.ReptimeScan": [[141, 2, 1, "", "dim"], [141, 2, 1, "", "min_reptime"], [141, 2, 1, "", "name"], [141, 2, 1, "", "reptime"], [141, 2, 1, "", "step"]], "autodeer.sequences.ResonatorProfileSequence": [[141, 1, 1, "", "_build_sequence"], [141, 2, 1, "", "fwidth"], [141, 2, 1, "", "gyro"], [141, 2, 1, "", "name"]], "autodeer.sequences.Sequence": [[141, 2, 1, "", "LO"], [141, 1, 1, "", "__str__"], [141, 1, 1, "", "_buildPhaseCycle"], [141, 1, 1, "", "_checkRect"], [141, 1, 1, "", "_estimate_time"], [141, 1, 1, "", "_from_dict"], [141, 1, 1, "", "_from_json"], [141, 1, 1, "", "_to_dict"], [141, 1, 1, "", "_to_json"], [141, 1, 1, "", "addPulse"], [141, 2, 1, "", "averages"], [141, 2, 1, "", "axes_uuid"], [141, 1, 1, "", "copy"], [141, 1, 1, "", "evolution"], [141, 1, 1, "", "load"], [141, 2, 1, "", "name"], [141, 2, 1, "", "num_pulses"], [141, 1, 1, "", "plot"], [141, 1, 1, "", "plot_pulse_exc"], [141, 2, 1, "", "progTable"], [141, 2, 1, "", "pulses"], [141, 2, 1, "", "reduce_uuid"], [141, 1, 1, "", "save"], [141, 3, 1, "", "seqtable_steps"], [141, 1, 1, "", "shift_detfreq_to_zero"], [141, 2, 1, "", "shots"]], "autodeer.sequences.T2RelaxationSequence": [[141, 2, 1, "", "name"], [141, 2, 1, "", "tau"]], "autodeer.sequences.TWTProfileSequence": [[141, 1, 1, "", "_build_sequence"], [141, 2, 1, "", "name"]], "autodeer.tools": [[142, 5, 1, "", "eprload"], [142, 6, 1, "", "log"], [142, 5, 1, "", "progress_bar"], [142, 5, 1, "", "progress_bar_frac"]], "autodeer.utils": [[143, 5, 1, "", "autoEPRDecoder"], [143, 5, 1, "", "build_table"], [143, 5, 1, "", "gcd"], [143, 5, 1, "", "round_step"], [143, 5, 1, "", "save_file"], [143, 5, 1, "", "sop"], [143, 5, 1, "", "transpose_dict_of_list"], [143, 5, 1, "", "transpose_list_of_dicts"], [143, 5, 1, "", "val_in_ns"], [143, 5, 1, "", "val_in_us"]], "dummyInterface": [[101, 2, 1, "", "Bridge"], [101, 2, 1, "", "Dummy"], [101, 2, 1, "", "Q"], [101, 2, 1, "", "SNR"], [101, 1, 1, "", "acquire_dataset"], [101, 2, 1, "", "fc"], [101, 1, 1, "", "isrunning"], [101, 2, 1, "", "key1"], [101, 1, 1, "", "launch"], [101, 2, 1, "", "mode"], [101, 2, 1, "", "pulses"], [101, 2, 1, "", "resonator_list"], [101, 2, 1, "", "scale"], [101, 2, 1, "", "speedup"], [101, 2, 1, "", "start_time"], [101, 2, 1, "", "state"], [101, 1, 1, "", "terminate"], [101, 1, 1, "", "tune_pulse"], [101, 1, 1, "", "tune_rectpulse"], [101, 2, 1, "", "x"]], "dummy_api": [[103, 2, 1, "", "_tmp_dir"], [103, 1, 1, "", "abort_exp"], [103, 1, 1, "", "acquire_scan"], [103, 1, 1, "", "acquire_scan_2d"], [103, 1, 1, "", "acquire_scan_at"], [103, 1, 1, "", "compile_PulseSpel_def"], [103, 1, 1, "", "compile_PulseSpel_prg"], [103, 1, 1, "", "find_Xepr"], [103, 1, 1, "", "is_exp_running"], [103, 2, 1, "", "meta"], [103, 1, 1, "", "run_exp"], [103, 1, 1, "", "set_PulseSpel_var"], [103, 1, 1, "", "stop_exp"]], "dummy_cur_exp": [[104, 2, 1, "", "CenterField"], [104, 2, 1, "", "FTAcqModeSlct"], [104, 2, 1, "", "FrequencyMon"], [104, 2, 1, "", "NbScansDone"], [104, 2, 1, "", "NbScansToDo"], [104, 2, 1, "", "PlsSPELEXPSlct"], [104, 2, 1, "", "PlsSPELGlbPaF"], [104, 2, 1, "", "PlsSPELLISTSlct"], [104, 2, 1, "", "PlsSPELPrgPaF"], [104, 2, 1, "", "ReplaceMode"], [104, 2, 1, "", "ShotRepTime"], [104, 2, 1, "", "ShotsPLoop"], [104, 2, 1, "", "SweepWidth"], [104, 2, 1, "", "SweepsPExp"], [104, 2, 1, "", "XSpecRes"], [104, 1, 1, "", "__getitem__"], [104, 1, 1, "", "aqExpRun"], [104, 1, 1, "", "getParam"]], "dummy_dataset": [[105, 2, 1, "", "O"], [105, 2, 1, "", "size"]], "dummy_hidden": [[106, 2, 1, "", "BrXAmp"], [106, 2, 1, "", "BrXPhase"], [106, 2, 1, "", "BrYAmp"], [106, 2, 1, "", "BrYPhase"], [106, 2, 1, "", "MinBrXAmp"], [106, 2, 1, "", "MinBrXPhase"], [106, 2, 1, "", "MinBrYAmp"], [106, 2, 1, "", "MinBrYPhase"], [106, 2, 1, "", "SignalPhase"], [106, 1, 1, "", "__getitem__"], [106, 1, 1, "", "getParam"]], "dummy_param": [[107, 2, 1, "", "aqGetParMaxValue"], [107, 2, 1, "", "aqGetParMinValue"], [107, 2, 1, "", "val"], [107, 3, 1, "", "value"]], "dummy_xepr": [[108, 0, 1, "", "XeprCmds"], [108, 1, 1, "", "XeprDataset"], [108, 1, 1, "", "XeprExperiment"], [108, 2, 1, "", "cur_exp"], [108, 2, 1, "", "hidden"]], "dummy_xepr.XeprCmds": [[108, 1, 1, "", "aqExpSelect"], [108, 1, 1, "", "aqPgCompile"], [108, 1, 1, "", "aqPgDefLoad"], [108, 1, 1, "", "aqPgDefSaveAs"], [108, 1, 1, "", "aqPgLoad"], [108, 1, 1, "", "aqPgSaveAs"], [108, 1, 1, "", "aqPgShowPrg"], [108, 1, 1, "", "vpSave"]], "get_dataWorker": [[80, 2, 1, "", "finished_signal"], [80, 2, 1, "", "interface"], [80, 2, 1, "", "result_signal"], [80, 1, 1, "", "run"], [80, 2, 1, "", "signals"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "module", "Python module"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:property", "4": "py:module", "5": "py:function", "6": "py:data"}, "terms": {"": [21, 22, 30, 32, 33, 34, 55, 56, 96, 97, 117, 124, 127, 147, 153], "0": [8, 12, 14, 16, 17, 18, 22, 25, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 45, 46, 47, 48, 50, 53, 54, 55, 56, 59, 60, 62, 68, 70, 71, 72, 77, 78, 79, 81, 83, 91, 96, 97, 98, 99, 100, 101, 102, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 141, 150, 151, 153, 155, 157, 159], "00": 153, "002803632236095": [68, 72, 77, 78, 79, 81], "0028087": 150, "00bbd6": 57, "01": 157, "015": 150, "02": [150, 153], "025": 150, "03": [45, 46, 47, 117, 153, 155], "05": [12, 38, 41, 117], "08": [22, 150], "08737812e": 153, "1": [3, 4, 8, 12, 14, 15, 16, 17, 20, 21, 22, 23, 25, 27, 33, 34, 38, 41, 44, 45, 46, 47, 52, 55, 56, 60, 62, 68, 72, 77, 78, 82, 83, 87, 88, 89, 90, 91, 96, 97, 99, 100, 112, 114, 116, 117, 118, 119, 121, 123, 124, 127, 132, 136, 140, 141, 143, 149, 150, 151, 154, 155, 158, 159], "10": [29, 33, 54, 55, 56, 117, 150, 153, 157], "100": [4, 13, 15, 37, 44, 52, 91, 114, 116, 117, 131, 132, 135, 136, 140, 141, 147, 150, 157, 159], "1000": [22, 34, 45, 46, 47, 70, 71, 117, 124, 127, 150, 151], "10000": [34, 117, 124, 127], "100000000": 22, "100n": 159, "10400": 150, "11": [34, 117, 124, 127, 143, 150], "119": [34, 117, 124, 127], "12": [68, 72, 77, 78, 117, 127, 150, 153], "120": 150, "1201": 150, "12181": 150, "12182": 150, "12183": 150, "12220": [157, 159], "12220g": 162, "128": [14, 26, 27, 50, 116, 117, 118, 122, 123, 126, 127, 150, 159], "13": 150, "13570": [34, 117, 124, 127], "13582": [34, 117, 124, 127], "14": 150, "15": [150, 151, 153], "16": [15, 26, 35, 70, 71, 91, 112, 113, 114, 115, 116, 117, 122, 125, 127, 132, 141, 147, 150, 151, 153, 159], "168": 155, "16n": [15, 117, 132, 141], "16step_4p": [15, 117, 132, 141, 151], "16step_5p": [15, 117, 132, 141, 150, 151], "17400": 150, "178": [34, 117, 124, 127, 143], "18": 153, "180": 157, "19": [22, 149, 151], "192": 155, "1d": [20, 22, 23, 36, 39, 41, 117], "1e": [22, 150, 153], "1e3": [150, 151, 157], "1e4": 153, "1e8": 153, "1mhz": 155, "1st": [15, 117, 132, 141], "2": [15, 16, 29, 30, 32, 33, 34, 45, 46, 47, 54, 55, 56, 72, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 113, 114, 115, 116, 117, 124, 127, 132, 141, 143, 150, 151, 153, 155, 158, 159], "20": [16, 27, 44, 99, 100, 117, 123, 127, 136, 141, 147, 150, 153], "200": [15, 51, 70, 71, 99, 100, 112, 116, 117, 132, 139, 141, 150, 159], "2000": [48, 117, 137, 141, 150], "2006": [34, 117, 124, 127, 143], "2008": [60, 62], "2009": [34, 117, 124, 127, 143], "200n": 159, "2013": [149, 151], "2014": 149, "2015": [34, 117, 124, 127, 151], "2017": 151, "2021": 149, "2024": 149, "203": 155, "2050": 155, "217": 150, "2172": 150, "23200": 150, "24": 150, "2400": 150, "24000": 150, "25": [16, 22], "2500": 150, "256": 116, "2600": 150, "265": 153, "2800": 150, "2d": [16, 36, 37, 39, 41, 95, 99, 100, 103, 110, 117, 135, 141, 147, 165], "2e2": 159, "2e3": [150, 151], "2x2": [117, 130], "3": [3, 4, 6, 7, 8, 10, 15, 16, 30, 32, 34, 36, 39, 41, 48, 70, 71, 91, 95, 99, 100, 116, 117, 124, 127, 132, 137, 141, 149, 150, 151, 153, 159], "30": [12, 16, 20, 22, 23, 38, 41, 60, 62, 70, 71, 91, 114, 116, 117, 150, 157], "3000": 150, "30th": 149, "31": 150, "32": [15, 26, 45, 46, 47, 117, 122, 127, 132, 141, 150, 151, 159], "320": 150, "32000": 150, "32e3": 150, "32step_7p": [15, 117, 132, 141, 151], "33": [45, 46, 47, 117, 150, 153, 155], "332": 150, "3339": [30, 32], "34": [150, 153, 157, 159], "35": [45, 46, 47, 117, 153, 155], "36": [45, 46, 47, 117, 150], "38": 150, "3e3": [157, 159], "3ghz": [48, 117, 137, 141], "4": [15, 16, 60, 62, 116, 117, 132, 141, 150, 153, 162], "40": [51, 95, 117, 139, 141, 150], "400": [37, 88, 89, 96, 97, 101, 102, 113, 114, 115, 116, 117, 135, 141, 159], "4000000": [115, 116], "4095": [116, 155], "42": [34, 117, 124, 127, 143], "42a399": [41, 57, 117], "49": 150, "4_dev": 150, "4pdeer": [16, 36, 39, 41, 117, 147], "4puls": [36, 39, 41, 117], "4u": 16, "5": [12, 15, 38, 41, 42, 45, 46, 47, 70, 71, 96, 97, 113, 114, 115, 116, 117, 128, 130, 132, 141, 150, 152, 153, 155], "50": [15, 70, 71, 112, 116, 117, 132, 141, 150, 151], "500": [48, 117, 137, 141, 150], "501": 150, "50k": 150, "512": 150, "52260651e": 153, "55": [34, 117, 124, 127, 143], "550": 91, "5600": 150, "5800": 150, "5e3": 150, "5pdeer": [16, 36, 39, 41, 117, 147], "5puls": [36, 39, 41, 117], "5u": 16, "6": [27, 50, 117, 123, 126, 127, 150, 151, 153], "60": [70, 71, 91], "6000": 150, "6000000": [112, 113, 114, 116], "650": 153, "6614": [34, 117, 124, 127, 143], "6625": [34, 117, 124, 127, 143], "67652": 155, "680": [114, 116], "6e3": 159, "6u": 159, "7": [15, 117, 132, 141, 150], "70": 155, "700": [113, 115, 116], "747": 150, "770": 150, "7800": 150, "8": [4, 15, 117, 132, 141, 150, 151, 153, 155, 162], "80": [112, 116, 150, 153], "800": 150, "8000": 150, "82": 153, "85625754e": 153, "8n": [15, 117, 132, 141], "8step_3p": [15, 117, 132, 141, 151], "9": [40, 41, 43, 53, 117, 149, 150], "90": [147, 157], "91334739e": 153, "92378391e": 153, "976": 153, "99": 16, "A": [16, 18, 21, 22, 25, 29, 33, 34, 44, 49, 51, 54, 55, 56, 58, 59, 60, 61, 62, 88, 89, 90, 91, 95, 96, 97, 101, 102, 114, 115, 116, 117, 120, 121, 124, 127, 130, 136, 138, 139, 141, 142, 143, 149, 150, 151, 152, 153, 154, 157, 158, 159, 162, 164], "And": [34, 117, 124, 127], "As": [152, 153, 164], "At": [147, 148, 152], "BE": [17, 117, 119, 127], "By": [28, 31, 32, 33, 51, 55, 56, 117, 134, 139, 141], "For": [16, 147, 150, 154, 155, 157, 158, 159, 160, 164], "IF": [96, 97], "If": [12, 15, 16, 29, 30, 32, 33, 34, 36, 38, 39, 41, 45, 46, 47, 49, 54, 55, 56, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 117, 124, 127, 132, 138, 141, 147, 151, 157, 164], "In": [149, 150, 155, 157, 159], "It": [45, 46, 47, 96, 97, 117, 145, 147, 150, 151, 152, 159, 160, 162, 164], "No": [66, 69, 71, 72, 76, 78, 86, 87, 90, 91, 159], "On": [149, 152, 153, 157, 158, 162, 164], "One": [149, 151, 155, 162], "That": 162, "The": [0, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 60, 61, 62, 65, 70, 71, 72, 75, 78, 85, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 150, 151, 152, 153, 155, 157, 158, 159, 162, 166], "There": [99, 100, 150, 154, 157, 159, 161, 162, 166], "These": [49, 99, 100, 103, 110, 117, 138, 141, 147, 155, 157, 162], "To": [0, 148, 149, 159, 162], "WILL": [17, 117, 119, 127], "With": [36, 39, 41, 117, 151], "_": 157, "__add__": [33, 55, 56, 58, 62, 117], "__eq__": [33, 55, 56, 117], "__getitem__": [104, 106, 110], "__init__": 159, "__main__": [72, 117, 144], "__mul__": [33, 55, 56, 117], "__o": [33, 55, 56, 58, 62, 117], "__rmul__": [33, 55, 56, 117], "__str__": [34, 49, 92, 94, 95, 117, 124, 127, 138, 141], "__sub__": [33, 55, 56, 117], "__version__": [53, 117], "_addawgpuls": [94, 95], "_adddef": [94, 95], "_addexp": [94, 95], "_addphasecycl": [34, 94, 95, 117, 124, 127], "_addscanloop": [94, 95], "_arg": [129, 130], "_build": [42, 117, 128, 130], "_build_exp_struct": [96, 97], "_build_method": [70, 71], "_build_parvar": [96, 97], "_build_phase_cycl": [96, 97], "_build_puls": [96, 97], "_build_sequ": [13, 37, 48, 52, 117, 131, 135, 137, 140, 141], "_buildfmam": [34, 117, 124, 127, 159], "_buildphasecycl": [49, 117, 138, 141], "_calc_fft": [34, 117, 124, 127], "_check_sequ": [94, 95], "_checkrect": [49, 117, 138, 141], "_cmpl_def": [94, 95], "_cmpl_exp": [94, 95], "_description_": [12, 15, 16, 20, 22, 23, 38, 41, 59, 60, 62, 72, 87, 93, 95, 96, 97, 98, 99, 100, 115, 116, 117, 132, 141, 142, 143], "_detect": [92, 95], "_estimate_tim": [49, 117, 138, 141], "_expdef": [94, 95], "_freq_sweep": [115, 116], "_from_dict": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "_from_json": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "_gen_eseem": 102, "_get_cur_exp_glob": [99, 100], "_get_exp": [113, 116], "_get_xepr_glob": [99, 100], "_launch_complex_thread": [88, 89, 90, 91], "_main": [92, 95], "_mpfu": [92, 95], "_mpfu_channel": 91, "_new_delai": [94, 95], "_new_puls": [94, 95], "_new_var": [94, 95], "_obj": [19, 63, 64, 117], "_pcyc_str": [34, 117, 124, 127], "_process_fit": [45, 46, 47, 117], "_set_cur_exp_glob": [99, 100], "_set_cur_exp_param": [99, 100], "_set_hidden_param": [99, 100], "_set_xepr_glob": [99, 100], "_setup_echo": [114, 116], "_setup_exp": [113, 115, 116], "_similate_respro": 102, "_simulate_2d_relax": 102, "_simulate_cp": 102, "_simulate_d": 102, "_simulate_field_sweep": 102, "_simulate_reptimescan": 102, "_simulate_t2": 102, "_smooth": [36, 39, 41, 117], "_spfu_channel": 91, "_summary_": [99, 100], "_tmp_dir": [99, 100, 103, 110], "_to_dict": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "_to_json": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "_type_": [13, 15, 16, 24, 28, 29, 35, 37, 48, 50, 51, 54, 56, 59, 62, 72, 87, 95, 96, 97, 114, 115, 116, 117, 125, 126, 127, 131, 132, 133, 134, 135, 137, 139, 141], "_version": [117, 144], "_xepr_retri": [99, 100], "a4": [42, 117, 128, 130], "a_shift": 16, "ab": 91, "abil": [152, 154], "abl": 148, "abort": [99, 100, 103, 110], "abort_exp": [99, 100, 103, 110], "about": [18, 117, 120, 127, 150, 157, 159], "abov": [15, 30, 32, 45, 46, 47, 117, 132, 141, 148, 151, 159], "absolut": [60, 61, 62], "abstract": [25, 117, 121, 127], "accept": 162, "acces": 157, "access": [157, 162, 166], "accumul": [49, 52, 117, 138, 140, 141], "accur": 157, "achiev": [16, 147], "acquir": [29, 54, 56, 88, 89, 90, 91, 96, 97, 99, 100, 101, 102, 103, 110, 117, 157], "acquire_dataset": [29, 54, 56, 88, 89, 90, 91, 96, 97, 99, 100, 101, 102, 117, 150, 157], "acquire_dataset_from_matlab": [96, 97], "acquire_scan": [99, 100, 103, 110], "acquire_scan_2d": [99, 100, 103, 110], "acquire_scan_at": [99, 100, 103, 110], "acquisit": 95, "acquisition_mod": 95, "across": [15, 117, 132, 141, 147, 155], "act": [31, 32], "activ": [145, 154, 157, 160], "actual": [31, 32, 110, 157], "ad": [16, 28, 29, 30, 32, 33, 34, 41, 51, 54, 55, 56, 88, 89, 90, 91, 96, 97, 98, 101, 102, 117, 124, 127, 130, 134, 139, 141, 150, 151, 154, 157, 159, 162, 165], "add": [34, 49, 117, 124, 127, 138, 141, 149, 159, 162], "add_axi": [33, 55, 56, 117], "add_code_block": [42, 117, 128, 130], "add_eseem_avg": [15, 117, 132, 141], "add_figur": [42, 117, 128, 130], "add_new_entri": [73, 74], "add_new_sect": [42, 117, 128, 130], "add_nois": 102, "add_page_break": [42, 117, 128, 130], "add_phaseshift": 102, "add_spac": [42, 117, 128, 130], "add_tabl": [42, 117, 128, 130], "add_text": [42, 117, 128, 130], "add_titl": [42, 117, 128, 130], "addit": [151, 153, 157, 158, 159], "addition": [145, 147, 152, 164], "addpuls": [49, 117, 138, 141, 159], "addpulsesprog": 159, "adjust": [99, 100, 147, 152, 157], "administr": 162, "advanc": [68, 72, 77, 78, 150, 154, 157, 165], "advanced_mode_input": [68, 72, 77, 78], "advantag": [151, 159], "advent": 151, "after": [16, 88, 89, 90, 91, 99, 100, 103, 110, 149, 151, 154, 157, 162], "again": 147, "aic": 153, "aim": [148, 162], "aim_mnr": 16, "aim_tim": 16, "aimtim": 16, "akin": 152, "al": [34, 60, 62, 117, 124, 127, 151], "alert": 162, "algorithm": [60, 62, 165], "algorithum": 145, "all": [8, 15, 18, 32, 34, 49, 95, 96, 97, 98, 114, 116, 117, 120, 124, 127, 132, 138, 141, 147, 148, 150, 151, 152, 157, 158, 159, 160, 162, 164], "allow": [30, 32, 110, 147, 150, 151, 152, 154, 157, 158, 159, 166], "alogoithm": 150, "along": [16, 152, 157], "alreadi": [99, 100], "also": [49, 95, 117, 138, 141, 147, 148, 152, 154, 157, 159, 160, 162, 166], "alwai": [61, 62, 147, 148, 151, 157, 162], "am": [34, 117, 124, 127, 159], "amount": 16, "amp_factor": [25, 34, 117, 121, 124, 127], "amp_hahn": [96, 97], "amp_nut": [150, 157], "amp_var": 95, "amplifi": [99, 100, 162], "amplitud": [14, 17, 25, 27, 34, 117, 118, 119, 121, 123, 124, 127, 154, 157], "an": [15, 16, 29, 30, 32, 34, 41, 49, 52, 54, 56, 72, 87, 88, 89, 90, 91, 95, 96, 97, 104, 106, 110, 117, 124, 127, 132, 138, 140, 141, 145, 147, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 162], "analogu": [155, 158], "analys": [152, 154, 157, 160, 164], "analysi": [12, 16, 20, 22, 23, 32, 34, 36, 38, 39, 40, 41, 43, 45, 46, 47, 60, 62, 117, 124, 127, 130, 143, 154, 160], "analyz": [16, 36, 39, 40, 41, 43, 117], "andrin": [34, 96, 97, 98, 117, 124, 127], "angl": [35, 117, 125, 127], "ani": [33, 55, 56, 96, 97, 99, 100, 103, 110, 117, 148, 149, 152, 162], "annot": [4, 10], "anoth": [34, 117, 124, 127, 155, 162], "anyth": [66, 69, 71, 72, 76, 78, 86, 87, 145, 149, 162], "api": [88, 89, 90, 91, 95, 112, 113, 114, 115, 116, 150, 165], "api_doc": 157, "app": [67, 78, 83], "appear": 152, "append": [30, 32], "appli": [16, 34, 91, 117, 124, 127, 147, 154], "applic": [16, 30, 32, 72, 87], "appraoch": 147, "approach": [157, 158, 159, 160], "appropri": [157, 162], "approxim": [16, 113, 114, 115, 116, 147], "aqexprun": [104, 110], "aqexpselect": [108, 109, 110], "aqgetparmaxvalu": [107, 110], "aqgetparminvalu": [107, 110], "aqpgcompil": [108, 109, 110], "aqpgdefload": [108, 109, 110], "aqpgdefsavea": [108, 109, 110], "aqpgload": [108, 109, 110], "aqpgsavea": [108, 109, 110], "aqpgshowprg": [108, 109, 110], "ar": [12, 16, 30, 32, 34, 36, 38, 39, 41, 49, 66, 69, 71, 72, 76, 78, 86, 87, 91, 95, 98, 117, 124, 127, 138, 141, 143, 147, 149, 150, 151, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166], "arang": [33, 55, 56, 117, 159], "arbitari": [14, 17, 25, 27, 34, 117, 118, 119, 121, 123, 124, 127], "arg": [3, 6, 7, 16, 20, 22, 23, 34, 41, 65, 68, 70, 71, 72, 75, 77, 78, 85, 87, 90, 91, 96, 97, 99, 100, 117, 124, 127], "argument": [30, 32, 34, 65, 70, 71, 72, 75, 78, 85, 87, 117, 124, 127, 157], "aris": 162, "around": [96, 97, 145, 150], "arrai": [34, 95, 117, 124, 127], "arthur": [34, 117, 124, 127, 143], "ascii": 162, "asctim": [30, 32], "asp": [60, 62], "associ": [114, 116], "assum": [45, 46, 47, 117], "astronom": [60, 62], "attempt": 149, "attenu": [91, 114, 116, 162], "attribut": [3, 8, 30, 32, 33, 55, 56, 88, 89, 90, 159], "auto": [1, 16, 144, 158], "autoapi": [3, 8, 165], "autoapi_opt": [3, 8], "autod": [0, 68, 75, 76, 77, 88, 90, 96, 101, 103, 144, 147, 148, 149, 150, 151, 152, 153, 155, 157, 159, 160, 162, 166], "autodeer_4hr": 150, "autodeer_fieldsweep": 150, "autodeer_work": [72, 117, 144], "autodeersign": [69, 71], "autodeerui": [68, 72, 77, 78], "autodeerwork": [70, 71], "autoepr": [29, 54, 56, 101, 102, 117, 145, 151, 157, 158, 159], "autoeprdecod": [117, 143], "autom": [145, 154, 157, 160, 165], "automat": [49, 117, 138, 141, 154, 157, 164], "autosav": [29, 54, 56, 88, 89, 90, 91, 96, 97, 101, 102, 117, 162], "avail": [30, 32, 66, 69, 71, 72, 76, 78, 86, 87, 157], "availi": [16, 165], "avali": [12, 16, 38, 41, 117, 147], "averag": [12, 13, 15, 16, 22, 24, 28, 36, 37, 38, 39, 41, 44, 48, 49, 51, 52, 70, 71, 96, 97, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 151, 157, 159], "awai": [154, 160], "awg": [70, 71, 88, 89, 94, 95, 96, 97, 112, 116, 117, 127, 147, 150, 151, 153, 154, 155, 158, 159, 160, 162, 165], "awg_freq": [96, 97], "ax": [12, 14, 16, 20, 22, 23, 26, 27, 34, 35, 36, 38, 39, 40, 41, 43, 45, 46, 47, 50, 64, 117, 118, 122, 123, 124, 125, 126, 127, 150, 157, 159], "ax_id": [33, 55, 56, 117], "axes_label": [64, 117], "axes_uuid": [49, 117, 138, 141], "axi": [13, 16, 20, 22, 23, 33, 34, 36, 37, 39, 40, 41, 43, 45, 46, 47, 49, 55, 56, 95, 117, 124, 127, 131, 135, 138, 141, 143, 150, 159], "axid": [88, 89, 90, 91, 96, 97], "axis_id": [33, 55, 56, 117, 159], "b": [13, 15, 16, 22, 24, 28, 34, 37, 44, 48, 49, 51, 52, 88, 89, 90, 91, 95, 96, 97, 101, 102, 117, 124, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 151, 157, 159], "b0": [13, 15, 24, 28, 37, 44, 48, 51, 88, 89, 90, 91, 96, 97, 117, 131, 132, 133, 134, 135, 136, 137, 139, 141, 150, 159], "b1": [25, 34, 117, 121, 124, 127], "b_shift": 16, "back": [160, 161, 162], "backend": 145, "background": [16, 88, 89, 90, 91, 96, 97, 150], "background_func": 16, "backup": 149, "banana": 153, "band": [147, 154], "bandwidth": [34, 99, 100, 117, 124, 127, 159], "base": [3, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 40, 41, 43, 44, 48, 50, 51, 52, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 102, 103, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 147, 148, 149, 154, 155, 157, 158, 160, 165], "bashrc": 149, "basic": [31, 32, 151, 157, 158, 162], "becaus": [147, 149], "becom": [149, 162], "been": [96, 97, 99, 100, 103, 110, 147, 149, 151, 154, 155, 157, 158, 160, 162], "befor": [29, 30, 32, 54, 56, 117, 147, 149, 150, 151, 155, 157, 158, 162, 164], "begin": [99, 100, 103, 110], "being": [29, 49, 54, 56, 96, 97, 117, 138, 141, 147, 159], "beliv": [99, 100], "below": [151, 152], "best": 16, "beta": [27, 117, 123, 127, 145], "better": [88, 89, 90, 91, 162], "between": [15, 16, 45, 46, 47, 48, 115, 116, 117, 132, 137, 141, 149, 150, 151, 154, 155, 157, 159], "beyond": 150, "bg_data": [88, 89, 90, 91, 96, 97], "bg_thread": [88, 89, 90, 91, 96, 97], "bic": 153, "big": 162, "biolog": 154, "biomolecul": 151, "bit": [153, 155], "blank": [4, 152], "block": [8, 157], "book": 152, "bool": [12, 15, 16, 20, 22, 23, 29, 33, 34, 36, 38, 39, 41, 54, 55, 56, 89, 91, 93, 95, 97, 98, 99, 100, 102, 116, 117, 124, 127, 132, 141], "borbat": 151, "both": [12, 16, 37, 38, 41, 45, 46, 47, 95, 99, 100, 114, 116, 117, 135, 141, 147, 152, 154, 155, 157, 158, 159, 160, 162], "bottom": [117, 130, 152], "bound": [91, 114, 116], "box": [68, 72, 77, 78, 87, 152], "bphasecycl": [92, 95], "branch": [53, 148], "bridg": [99, 100, 101, 102, 153, 155, 158], "bridge12": 153, "bridge_config": [88, 89, 90, 91], "brief": [33, 55, 56, 117], "britt": [34, 117, 124, 127, 143], "bruker": [68, 72, 77, 78, 88, 89, 90, 91, 95, 96, 97, 110, 148, 149, 153, 154, 157, 160, 164, 165], "bruker_awg": [111, 117, 144], "bruker_mpfu": [111, 117, 144], "bruker_tool": [111, 117, 144], "brukerawg": [88, 89, 155, 157], "brukermpfu": [90, 91, 155], "brute": 16, "brxamp": [106, 110], "brxphase": [106, 110], "bryamp": [106, 110], "bryphas": [106, 110], "bspline_extra": 46, "bug": 161, "build": [13, 15, 16, 22, 24, 28, 34, 37, 48, 51, 52, 117, 124, 127, 131, 132, 133, 134, 135, 137, 139, 140, 141, 145, 151, 155, 158, 159, 162], "build__lowpass_butter_filt": 16, "build_default_puls": [117, 127], "build_shap": [34, 117, 124, 127], "build_spectrum": 22, "build_tabl": [34, 117, 124, 127, 143], "build_unique_progt": 95, "built": [0, 145, 150, 154, 157, 158, 159, 160, 162], "butter": 98, "butterworth": 16, "button": [145, 147, 152, 154, 157, 160, 161, 164], "bw": [153, 159], "bwidth": [24, 48, 117, 133, 137, 141, 150], "byte": [129, 130], "bytesio": 130, "c": 95, "c243": [153, 155], "ca": 149, "cach": [88, 89, 96, 97, 157], "cal": [153, 155], "calc_correction_factor": 16, "calc_d0": [88, 89, 90, 91, 114, 116], "calc_d0_from_hahn_echo": [88, 89, 90, 91], "calc_deer_set": [16, 165], "calc_gyro": [20, 22, 23, 117, 150], "calc_identifi": 16, "calc_noise_level": [20, 22, 23, 117], "calc_optimal_deer_frq": 150, "calc_optimal_reptim": [40, 41, 43, 117], "calc_overlap": 46, "calc_percieved_freq": 98, "calc_rel_posit": 95, "calcat": 16, "calcuat": [46, 95], "calcul": [12, 16, 19, 20, 22, 23, 36, 38, 39, 40, 41, 43, 45, 46, 47, 49, 63, 64, 99, 100, 117, 138, 141, 147, 150, 152, 162, 165], "calibr": [153, 155, 158], "calibratefreq": 116, "call": [30, 32, 96, 97, 151, 159, 166], "callback": [65, 70, 71, 72, 75, 78, 85, 87], "can": [30, 31, 32, 33, 34, 55, 56, 88, 89, 90, 91, 93, 95, 99, 100, 103, 110, 114, 116, 117, 124, 127, 145, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 162, 164, 166], "cannot": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "canva": [42, 117, 128, 130], "carefulli": 162, "cari": 147, "carr": [12, 13, 16, 38, 41, 117, 131, 141, 147, 151], "carri": [30, 32, 147], "carrpurcel": 150, "carrpurcellanalysi": [12, 16, 38, 41, 117, 150, 157], "carrpurcellsequ": [13, 117, 131, 141, 150], "case": [31, 32, 149], "caus": [149, 158, 162], "caution": [34, 117, 124, 127], "caveat": 158, "cd": 149, "ceil": 46, "center": [152, 153], "centerfield": [104, 110], "centr": [18, 117, 120, 127, 154], "central": [49, 52, 88, 89, 96, 97, 117, 138, 140, 141, 150], "certif": 149, "chage": [34, 117, 124, 127], "challeng": [149, 151], "chang": [30, 32, 93, 95, 96, 97, 99, 100, 103, 110, 151, 155, 157, 159, 160, 161, 162], "change_dimens": 95, "change_lo": [68, 72, 77, 78], "change_log_level": 32, "channel": [30, 32, 91, 95, 99, 100, 113, 114, 115, 116, 153, 155, 162], "characteris": 147, "charecteris": 147, "chart": [129, 130], "cheby2": 98, "check": [12, 34, 38, 41, 49, 60, 62, 93, 95, 117, 124, 127, 138, 141, 149, 151, 157, 162], "check_cp": [68, 72, 77, 78], "check_decai": [12, 38, 41, 117], "check_t2": [68, 72, 77, 78], "check_vari": 95, "checkpulsespel": [93, 95], "chem": [34, 117, 124, 127, 143, 151], "children": 8, "chip": 159, "chirp": [147, 151, 160], "chirppuls": [14, 117, 118, 127, 159], "chnannel": [99, 100], "choos": [15, 95, 96, 97, 117, 132, 141, 152], "chose": 147, "chosen": [91, 114, 116, 151, 152], "clarifi": 147, "class": [3, 5, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 63, 65, 66, 68, 69, 70, 73, 75, 76, 77, 79, 80, 82, 85, 86, 88, 90, 92, 93, 94, 96, 99, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 157, 158, 159, 165], "classmethod": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "clean": 0, "clear": [34, 117, 124, 127, 157], "clear_al": [68, 72, 77, 78, 82, 83], "clear_cach": 157, "clear_log": [73, 74], "clearlayout": [82, 83], "click": [152, 161, 164], "clone": 148, "close": 149, "cmap": [41, 117], "code": [15, 42, 110, 117, 128, 130, 132, 141, 145, 151, 157], "coeffic": [99, 100], "coher": [34, 117, 124, 127, 159], "collect": [114, 116], "color": [41, 117, 144], "com": [34, 117, 124, 127, 148, 155, 156], "combin": 157, "combo_figur": [117, 130], "come": [147, 149, 157, 159], "command": [32, 90, 91, 99, 100, 151, 159], "comment": [72, 87], "common": [117, 143, 147, 149, 157], "commonli": [96, 97], "commun": [152, 162], "comp": [117, 143], "compact": [16, 150], "compat": 95, "compens": [34, 117, 124, 127, 147, 160], "compil": 95, "compile_pulsespel_def": [99, 100, 103, 110], "compile_pulsespel_prg": [99, 100, 103, 110], "complet": [145, 147, 149, 152, 153, 155, 157, 164], "complex": 98, "complic": 157, "compon": 158, "comprehens": [34, 117, 124, 127, 143], "compress": 98, "comput": [22, 30, 32, 34, 61, 62, 117, 124, 127, 149, 155], "computefreq2field": 22, "computeintens": 22, "condit": [12, 29, 38, 41, 54, 56, 117], "conduct": 157, "confer": [60, 62], "config": [68, 72, 77, 78, 149, 152, 155, 164], "config_fil": [88, 89, 90, 91, 99, 100, 101, 102], "configur": [88, 89, 90, 91, 99, 100, 164], "conflict": 149, "connect": [29, 54, 56, 68, 72, 77, 78, 88, 89, 90, 91, 96, 97, 99, 100, 101, 102, 117, 150, 158, 162], "connect_spectromet": [68, 72, 77, 78], "consid": [145, 158, 159], "consist": [157, 159], "consol": 149, "constant": [33, 55, 56, 93, 95, 117], "construct": [30, 32], "consum": 151, "conta": 95, "contact": [145, 156, 158], "contain": [1, 33, 34, 45, 46, 47, 49, 55, 56, 95, 117, 124, 127, 129, 130, 138, 141, 144, 151, 152, 157, 159, 164], "content": 8, "continu": [61, 62, 149], "contour": [36, 39, 41, 117], "control": [96, 97, 150, 154, 158, 160], "convers": [99, 100], "convert": [30, 32, 95, 116, 117, 129, 130, 143, 155, 158, 159], "convert_progt": 95, "copi": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "core": [32, 45, 46, 47, 68, 72, 77, 78, 82, 83, 117, 153, 162], "core_logg": [73, 74, 162], "corespond": 149, "corner": 152, "corr_phas": 98, "correct": [16, 91, 99, 100, 151, 157], "correction_factor": [68, 72, 77, 78], "correctli": 149, "correctphas": [19, 63, 64, 117], "correctphaseful": [19, 63, 64, 117], "correspond": [34, 104, 106, 110, 117, 124, 127], "could": [162, 164], "count": 4, "counter": [99, 100], "coupl": [30, 32, 158], "cours": 158, "cp": [12, 16, 38, 41, 117, 147], "cp_data": 150, "cp_run": 116, "cpdecai": 16, "cpseq": 150, "creat": [15, 16, 22, 30, 32, 33, 34, 36, 39, 41, 55, 56, 68, 72, 77, 78, 88, 89, 90, 91, 96, 97, 117, 124, 127, 130, 132, 141, 143, 151, 157, 162], "create_dataset_from_ax": [64, 117], "create_dataset_from_bruk": [64, 117], "create_dataset_from_sequ": [64, 117], "create_fieldsweep_figur": [68, 72, 77, 78], "create_figur": [79, 81, 82, 83], "create_nmodel": 22, "create_relax_figur": [68, 72, 77, 78], "create_report": [68, 72, 77, 78, 130], "create_respro_figur": [68, 72, 77, 78], "create_save_nam": [72, 87], "creation": [30, 32], "criteria": [16, 29, 54, 56, 58, 59, 60, 61, 93, 95, 117, 144, 150, 157, 160], "criterion": [16, 29, 54, 56, 117], "critic": [25, 30, 32, 117, 121, 127, 162], "cross": 16, "cur_exp": [88, 89, 90, 91, 96, 97, 99, 100, 108, 110], "cur_exp_inst": [99, 100], "current": [30, 32, 36, 39, 40, 41, 43, 95, 96, 97, 99, 100, 103, 104, 106, 110, 117, 148, 151, 152, 155, 158, 160], "current_data": [68, 72, 77, 78, 82, 83], "current_fold": [68, 72, 77, 78, 79, 81, 82, 83], "current_result": [68, 72, 77, 78, 82, 83], "custom": [150, 166], "customis": 152, "cutoff": 16, "cvx": 153, "cycl": [15, 34, 95, 117, 124, 127, 132, 141, 150, 159], "d": [30, 32, 60, 62, 95, 117, 143], "d0": [88, 89, 90, 91, 94, 95, 112, 113, 114, 115, 116, 153, 164], "d1": 95, "d10": 95, "d11": 95, "d12": 95, "d13": 95, "d14": 95, "d15": 95, "d2": 95, "d3": 95, "d4": 95, "d5": 95, "d6": 95, "d61b00": 57, "d7": 95, "d8": 95, "d95b6f": [41, 57, 117], "dai": 162, "daili": 162, "danger": 162, "data": [2, 8, 12, 16, 20, 22, 23, 29, 34, 36, 38, 39, 41, 54, 56, 60, 62, 64, 66, 69, 70, 71, 72, 76, 78, 86, 87, 98, 99, 100, 102, 103, 110, 117, 124, 127, 130, 142, 147, 150, 152, 154, 160, 164, 165], "dataarrai": [20, 22, 23, 41, 117, 142], "dataset": [12, 16, 20, 22, 23, 29, 36, 38, 39, 40, 41, 43, 45, 46, 47, 54, 56, 68, 72, 77, 78, 79, 81, 83, 88, 89, 90, 91, 96, 97, 99, 100, 101, 102, 103, 110, 113, 116, 117, 144, 150, 157], "date": [30, 32, 148, 149, 160, 162], "datefmt": [30, 32], "david": [34, 117, 124, 127, 143], "db": [99, 100], "dc": [15, 117, 132, 141, 151, 159], "dct": [34, 49, 117, 124, 127, 138, 141, 143], "deadtim": [15, 112, 116, 117, 132, 141, 151], "debug": [30, 32, 153, 162], "decai": [12, 16, 38, 41, 117, 147], "decid": 157, "decim": 46, "declar": 159, "decoher": 165, "decoupl": [13, 117, 131, 141], "decreas": 159, "deep": [34, 117, 124, 127], "deer": [15, 16, 59, 62, 112, 116, 117, 130, 132, 141, 145, 152, 154, 155, 160, 164, 165], "deer5p_run": 116, "deer_analysi": [117, 144], "deer_input": [70, 71], "deer_set": [68, 70, 71, 72, 77, 78], "deeranalysi": [16, 150], "deeranalysis_plot": [16, 150], "deeranalysis_plot_pub": 16, "deeranalysis_process": 83, "deercriteria": [59, 62, 150], "deerlab": [16, 60, 62, 117, 130, 147, 148, 153, 154], "deerplot": [82, 83], "deersequ": [15, 117, 132, 141, 150, 151], "def": [95, 159], "def_file_str": [94, 95], "default": [12, 15, 16, 18, 20, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 59, 60, 61, 62, 91, 95, 96, 97, 98, 99, 100, 113, 114, 115, 116, 117, 120, 122, 124, 125, 126, 127, 130, 132, 134, 136, 137, 139, 141, 142, 149, 150, 153, 157, 162], "defenc": 162, "defin": [31, 32, 58, 59, 60, 61, 62, 66, 69, 71, 72, 76, 78, 86, 87, 150, 159], "definit": [95, 150, 155], "deg": 116, "degre": [116, 162], "delai": [12, 15, 17, 34, 36, 38, 39, 41, 48, 51, 93, 95, 117, 119, 124, 127, 132, 137, 139, 141, 147, 150, 151, 154, 159, 164], "demonstr": 159, "den": 142, "denot": [96, 97], "depend": [16, 30, 32, 148, 149, 151, 158, 159], "dependeci": 149, "deprec": [17, 117, 119, 127], "depth": [102, 151], "dersnr": [60, 62], "describ": [30, 32, 36, 39, 40, 41, 43, 49, 117, 138, 141, 159], "descript": [33, 55, 56, 58, 59, 60, 61, 62, 117, 150, 151], "design": [0, 147, 154, 158, 160], "desir": [16, 31, 32], "desktop": 162, "destin": [31, 32], "det": [153, 155, 159], "det_ev": [150, 151], "det_frq": [20, 22, 23, 112, 116, 117], "det_window": 150, "detail": [115, 116, 147, 157, 166], "detect": [16, 18, 20, 22, 23, 34, 41, 96, 97, 99, 100, 103, 110, 117, 120, 124, 127, 130, 147, 150, 159, 162], "detect_dict": [92, 95], "detect_eseem": [41, 117], "determin": [30, 31, 32, 147, 154], "determine_twt_split": 95, "deuteron": [15, 41, 117, 132, 141], "dev": 148, "devel": 149, "develop": [34, 98, 110, 117, 124, 127, 145, 147, 148, 149, 151, 157, 158, 159, 161, 166], "deviat": 16, "diagram": [3, 129, 130], "dict": [16, 33, 34, 49, 55, 56, 64, 71, 72, 74, 87, 95, 96, 97, 98, 114, 116, 117, 124, 127, 130, 138, 141], "dictformat": [30, 32], "dictionari": [30, 32, 34, 49, 95, 96, 97, 114, 116, 117, 124, 127, 130, 138, 141, 143, 157, 159], "didn": 162, "differ": [33, 45, 46, 47, 55, 56, 117, 149, 151, 155, 157, 160, 162], "differenti": 155, "dig_rat": [96, 97], "digit": [155, 158], "digitally_upconvert": 98, "digits": [96, 97], "dim": [13, 33, 37, 44, 51, 55, 56, 91, 94, 95, 117, 131, 135, 136, 139, 141, 150], "dimens": [95, 162], "dimension": [33, 55, 56, 117], "dimesnion": 95, "diod": [116, 155], "dip": 150, "dipolar": [16, 151], "direct": [34, 117, 124, 127], "directli": [33, 55, 56, 58, 59, 60, 61, 62, 117, 155], "directori": [149, 164], "disadvantag": 151, "discontinu": 149, "discuss": [161, 162], "discussion_url": [68, 72, 77, 78], "dispatch": [31, 32], "displai": [3, 4, 6, 7, 8, 10, 152, 164], "distanc": [16, 147, 151, 154, 157], "distribut": [16, 147, 157], "dividor": [117, 143], "dl_param": [68, 72, 77, 78, 82, 83], "dnp": 159, "do": [31, 32, 148, 149, 150, 155, 158, 159], "doc": [42, 117, 128, 130, 148, 165], "docs_url": [68, 72, 77, 78], "docstr": [3, 4, 6, 7, 8, 10], "document": [1, 34, 117, 124, 127, 143, 144, 145, 165], "doe": [33, 34, 49, 55, 56, 96, 97, 117, 124, 127, 138, 141, 152, 158], "doll": [34, 96, 97, 98, 117, 124, 127, 151, 153], "dolla": [34, 117, 124, 127], "domain": [16, 34, 117, 124, 127, 147, 157], "don": 152, "done": [16, 79, 81, 95, 99, 100, 103, 110, 149, 151, 152, 155, 157, 158, 159, 160, 164], "doubl": [12, 38, 41, 117, 151, 154], "down": [155, 159, 162], "download": 148, "draw": [129, 130], "dsl": 157, "dstribut": 149, "dt": [15, 37, 70, 71, 112, 116, 117, 132, 135, 141, 147, 150, 151, 153, 155], "dta": 98, "due": 158, "dummi": [101, 110, 111, 117, 144], "dummy_api": [103, 110], "dummy_cur_exp": [104, 110], "dummy_dataset": [105, 110], "dummy_hidden": [106, 110], "dummy_param": [104, 106, 107, 110], "dummy_xepr": [108, 111, 117, 144], "dummyinterfac": [101, 102], "durand": [60, 62], "durat": [16, 157], "dure": [61, 62, 154], "dynam": [13, 33, 55, 56, 117, 131, 141, 149, 157], "e": [30, 32, 34, 49, 52, 95, 96, 97, 114, 116, 117, 124, 127, 138, 140, 141, 143, 148, 151, 155, 157, 159, 162], "e1ae38": [57, 117], "e580": [153, 155], "each": [16, 33, 34, 36, 39, 41, 49, 55, 56, 91, 95, 117, 124, 127, 138, 141, 143, 157, 159, 162, 166], "earlier": 162, "easi": [154, 155, 160], "easier": 162, "easiest": 166, "easili": [149, 152, 157], "easyspin": [34, 117, 124, 127, 143], "echo": [15, 16, 28, 36, 37, 39, 41, 44, 48, 51, 91, 114, 115, 116, 117, 130, 132, 134, 135, 136, 137, 139, 141, 147, 149, 150, 151, 157, 159], "edf": [24, 117, 130, 133, 141, 147, 150], "edit": 148, "effect": [16, 99, 100, 103, 110, 151], "effic": 147, "effici": [34, 117, 124, 127, 143], "eith": [33, 55, 56, 117], "either": [12, 13, 16, 20, 22, 23, 24, 28, 30, 32, 36, 37, 38, 39, 41, 48, 51, 91, 96, 97, 114, 116, 117, 131, 133, 134, 135, 137, 139, 141, 145, 147, 157, 160, 162, 164], "eldor": [91, 99, 100, 113, 115, 116], "eldortun": [91, 113, 116], "electron": [34, 117, 124, 127, 151, 154], "element": [33, 36, 39, 41, 55, 56, 96, 97, 117, 155, 157], "elexsi": [88, 89, 90, 91, 154, 158, 160], "elif": 8, "els": [3, 4, 7, 8], "elspin": 22, "email": 162, "emin": 149, "emit": [30, 31, 32], "empti": [31, 32], "enabl": 145, "encod": 162, "encrypt": 149, "end": [61, 62, 99, 100, 103, 110, 115, 116, 160, 162], "end_criteria": [70, 71], "end_sign": [58, 62], "end_tim": [61, 62], "endblock": 8, "endfor": [3, 6, 7, 8, 10], "endif": [3, 4, 6, 7, 8, 10], "endor": 159, "endtimecriteria": [70, 71], "engin": [96, 97], "enter": 152, "enterpris": 149, "entir": [12, 38, 41, 117, 154], "entri": [49, 73, 74, 117, 138, 141, 152], "enviro": 149, "epoch": [61, 62], "epr": [34, 110, 117, 124, 127, 143, 154, 157, 159, 160], "epraccessor": [19, 63, 64, 117], "eprload": [117, 142], "equal": [157, 158, 162], "equalto": 8, "equip": 162, "equival": [99, 100, 159], "erot": 22, "error": [29, 30, 32, 54, 56, 66, 69, 71, 72, 76, 78, 86, 87, 117, 162], "escap": 11, "eseem": [15, 41, 117, 132, 141], "eseem_avg": [15, 117, 132, 141], "eseem_depth": 102, "espin": [21, 22], "establish": [145, 147], "estim": [16, 49, 60, 62, 88, 89, 90, 91, 117, 138, 141, 150, 164], "estr": 98, "et": [34, 60, 62, 117, 124, 127, 151], "etc": [44, 117, 136, 141, 149, 150, 153, 160, 162], "eth": [96, 97, 150, 153], "eth_awg": [111, 117, 144, 150], "eth_awg_interfac": [96, 97, 150], "eth_awg_load": [111, 117, 144], "even": [151, 160, 162], "event": [18, 30, 31, 32, 93, 95, 117, 120, 127, 150, 159], "everi": [34, 49, 117, 124, 127, 138, 141, 155, 157, 158], "everyth": [32, 162], "evo": 147, "evo_param": [49, 117, 138, 141], "evolut": [16, 49, 117, 138, 141, 151], "evolv": [49, 117, 138, 141], "exampl": [33, 55, 56, 117, 148, 150, 155, 157, 159], "exc": 16, "exc_limit": 150, "exc_puls": [16, 150, 151], "exce": 147, "except": [30, 32, 152, 162], "exciat": [16, 34, 117, 124, 127], "excit": [16, 34, 117, 124, 127, 150, 151, 154, 159], "exciteprofil": [34, 117, 124, 127], "exciteprofile_old": [34, 117, 124, 127], "exclud": [45, 46, 47, 117], "exctyp": [66, 69, 71, 72, 76, 78, 86, 87], "excut": 148, "exeperi": [104, 106, 110], "exist": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141, 148, 154, 160], "exp": 95, "exp_file_str": [94, 95], "exp_typ": [16, 102], "expand": [148, 151, 158, 160], "experi": [16, 20, 22, 23, 29, 36, 39, 40, 41, 43, 49, 54, 56, 58, 59, 60, 61, 62, 68, 72, 77, 78, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 101, 102, 103, 110, 113, 115, 116, 117, 138, 141, 142, 149, 150, 153, 154, 157, 159, 160, 162], "experienc": 154, "experiment": [12, 14, 16, 17, 25, 27, 34, 38, 41, 49, 50, 52, 117, 118, 119, 121, 123, 124, 126, 127, 138, 140, 141, 157, 160], "explantori": 166, "exponenti": [12, 38, 41, 117], "export": 149, "exptyp": 16, "extend": [2, 5, 9, 151], "extens": 0, "extent": 16, "extern": [30, 32], "extra": [16, 96, 97, 149, 157, 159, 162], "extra_param": [64, 117], "extract": [45, 46, 47, 104, 106, 110, 117, 151], "eyekron": 22, "f": [16, 30, 32, 60, 62], "f243_awg": 153, "f_axi": 16, "f_diff_threshold": [45, 46, 47, 117], "f_lim": [45, 46, 47, 78, 117], "fact": [30, 32], "factor": [16, 25, 34, 117, 121, 124, 127], "fals": [15, 16, 33, 34, 36, 39, 41, 45, 46, 47, 55, 56, 61, 62, 68, 70, 71, 72, 77, 78, 79, 81, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 112, 116, 117, 124, 127, 132, 141, 150, 153, 155, 159], "far": [45, 46, 47, 117, 159], "fashion": 158, "fc": [98, 101, 102], "fc_guess": [45, 46, 47, 117], "featur": [110, 152, 154, 158, 161, 162], "fedora": 149, "feel": [145, 162], "fet": 155, "few": [149, 150, 157, 158], "fft": [19, 45, 46, 47, 63, 64, 117], "field": [13, 15, 16, 20, 22, 23, 24, 28, 37, 44, 48, 49, 51, 52, 88, 89, 90, 91, 96, 97, 99, 100, 116, 117, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 152, 159, 160, 162], "fieldsweep": [16, 20, 23, 45, 46, 47, 49, 78, 117, 138, 141, 144, 150, 153], "fieldsweep_fit": 78, "fieldsweepanalysi": [16, 20, 22, 23, 45, 46, 47, 117, 130, 150], "fieldsweepsequ": [24, 117, 133, 141, 150], "fig": [12, 16, 20, 22, 23, 36, 38, 39, 40, 41, 43, 45, 46, 47, 117], "figur": [12, 16, 20, 22, 23, 36, 38, 39, 41, 42, 45, 46, 47, 117, 128, 130], "file": [30, 32, 33, 34, 49, 55, 56, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 117, 124, 127, 138, 141, 142, 152, 157, 160, 162, 164], "filenam": [19, 30, 32, 33, 34, 49, 55, 56, 63, 64, 68, 72, 77, 78, 81, 117, 124, 127, 138, 141], "filenotfounderror": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "filepath": [42, 64, 94, 95, 117, 128, 130], "fill": [159, 161], "fill_tabl": [72, 87], "filter": [16, 31, 32, 98], "filter_puls": 98, "filter_typ": 98, "filter_width": 98, "final": [117, 130, 150, 159, 160, 164], "final_freq": 159, "find": [16, 99, 100, 150, 162], "find_cur_exp": [99, 100], "find_hidden": [99, 100], "find_longest_puls": 16, "find_max": [20, 22, 23, 117], "find_max_pulse_length": 98, "find_min": [113, 116], "find_optim": [12, 36, 38, 39, 41, 117, 150], "find_xepr": [99, 100, 103, 110], "finish": [29, 54, 56, 61, 62, 66, 69, 71, 72, 76, 78, 86, 87, 99, 100, 103, 110, 117, 152], "finished_sign": [80, 81], "first": [12, 15, 33, 38, 41, 45, 46, 47, 55, 56, 96, 97, 117, 132, 141, 147, 149, 150, 151, 152, 157, 162, 164], "fit": [12, 16, 20, 22, 23, 38, 40, 41, 43, 45, 46, 47, 78, 116, 117, 130, 145, 147, 150, 153, 155, 157], "fit_result": 16, "fitresult": [16, 68, 72, 77, 78, 82, 83, 117, 130], "fitter": 147, "five": [15, 117, 132, 141, 150, 151, 154, 162], "five_puls": [15, 117, 132, 141, 150, 151], "fix": [151, 161], "flaot": [35, 117, 125, 127], "flavour": 158, "flip": [35, 117, 125, 127], "flip_pow": 91, "flipangl": [25, 34, 35, 117, 121, 124, 125, 127, 150, 159], "float": [12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 61, 62, 81, 88, 89, 91, 95, 96, 97, 98, 99, 100, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], "floor": 46, "flowabl": [42, 117, 128, 129, 130], "fm": [34, 117, 124, 127, 159], "fmt": [30, 32], "fn": [65, 72, 75, 78, 85, 87], "fob": 150, "focus": [34, 117, 124, 127, 159], "folder": [32, 81, 152, 162, 164], "folder_path": [68, 72, 77, 78], "follow": [0, 34, 117, 124, 127, 147, 153, 162], "foot": 158, "footer": [42, 117, 128, 130], "fork": 161, "form": [150, 151, 154, 157, 159, 160, 161], "format": [30, 31, 32, 152, 153, 162], "format_exc": [66, 69, 71, 72, 76, 78, 86, 87], "formatexcept": [30, 32], "formatt": [30, 31, 32], "formattim": [30, 32], "found": [88, 89, 90, 91, 148, 159, 164], "four": [15, 117, 132, 141, 154, 162], "four_puls": [15, 117, 132, 141, 151], "fpump": 150, "fraction": 16, "frame": [42, 117, 128, 130], "fraquelli": [60, 62], "free": [145, 147, 149, 151, 157], "freed": 151, "freq": [18, 20, 22, 23, 26, 34, 35, 50, 91, 99, 100, 102, 117, 120, 122, 124, 125, 126, 127, 150, 153, 155, 157, 159], "frequenc": [13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 34, 35, 37, 44, 45, 46, 47, 48, 49, 50, 51, 52, 88, 89, 96, 97, 99, 100, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 150, 151, 152, 153, 155, 158, 159], "frequencymon": [104, 110], "frequencysweptpuls": [14, 25, 27, 117, 118, 121, 123, 127], "frequneci": [49, 52, 117, 138, 140, 141], "freudl": [60, 62], "freuenci": [99, 100], "friendli": 145, "from": [0, 12, 16, 29, 33, 34, 36, 38, 39, 41, 42, 49, 54, 55, 56, 65, 66, 69, 70, 71, 72, 75, 76, 78, 85, 86, 87, 95, 99, 100, 101, 102, 104, 106, 110, 116, 117, 124, 127, 128, 130, 138, 141, 143, 147, 150, 151, 152, 154, 155, 157, 159, 160, 162, 165], "front": 110, "fsweep": 150, "fsweep_analysi": [78, 150], "fsweep_result": [69, 71], "fsweep_toolbar": [68, 72, 77, 78], "ftacqmodeslct": [104, 110], "ftol": 153, "ftp": 149, "full": [16, 26, 30, 32, 95, 99, 100, 103, 110, 117, 122, 127, 147, 149, 157, 158, 159, 160], "full_nam": 3, "full_output": 16, "fulli": [145, 147, 154, 160, 164], "fullnam": 11, "fullpath": [99, 100], "func": [14, 26, 27, 34, 35, 50, 99, 100, 117, 118, 122, 123, 124, 125, 126, 127, 159], "func1": 46, "func2": 46, "funcnam": [30, 32], "function": [6, 8, 18, 30, 34, 50, 65, 70, 71, 75, 85, 96, 99, 100, 103, 110, 120, 124, 126, 147, 157, 159, 162, 165, 166], "fundament": [149, 158], "furo": 0, "further": [110, 151, 158], "futur": [16, 152, 160], "fwhm": [26, 117, 122, 127], "fwidth": [48, 117, 137, 141], "g": [20, 21, 22, 23, 30, 32, 34, 114, 115, 116, 117, 124, 127, 151, 157], "gain": [96, 97, 99, 100], "galleri": 0, "gap": 153, "gate": [95, 150], "gauss": [16, 24, 48, 49, 52, 88, 89, 96, 97, 99, 100, 117, 133, 137, 138, 140, 141, 150], "gaussian": [16, 26, 117, 122, 127], "gaussianpuls": [26, 117, 122, 127], "gcc": 149, "gcd": [117, 143], "gener": [1, 14, 15, 16, 17, 18, 20, 22, 23, 25, 27, 32, 33, 34, 42, 50, 55, 56, 60, 62, 88, 89, 95, 96, 97, 98, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 132, 141, 142, 143, 144, 145, 147, 151, 152, 155, 157, 158, 159, 162, 164], "generalis": 160, "georgieva": 151, "get": [30, 32, 96, 97, 99, 100, 159, 161, 162], "get_acquisition_mod": [99, 100], "get_all_ax": [64, 117], "get_all_fixed_param": [64, 117], "get_arang": 95, "get_attenu": [99, 100], "get_axi": [33, 55, 56, 117], "get_config_fil": [99, 100], "get_counterfreq": [99, 100], "get_datawork": [80, 81], "get_eldor_freq": [99, 100], "get_field": [99, 100], "get_freq": [99, 100], "get_hidden_param": [99, 100], "get_mw_amp": [99, 100], "get_nut": 116, "get_param": [99, 100], "get_phas": [99, 100], "get_phasecycl": [99, 100], "get_pulsespel_def_filenam": [99, 100], "get_pulsespel_def_filepath": [99, 100], "get_pulsespel_exp_filenam": [99, 100], "get_pulsespel_exp_filepath": [99, 100], "get_pulsespel_experi": [99, 100], "get_pulsespel_phase_cycl": [99, 100], "get_replacemod": [99, 100], "get_sequence_row": [72, 87], "get_spec_config": [99, 100], "get_specjet_data": [89, 91], "get_sweep_width": [99, 100], "get_vexp": 83, "get_video_bandwidth": [99, 100], "get_video_gain": [99, 100], "getcistr": [72, 87], "getlogg": 162, "getmessag": [30, 32], "getparam": [104, 106, 110], "ghz": [13, 14, 15, 16, 20, 22, 23, 24, 25, 27, 28, 34, 37, 44, 45, 46, 47, 48, 51, 88, 89, 96, 97, 99, 100, 115, 116, 117, 118, 121, 123, 124, 127, 131, 132, 133, 134, 135, 136, 137, 139, 141, 150, 153, 155, 159], "gig": 148, "git": [148, 155], "github": [34, 117, 124, 127, 148, 151, 155, 161], "github_url": [68, 72, 77, 78], "give": [45, 46, 47, 95, 117, 147, 151, 154, 158], "given": [12, 16, 20, 22, 23, 34, 36, 38, 39, 41, 45, 46, 47, 61, 62, 88, 89, 90, 91, 95, 96, 97, 104, 106, 110, 114, 115, 116, 117, 124, 127, 151, 157, 164], "gn": 22, "gnscale": [21, 22], "gnu": [34, 117, 124, 127], "go": [158, 161], "gone": 162, "gpl": [34, 117, 124, 127], "graph": [152, 155], "graphic": [129, 130, 145, 147, 165, 166], "greatest": [117, 143], "green": [152, 164], "grid": 16, "gsa": [96, 97, 153], "guass": [13, 15, 24, 28, 37, 44, 48, 51, 117, 131, 132, 133, 134, 135, 136, 137, 139, 141], "guass_broaden": 22, "guess": [88, 89, 90, 91, 150, 152], "gui": [68, 75, 76, 77, 117, 144, 145, 150, 165, 166], "guid": 158, "gunn": [116, 155], "gunnar": [34, 117, 124, 127], "gyro": [48, 68, 70, 71, 72, 77, 78, 79, 81, 96, 97, 115, 116, 117, 137, 141], "gyro_exp": [150, 151], "gyro_n": 150, "gyromagnet": [20, 22, 23, 115, 116, 117, 150], "gz": 149, "h": [147, 151], "h5": 152, "ha": [12, 33, 38, 41, 55, 56, 68, 72, 77, 78, 96, 97, 99, 100, 103, 110, 117, 147, 149, 150, 152, 154, 155, 157, 158, 162], "haas": [60, 62], "hahn": [28, 44, 48, 51, 91, 114, 115, 116, 117, 134, 136, 137, 139, 141, 147, 157, 159], "hahnecho": 159, "hahnechosequ": [24, 28, 44, 51, 117, 133, 134, 136, 139, 141, 157, 159], "half": [26, 117, 122, 127], "ham": 22, "ham_ez": 22, "ham_nz": 22, "hand": 152, "handl": 95, "handler": [31, 32, 65, 70, 71, 72, 75, 78, 85, 87], "happen": 162, "hard": 147, "hard_logg": 162, "hardwar": [32, 103, 117, 144, 148, 150, 154, 155, 157, 160, 162], "hardware_logg": [73, 74], "hardware_meta": 110, "hardware_wait": [91, 113, 114, 115, 116], "harwar": [32, 162], "hat": 149, "have": [45, 46, 47, 110, 117, 147, 149, 150, 151, 155, 157, 159, 160, 162], "hdf5": 152, "header": [42, 72, 87, 95, 117, 128, 130], "height": [42, 117, 128, 129, 130], "hello": 162, "here": [88, 89, 90, 91, 149, 150, 155, 157, 158, 159, 162], "hh": 150, "hidden": [99, 100, 108, 110], "high": [145, 151, 162], "higher": [147, 151, 155], "hold": [99, 100], "holder": 153, "home": [154, 158, 160], "hook": [60, 62], "host": 148, "hour": [12, 16, 36, 38, 39, 41, 61, 62, 117, 147, 153], "how": [16, 29, 30, 32, 54, 56, 61, 62, 91, 96, 97, 117, 147, 149, 150, 158, 159, 162], "howev": [149, 154, 157, 158, 159, 162], "hspuls": [27, 117, 123, 127], "html": [0, 34, 117, 124, 127, 143], "http": [34, 117, 124, 127, 143, 148, 149, 155], "hugo": 110, "human": [30, 32, 155], "hw_log": [91, 95, 100, 102, 110], "hybrid": [112, 116, 153, 155], "hyperboilc": [27, 117, 123, 127], "hyperbol": 147, "i": [0, 4, 6, 7, 8, 12, 15, 16, 21, 22, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 60, 61, 62, 72, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 110, 114, 116, 117, 124, 127, 130, 132, 134, 136, 138, 139, 140, 141, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 164, 166], "id": [8, 30, 32, 93, 94, 95, 96, 97, 150], "ideal": [113, 114, 115, 116], "idenitifi": 91, "ident": 22, "identifi": [16, 99, 100, 103, 110, 147, 162], "identifyroi": 16, "ifgain": [96, 97, 150], "ifgain_opt": [96, 97], "ignor": 16, "ii": [88, 89, 90, 91, 154, 158, 160], "imaginari": [16, 91, 114, 116], "immedi": [29, 54, 56, 88, 89, 90, 91, 101, 102, 117, 157, 162], "implement": [31, 32, 154, 159], "import": [8, 16, 147, 150, 155, 157, 159, 162, 164], "improv": [151, 165], "includ": [16, 22, 95, 147, 151, 153, 154, 159, 164], "incoher": [113, 115, 116], "incompat": 155, "increas": [34, 44, 51, 117, 124, 127, 136, 139, 141, 147, 149, 159], "indent": [3, 4, 6, 7, 8, 10], "independ": [145, 153, 154, 157, 160], "index": 8, "indic": [66, 69, 71, 72, 76, 78, 86, 87, 152], "individu": [159, 162], "info": [30, 32, 153, 162], "infom": [16, 91, 153, 157, 158, 159, 164], "inform": [30, 32, 157, 158, 159], "inherit": [3, 33, 55, 56, 65, 70, 71, 72, 75, 78, 85, 87, 117, 159], "init": 159, "init_d": [117, 130], "init_freq": 159, "initi": [30, 31, 32, 33, 55, 56, 88, 89, 90, 91, 117, 130, 150, 151, 152, 153, 158, 159, 162, 165], "initialis": [29, 54, 56, 65, 70, 71, 72, 75, 78, 85, 87, 88, 89, 90, 91, 96, 97, 101, 102, 117, 150], "initialise_deer_set": [68, 72, 77, 78], "initializt": [129, 130], "input": [16, 95, 152], "insatl": 149, "insid": 150, "instal": 155, "instanc": [30, 31, 32, 104, 106, 110, 159], "instead": [16, 151, 159], "instruct": [0, 149, 166], "int": [12, 13, 15, 16, 22, 24, 28, 29, 33, 34, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 60, 62, 66, 69, 71, 72, 76, 78, 86, 87, 88, 89, 91, 95, 96, 97, 98, 99, 100, 107, 110, 113, 114, 115, 116, 117, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "integ": [61, 62, 93, 95], "integr": [145, 154, 160, 162], "intellig": 160, "intend": [31, 32], "intens": 22, "inter": [12, 17, 36, 38, 39, 41, 117, 119, 127, 147, 151, 154, 164], "interced": 150, "interest": [16, 147, 156], "interfac": [29, 31, 32, 54, 56, 70, 71, 79, 80, 81, 88, 89, 90, 91, 96, 97, 101, 102, 117, 145, 147, 153, 157, 159, 165, 166], "intergr": 16, "interpret": [30, 32, 96, 97], "interpuls": [15, 48, 51, 117, 132, 137, 139, 141], "interv": 157, "intial": [33, 55, 56, 117], "introduc": [15, 117, 132, 141], "intuit": 145, "invers": 151, "investig": 162, "involv": [151, 157], "inward": 151, "io": 130, "ip": [149, 155], "is_exp_run": [99, 100, 103, 110], "is_stat": [33, 34, 55, 56, 117, 124, 127], "isdelayfocus": [34, 117, 124, 127], "iso8601": [30, 32], "ispulsefocus": [34, 117, 124, 127], "isrun": [29, 54, 56, 88, 89, 90, 91, 96, 97, 101, 102, 117, 150], "issu": [30, 32, 96, 97, 149, 158, 161, 162], "issues_url": [68, 72, 77, 78], "iter": [91, 114, 116], "itn": [49, 52, 117, 138, 140, 141], "its": [117, 143, 149, 159], "itself": [33, 55, 56, 117, 160], "j": [34, 60, 62, 117, 124, 127, 143, 151], "jeschk": [34, 117, 124, 127, 151], "jeschkelab": 148, "join": 161, "json": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "jsonstr": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "june": 149, "just": [30, 32, 45, 46, 47, 95, 117, 150, 158, 159], "k": [60, 62], "kamp": [60, 62], "kara": 110, "keep": [151, 157], "keep_run": [29, 54, 56, 117], "kei": [16, 34, 42, 94, 95, 117, 124, 127, 128, 130, 157, 158], "kept": [152, 162], "key1": [101, 102], "keyword": [34, 65, 70, 71, 72, 75, 78, 85, 87, 117, 124, 127], "kimbal": [60, 62], "klass": [3, 8], "knot": 22, "know": [30, 32, 147], "knowledg": [30, 32], "known": [96, 97, 154, 157], "knownledg": 152, "kroneck": 22, "kroney": 22, "kummel": [60, 62], "kwarg": [13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 37, 40, 41, 43, 44, 48, 49, 50, 51, 52, 55, 56, 59, 60, 61, 62, 65, 70, 71, 72, 75, 78, 85, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "lab": 152, "label": [147, 154], "languag": [155, 157], "larg": [160, 162], "larger": [34, 117, 124, 127], "last": [3, 162], "later": [147, 148, 157, 160, 162], "latest": [148, 155], "launch": [29, 54, 56, 88, 89, 90, 91, 96, 97, 101, 102, 117, 150, 157], "launch_long": [96, 97], "launch_norm": [96, 97], "launch_withifgain": [96, 97], "layout": [82, 83], "ld_library_path": 149, "least": 155, "leav": [33, 55, 56, 117], "left": [117, 130, 152], "length": [3, 8, 12, 13, 14, 15, 17, 25, 26, 27, 34, 35, 37, 38, 41, 45, 46, 47, 50, 88, 89, 93, 95, 96, 97, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 131, 132, 135, 141, 147, 150, 153, 159], "less": [12, 16, 38, 41, 72, 87, 117, 147, 151, 157], "lett": 151, "levai": [60, 62], "level": [12, 29, 30, 31, 32, 34, 38, 41, 54, 56, 70, 71, 117, 124, 127, 159], "levelnam": [30, 32], "levelno": [30, 32], "lib": 149, "lib64": 149, "libdir": 149, "licens": [34, 117, 124, 127], "light": [152, 164], "like": [15, 30, 32, 117, 132, 141, 150, 151, 158, 159, 160, 162], "limit": [45, 46, 47, 117, 159], "lin_maxit": 153, "lin_tol": 153, "line": [30, 32], "linear": [14, 117, 118, 127, 158, 159], "linearli": [34, 117, 124, 127], "lineno": [30, 32], "link_obj": 3, "linux": 149, "list": [3, 8, 16, 31, 32, 33, 34, 41, 42, 49, 55, 56, 72, 87, 95, 98, 99, 100, 115, 116, 117, 124, 127, 128, 130, 138, 141, 143, 153, 157, 159], "list_str_to_typ": [72, 87], "live": 164, "lo": [13, 15, 20, 22, 23, 24, 28, 37, 44, 45, 46, 47, 48, 49, 51, 52, 68, 70, 71, 72, 77, 78, 88, 89, 90, 91, 96, 97, 101, 102, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 151, 157, 158, 159], "load": [30, 32, 33, 34, 49, 55, 56, 98, 117, 124, 127, 138, 141, 142, 152, 157, 164], "load_epr_fil": [68, 72, 77, 78, 87], "load_fold": [68, 72, 77, 78], "load_spectrometer_config": [68, 72, 77, 78], "lobe": 159, "loc": 16, "local": [61, 62, 88, 89, 96, 97, 149, 150, 153, 155], "locat": [16, 147], "log": [16, 29, 30, 31, 54, 56, 62, 72, 73, 97, 117, 142, 144, 153], "log_level": [73, 74], "logdialog": [73, 74], "logger": [30, 32], "logo_pixmap": [68, 72, 77, 78], "logrecord": [30, 32], "lombardi": [60, 62], "long": [61, 62, 96, 97, 149, 151], "long_deer": [117, 130], "longdeer": [68, 72, 77, 78], "longdeer_result": [69, 71], "longdeer_upd": [69, 71], "longer": [99, 100, 103, 110, 151, 162, 164], "longest": 16, "look": [157, 159], "loop": [3, 96, 97, 153], "lorentzian": [45, 46, 47, 117], "low": 16, "lower": [113, 114, 115, 116, 159], "lowest": 162, "lowpass": 16, "lt": 149, "m": [22, 60, 62, 148, 155], "m8190a": 155, "maco": 148, "made": 150, "mag": [34, 117, 124, 127], "mag_logg": 162, "magent": [99, 100, 162], "magentis": [34, 117, 124, 127], "magn": [34, 117, 124, 127, 143], "magnet": [49, 52, 88, 89, 96, 97, 99, 100, 117, 138, 140, 141, 147, 162], "magnetis": [34, 117, 124, 127], "main": [72, 117, 144, 148, 157, 158, 159, 161, 162, 166], "major": 165, "make": [0, 30, 32, 149, 151, 159, 161], "manag": 149, "mani": [16, 91, 96, 97, 151, 157, 158, 159], "manufactu": 110, "manufactur": [153, 155], "map": [41, 117], "markup": 155, "mask": [16, 98], "match": [16, 98, 165], "match_filter_dc": 98, "matfil": 98, "math": [115, 116, 147], "matlab": [96, 97, 98, 148, 152, 158], "matplotlib": [16, 20, 22, 23, 41, 45, 46, 47, 117, 150], "matrici": [117, 143], "matrix": [22, 117, 143], "max": [20, 22, 23, 107, 110, 117, 152, 153, 155], "max_nfev": 153, "max_tau": [70, 71], "maxdepth": 8, "maxgat": 95, "maximis": [16, 91, 114, 116], "maximum": [12, 13, 16, 20, 22, 23, 26, 36, 37, 38, 39, 41, 44, 91, 95, 98, 114, 116, 117, 122, 127, 131, 135, 136, 141, 147, 152, 162, 164], "maxit": [91, 114, 116], "maxx": [34, 117, 124, 127], "mayb": 162, "me": 110, "mean": [158, 162], "meanwhil": 157, "measur": [12, 15, 19, 29, 36, 38, 39, 41, 54, 56, 60, 61, 62, 63, 64, 88, 89, 90, 91, 96, 97, 101, 102, 116, 117, 132, 141, 147, 151, 152, 154, 155, 157, 158, 160, 164, 165], "measurementtim": [19, 63, 64, 117], "member": 3, "memori": [34, 117, 124, 127], "mention": [30, 32], "merg": [45, 46, 47, 117], "messag": [30, 31, 32, 68, 72, 77, 78], "met": [12, 29, 38, 41, 54, 56, 117], "meta": [103, 110], "method": [3, 7, 34, 88, 89, 96, 97, 104, 106, 110, 117, 124, 127, 157, 158, 159], "mhz": [18, 22, 35, 99, 100, 117, 120, 125, 127], "micol": [60, 62], "microsecond": [16, 95, 117, 143], "microwav": [22, 99, 100], "might": [157, 162], "millisecond": [30, 32], "mimimum": [60, 62], "min": [107, 110, 153, 155], "min_reptim": [44, 117, 136, 141], "min_tp": [68, 72, 77, 78, 153], "minbrxamp": [106, 110], "minbrxphas": [106, 110], "minbryamp": [106, 110], "minbryphas": [106, 110], "minim": 147, "minimis": [91, 114, 116], "minimum": [16, 158], "minor": 152, "minut": [29, 54, 56, 117, 157], "miss": 162, "mm": 150, "mnr": [16, 151], "mnr_estim": 16, "mock": [90, 91], "mode": [59, 62, 88, 89, 96, 97, 99, 100, 101, 102, 148, 150, 154, 157, 165], "model": [12, 16, 22, 34, 38, 41, 59, 62, 110, 117, 124, 127, 147, 153, 155, 160], "moder": 151, "modern": [149, 154, 160], "modetun": [72, 79, 117, 144], "modif": [150, 151], "modifi": [157, 166], "modul": [8, 9, 30, 34, 117, 124, 148, 151, 157, 162], "module_dir": [16, 95, 116], "moment": 147, "mono": [12, 38, 41, 117], "monochromat": [26, 35, 50, 117, 122, 125, 126, 127, 159], "more": [95, 96, 97, 145, 149, 150, 151, 157, 158, 162], "most": [96, 97, 110, 147, 149, 150, 158, 159, 162], "mostli": [98, 151, 166], "motor": [99, 100], "move": [95, 151, 159, 162], "mpfu": [90, 91, 92, 94, 95, 112, 114, 116, 153, 154, 155, 158, 160], "mpfu_overwrit": [88, 89, 90, 91], "mpfutun": [91, 114, 116], "msec": [30, 32], "mt": 22, "mtessmer": [34, 117, 124, 127], "mu": 147, "much": [145, 147, 149, 157, 162], "multi": 157, "multi_mod": [45, 46, 47, 117], "multilin": 4, "multipl": [16, 45, 46, 47, 117, 148, 149, 151, 154, 157, 160, 162], "multipli": [22, 159], "must": [16, 22, 45, 46, 47, 117, 147, 150, 152, 155, 157, 162, 164], "mutex": [70, 71], "mutlipl": 157, "mw": 159, "mwfreq": 22, "mx": [34, 117, 124, 127], "my": [34, 117, 124, 127, 153, 157, 158], "myst": 0, "mz": [34, 117, 124, 127], "n": [12, 13, 14, 15, 16, 17, 20, 22, 23, 25, 26, 27, 33, 34, 35, 36, 38, 39, 41, 48, 50, 55, 56, 88, 89, 96, 97, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 131, 132, 137, 141, 147, 150, 153, 155], "n_file": [45, 46, 47, 117], "name": [4, 8, 13, 15, 24, 25, 28, 30, 32, 33, 34, 37, 44, 48, 49, 51, 52, 55, 56, 58, 59, 60, 61, 62, 72, 87, 95, 96, 97, 99, 100, 104, 106, 110, 117, 121, 124, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 150, 151, 152, 153, 155, 157, 159, 162, 164], "nanosecond": [117, 143], "narrow": 151, "nativ": [152, 157, 158], "nbscansdon": [104, 110], "nbscanstodo": [104, 110], "ndarrai": [16, 20, 22, 23, 33, 34, 36, 39, 41, 44, 45, 46, 47, 55, 56, 98, 117, 124, 127, 136, 141, 143], "ndeer": [15, 16, 117, 132, 141, 154], "ndeer_cp": [15, 117, 132, 141, 151], "nearli": [147, 158, 159], "necessari": [149, 150, 152, 153], "need": [30, 32, 88, 89, 90, 91, 95, 96, 97, 104, 106, 110, 147, 148, 149, 151, 152, 153, 155, 157, 158, 159, 160, 162, 164], "nelectron": [21, 22], "nest": 8, "netcdf": [19, 63, 64, 117], "never": [33, 55, 56, 117, 162], "new": [16, 49, 95, 99, 100, 117, 138, 141, 145, 149, 154, 159, 161, 165], "new_data": [70, 71], "new_length": 95, "new_puls": [70, 71, 159], "new_tau": 150, "newer": 155, "newli": 149, "next": [49, 99, 100, 103, 110, 117, 138, 141, 147, 159, 164], "nfft": [45, 46, 47, 117], "night": [61, 62, 153], "night_hour": [61, 62], "nitroxid": [22, 147], "nnlssolver": 153, "nnuclei": [21, 22], "nois": [12, 16, 36, 38, 39, 41, 45, 46, 47, 60, 62, 117, 157], "noise_level": 102, "noisedens": [45, 46, 47, 117], "nomarlis": [20, 22, 23, 117], "non": [16, 34, 117, 124, 127, 151, 158, 159], "none": [4, 6, 7, 8, 12, 15, 16, 17, 18, 20, 22, 23, 25, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 54, 55, 56, 58, 59, 60, 61, 62, 64, 68, 70, 71, 72, 74, 77, 78, 79, 81, 82, 83, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 107, 108, 110, 116, 117, 119, 120, 121, 124, 125, 126, 127, 128, 130, 132, 138, 141, 142, 150, 159], "nonetheless": [155, 158], "norm": [12, 20, 22, 23, 36, 38, 39, 41, 117], "normal": [15, 16, 36, 39, 41, 96, 97, 117, 132, 141, 150, 151, 154, 157, 165], "normaldc": [15, 117, 132, 141], "normalis": [12, 19, 22, 36, 38, 39, 41, 60, 62, 63, 64, 117], "normalise_01": 16, "note": [16, 99, 100, 162], "notebook": 150, "noth": [99, 100], "notimplementederror": [31, 32], "notset": [31, 32], "now": [88, 89, 90, 91, 96, 97, 147, 149, 150, 152, 157, 159], "np": [16, 20, 22, 23, 33, 34, 36, 39, 41, 44, 45, 46, 47, 55, 56, 98, 117, 124, 127, 136, 141, 150, 159], "npoint": 22, "nspin": [21, 22], "nstate": [21, 22], "nu": [115, 116], "nu_fin": [115, 116], "nu_init": [115, 116], "nucspin": 22, "num": 142, "num_point": [112, 116, 150], "num_puls": [49, 116, 117, 138, 141], "num_ref_puls": 16, "number": [12, 13, 15, 16, 22, 24, 28, 30, 32, 33, 34, 36, 37, 38, 39, 41, 44, 46, 48, 49, 51, 52, 55, 56, 88, 89, 91, 95, 96, 97, 99, 100, 103, 110, 114, 116, 117, 124, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 150, 151, 157], "numer": [30, 32], "numpi": [16, 22, 98, 117, 143, 150, 155, 159], "numpydoc": 0, "nut": 150, "nutat": [25, 34, 45, 46, 47, 48, 113, 115, 116, 117, 121, 124, 127, 137, 141, 147, 157], "nx": [116, 159], "o": [105, 110, 149], "ob": [15, 117, 132, 141], "obj": [3, 4, 6, 7, 8, 10, 33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "obj_item": 8, "object": [3, 16, 33, 34, 36, 39, 40, 41, 43, 45, 46, 47, 49, 55, 56, 62, 66, 69, 71, 72, 76, 78, 86, 87, 88, 89, 96, 97, 113, 114, 115, 116, 117, 124, 127, 138, 141, 157, 159, 160], "obsdc": [15, 117, 132, 141], "observ": [15, 117, 132, 141], "occur": [151, 162], "oe": 155, "off": [45, 46, 47, 117, 162], "offici": 149, "offset": [49, 52, 117, 138, 140, 141, 159], "offset_freq": 98, "often": [29, 54, 56, 117, 149, 151, 158, 159, 162, 166], "old": 149, "omit": [30, 32], "onc": [99, 100, 103, 110, 149, 152, 160, 164], "one": [30, 32, 45, 46, 47, 49, 96, 97, 117, 138, 141, 151, 157, 159, 160, 162], "ones": [149, 159], "onli": [16, 33, 49, 55, 56, 58, 59, 60, 61, 62, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 117, 138, 141, 147, 148, 151, 155, 157, 159, 160, 162, 165], "onlydet": [92, 95], "open": [96, 97, 152], "openssl": 149, "openssldir": 149, "oper": [30, 32, 96, 97, 117, 143, 149], "operand": [30, 32], "optim": [12, 16, 36, 38, 39, 41, 91, 113, 114, 115, 116, 117, 147], "optimal_tau1": [36, 39, 41, 117], "optimis": [16, 34, 91, 114, 116, 117, 124, 127, 130, 145, 150, 151, 154], "optimise_puls": [16, 68, 72, 77, 78], "optimise_pulses_button": [68, 72, 77, 78], "optimise_spectra_posit": [46, 117], "option": [12, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 45, 46, 47, 50, 54, 55, 56, 59, 60, 61, 62, 91, 95, 96, 97, 98, 99, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 132, 141, 142, 143, 159, 164, 165], "order": [50, 117, 126, 127, 155], "order1": [27, 117, 123, 127], "order2": [27, 117, 123, 127], "org": [34, 117, 124, 127, 143, 149], "orient": 22, "origin": [16, 148, 151, 160], "orphan": 8, "oscil": [88, 89, 96, 97, 150], "oss": 149, "other": [33, 55, 56, 117, 151, 159, 160, 164], "otherwis": [15, 16, 34, 117, 124, 127, 132, 141, 147, 157], "our": [149, 150, 159], "out": [30, 32, 68, 72, 77, 78, 147, 149, 159, 161], "output": 16, "outsid": [149, 162], "over": [12, 38, 41, 49, 117, 138, 141, 150, 151], "overlai": [45, 46, 47, 117], "overlap": [16, 46, 117, 130], "overload": [3, 6, 7], "own": [154, 157, 158, 166], "p": [15, 16, 117, 132, 141, 151, 157], "p0": 95, "p1": 95, "p10": 95, "p180": [88, 89, 96, 97, 150], "p2": 95, "p3": [15, 95, 117, 132, 141, 151], "p4": 95, "p5": [60, 62, 95], "p6": 95, "p7": 95, "p8": 95, "p9": 95, "p90": [88, 89, 96, 97, 150], "p90_12_34": 157, "packag": [8, 34, 124, 127, 143, 145, 149, 150, 151, 157, 160], "package_dir": 130, "package_directori": [74, 78, 81, 83], "pad": [34, 45, 46, 47, 117, 124, 127], "page": [1, 144, 161], "pages": [42, 117, 128, 130], "pair": [90, 91, 150], "par": [107, 110], "par1": [33, 55, 56, 117], "par2": [33, 55, 56, 117], "param": [16, 49, 64, 72, 87, 102, 117, 138, 141, 143], "param_in_mhz": [72, 87], "param_in_u": [72, 87], "param_nam": [99, 100], "paramagnet": [34, 117, 124, 127], "paramat": [157, 159], "paramet": [12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 62, 64, 65, 70, 71, 72, 74, 75, 78, 81, 85, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 150, 152, 154, 159, 160, 162, 164, 166], "params_width": [117, 143], "paramt": [33, 55, 56, 104, 106, 110, 117], "paremet": [104, 106, 110], "parent": [25, 73, 74, 82, 83, 117, 121, 127, 159], "pars": 8, "parser": 0, "part": [3, 16], "parvar": [93, 94, 95, 96, 97], "pass": [16, 33, 55, 56, 65, 70, 71, 72, 75, 78, 85, 87, 117, 157, 159, 162], "passag": [34, 117, 124, 127], "passiv": 22, "path": [33, 34, 49, 55, 56, 88, 89, 90, 91, 95, 99, 100, 108, 109, 110, 117, 124, 127, 138, 141, 142, 143, 149, 152, 155], "pathnam": [30, 32], "pathwai": [151, 159], "patient": 145, "paus": [99, 100, 158], "pause_and_wait": [70, 71], "pause_exp": [99, 100], "pcre": 149, "pcyc": [15, 17, 18, 25, 34, 117, 119, 120, 121, 124, 127, 132, 141, 159], "pcyc_str": [94, 95], "pdf": [42, 117, 128, 130, 145, 152, 165], "pe12": [15, 117, 132, 141, 151], "pe12rp": [15, 117, 132, 141, 151], "pe12rpr3": [15, 117, 132, 141, 151], "pe1p0r2r3b": [15, 117, 132, 141, 151], "peak": [16, 45, 46, 47, 117], "peldor": [15, 117, 132, 141, 154], "pent": 153, "pep02r3": [15, 117, 132, 141, 151], "per": [13, 15, 24, 28, 37, 44, 48, 49, 51, 52, 99, 100, 103, 110, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 162], "perfom": [44, 117, 136, 141, 149], "perform": [16, 150, 158], "period": 157, "perl": 149, "phase": [15, 16, 34, 91, 95, 102, 114, 116, 117, 124, 127, 132, 141, 150, 159], "phasecorrect_all_point": 81, "phasecycl": 95, "phy": [34, 117, 124, 127, 143, 151], "physcial": [96, 97], "physic": 159, "pi": [88, 89, 96, 97, 113, 114, 115, 116, 150, 151, 157, 159], "pi2_puls": [150, 157], "pi_puls": [150, 157], "piec": [157, 162], "pip": [0, 148, 155], "place_hash": [94, 95], "placehold": [31, 32], "plan": 148, "platypu": [129, 130], "pleas": [0, 145, 151, 156, 158], "plot": [12, 16, 20, 22, 23, 34, 36, 38, 39, 40, 41, 43, 45, 46, 47, 49, 91, 117, 124, 127, 130, 138, 141, 150, 157], "plot1d": [36, 39, 41, 117], "plot2d": [36, 39, 41, 117], "plot_1drelax": [41, 117], "plot_fft": [34, 117, 124, 127], "plot_optimal_deer_frq": 150, "plot_overlap": 16, "plot_pulse_exc": [49, 117, 138, 141], "plsspelexpslct": [104, 110], "plsspelglbpaf": [104, 110], "plsspellistslct": [104, 110], "plsspelprgpaf": [104, 110], "plt": 150, "plu": 148, "point": [13, 15, 16, 22, 24, 28, 34, 37, 44, 48, 49, 51, 52, 116, 117, 124, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 162], "pol": [99, 100], "polynom": [99, 100, 153], "polynomi": [116, 155], "pool": [88, 89, 90, 91], "pop": [68, 72, 77, 78, 162], "porgram": 152, "port": [34, 117, 124, 127, 143], "portion": [30, 32], "posit": [16, 33, 35, 49, 55, 56, 88, 89, 91, 95, 96, 97, 99, 100, 113, 114, 115, 116, 117, 125, 127, 138, 141, 159], "possibl": [16, 95, 147, 157, 159, 160, 161], "possible_delai": [94, 95], "possible_puls": [94, 95], "possible_var": [94, 95], "possibli": 110, "post": 142, "potenti": 155, "power": [45, 46, 47, 113, 114, 115, 116, 117, 147, 153, 157, 159, 162], "pre": [30, 32, 149, 151, 159], "precis": [16, 72, 87, 99, 100, 150, 154], "predict": 147, "prefer": [152, 153, 155, 164], "prefix": 149, "premis": 151, "preparatori": [30, 32], "present": [149, 151], "press": [147, 152, 160], "pretend": 110, "prevent": 162, "previou": 95, "pribitz": [34, 117, 124, 127], "primari": 151, "primarili": [147, 162], "primary_color": [57, 117], "print": [150, 157, 159, 162], "priorti": [68, 72, 77, 78], "pritn": 157, "privat": 3, "privileg": 149, "problem": [149, 162], "procedur": 160, "process": [30, 32, 66, 69, 71, 72, 76, 78, 86, 87, 145, 152, 154, 157, 160, 166], "process_deeranalysi": [82, 83], "process_nut": [45, 46, 47, 117, 150], "product": 22, "prof_data": [45, 46, 47, 117], "prof_frq": [45, 46, 47, 117], "profil": [16, 34, 45, 46, 47, 48, 52, 70, 71, 115, 116, 117, 124, 127, 130, 137, 140, 141, 157, 158, 160], "prog": [33, 55, 56, 117, 150], "program": [33, 55, 56, 117, 145, 151, 152, 162, 166], "progress": [28, 33, 34, 49, 51, 55, 56, 66, 69, 71, 72, 76, 78, 86, 87, 96, 97, 117, 124, 127, 134, 138, 139, 141, 142, 145, 150, 154, 159, 164], "progress_bar": 142, "progress_bar_frac": 142, "progtabl": [49, 93, 95, 117, 138, 141], "progtable_n": [93, 95], "project": [70, 71, 145, 158, 161], "projectnam": [72, 87], "properti": [3, 6, 7, 10, 14, 19, 25, 27, 33, 34, 49, 55, 56, 63, 64, 96, 97, 107, 110, 117, 118, 121, 123, 124, 127, 138, 141], "propos": 162, "protein": 154, "protocol": 166, "proton": [15, 41, 117, 132, 141, 151], "provid": [16, 45, 46, 47, 104, 106, 110, 117, 147, 148, 150, 158, 166], "ps_file": 95, "ps_length": [113, 114, 115, 116], "psparvar": [93, 95], "psphasecycl": [92, 95], "public": 16, "pull": [148, 151, 161], "puls": [12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 41, 44, 48, 49, 50, 51, 52, 54, 55, 56, 68, 70, 71, 72, 77, 78, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 147, 150, 153, 154, 155, 157, 158, 160, 162, 164], "pulse0_tp": [45, 46, 47, 117], "pulse_num": [94, 95], "pulseprofil": [115, 116], "pulseshap": [34, 117, 124, 127], "pulsespel": [93, 94, 95, 154, 157, 158, 159, 160], "pump": [15, 16, 117, 132, 141, 147, 150, 151], "pump_frq": [112, 116], "pump_puls": [16, 150, 151], "purcel": [12, 13, 16, 38, 41, 117, 131, 141, 147, 151], "push": [145, 154, 157], "py": [3, 4, 6, 7, 10], "pydata": 0, "pyenv": 149, "pypi": [148, 155], "pyplot": 150, "pyqt6": [31, 32, 65, 66, 69, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 85, 86, 87], "pyqt_table_from_dict": [72, 87], "pytest": 148, "python": [0, 2, 5, 9, 98, 145, 148, 152, 154, 155, 157, 158, 159, 160, 162], "python2": 149, "q": [25, 101, 102, 117, 121, 127, 147, 153], "q_deer": [68, 72, 77, 78], "qcrit": [25, 117, 121, 127], "qdialog": [73, 74, 79, 81], "qmainwindow": [68, 72, 77, 78], "qmutex": 71, "qobject": [31, 32, 66, 69, 71, 72, 76, 78, 86, 87], "qrunnabl": [65, 70, 71, 72, 75, 78, 80, 81, 85, 87], "qtcore": [31, 32, 65, 66, 69, 70, 71, 72, 75, 76, 78, 80, 81, 85, 86, 87], "qtloghandl": [31, 32], "qtwidget": [73, 74, 79, 81, 82, 83], "qualiti": [145, 157], "queue": [68, 72, 77, 78], "quick_deer_st": [70, 71], "quickdeer": [72, 117, 144], "quickdeer_result": [69, 71], "quickdeer_upd": [69, 71], "qunatum": [117, 143], "qwaitcondit": 71, "qwidget": [74, 82, 83], "r": [4, 16, 34, 60, 62, 91, 114, 116, 117, 124, 127, 143, 151], "r_limit": [45, 46, 47, 117], "radian": [35, 117, 125, 127], "rais": [29, 31, 32, 33, 34, 49, 54, 55, 56, 72, 87, 95, 117, 124, 127, 138, 141, 142], "raise_warn": [68, 72, 77, 78], "rang": [22, 88, 89, 96, 97, 147, 152, 154], "rate": [14, 25, 27, 117, 118, 121, 123, 127, 153], "ratio": [12, 16, 20, 22, 23, 36, 38, 39, 41, 60, 62, 115, 116, 117, 150], "raw": [31, 32], "re": [34, 99, 100, 117, 124, 127, 153, 155], "re_dim": [15, 117, 132, 141], "re_step": [15, 117, 132, 141], "reach": [147, 157], "read": [99, 100, 152, 158], "read_tabl": [72, 87], "readabl": 155, "readi": 16, "readili": 160, "real": [16, 91, 114, 116], "reason": [149, 150], "recent": [96, 97, 99, 100, 103, 110], "reciev": 152, "recomend": [96, 97], "recommen": 152, "recommend": [16, 149, 155, 158, 159, 166], "record": [30, 31, 32, 162], "recoveri": [40, 41, 43, 117, 147], "rectangular": [13, 15, 24, 28, 35, 37, 48, 49, 51, 88, 89, 96, 97, 117, 125, 127, 131, 132, 133, 134, 135, 137, 138, 139, 141, 147, 150, 157, 159], "rectpuls": [15, 35, 88, 89, 90, 91, 96, 97, 117, 125, 127, 132, 141, 150, 159], "red": 149, "reduc": [49, 117, 138, 141, 151, 159], "reduce_uuid": [49, 117, 138, 141], "reduced_seq": 91, "ref": [15, 117, 132, 141, 151, 159], "ref_puls": [16, 150, 151], "refer": [60, 62, 152], "refocus": [13, 15, 16, 36, 37, 39, 41, 114, 116, 117, 131, 132, 135, 141, 147, 151], "refocused2d": 16, "refocusedecho2d": [37, 117, 135, 141, 165], "refocusedecho2danalysi": [16, 36, 39, 41, 117, 165], "refocusedecho2dsequ": [37, 117, 135, 141, 165], "reformat": 95, "reforuml": 165, "refoucs": 147, "refous": 150, "refresh_d": [82, 83], "refresh_fieldsweep_after_fit": [68, 72, 77, 78], "refresh_relax": [68, 72, 77, 78], "refresh_relax_figur": [68, 72, 77, 78], "refresh_respro": [68, 72, 77, 78], "refresh_t2": [68, 72, 77, 78], "refresh_tim": 153, "region": [16, 147, 162], "regparam": 153, "regular": 157, "reim_color": 57, "rejectattr": [3, 8], "rejectionratio": 22, "rel": [30, 32, 95], "rel_posit": [94, 95], "relat": [32, 162], "relativecr": [30, 32], "relax": [15, 16, 36, 39, 51, 70, 71, 117, 130, 132, 139, 141, 144, 151, 165], "relax2d_result": [69, 71], "relax_process": 78, "relax_result": [69, 71], "relax_toolbar": [68, 72, 77, 78], "releas": [145, 149], "releat": 32, "reliabl": 165, "relib": 110, "remain": [15, 117, 132, 141, 151, 154], "rememb": 157, "remov": [16, 17, 117, 119, 127, 159], "remove_cross": 16, "remove_dynam": [33, 55, 56, 117], "remove_echo": 16, "render": [3, 8, 129, 130], "repet": [88, 89, 96, 97], "repetit": [13, 15, 24, 28, 37, 44, 48, 49, 51, 52, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 150, 159], "repettit": [12, 38, 41, 117], "replacemod": [95, 104, 110], "report": [42, 117, 128, 144, 145, 152, 161, 162, 165], "reportlab": [42, 117, 128, 129, 130], "repositori": 149, "repres": [13, 14, 15, 17, 18, 24, 26, 27, 28, 29, 33, 34, 35, 37, 44, 49, 50, 51, 52, 54, 55, 56, 88, 89, 90, 91, 96, 97, 101, 102, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 155], "represent": [34, 117, 124, 127], "reproduc": [34, 117, 124, 127], "reptim": [13, 15, 24, 28, 37, 40, 41, 43, 44, 48, 49, 51, 52, 70, 71, 88, 89, 96, 97, 101, 102, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 151, 157, 159], "reptime_max": [44, 117, 136, 141], "reptime_scan_result": [69, 71], "reptimeanalysi": [40, 41, 43, 117], "reptimescan": [44, 117, 136, 141], "request": [151, 161], "requir": [15, 16, 99, 100, 103, 110, 117, 132, 141, 147, 149, 152, 155, 157, 158, 159, 162, 164], "requr": [45, 46, 47, 117], "rerun_exp": [99, 100], "resampl": 16, "resample_and_shift_vector": 16, "reset_bg_data": [88, 89, 90, 91], "reset_cur_exp": [88, 89, 90, 91, 96, 97], "resfield": 22, "reson": [16, 29, 34, 45, 46, 47, 48, 52, 54, 56, 70, 71, 117, 124, 127, 130, 137, 140, 141, 143, 151, 152, 153, 154, 157, 158, 160], "resonator_list": [101, 102], "resonator_profil": [46, 117, 150], "resonatorprofil": [16, 34, 49, 117, 124, 127, 138, 141], "resonatorprofileanalysi": [16, 45, 46, 47, 117, 130, 150], "resonatorprofilesequ": [48, 117, 137, 141, 150], "respect": [90, 91], "respons": [30, 32, 147, 149], "respro": [16, 117, 130, 144, 150], "respro_process": 78, "respro_result": [69, 71], "respro_toolbar": [68, 72, 77, 78], "restart": 162, "result": [16, 30, 32, 66, 69, 70, 71, 72, 76, 78, 86, 87, 130, 164], "result_sign": [80, 81], "retrospect": 162, "return": [12, 20, 22, 23, 30, 32, 33, 34, 36, 38, 39, 41, 45, 46, 47, 49, 55, 56, 59, 61, 62, 66, 69, 71, 72, 76, 78, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 99, 100, 102, 104, 106, 110, 114, 115, 116, 117, 124, 127, 129, 130, 138, 141, 142, 143, 151, 157, 159], "return_annot": [3, 6, 7], "rewrit": 95, "rf": 159, "rfc": [30, 32], "rhel": 149, "right": [117, 130, 152], "risen": 162, "risk": 149, "rml": [129, 130], "rng": 102, "roger": [60, 62], "roi": [16, 147, 150], "root": 149, "rotat": 22, "roughli": 162, "round_step": [117, 143], "row": [36, 39, 41, 72, 87, 117], "rowcount": [72, 87], "rpseq": 150, "rst": [2, 5, 8, 9], "run": [0, 59, 62, 65, 66, 69, 70, 71, 72, 75, 76, 78, 80, 81, 85, 86, 87, 93, 95, 96, 97, 99, 100, 103, 110, 115, 116, 147, 150, 152, 154, 157, 160, 162, 164], "run_2d_relax": [70, 71], "run_4p": [112, 116], "run_5p": [112, 116], "run_cp": [112, 116], "run_cp_relax": [70, 71], "run_deer": [70, 71], "run_exp": [99, 100, 103, 110], "run_fsweep": [70, 71], "run_gener": 95, "run_long_d": [70, 71], "run_quick_d": [70, 71], "run_reptime_opt": [70, 71], "run_respro": [70, 71], "run_t2_relax": [70, 71], "runadvancedautod": [68, 72, 77, 78], "runautod": [68, 72, 77, 78], "runfullyautod": [68, 72, 77, 78], "runner": [65, 70, 71, 72, 75, 78, 85, 87], "runtimeerror": [117, 142], "safe": 162, "safeti": 162, "same": [22, 151], "sampl": [147, 151, 152, 153, 157, 164], "sampleconccombobox_opt": 78, "samplenam": [70, 71, 72, 87], "sampling_freq": 98, "sat": 110, "satisfi": 160, "satisifi": [29, 54, 56, 117], "satur": [40, 41, 43, 117], "save": [19, 33, 34, 49, 55, 56, 63, 64, 91, 94, 95, 96, 97, 99, 100, 103, 110, 117, 124, 127, 138, 141, 152, 162, 164], "save_data": [68, 72, 77, 78, 81], "save_fil": [117, 143], "save_log_to_fil": [73, 74], "save_path": 130, "save_pulsespel_def": [99, 100], "save_pulsespel_exp": [99, 100], "savefold": [29, 54, 56, 88, 89, 90, 91, 96, 97, 117], "savenam": [29, 54, 56, 70, 71, 88, 89, 90, 91, 96, 97, 101, 102, 117, 150, 157], "sbin": 149, "scale": [14, 17, 18, 25, 27, 34, 90, 91, 101, 102, 117, 118, 119, 120, 121, 123, 124, 127, 150, 155, 157], "scan": [13, 15, 24, 28, 37, 44, 48, 49, 51, 52, 98, 99, 100, 103, 110, 112, 116, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 157], "scan_num": [99, 100, 103, 110], "scenario": 157, "schweiger": [34, 117, 124, 127, 143], "scientif": 152, "scipi": [91, 114, 116], "scipy_filter_dc": 98, "scope": 8, "screen": 152, "script": [91, 99, 100, 103, 110, 114, 116, 154, 158, 159, 162], "se": [15, 117, 132, 141, 151], "search": [16, 104, 106, 110], "secant": [27, 117, 123, 127, 147], "second": [12, 15, 19, 38, 41, 46, 49, 61, 62, 63, 64, 117, 132, 138, 141, 151], "section": 152, "secur": 149, "see": [15, 117, 132, 141, 157], "seen": 157, "select": [15, 117, 132, 141, 152, 154, 157, 162], "select_pcyc": [15, 117, 132, 141, 150, 151], "select_reson": [68, 72, 77, 78], "selectattr": [3, 8], "self": [49, 117, 138, 141, 159, 166], "sensit": [147, 151], "sent": 162, "separ": [158, 159, 162], "seper": [115, 116, 150], "seq": [40, 41, 43, 89, 91, 95, 97, 117, 150], "seqtable_step": [49, 117, 138, 141], "sequec": 159, "sequenc": [12, 13, 15, 16, 19, 24, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 51, 52, 54, 55, 56, 63, 64, 72, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 117, 124, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 150, 151, 154, 155, 158, 160, 164], "sequr": 16, "seri": [45, 46, 47, 60, 62, 117, 147], "serial": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "seriou": 162, "session": [96, 97, 158], "set": [3, 8, 16, 31, 32, 49, 83, 90, 91, 95, 99, 100, 103, 110, 117, 138, 141, 147, 149, 151, 155, 160, 162, 165], "set_2d_max_tau": [70, 71], "set_acquisition_mod": [99, 100], "set_attenu": [99, 100], "set_config_fil": [99, 100], "set_eldor_freq": [99, 100], "set_field": [99, 100], "set_freq": [99, 100], "set_hidden_param": [99, 100], "set_mw_amp": [99, 100], "set_noise_mod": [70, 71], "set_param": [99, 100], "set_phas": [99, 100], "set_phasecycl": [99, 100], "set_pulsespel_def_filepath": [99, 100], "set_pulsespel_exp_filepath": [99, 100], "set_pulsespel_experi": [99, 100], "set_pulsespel_phase_cycl": [99, 100], "set_pulsespel_var": [99, 100, 103, 110], "set_replacemod": [99, 100], "set_spectrometer_connected_light": [68, 72, 77, 78], "set_sweep_width": [99, 100], "set_video_bandwidth": [99, 100], "set_video_gain": [99, 100], "setup": [32, 65, 70, 71, 72, 75, 78, 85, 87, 88, 89, 90, 91, 115, 116, 147, 157, 162], "setup_flag": [88, 89, 90, 91], "setup_input": [82, 83], "setup_log": [32, 162], "seven": [15, 117, 132, 141, 154], "seven_puls": [15, 117, 132, 141, 151], "shade_color": 57, "shape": [50, 117, 126, 127, 129, 130, 147, 151, 160], "share": 149, "shell": 148, "shift": [16, 165], "shift_detfreq_to_zero": [49, 117, 138, 141], "shift_pulse_freq": 16, "short": [15, 117, 132, 141, 151, 158], "short_nam": [3, 6, 7, 8, 10], "shortest": 147, "shot": [12, 13, 15, 24, 28, 36, 37, 38, 39, 41, 44, 48, 49, 51, 52, 70, 71, 88, 89, 96, 97, 101, 102, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 150, 151, 157, 159], "shotreptim": [104, 110], "shotsploop": [104, 110], "should": [16, 29, 49, 54, 56, 58, 59, 60, 61, 62, 95, 113, 114, 115, 116, 117, 138, 141, 142, 147, 149, 150, 152, 158, 162, 164], "shouldn": 162, "show": [3, 4, 8, 16, 150], "side": [16, 152, 159], "sign": [34, 117, 124, 127, 159], "signal": [12, 16, 31, 32, 36, 38, 39, 41, 60, 62, 65, 66, 69, 70, 71, 72, 75, 76, 78, 80, 81, 85, 86, 87, 117, 147, 151, 157], "signalphas": [106, 110], "signific": [155, 158], "similar": 158, "simpl": [60, 62, 152, 153, 154, 155, 157, 159], "simplest": 159, "simpli": [157, 159], "simplifi": 154, "simplist": 159, "simul": [15, 34, 117, 124, 127, 132, 141, 143], "simultan": 155, "sinc": [50, 61, 62, 117, 126, 127, 155, 159, 162], "sincpuls": [50, 117, 126, 127], "singl": [45, 46, 47, 88, 89, 96, 97, 98, 117, 151, 158, 159, 160, 164], "site": 154, "size": [12, 22, 36, 38, 39, 41, 105, 110, 117, 129, 130, 147], "slack": 162, "sleep": 150, "slightli": [155, 164], "small": [15, 117, 132, 141, 151], "smith": [60, 62], "smooth": [20, 22, 23, 36, 39, 41, 117], "snr": [19, 41, 60, 62, 63, 64, 72, 87, 101, 102, 117, 147, 151, 157], "snr_target": [12, 20, 22, 23, 36, 38, 39, 41, 60, 62, 117, 150], "snrcriteria": [60, 62, 157], "so": [31, 32, 34, 45, 46, 47, 117, 124, 127, 147, 150, 155, 157, 159, 162], "softwar": [34, 60, 62, 98, 117, 124, 127, 143, 145, 149, 154, 162], "solv": 157, "some": [96, 97, 147, 149, 162], "someth": 162, "somewhat": 152, "soon": [17, 117, 119, 127, 156, 157, 161], "sop": [34, 117, 124, 127, 143], "sourc": [0, 16, 22, 30, 32, 41, 46, 53, 56, 57, 62, 64, 67, 71, 72, 74, 78, 81, 83, 87, 89, 91, 95, 97, 98, 100, 102, 110, 116, 117, 127, 130, 141, 142, 143, 149, 155, 158], "space": [34, 117, 124, 127], "spec_config": [88, 89, 90, 91], "special": [30, 32, 158], "specif": [29, 31, 32, 54, 56, 61, 62, 96, 97, 99, 100, 103, 110, 117, 149, 152, 154, 155, 157, 158, 159, 160, 164], "specifi": [13, 24, 28, 30, 31, 32, 34, 37, 48, 49, 51, 61, 62, 117, 124, 127, 131, 133, 134, 135, 137, 138, 139, 141, 147, 151, 153, 157, 164], "spectra": [34, 117, 124, 127, 143], "spectral": [34, 117, 124, 127, 143], "spectromet": [18, 29, 33, 54, 55, 56, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 110, 113, 116, 117, 120, 127, 145, 149, 150, 153, 154, 155, 157, 158, 159, 160], "spectrometerinfo": 130, "spectrometr": [114, 115, 116], "spectrometrist": 159, "spectromt": 110, "spectromterinterfac": [68, 72, 77, 78], "spectroscop": [60, 62], "spectroscopi": [34, 117, 124, 127, 151], "spectrum": [22, 147], "speed": [59, 62, 96, 97, 150, 151], "speedup": [101, 102], "spel": [95, 99, 100], "spell": [99, 100, 103, 110], "spfu": [117, 127], "spfutun": 91, "sphere": 149, "sphinx": 0, "sphinx_copybutton": 0, "sphinx_toolbox": 0, "spin": [21, 22, 117, 143, 150, 151, 154], "spindler": 151, "spinsystem": [21, 22], "spintyp": [20, 22, 23, 117], "spinx": 0, "spline": [20, 22, 23, 117], "split": 158, "splitlin": 4, "srt": [112, 113, 114, 115, 116], "ss": 150, "ssl": 149, "stabil": 158, "stabl": [99, 100], "stage": [34, 117, 124, 127], "stand": 162, "standard": [91, 114, 116, 157, 159, 162], "standardis": 152, "start": [14, 17, 25, 27, 34, 61, 62, 88, 89, 90, 91, 95, 96, 97, 99, 100, 115, 116, 117, 118, 119, 121, 123, 124, 127, 147, 150, 158], "start_mode_tun": [79, 81], "start_tim": [101, 102], "starttim": [68, 72, 77, 78], "startup": [30, 32], "state": [68, 72, 77, 78, 99, 100, 101, 102, 162], "static": [15, 33, 34, 55, 56, 117, 124, 127, 132, 141, 150, 159], "statment": 159, "statu": [69, 71, 152, 164], "std": 16, "stefan": [34, 117, 124, 127, 143], "step": [12, 15, 30, 32, 36, 38, 39, 41, 44, 51, 93, 95, 99, 100, 103, 110, 115, 116, 117, 132, 136, 139, 141, 143, 149, 150, 151, 154, 159], "step_hash": [94, 95], "step_paramet": 91, "stepper": [99, 100, 116], "still": [99, 100, 103, 110, 145, 152, 154, 157, 158, 160], "stoehr": [60, 62], "stoher": [60, 62], "stoll": [34, 117, 124, 127, 143], "stop": [70, 71, 96, 97, 99, 100, 103, 110, 162], "stop_exp": [99, 100, 103, 110], "stop_flag": [70, 71, 97], "stope": 162, "store": [88, 89, 90, 91, 96, 97], "store_loc": [68, 72, 77, 78, 87], "stori": [42, 117, 128, 130], "str": [12, 15, 16, 20, 22, 23, 29, 30, 32, 33, 34, 36, 38, 39, 41, 49, 52, 54, 55, 56, 59, 60, 61, 62, 72, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110, 114, 116, 117, 124, 127, 130, 132, 138, 140, 141, 142, 143], "str_to_list_typ": [72, 87], "streasm": [129, 130], "string": [4, 16, 30, 32, 72, 87, 95, 96, 97, 104, 106, 110], "strongli": 158, "structur": 162, "stuck": 149, "style": [30, 32, 96, 97, 98, 130, 157, 165], "sub": 158, "subclass": [31, 32, 58, 59, 60, 61, 62, 158], "sublogg": 162, "submit": 161, "submodul": 8, "subpackag": 8, "success": 164, "sudo": 149, "suggest": [149, 162], "suit": 152, "sum": [15, 34, 45, 46, 47, 117, 124, 127, 132, 141], "summari": [8, 117, 130, 152], "superimpos": [41, 117], "suppli": [30, 32, 65, 70, 71, 72, 75, 78, 85, 87, 95], "support": [18, 66, 69, 71, 72, 76, 78, 86, 87, 117, 120, 127, 149, 151, 154, 157, 158, 160, 165], "svd": [36, 39, 41, 117], "svg": [129, 130], "svgflowabl": [129, 130], "sweep": [14, 16, 20, 22, 23, 24, 25, 27, 48, 88, 89, 90, 91, 99, 100, 103, 110, 115, 116, 117, 118, 121, 123, 127, 130, 133, 137, 141, 147, 157, 160], "sweeprat": [14, 25, 27, 117, 118, 121, 123, 127], "sweepspexp": [104, 110], "sweepwidth": [104, 110], "swept": [14, 25, 27, 117, 118, 121, 123, 127, 151], "switch": 162, "symetr": [18, 117, 120, 127], "sypport": 16, "system": [22, 30, 32, 34, 60, 62, 117, 124, 127, 147, 149, 154, 160, 162], "t": [14, 16, 17, 18, 25, 27, 34, 35, 45, 46, 47, 60, 62, 98, 102, 105, 110, 117, 118, 119, 120, 121, 123, 124, 125, 127, 150, 152, 159, 162], "t2": [51, 117, 139, 141], "t2_process": 78, "t2_result": [69, 71], "t2relaxationsequ": [51, 117, 139, 141], "tab": 152, "tabl": [15, 34, 42, 72, 87, 96, 97, 99, 100, 117, 124, 127, 128, 130, 132, 141, 151, 159], "take": [31, 32, 34, 96, 97, 99, 100, 103, 110, 117, 124, 127, 149, 150, 159, 164], "taken": [12, 36, 38, 39, 41, 117], "tar": 149, "target": [12, 16, 36, 38, 39, 41, 91, 113, 114, 116, 117], "target_mnr": 16, "target_shrt": [12, 38, 41, 117, 150], "target_step": [12, 36, 38, 39, 41, 117, 150], "target_tim": [12, 16, 36, 38, 39, 41, 117, 150], "tau": [13, 15, 37, 51, 112, 115, 116, 117, 131, 132, 135, 139, 141, 150, 151], "tau1": [15, 16, 36, 37, 39, 41, 48, 59, 62, 112, 113, 114, 116, 117, 132, 135, 137, 141, 150, 151], "tau1u": [15, 117, 132, 141], "tau2": [15, 16, 36, 37, 39, 41, 48, 59, 62, 112, 113, 114, 116, 117, 132, 135, 137, 141, 150, 151], "tau3": [15, 16, 59, 62, 117, 132, 141, 150, 151], "tau4": [15, 117, 132, 141, 151], "tau_": 147, "tau_1": 147, "tau_2": 147, "tau_init": [37, 117, 135, 141], "tau_valu": 91, "tck_": 46, "tcl": 149, "team": [149, 158], "techniqu": 154, "teleport": 162, "temp_dir": [88, 89, 90, 91], "temperatur": [152, 162], "templat": [30, 32, 42, 117, 128, 130], "term": [149, 159], "termin": [29, 54, 56, 58, 59, 60, 61, 62, 88, 89, 90, 91, 96, 97, 101, 102, 117, 157], "terminate_at": [29, 54, 56, 117, 150, 157], "tessmer": [34, 117, 124, 127], "test": [29, 54, 56, 58, 60, 61, 62, 117, 145, 149, 157], "test_if_mpfu_compat": [89, 91], "test_interv": [29, 54, 56, 70, 71, 117, 157], "test_main": [72, 117, 144], "test_puls": 159, "test_snr": [72, 87], "test_tp": 91, "text": [16, 30, 32, 42, 117, 128, 130, 152], "textual": [30, 32], "than": [12, 16, 38, 41, 72, 87, 95, 96, 97, 113, 114, 115, 116, 117, 147, 151, 157, 162], "thei": [30, 32, 45, 46, 47, 117, 147, 151, 157, 159, 160], "them": [15, 34, 117, 124, 127, 132, 141, 151, 158], "theme": 0, "thi": [1, 16, 17, 18, 28, 29, 31, 32, 33, 34, 44, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 65, 70, 71, 72, 75, 78, 85, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 110, 113, 114, 115, 116, 117, 119, 120, 124, 126, 127, 134, 136, 138, 139, 140, 141, 143, 144, 145, 147, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 162, 164, 166], "think": [150, 159], "third": [151, 155], "thompson": [60, 62], "thre": [69, 70, 71], "thread": [30, 32, 65, 66, 70, 71, 72, 75, 76, 78, 85, 86, 87, 88, 89, 90, 91], "threadnam": [30, 32], "threadpool": [68, 72, 77, 78, 79, 81, 82, 83], "three": [150, 151, 153, 161], "three_puls": [15, 117, 132, 141], "threshold": [22, 41, 45, 46, 47, 117, 150, 157], "through": [65, 70, 71, 72, 75, 78, 85, 87, 95, 99, 100, 151, 154, 158], "ti": 149, "time": [12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 41, 44, 48, 49, 51, 52, 61, 62, 63, 64, 68, 72, 77, 78, 88, 89, 95, 96, 97, 117, 118, 119, 120, 121, 123, 124, 125, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 150, 151, 152, 155, 157, 158, 159, 162, 164], "timecriteria": [61, 62], "timeout": [68, 69, 71, 72, 77, 78], "timestamp": [29, 54, 56, 72, 87, 88, 89, 90, 91, 96, 97, 101, 102, 117], "titl": [8, 42, 99, 100, 108, 109, 110, 117, 128, 130], "titlesonli": 8, "tk": 149, "tmin": 83, "tmp": 162, "toctre": 8, "todai": 162, "togeth": [151, 157], "tol": [91, 114, 116], "toler": [91, 114, 116], "too": [96, 97, 162], "tool": [68, 72, 75, 76, 77, 78, 96, 97, 117, 144, 153], "toolbar": [82, 83], "toolbox": [154, 160], "top": [117, 130, 152], "total": [12, 13, 15, 16, 18, 19, 36, 37, 38, 39, 41, 63, 64, 117, 120, 127, 131, 132, 135, 141, 150, 151], "tp": [14, 15, 17, 18, 25, 26, 27, 34, 35, 50, 88, 89, 90, 91, 96, 97, 101, 102, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 141, 150, 157, 159], "trace": [15, 45, 46, 47, 117, 132, 141], "traceback": [66, 69, 71, 72, 76, 78, 86, 87], "tradit": [154, 160], "train": 159, "trajectori": [34, 117, 124, 127], "transfer": [34, 117, 124, 127, 160], "transient": [99, 100], "transpose_dict_of_list": [117, 143], "transpose_list_of_dict": [117, 143], "trival": 157, "trivial": 157, "true": [4, 12, 16, 20, 22, 23, 29, 30, 32, 34, 36, 38, 39, 41, 54, 56, 70, 71, 72, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 112, 116, 117, 124, 127, 143, 150, 153, 155], "truli": 157, "truncat": 4, "try": [99, 100, 161], "tun": [88, 89, 96, 97, 114, 116, 160], "tune": [44, 88, 89, 90, 91, 96, 97, 113, 114, 115, 116, 117, 136, 141, 150, 154], "tune_phas": [91, 114, 116], "tune_pow": [91, 114, 116], "tune_puls": [70, 71, 88, 89, 90, 91, 96, 97, 101, 102, 150, 157], "tune_rect": 157, "tune_rectpuls": [88, 89, 90, 91, 96, 97, 101, 102, 150], "tupl": [16, 45, 46, 47, 61, 62, 66, 69, 71, 72, 76, 78, 86, 87, 95, 117], "turn": [117, 143, 149, 164], "two": [16, 32, 33, 34, 45, 46, 47, 55, 56, 61, 62, 95, 117, 124, 127, 151, 155, 158, 159, 162, 166], "twt": [52, 95, 117, 140, 141, 158, 160], "twtprofilesequ": [52, 117, 140, 141], "type": [3, 4, 8, 10, 12, 15, 16, 19, 22, 36, 38, 39, 41, 56, 63, 64, 72, 87, 89, 91, 95, 97, 98, 100, 102, 104, 106, 107, 110, 114, 116, 117, 130, 132, 141, 142, 143, 149, 150, 153, 155, 158, 159, 164], "typeerror": [33, 34, 49, 55, 56, 117, 124, 127, 138, 141], "typic": [30, 32], "u": [12, 13, 15, 16, 24, 28, 33, 36, 37, 38, 39, 41, 44, 48, 49, 51, 52, 55, 56, 88, 89, 95, 96, 97, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 151, 156], "ui": [79, 81], "uncert": [72, 87], "uncertainti": 162, "unchang": [90, 91], "unclear": 145, "under": [34, 117, 124, 127], "underlin": 11, "uniqu": 91, "unique_parvar": [94, 95], "unit": [33, 55, 56, 117, 150, 154, 160], "unitless": [33, 55, 56, 117, 153], "unix": 162, "unknown": 147, "unless": [147, 162], "unlik": 159, "unnecessari": 162, "until": [99, 100, 147, 149], "unwant": 159, "up": [65, 68, 70, 71, 72, 75, 77, 78, 85, 87, 151, 159, 160, 162, 165], "updat": [149, 164, 165], "update_analysis_t": [82, 83], "update_deer_set": [68, 72, 77, 78], "update_deerset": [70, 71], "update_dip": [79, 81], "update_fieldsweep": [68, 72, 77, 78], "update_figur": [79, 81, 82, 83], "update_fit_result": [82, 83], "update_func": [59, 62, 82, 83], "update_gyro": [70, 71], "update_inputs_from_dataset": [82, 83], "update_lo": [70, 71], "update_log_text": [73, 74], "update_longd": [68, 72, 77, 78], "update_optimise_pulses_figur": [68, 72, 77, 78], "update_pulsespel": [88, 89, 90, 91], "update_quickd": [68, 72, 77, 78], "update_relax": [68, 72, 77, 78], "update_relax2d": [68, 72, 77, 78], "update_reptim": [68, 70, 71, 72, 77, 78], "update_respro": [68, 72, 77, 78], "update_t2": [68, 72, 77, 78], "updater": [70, 71], "upgrad": [0, 155], "upon": [16, 29, 34, 54, 56, 98, 117, 124, 127, 158], "uprog": 95, "us": [0, 13, 15, 16, 20, 22, 23, 24, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 55, 56, 58, 59, 60, 61, 62, 88, 89, 91, 96, 97, 98, 99, 100, 103, 110, 113, 114, 115, 116, 117, 124, 127, 131, 132, 133, 134, 135, 136, 137, 139, 141, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 164, 166], "user": [30, 32, 145, 150, 152, 153, 154, 157, 160, 162, 164, 165, 166], "user_input": [70, 71], "userinput": [68, 72, 77, 78, 130], "usestim": [30, 32], "usr": 149, "usual": [30, 32], "utf": 162, "util": [117, 144], "uuid": [34, 117, 124, 127], "uwb_ev": 98, "uwb_eval_match": 98, "uwb_load": 98, "v": [105, 110], "v3": [34, 117, 124, 127], "val": [99, 100, 107, 110], "val_in_n": [102, 117, 143], "val_in_u": [16, 102, 117, 143], "valid": [30, 32], "valu": [4, 15, 16, 29, 30, 32, 33, 34, 54, 55, 56, 60, 62, 66, 69, 71, 72, 76, 78, 86, 87, 88, 89, 90, 91, 96, 97, 99, 100, 101, 102, 103, 107, 110, 114, 116, 117, 124, 127, 132, 141, 143, 150, 157], "valueerror": [95, 117, 142], "var": 95, "var_hash": [94, 95], "vari": [33, 55, 56, 117, 147], "variabl": [34, 91, 95, 99, 100, 103, 110, 117, 124, 127, 159], "variant": 154, "varieti": [154, 160], "vector": 16, "verbos": [16, 29, 46, 54, 56, 59, 60, 62, 96, 97, 98, 117, 150], "veri": [145, 155], "version": [20, 22, 23, 30, 31, 32, 98, 117, 142, 148, 149, 150, 155], "vertic": 16, "vexp": 16, "via": 145, "video": [99, 100, 153], "view": 159, "vim": 16, "virtual": [33, 55, 56, 117], "visible_attribut": [3, 8], "visible_children": 8, "visible_class": [3, 8], "visible_funct": 8, "visible_method": 3, "visible_properti": 3, "visible_submodul": 8, "visible_subpackag": 8, "vol": [60, 62], "voltag": 155, "vpsave": [108, 109, 110], "vre": 16, "w": [60, 62, 153], "wa": [30, 32, 149, 151, 160, 162], "wai": [148, 149, 152, 155, 157, 159, 161, 166], "wait": [70, 71, 99, 100], "wait_condit": [82, 83], "waitcondit": [68, 72, 77, 78], "walk": [154, 160], "want": [30, 32, 149, 150, 157, 159], "warn": [17, 30, 32, 117, 119, 127, 162], "waveform": 16, "waveform_precis": 16, "we": [147, 148, 149, 150, 155, 157, 158, 159, 161, 162, 164], "week": 162, "weekli": 162, "well": [16, 145, 150, 152, 159], "wget": 149, "what": [16, 49, 117, 138, 141, 147, 148, 150, 158, 162], "whatev": [31, 32], "when": [30, 32, 147, 148, 150, 154, 155, 157, 158, 159, 162], "where": [30, 32, 51, 117, 139, 141, 147, 151, 157], "which": [15, 16, 30, 31, 32, 45, 46, 47, 49, 52, 60, 62, 117, 132, 138, 140, 141, 147, 149, 151, 152, 157, 158, 159], "while": 150, "whilst": [32, 99, 100, 103, 110, 151, 154, 155, 157, 160], "white": [60, 62], "whole": 157, "whose": 16, "wide": [32, 152, 154], "wideband": 159, "wider": 159, "width": [4, 24, 26, 48, 98, 99, 100, 117, 122, 127, 129, 130, 133, 137, 141, 150], "win": 98, "window": [50, 67, 117, 126, 127], "wish": 152, "within": [150, 152], "without": [16, 110, 159], "work": [15, 60, 62, 96, 97, 99, 100, 103, 110, 117, 132, 141, 145, 147, 157, 158, 160, 164], "worker": [65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 85, 86, 87], "workersign": [66, 72, 76, 78, 86, 87], "world": 110, "would": [15, 117, 132, 141, 151, 157], "wrap": [65, 70, 71, 72, 75, 78, 85, 87, 129, 130], "write": [95, 154, 155, 157, 158, 159, 160], "write_pulsespel_fil": 95, "writen": 155, "written": [154, 160, 162], "wrong": [95, 162], "x": [13, 15, 34, 37, 46, 91, 101, 102, 114, 116, 117, 124, 127, 131, 132, 135, 141, 143, 150, 151, 153, 155], "xarrai": [20, 22, 23, 45, 46, 47, 117, 142], "xarray_obj": [19, 63, 64, 117], "xaxi": 22, "xepr": [95, 99, 100, 110, 116, 155, 158], "xepr_experi": [111, 117, 144], "xepr_inst": [99, 100], "xepr_path": 100, "xepr_sav": [99, 100], "xeprapi": [149, 154, 155, 158, 160], "xeprapi_link": [103, 110, 111, 117, 144], "xeprapilink": [99, 100, 103, 110, 113, 115, 116], "xeprcmd": [99, 100, 108, 109, 110], "xeprdataset": [108, 110], "xeprexperi": [108, 110], "xp": [15, 117, 132, 141, 151], "xr": [41, 45, 46, 47, 117], "xspecr": [104, 110], "xthe": 162, "xtol": 153, "xvf": 149, "xvii": [60, 62], "y": [15, 22, 34, 37, 91, 114, 116, 117, 124, 127, 132, 135, 141, 143, 149, 150, 151, 153, 155], "yaml": [88, 89, 90, 91, 153, 155, 164], "year": 151, "yet": [145, 155], "yield": [30, 32], "you": [15, 30, 32, 117, 132, 141, 148, 149, 151, 152, 155, 156, 157, 158, 159, 161, 162, 164], "your": [30, 32, 150, 152, 155, 158, 161], "yum": 149, "z": [34, 117, 124, 127, 143], "zero": [34, 45, 46, 47, 49, 52, 117, 124, 127, 138, 140, 141, 159], "zlib": 149, "zsh": 148, "z\u00fcrich": [96, 97], "\u03c0": 150}, "titles": ["Building the documentation", "API Reference", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.DEER_analysis</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.FieldSweep</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.Logging</span></code>", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.Relaxation</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.ResPro</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer._version</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.colors</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.criteria</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.dataset</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.__main__</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.autoDEER_worker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.log</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.main</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.modetune</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.quickdeer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.test_main</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.tools</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_AWG</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_MPFU</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_tools</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.ETH_awg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.ETH_awg_load</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.XeprAPI_link</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.dummy</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.dummy_xepr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.xepr_experiments</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.pulses</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.reporter</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.sequences</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.tools</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.utils</span></code>", "API Reference", "Welcome to autoDEER!", "API doc", "The Automated Algorithum", "Installation", "Installing Python", "Jupyter Interface", "DEER Variants", "GUI Interface", "Configuration File", "autoDEER", "Bruker Interface", "Creating a custom interface", "Getting Started", "Interfaces", "Creating a Custom Sequence", "autoEPR", "Contributing Guide", "Logging:", "Developing", "autoDEER GUI", "Release Notes", "Tutorial"], "titleterms": {"": 145, "0": 165, "01": 165, "04": 165, "1": [147, 157, 164], "2": [147, 157, 164], "2024": 165, "3": [147, 157, 164], "4": [147, 151, 157, 164], "5": [147, 151, 157], "6": 147, "7": [147, 149, 151, 165], "8": [147, 165], "The": [147, 149], "__main__": 67, "_version": 53, "advanc": [152, 164], "after": 152, "algorithum": 147, "an": [152, 164], "analysi": [146, 157, 164], "api": [1, 144, 146], "attribut": [16, 41, 62, 74, 78, 81, 83, 91, 95, 97, 100, 102, 110, 116, 117, 130, 142], "autod": [16, 22, 32, 41, 46, 53, 56, 57, 62, 64, 67, 71, 72, 74, 78, 81, 83, 84, 87, 89, 91, 95, 97, 98, 100, 102, 110, 111, 116, 117, 127, 130, 141, 142, 143, 145, 154, 164], "autodeer_work": 71, "autoepr": 160, "autom": 147, "automat": 152, "bruker": [155, 158], "bruker_awg": 89, "bruker_mpfu": 91, "bruker_tool": 95, "brukermpfu": 153, "build": 0, "call": 162, "cento": 149, "chirp": 159, "class": [22, 32, 41, 46, 56, 62, 64, 71, 72, 74, 78, 81, 83, 87, 89, 91, 95, 97, 100, 102, 110, 116, 117, 127, 130, 141, 146], "color": 57, "configur": [153, 155], "connect": [152, 164], "content": [16, 22, 32, 41, 46, 53, 56, 57, 62, 64, 67, 71, 72, 74, 78, 81, 83, 87, 89, 91, 95, 97, 98, 100, 102, 110, 116, 117, 127, 130, 141, 142, 143], "contribut": 161, "creat": [156, 159], "criteria": [62, 146], "current": 159, "custom": [156, 158, 159], "cycl": 151, "data": 157, "dataset": 64, "deer": [147, 150, 151], "deer_analysi": 16, "defin": 157, "develop": 163, "doc": [0, 146], "document": 0, "dummi": 102, "dummy_xepr": 110, "dure": 152, "eth_awg": 97, "eth_awg_load": 98, "ethawg": 153, "exampl": 153, "experi": [147, 152, 164], "explain": 147, "faq": 149, "featur": [145, 160], "field": 150, "fieldsweep": [22, 147], "file": [153, 155], "final": 147, "first": 159, "from": 148, "fulli": 152, "function": [16, 22, 32, 41, 46, 64, 72, 78, 81, 83, 87, 89, 91, 95, 97, 98, 102, 116, 117, 127, 130, 142, 143, 146], "get": [155, 157], "gui": [67, 71, 72, 74, 78, 81, 83, 84, 87, 152, 164], "guid": 161, "hardwar": [89, 91, 95, 97, 98, 100, 102, 110, 111, 116], "i": [146, 159], "includ": 160, "initi": 147, "input": 147, "instal": [0, 148, 149], "interfac": [146, 150, 152, 155, 156, 158], "jupyt": 150, "kei": 145, "lab": 164, "level": 162, "limit": 147, "log": [32, 74, 162], "logger": 162, "main": [78, 146], "messag": 162, "method": 16, "mode": [152, 164], "modetun": 81, "modul": [16, 22, 32, 41, 46, 53, 56, 57, 62, 64, 67, 71, 74, 78, 81, 83, 87, 89, 91, 95, 97, 98, 100, 102, 110, 116, 127, 130, 141, 142, 143, 146], "ndeer": 151, "next": 157, "note": 165, "o": 146, "optimis": [146, 147], "overview": 153, "packag": [0, 72, 117], "paramet": 147, "pdf": 164, "phase": 151, "plot": 146, "post": 162, "print": 164, "profil": [147, 150], "puls": [127, 146, 151, 159], "python": 149, "quickdeer": 83, "recommend": 152, "refer": [1, 34, 117, 124, 127, 143, 144, 151], "relax": [41, 147], "releas": 165, "report": [130, 164], "reson": [147, 150], "respro": 46, "return": 16, "rollov": 162, "scan": 147, "script": 157, "select": 151, "sequenc": [141, 146, 147, 157, 159], "set": 157, "setup": 150, "shape": 159, "solut": 149, "sourc": 148, "spectromet": [152, 164], "srt": 147, "start": [152, 155, 157, 162, 164], "step": [147, 157], "stop": 157, "studi": 147, "submodul": [72, 111, 117], "subpackag": 117, "support": 159, "sweep": 150, "tba": 165, "termin": 146, "test_main": 84, "tool": [87, 142], "tune": 157, "tutori": 166, "up": 157, "us": 159, "user": 147, "util": [143, 146], "variant": 151, "version": [151, 165], "view": 164, "welcom": 145, "what": 159, "window": 149, "xepr_experi": 116, "xeprapi_link": 100, "your": [157, 159]}})