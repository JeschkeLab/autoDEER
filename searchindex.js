Search.setIndex({"alltitles": {"1. Connecting to the spectrometer": [[166, "connecting-to-the-spectrometer"]], "1. Defining the sequence": [[159, "defining-the-sequence"]], "1. User Inputs": [[149, "user-inputs"]], "2. Fieldsweep": [[149, "fieldsweep"]], "2. Starting an autoDEER Experiment": [[166, "starting-an-autodeer-experiment"]], "2. Tuning for the sequence": [[159, "tuning-for-the-sequence"]], "3. SRT Scan": [[149, "srt-scan"]], "3. Starting the sequence": [[159, "starting-the-sequence"]], "3. Viewing the analysis": [[166, "viewing-the-analysis"]], "4-pulse DEER": [[153, "pulse-deer"]], "4. Printing a PDF lab-report": [[166, "printing-a-pdf-lab-report"]], "4. Resonator Profile": [[149, "resonator-profile"]], "4. Stopping the sequence": [[159, "stopping-the-sequence"]], "5-pulse DEER": [[153, "id1"]], "5. Data analysis": [[159, "data-analysis"]], "5. Relaxation Studies": [[149, "relaxation-studies"]], "6. Optimising DEER Sequence Parameters": [[149, "optimising-deer-sequence-parameters"]], "7-pulse DEER": [[153, "id2"]], "7. Initial DEER Experiment": [[149, "initial-deer-experiment"]], "8. Final DEER Experiment": [[149, "final-deer-experiment"]], "API Reference": [[1, null], [146, null]], "API doc": [[148, null]], "Advanced Mode": [[154, "advanced-mode"], [166, "advanced-mode"]], "After an Experiment": [[154, "after-an-experiment"]], "Analysis Modules": [[148, "analysis-modules"]], "Attributes": [[16, "attributes"], [41, "attributes"], [64, "attributes"], [76, "attributes"], [80, "attributes"], [83, "attributes"], [85, "attributes"], [93, "attributes"], [97, "attributes"], [99, "attributes"], [102, "attributes"], [104, "attributes"], [112, "attributes"], [118, "attributes"], [119, "attributes"], [132, "attributes"], [144, "attributes"]], "Bruker Interface": [[157, null], [160, "bruker-interface"]], "BrukerMPFU": [[155, "brukermpfu"]], "Building docs": [[0, "building-docs"]], "Building the documentation": [[0, null]], "Calling a Logger": [[164, "calling-a-logger"]], "Chirped pulses": [[161, "chirped-pulses"]], "Classes": [[22, "classes"], [32, "classes"], [41, "classes"], [46, "classes"], [54, "classes"], [58, "classes"], [64, "classes"], [66, "classes"], [73, "classes"], [74, "classes"], [76, "classes"], [80, "classes"], [83, "classes"], [85, "classes"], [89, "classes"], [91, "classes"], [93, "classes"], [97, "classes"], [99, "classes"], [102, "classes"], [104, "classes"], [112, "classes"], [118, "classes"], [119, "classes"], [129, "classes"], [132, "classes"], [143, "classes"], [148, "classes"]], "Configuration File": [[155, null]], "Configuration file": [[157, "configuration-file"]], "Connecting to a spectrometer": [[154, "connecting-to-a-spectrometer"]], "Contributing Guide": [[163, null]], "Creating a Custom Sequence": [[161, null]], "Creating a custom interface": [[158, null]], "Creating your first sequence": [[161, "creating-your-first-sequence"]], "Custom Interface": [[160, "custom-interface"]], "Custom pulses": [[161, "custom-pulses"]], "DEER": [[152, "deer"]], "DEER Variants": [[153, null]], "DEER versions": [[153, "deer-versions"]], "Developing": [[165, null]], "During an Experiment": [[154, "during-an-experiment"]], "ETHAWG": [[155, "ethawg"]], "Examples": [[155, "examples"]], "FAQs": [[151, "faqs"]], "Features included in autoEPR:": [[162, "features-included-in-autoepr"]], "Field Sweep": [[152, "field-sweep"]], "Fully automatic experiment (recommended)": [[154, "fully-automatic-experiment-recommended"]], "Functions": [[16, "functions"], [22, "functions"], [32, "functions"], [41, "functions"], [46, "functions"], [66, "functions"], [74, "functions"], [80, "functions"], [83, "functions"], [85, "functions"], [89, "functions"], [91, "functions"], [93, "functions"], [97, "functions"], [99, "functions"], [100, "functions"], [104, "functions"], [118, "functions"], [119, "functions"], [129, "functions"], [132, "functions"], [144, "functions"], [145, "functions"], [148, "functions"]], "GUI Interface": [[154, null]], "Getting Started": [[159, null]], "Getting started": [[157, "getting-started"]], "I/O": [[148, "i-o"]], "Installation": [[150, null]], "Installing Python": [[151, null]], "Installing Python CentOS 7": [[151, "installing-python-centos-7"]], "Installing Python Windows": [[151, "installing-python-windows"]], "Installing from source": [[150, "installing-from-source"]], "Installing packages": [[0, "installing-packages"]], "Interfaces": [[148, "interfaces"], [160, null]], "Jupyter Interface": [[152, null]], "Limitations": [[149, "limitations"]], "Logging Levels": [[164, "logging-levels"]], "Logging:": [[164, null]], "Logs": [[164, "logs"]], "Main Classes": [[148, "main-classes"]], "Methods": [[16, "methods"]], "Module Contents": [[16, "module-contents"], [22, "module-contents"], [32, "module-contents"], [41, "module-contents"], [46, "module-contents"], [54, "module-contents"], [55, "module-contents"], [58, "module-contents"], [59, "module-contents"], [64, "module-contents"], [66, "module-contents"], [69, "module-contents"], [73, "module-contents"], [76, "module-contents"], [80, "module-contents"], [83, "module-contents"], [85, "module-contents"], [89, "module-contents"], [91, "module-contents"], [93, "module-contents"], [97, "module-contents"], [99, "module-contents"], [100, "module-contents"], [102, "module-contents"], [104, "module-contents"], [112, "module-contents"], [118, "module-contents"], [129, "module-contents"], [132, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"]], "Next Steps": [[159, "next-steps"]], "Optimisation": [[148, "optimisation"]], "Overview": [[155, "overview"]], "Package Contents": [[74, "package-contents"], [119, "package-contents"]], "Parameter": [[149, "parameter"]], "Plotting": [[148, "plotting"]], "Posting a log message": [[164, "posting-a-log-message"]], "Pulses": [[148, "pulses"]], "References": [[153, "references"]], "References:": [[34, null], [119, "references"], [119, "id40"], [119, "id109"], [119, "id126"], [119, "id164"], [126, null], [129, "references"], [145, "references"]], "Release Notes": [[167, null]], "Resonator Profile": [[152, "resonator-profile"]], "Returns": [[16, "returns"]], "Rollover": [[164, "rollover"]], "Selecting a phase cycle": [[153, "selecting-a-phase-cycle"]], "Selecting a version": [[153, "selecting-a-version"]], "Sequences": [[148, "sequences"]], "Setting up your script": [[159, "setting-up-your-script"]], "Setup": [[152, "setup"]], "Starting an experiment": [[154, "starting-an-experiment"]], "Starting the logger": [[164, "starting-the-logger"]], "Steps Explained": [[149, "steps-explained"]], "Submodules": [[74, "submodules"], [113, "submodules"], [119, "submodules"]], "Subpackages": [[119, "subpackages"]], "Termination Criteria": [[148, "termination-criteria"]], "The Automated Algorithum": [[149, null]], "The solution": [[151, "the-solution"]], "Tutorial": [[168, null]], "Using Shaped and Chirped pulses": [[161, "using-shaped-and-chirped-pulses"]], "Utilities": [[148, "utilities"], [148, "id4"]], "Version 0.7.0 (2024-04-01):": [[167, "version-0-7-0-2024-04-01"]], "Version 0.8.0 (TBA):": [[167, "version-0-8-0-tba"]], "Welcome to autoDEER!": [[147, null]], "What is not currently supported?": [[161, "what-is-not-currently-supported"]], "autoDEER": [[156, null]], "autoDEER GUI": [[166, null]], "autoDEER\u2019s Key Features": [[147, "autodeer-s-key-features"]], "autoEPR": [[162, null]], "autodeer": [[119, null]], "autodeer.DEER_analysis": [[16, null]], "autodeer.FieldSweep": [[22, null]], "autodeer.Logging": [[32, null]], "autodeer.Relaxation": [[41, null]], "autodeer.ResPro": [[46, null]], "autodeer.TwoD_Experiment": [[54, null]], "autodeer._version": [[55, null]], "autodeer.classes": [[58, null]], "autodeer.colors": [[59, null]], "autodeer.criteria": [[64, null]], "autodeer.dataset": [[66, null]], "autodeer.gui": [[74, null]], "autodeer.gui.__main__": [[69, null]], "autodeer.gui.autoDEER_worker": [[73, null]], "autodeer.gui.log": [[76, null]], "autodeer.gui.main": [[80, null]], "autodeer.gui.modetune": [[83, null]], "autodeer.gui.quickdeer": [[85, null]], "autodeer.gui.test_main": [[86, null]], "autodeer.gui.tools": [[89, null]], "autodeer.hardware": [[113, null]], "autodeer.hardware.Bruker_AWG": [[91, null]], "autodeer.hardware.Bruker_MPFU": [[93, null]], "autodeer.hardware.Bruker_tools": [[97, null]], "autodeer.hardware.ETH_awg": [[99, null]], "autodeer.hardware.ETH_awg_load": [[100, null]], "autodeer.hardware.XeprAPI_link": [[102, null]], "autodeer.hardware.dummy": [[104, null]], "autodeer.hardware.dummy_xepr": [[112, null]], "autodeer.hardware.xepr_experiments": [[118, null]], "autodeer.pulses": [[129, null]], "autodeer.reporter": [[132, null]], "autodeer.sequences": [[143, null]], "autodeer.tools": [[144, null]], "autodeer.utils": [[145, null]], "nDEER": [[153, "ndeer"]]}, "docnames": ["README", "_templates/autoapi/index", "_templates/autoapi/python/attribute", "_templates/autoapi/python/class", "_templates/autoapi/python/data", "_templates/autoapi/python/exception", "_templates/autoapi/python/function", "_templates/autoapi/python/method", "_templates/autoapi/python/module", "_templates/autoapi/python/package", "_templates/autoapi/python/property", "_templates/custom_class_template", "autoapi/autodeer/CarrPurcellAnalysis", "autoapi/autodeer/CarrPurcellSequence", "autoapi/autodeer/ChirpPulse", "autoapi/autodeer/DEERSequence", "autoapi/autodeer/DEER_analysis/index", "autoapi/autodeer/Delay", "autoapi/autodeer/Detection", "autoapi/autodeer/EPRAccessor", "autoapi/autodeer/FieldSweep/FieldSweepAnalysis", "autoapi/autodeer/FieldSweep/SpinSystem", "autoapi/autodeer/FieldSweep/index", "autoapi/autodeer/FieldSweepAnalysis", "autoapi/autodeer/FieldSweepSequence", "autoapi/autodeer/FrequencySweptPulse", "autoapi/autodeer/GaussianPulse", "autoapi/autodeer/HSPulse", "autoapi/autodeer/HahnEchoSequence", "autoapi/autodeer/Interface", "autoapi/autodeer/Logging/DictFormater", "autoapi/autodeer/Logging/QtLogHandler", "autoapi/autodeer/Logging/index", "autoapi/autodeer/Parameter", "autoapi/autodeer/Pulse", "autoapi/autodeer/RectPulse", "autoapi/autodeer/RefocusedEcho2DAnalysis", "autoapi/autodeer/RefocusedEcho2DSequence", "autoapi/autodeer/Relaxation/CarrPurcellAnalysis", "autoapi/autodeer/Relaxation/RefocusedEcho2DAnalysis", "autoapi/autodeer/Relaxation/ReptimeAnalysis", "autoapi/autodeer/Relaxation/index", "autoapi/autodeer/Reporter", "autoapi/autodeer/ReptimeAnalysis", "autoapi/autodeer/ReptimeScan", "autoapi/autodeer/ResPro/ResonatorProfileAnalysis", "autoapi/autodeer/ResPro/index", "autoapi/autodeer/ResonatorProfileAnalysis", "autoapi/autodeer/ResonatorProfileSequence", "autoapi/autodeer/Sequence", "autoapi/autodeer/SincPulse", "autoapi/autodeer/T2RelaxationSequence", "autoapi/autodeer/TWTProfileSequence", "autoapi/autodeer/TwoD_Experiment/TwoDExperimentAnalysis", "autoapi/autodeer/TwoD_Experiment/index", "autoapi/autodeer/_version/index", "autoapi/autodeer/classes/Interface", "autoapi/autodeer/classes/Parameter", "autoapi/autodeer/classes/index", "autoapi/autodeer/colors/index", "autoapi/autodeer/criteria/Criteria", "autoapi/autodeer/criteria/DEERCriteria", "autoapi/autodeer/criteria/SNRCriteria", "autoapi/autodeer/criteria/TimeCriteria", "autoapi/autodeer/criteria/index", "autoapi/autodeer/dataset/EPRAccessor", "autoapi/autodeer/dataset/index", "autoapi/autodeer/gui/Worker", "autoapi/autodeer/gui/WorkerSignals", "autoapi/autodeer/gui/__main__/index", "autoapi/autodeer/gui/autoDEERUI", "autoapi/autodeer/gui/autoDEER_worker/autoDEERSignals", "autoapi/autodeer/gui/autoDEER_worker/autoDEERWorker", "autoapi/autodeer/gui/autoDEER_worker/index", "autoapi/autodeer/gui/index", "autoapi/autodeer/gui/log/LogDialog", "autoapi/autodeer/gui/log/index", "autoapi/autodeer/gui/main/Worker", "autoapi/autodeer/gui/main/WorkerSignals", "autoapi/autodeer/gui/main/autoDEERUI", "autoapi/autodeer/gui/main/index", "autoapi/autodeer/gui/modetune/ModeTune", "autoapi/autodeer/gui/modetune/get_dataWorker", "autoapi/autodeer/gui/modetune/index", "autoapi/autodeer/gui/quickdeer/DEERplot", "autoapi/autodeer/gui/quickdeer/index", "autoapi/autodeer/gui/test_main/index", "autoapi/autodeer/gui/tools/Worker", "autoapi/autodeer/gui/tools/WorkerSignals", "autoapi/autodeer/gui/tools/index", "autoapi/autodeer/hardware/Bruker_AWG/BrukerAWG", "autoapi/autodeer/hardware/Bruker_AWG/index", "autoapi/autodeer/hardware/Bruker_MPFU/BrukerMPFU", "autoapi/autodeer/hardware/Bruker_MPFU/index", "autoapi/autodeer/hardware/Bruker_tools/PSPhaseCycle", "autoapi/autodeer/hardware/Bruker_tools/PSparvar", "autoapi/autodeer/hardware/Bruker_tools/PulseSpel", "autoapi/autodeer/hardware/Bruker_tools/index", "autoapi/autodeer/hardware/ETH_awg/ETH_awg_interface", "autoapi/autodeer/hardware/ETH_awg/index", "autoapi/autodeer/hardware/ETH_awg_load/index", "autoapi/autodeer/hardware/XeprAPI_link/XeprAPILink", "autoapi/autodeer/hardware/XeprAPI_link/index", "autoapi/autodeer/hardware/dummy/dummyInterface", "autoapi/autodeer/hardware/dummy/index", "autoapi/autodeer/hardware/dummy_xepr/dummy_api", "autoapi/autodeer/hardware/dummy_xepr/dummy_cur_exp", "autoapi/autodeer/hardware/dummy_xepr/dummy_dataset", "autoapi/autodeer/hardware/dummy_xepr/dummy_hidden", "autoapi/autodeer/hardware/dummy_xepr/dummy_param", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.XeprCmds", "autoapi/autodeer/hardware/dummy_xepr/index", "autoapi/autodeer/hardware/index", "autoapi/autodeer/hardware/xepr_experiments/DEER", "autoapi/autodeer/hardware/xepr_experiments/ELDORtune", "autoapi/autodeer/hardware/xepr_experiments/MPFUtune", "autoapi/autodeer/hardware/xepr_experiments/PulseProfile", "autoapi/autodeer/hardware/xepr_experiments/index", "autoapi/autodeer/index", "autoapi/autodeer/pulses/ChirpPulse", "autoapi/autodeer/pulses/Delay", "autoapi/autodeer/pulses/Detection", "autoapi/autodeer/pulses/FrequencySweptPulse", "autoapi/autodeer/pulses/GaussianPulse", "autoapi/autodeer/pulses/HSPulse", "autoapi/autodeer/pulses/Pulse", "autoapi/autodeer/pulses/RectPulse", "autoapi/autodeer/pulses/SincPulse", "autoapi/autodeer/pulses/index", "autoapi/autodeer/reporter/Reporter", "autoapi/autodeer/reporter/SvgFlowable", "autoapi/autodeer/reporter/index", "autoapi/autodeer/sequences/CarrPurcellSequence", "autoapi/autodeer/sequences/DEERSequence", "autoapi/autodeer/sequences/FieldSweepSequence", "autoapi/autodeer/sequences/HahnEchoSequence", "autoapi/autodeer/sequences/RefocusedEcho2DSequence", "autoapi/autodeer/sequences/ReptimeScan", "autoapi/autodeer/sequences/ResonatorProfileSequence", "autoapi/autodeer/sequences/Sequence", "autoapi/autodeer/sequences/T2RelaxationSequence", "autoapi/autodeer/sequences/TWTProfileSequence", "autoapi/autodeer/sequences/index", "autoapi/autodeer/tools/index", "autoapi/autodeer/utils/index", "autoapi/index", "index", "source/API_docs", "source/Algorithum", "source/Install", "source/Install_python", "source/Jupyter_interface", "source/autoDEER/DEER_variants", "source/autoDEER/GUI_interface", "source/autoDEER/config_file", "source/autoDEER/index", "source/autoEPR/Bruker_interface", "source/autoEPR/Custom_interface", "source/autoEPR/Getting_Started", "source/autoEPR/Interface", "source/autoEPR/Sequencer", "source/autoEPR/index", "source/contributing", "source/dev_guide/Logging", "source/dev_guide/index", "source/gui_guide", "source/releasenotes", "source/tutorial"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["README.md", "_templates/autoapi/index.rst", "_templates/autoapi/python/attribute.rst", "_templates/autoapi/python/class.rst", "_templates/autoapi/python/data.rst", "_templates/autoapi/python/exception.rst", "_templates/autoapi/python/function.rst", "_templates/autoapi/python/method.rst", "_templates/autoapi/python/module.rst", "_templates/autoapi/python/package.rst", "_templates/autoapi/python/property.rst", "_templates/custom_class_template.rst", "autoapi/autodeer/CarrPurcellAnalysis.rst", "autoapi/autodeer/CarrPurcellSequence.rst", "autoapi/autodeer/ChirpPulse.rst", "autoapi/autodeer/DEERSequence.rst", "autoapi/autodeer/DEER_analysis/index.rst", "autoapi/autodeer/Delay.rst", "autoapi/autodeer/Detection.rst", "autoapi/autodeer/EPRAccessor.rst", "autoapi/autodeer/FieldSweep/FieldSweepAnalysis.rst", "autoapi/autodeer/FieldSweep/SpinSystem.rst", "autoapi/autodeer/FieldSweep/index.rst", "autoapi/autodeer/FieldSweepAnalysis.rst", "autoapi/autodeer/FieldSweepSequence.rst", "autoapi/autodeer/FrequencySweptPulse.rst", "autoapi/autodeer/GaussianPulse.rst", "autoapi/autodeer/HSPulse.rst", "autoapi/autodeer/HahnEchoSequence.rst", "autoapi/autodeer/Interface.rst", "autoapi/autodeer/Logging/DictFormater.rst", "autoapi/autodeer/Logging/QtLogHandler.rst", "autoapi/autodeer/Logging/index.rst", "autoapi/autodeer/Parameter.rst", "autoapi/autodeer/Pulse.rst", "autoapi/autodeer/RectPulse.rst", "autoapi/autodeer/RefocusedEcho2DAnalysis.rst", "autoapi/autodeer/RefocusedEcho2DSequence.rst", "autoapi/autodeer/Relaxation/CarrPurcellAnalysis.rst", "autoapi/autodeer/Relaxation/RefocusedEcho2DAnalysis.rst", "autoapi/autodeer/Relaxation/ReptimeAnalysis.rst", "autoapi/autodeer/Relaxation/index.rst", "autoapi/autodeer/Reporter.rst", "autoapi/autodeer/ReptimeAnalysis.rst", "autoapi/autodeer/ReptimeScan.rst", "autoapi/autodeer/ResPro/ResonatorProfileAnalysis.rst", "autoapi/autodeer/ResPro/index.rst", "autoapi/autodeer/ResonatorProfileAnalysis.rst", "autoapi/autodeer/ResonatorProfileSequence.rst", "autoapi/autodeer/Sequence.rst", "autoapi/autodeer/SincPulse.rst", "autoapi/autodeer/T2RelaxationSequence.rst", "autoapi/autodeer/TWTProfileSequence.rst", "autoapi/autodeer/TwoD_Experiment/TwoDExperimentAnalysis.rst", "autoapi/autodeer/TwoD_Experiment/index.rst", "autoapi/autodeer/_version/index.rst", "autoapi/autodeer/classes/Interface.rst", "autoapi/autodeer/classes/Parameter.rst", "autoapi/autodeer/classes/index.rst", "autoapi/autodeer/colors/index.rst", "autoapi/autodeer/criteria/Criteria.rst", "autoapi/autodeer/criteria/DEERCriteria.rst", "autoapi/autodeer/criteria/SNRCriteria.rst", "autoapi/autodeer/criteria/TimeCriteria.rst", "autoapi/autodeer/criteria/index.rst", "autoapi/autodeer/dataset/EPRAccessor.rst", "autoapi/autodeer/dataset/index.rst", "autoapi/autodeer/gui/Worker.rst", "autoapi/autodeer/gui/WorkerSignals.rst", "autoapi/autodeer/gui/__main__/index.rst", "autoapi/autodeer/gui/autoDEERUI.rst", "autoapi/autodeer/gui/autoDEER_worker/autoDEERSignals.rst", "autoapi/autodeer/gui/autoDEER_worker/autoDEERWorker.rst", "autoapi/autodeer/gui/autoDEER_worker/index.rst", "autoapi/autodeer/gui/index.rst", "autoapi/autodeer/gui/log/LogDialog.rst", "autoapi/autodeer/gui/log/index.rst", "autoapi/autodeer/gui/main/Worker.rst", "autoapi/autodeer/gui/main/WorkerSignals.rst", "autoapi/autodeer/gui/main/autoDEERUI.rst", "autoapi/autodeer/gui/main/index.rst", "autoapi/autodeer/gui/modetune/ModeTune.rst", "autoapi/autodeer/gui/modetune/get_dataWorker.rst", "autoapi/autodeer/gui/modetune/index.rst", "autoapi/autodeer/gui/quickdeer/DEERplot.rst", "autoapi/autodeer/gui/quickdeer/index.rst", "autoapi/autodeer/gui/test_main/index.rst", "autoapi/autodeer/gui/tools/Worker.rst", "autoapi/autodeer/gui/tools/WorkerSignals.rst", "autoapi/autodeer/gui/tools/index.rst", "autoapi/autodeer/hardware/Bruker_AWG/BrukerAWG.rst", "autoapi/autodeer/hardware/Bruker_AWG/index.rst", "autoapi/autodeer/hardware/Bruker_MPFU/BrukerMPFU.rst", "autoapi/autodeer/hardware/Bruker_MPFU/index.rst", "autoapi/autodeer/hardware/Bruker_tools/PSPhaseCycle.rst", "autoapi/autodeer/hardware/Bruker_tools/PSparvar.rst", "autoapi/autodeer/hardware/Bruker_tools/PulseSpel.rst", "autoapi/autodeer/hardware/Bruker_tools/index.rst", "autoapi/autodeer/hardware/ETH_awg/ETH_awg_interface.rst", "autoapi/autodeer/hardware/ETH_awg/index.rst", "autoapi/autodeer/hardware/ETH_awg_load/index.rst", "autoapi/autodeer/hardware/XeprAPI_link/XeprAPILink.rst", "autoapi/autodeer/hardware/XeprAPI_link/index.rst", "autoapi/autodeer/hardware/dummy/dummyInterface.rst", "autoapi/autodeer/hardware/dummy/index.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_api.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_cur_exp.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_dataset.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_hidden.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_param.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.XeprCmds.rst", "autoapi/autodeer/hardware/dummy_xepr/index.rst", "autoapi/autodeer/hardware/index.rst", "autoapi/autodeer/hardware/xepr_experiments/DEER.rst", "autoapi/autodeer/hardware/xepr_experiments/ELDORtune.rst", "autoapi/autodeer/hardware/xepr_experiments/MPFUtune.rst", "autoapi/autodeer/hardware/xepr_experiments/PulseProfile.rst", "autoapi/autodeer/hardware/xepr_experiments/index.rst", "autoapi/autodeer/index.rst", "autoapi/autodeer/pulses/ChirpPulse.rst", "autoapi/autodeer/pulses/Delay.rst", "autoapi/autodeer/pulses/Detection.rst", "autoapi/autodeer/pulses/FrequencySweptPulse.rst", "autoapi/autodeer/pulses/GaussianPulse.rst", "autoapi/autodeer/pulses/HSPulse.rst", "autoapi/autodeer/pulses/Pulse.rst", "autoapi/autodeer/pulses/RectPulse.rst", "autoapi/autodeer/pulses/SincPulse.rst", "autoapi/autodeer/pulses/index.rst", "autoapi/autodeer/reporter/Reporter.rst", "autoapi/autodeer/reporter/SvgFlowable.rst", "autoapi/autodeer/reporter/index.rst", "autoapi/autodeer/sequences/CarrPurcellSequence.rst", "autoapi/autodeer/sequences/DEERSequence.rst", "autoapi/autodeer/sequences/FieldSweepSequence.rst", "autoapi/autodeer/sequences/HahnEchoSequence.rst", "autoapi/autodeer/sequences/RefocusedEcho2DSequence.rst", "autoapi/autodeer/sequences/ReptimeScan.rst", "autoapi/autodeer/sequences/ResonatorProfileSequence.rst", "autoapi/autodeer/sequences/Sequence.rst", "autoapi/autodeer/sequences/T2RelaxationSequence.rst", "autoapi/autodeer/sequences/TWTProfileSequence.rst", "autoapi/autodeer/sequences/index.rst", "autoapi/autodeer/tools/index.rst", "autoapi/autodeer/utils/index.rst", "autoapi/index.rst", "index.rst", "source/API_docs.rst", "source/Algorithum.rst", "source/Install.rst", "source/Install_python.rst", "source/Jupyter_interface.rst", "source/autoDEER/DEER_variants.rst", "source/autoDEER/GUI_interface.rst", "source/autoDEER/config_file.rst", "source/autoDEER/index.rst", "source/autoEPR/Bruker_interface.rst", "source/autoEPR/Custom_interface.rst", "source/autoEPR/Getting_Started.rst", "source/autoEPR/Interface.rst", "source/autoEPR/Sequencer.rst", "source/autoEPR/index.rst", "source/contributing.rst", "source/dev_guide/Logging.md", "source/dev_guide/index.rst", "source/gui_guide.rst", "source/releasenotes.rst", "source/tutorial.rst"], "indexentries": {"__add__() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter.__add__", false]], "__add__() (autodeer.criteria.criteria method)": [[64, "autodeer.criteria.Criteria.__add__", false]], "__add__() (autodeer.parameter method)": [[119, "autodeer.Parameter.__add__", false], [119, "id200", false], [119, "id29", false], [119, "id96", false]], "__add__() (criteria method)": [[60, "Criteria.__add__", false]], "__add__() (parameter method)": [[33, "Parameter.__add__", false], [57, "Parameter.__add__", false]], "__eq__() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter.__eq__", false]], "__eq__() (autodeer.parameter method)": [[119, "autodeer.Parameter.__eq__", false], [119, "id199", false], [119, "id28", false], [119, "id95", false]], "__eq__() (parameter method)": [[33, "Parameter.__eq__", false], [57, "Parameter.__eq__", false]], "__getitem__() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.__getitem__", false]], "__getitem__() (autodeer.hardware.dummy_xepr.dummy_hidden method)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden.__getitem__", false]], "__getitem__() (dummy_cur_exp method)": [[106, "dummy_cur_exp.__getitem__", false]], "__getitem__() (dummy_hidden method)": [[108, "dummy_hidden.__getitem__", false]], "__mul__() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter.__mul__", false]], "__mul__() (autodeer.parameter method)": [[119, "autodeer.Parameter.__mul__", false], [119, "id202", false], [119, "id31", false], [119, "id98", false]], "__mul__() (parameter method)": [[33, "Parameter.__mul__", false], [57, "Parameter.__mul__", false]], "__rmul__() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter.__rmul__", false]], "__rmul__() (autodeer.parameter method)": [[119, "autodeer.Parameter.__rmul__", false], [119, "id203", false], [119, "id32", false], [119, "id99", false]], "__rmul__() (parameter method)": [[33, "Parameter.__rmul__", false], [57, "Parameter.__rmul__", false]], "__str__() (autodeer.hardware.bruker_tools.psphasecycle method)": [[97, "autodeer.hardware.Bruker_tools.PSPhaseCycle.__str__", false]], "__str__() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.__str__", false]], "__str__() (autodeer.pulse method)": [[119, "autodeer.Pulse.__str__", false], [119, "id129", false], [119, "id167", false]], "__str__() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse.__str__", false]], "__str__() (autodeer.sequence method)": [[119, "autodeer.Sequence.__str__", false], [119, "id246", false], [119, "id67", false]], "__str__() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence.__str__", false]], "__str__() (psphasecycle method)": [[94, "PSPhaseCycle.__str__", false]], "__str__() (pulse method)": [[34, "Pulse.__str__", false], [126, "Pulse.__str__", false]], "__str__() (pulsespel method)": [[96, "PulseSpel.__str__", false]], "__str__() (sequence method)": [[49, "Sequence.__str__", false], [140, "Sequence.__str__", false]], "__sub__() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter.__sub__", false]], "__sub__() (autodeer.parameter method)": [[119, "autodeer.Parameter.__sub__", false], [119, "id201", false], [119, "id30", false], [119, "id97", false]], "__sub__() (parameter method)": [[33, "Parameter.__sub__", false], [57, "Parameter.__sub__", false]], "__version__ (in module autodeer)": [[119, "autodeer.__version__", false]], "__version__ (in module autodeer._version)": [[55, "autodeer._version.__version__", false]], "_addawgpulse() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._addAWGPulse", false]], "_addawgpulse() (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools._addAWGPulse", false]], "_addawgpulse() (pulsespel method)": [[96, "PulseSpel._addAWGPulse", false]], "_adddef() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._addDef", false]], "_adddef() (pulsespel method)": [[96, "PulseSpel._addDef", false]], "_addexp() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._addExp", false]], "_addexp() (pulsespel method)": [[96, "PulseSpel._addExp", false]], "_addphasecycle() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._addPhaseCycle", false]], "_addphasecycle() (autodeer.pulse method)": [[119, "autodeer.Pulse._addPhaseCycle", false], [119, "id116", false], [119, "id154", false]], "_addphasecycle() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse._addPhaseCycle", false]], "_addphasecycle() (pulse method)": [[34, "Pulse._addPhaseCycle", false], [126, "Pulse._addPhaseCycle", false]], "_addphasecycle() (pulsespel method)": [[96, "PulseSpel._addPhaseCycle", false]], "_addscanloop() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._addScanLoop", false]], "_addscanloop() (pulsespel method)": [[96, "PulseSpel._addScanLoop", false]], "_build() (autodeer.reporter method)": [[119, "autodeer.Reporter._build", false]], "_build() (autodeer.reporter.reporter method)": [[132, "autodeer.reporter.Reporter._build", false]], "_build() (reporter method)": [[42, "Reporter._build", false], [130, "Reporter._build", false]], "_build_exp_struct() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_exp_struct", false]], "_build_exp_struct() (eth_awg_interface method)": [[98, "ETH_awg_interface._build_exp_struct", false]], "_build_methods() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker._build_methods", false]], "_build_methods() (autodeerworker method)": [[72, "autoDEERWorker._build_methods", false]], "_build_parvar() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_parvar", false]], "_build_parvar() (eth_awg_interface method)": [[98, "ETH_awg_interface._build_parvar", false]], "_build_phase_cycle() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_phase_cycle", false]], "_build_phase_cycle() (eth_awg_interface method)": [[98, "ETH_awg_interface._build_phase_cycle", false]], "_build_pulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_pulse", false]], "_build_pulse() (eth_awg_interface method)": [[98, "ETH_awg_interface._build_pulse", false]], "_build_sequence() (autodeer.carrpurcellsequence method)": [[119, "autodeer.CarrPurcellSequence._build_sequence", false]], "_build_sequence() (autodeer.refocusedecho2dsequence method)": [[119, "autodeer.RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (autodeer.resonatorprofilesequence method)": [[119, "autodeer.ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.carrpurcellsequence method)": [[143, "autodeer.sequences.CarrPurcellSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.refocusedecho2dsequence method)": [[143, "autodeer.sequences.RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.resonatorprofilesequence method)": [[143, "autodeer.sequences.ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.twtprofilesequence method)": [[143, "autodeer.sequences.TWTProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.twtprofilesequence method)": [[119, "autodeer.TWTProfileSequence._build_sequence", false]], "_build_sequence() (carrpurcellsequence method)": [[13, "CarrPurcellSequence._build_sequence", false], [133, "CarrPurcellSequence._build_sequence", false]], "_build_sequence() (refocusedecho2dsequence method)": [[37, "RefocusedEcho2DSequence._build_sequence", false], [137, "RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (resonatorprofilesequence method)": [[48, "ResonatorProfileSequence._build_sequence", false], [139, "ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (twtprofilesequence method)": [[52, "TWTProfileSequence._build_sequence", false], [142, "TWTProfileSequence._build_sequence", false]], "_buildfmam() (autodeer.pulse method)": [[119, "autodeer.Pulse._buildFMAM", false], [119, "id117", false], [119, "id155", false]], "_buildfmam() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse._buildFMAM", false]], "_buildfmam() (pulse method)": [[34, "Pulse._buildFMAM", false], [126, "Pulse._buildFMAM", false]], "_buildphasecycle() (autodeer.sequence method)": [[119, "autodeer.Sequence._buildPhaseCycle", false], [119, "id237", false], [119, "id58", false]], "_buildphasecycle() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence._buildPhaseCycle", false]], "_buildphasecycle() (sequence method)": [[49, "Sequence._buildPhaseCycle", false], [140, "Sequence._buildPhaseCycle", false]], "_calc_fft() (autodeer.pulse method)": [[119, "autodeer.Pulse._calc_fft", false], [119, "id124", false], [119, "id162", false]], "_calc_fft() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse._calc_fft", false]], "_calc_fft() (pulse method)": [[34, "Pulse._calc_fft", false], [126, "Pulse._calc_fft", false]], "_check_sequence() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._check_sequence", false]], "_check_sequence() (pulsespel method)": [[96, "PulseSpel._check_sequence", false]], "_checkrect() (autodeer.sequence method)": [[119, "autodeer.Sequence._checkRect", false], [119, "id245", false], [119, "id66", false]], "_checkrect() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence._checkRect", false]], "_checkrect() (sequence method)": [[49, "Sequence._checkRect", false], [140, "Sequence._checkRect", false]], "_cmpl_def() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._cmpl_def", false]], "_cmpl_def() (pulsespel method)": [[96, "PulseSpel._cmpl_def", false]], "_cmpl_exp() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._cmpl_Exp", false]], "_cmpl_exp() (pulsespel method)": [[96, "PulseSpel._cmpl_Exp", false]], "_convert_to_delay() (autodeer.sequence method)": [[119, "autodeer.Sequence._convert_to_delay", false], [119, "id243", false], [119, "id64", false]], "_convert_to_delay() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence._convert_to_delay", false]], "_convert_to_delay() (sequence method)": [[49, "Sequence._convert_to_delay", false], [140, "Sequence._convert_to_delay", false]], "_convert_to_pulses() (autodeer.sequence method)": [[119, "autodeer.Sequence._convert_to_pulses", false], [119, "id244", false], [119, "id65", false]], "_convert_to_pulses() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence._convert_to_pulses", false]], "_convert_to_pulses() (sequence method)": [[49, "Sequence._convert_to_pulses", false], [140, "Sequence._convert_to_pulses", false]], "_data_transpose() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis._data_transpose", false]], "_data_transpose() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis._data_transpose", false]], "_detect() (autodeer.hardware.bruker_tools.psphasecycle method)": [[97, "autodeer.hardware.Bruker_tools.PSPhaseCycle._detect", false]], "_detect() (psphasecycle method)": [[94, "PSPhaseCycle._detect", false]], "_estimate_time() (autodeer.sequence method)": [[119, "autodeer.Sequence._estimate_time", false], [119, "id236", false], [119, "id57", false]], "_estimate_time() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence._estimate_time", false]], "_estimate_time() (sequence method)": [[49, "Sequence._estimate_time", false], [140, "Sequence._estimate_time", false]], "_expdefs() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._ExpDefs", false]], "_expdefs() (pulsespel method)": [[96, "PulseSpel._ExpDefs", false]], "_freq_sweep() (autodeer.hardware.xepr_experiments.pulseprofile method)": [[118, "autodeer.hardware.xepr_experiments.PulseProfile._freq_sweep", false]], "_freq_sweep() (pulseprofile method)": [[117, "PulseProfile._freq_sweep", false]], "_from_dict() (autodeer.classes.parameter static method)": [[58, "autodeer.classes.Parameter._from_dict", false]], "_from_dict() (autodeer.parameter static method)": [[119, "autodeer.Parameter._from_dict", false], [119, "id104", false], [119, "id208", false], [119, "id37", false]], "_from_dict() (autodeer.pulse class method)": [[119, "autodeer.Pulse._from_dict", false], [119, "id134", false], [119, "id172", false]], "_from_dict() (autodeer.pulses.pulse class method)": [[129, "autodeer.pulses.Pulse._from_dict", false]], "_from_dict() (autodeer.sequence class method)": [[119, "autodeer.Sequence._from_dict", false], [119, "id251", false], [119, "id72", false]], "_from_dict() (autodeer.sequences.sequence class method)": [[143, "autodeer.sequences.Sequence._from_dict", false]], "_from_dict() (parameter static method)": [[33, "Parameter._from_dict", false], [57, "Parameter._from_dict", false]], "_from_dict() (pulse class method)": [[34, "Pulse._from_dict", false], [126, "Pulse._from_dict", false]], "_from_dict() (sequence class method)": [[49, "Sequence._from_dict", false], [140, "Sequence._from_dict", false]], "_from_json() (autodeer.classes.parameter class method)": [[58, "autodeer.classes.Parameter._from_json", false]], "_from_json() (autodeer.parameter class method)": [[119, "autodeer.Parameter._from_json", false], [119, "id105", false], [119, "id209", false], [119, "id38", false]], "_from_json() (autodeer.pulse class method)": [[119, "autodeer.Pulse._from_json", false], [119, "id135", false], [119, "id173", false]], "_from_json() (autodeer.pulses.pulse class method)": [[129, "autodeer.pulses.Pulse._from_json", false]], "_from_json() (autodeer.sequence class method)": [[119, "autodeer.Sequence._from_json", false], [119, "id252", false], [119, "id73", false]], "_from_json() (autodeer.sequences.sequence class method)": [[143, "autodeer.sequences.Sequence._from_json", false]], "_from_json() (parameter class method)": [[33, "Parameter._from_json", false], [57, "Parameter._from_json", false]], "_from_json() (pulse class method)": [[34, "Pulse._from_json", false], [126, "Pulse._from_json", false]], "_from_json() (sequence class method)": [[49, "Sequence._from_json", false], [140, "Sequence._from_json", false]], "_gen_eseem() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy._gen_ESEEM", false]], "_get_cur_exp_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink._get_cur_exp_global", false]], "_get_cur_exp_global() (xeprapilink method)": [[101, "XeprAPILink._get_cur_exp_global", false]], "_get_exp() (autodeer.hardware.xepr_experiments.eldortune method)": [[118, "autodeer.hardware.xepr_experiments.ELDORtune._get_exp", false]], "_get_exp() (eldortune method)": [[115, "ELDORtune._get_exp", false]], "_get_xepr_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink._get_Xepr_global", false]], "_get_xepr_global() (xeprapilink method)": [[101, "XeprAPILink._get_Xepr_global", false]], "_launch_complex_thread() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG._launch_complex_thread", false]], "_launch_complex_thread() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU._launch_complex_thread", false]], "_launch_complex_thread() (brukerawg method)": [[90, "BrukerAWG._launch_complex_thread", false]], "_launch_complex_thread() (brukermpfu method)": [[92, "BrukerMPFU._launch_complex_thread", false]], "_main() (autodeer.hardware.bruker_tools.psphasecycle method)": [[97, "autodeer.hardware.Bruker_tools.PSPhaseCycle._main", false]], "_main() (psphasecycle method)": [[94, "PSPhaseCycle._main", false]], "_mpfu() (autodeer.hardware.bruker_tools.psphasecycle method)": [[97, "autodeer.hardware.Bruker_tools.PSPhaseCycle._MPFU", false]], "_mpfu() (psphasecycle method)": [[94, "PSPhaseCycle._MPFU", false]], "_mpfu_channels() (in module autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU._MPFU_channels", false]], "_new_delay() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._new_delay", false]], "_new_delay() (pulsespel method)": [[96, "PulseSpel._new_delay", false]], "_new_pulse() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._new_pulse", false]], "_new_pulse() (pulsespel method)": [[96, "PulseSpel._new_pulse", false]], "_new_var() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel._new_var", false]], "_new_var() (pulsespel method)": [[96, "PulseSpel._new_var", false]], "_obj (autodeer.dataset.epraccessor attribute)": [[66, "autodeer.dataset.EPRAccessor._obj", false]], "_obj (autodeer.epraccessor attribute)": [[119, "autodeer.EPRAccessor._obj", false]], "_obj (epraccessor attribute)": [[19, "EPRAccessor._obj", false], [65, "EPRAccessor._obj", false]], "_pcyc_str() (autodeer.pulse method)": [[119, "autodeer.Pulse._pcyc_str", false], [119, "id128", false], [119, "id166", false]], "_pcyc_str() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse._pcyc_str", false]], "_pcyc_str() (pulse method)": [[34, "Pulse._pcyc_str", false], [126, "Pulse._pcyc_str", false]], "_process_fit() (autodeer.resonatorprofileanalysis method)": [[119, "autodeer.ResonatorProfileAnalysis._process_fit", false]], "_process_fit() (autodeer.respro.resonatorprofileanalysis method)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis._process_fit", false]], "_process_fit() (resonatorprofileanalysis method)": [[45, "ResonatorProfileAnalysis._process_fit", false], [47, "ResonatorProfileAnalysis._process_fit", false]], "_set_cur_exp_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_cur_exp_global", false]], "_set_cur_exp_global() (xeprapilink method)": [[101, "XeprAPILink._set_cur_exp_global", false]], "_set_cur_exp_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_cur_exp_param", false]], "_set_cur_exp_param() (xeprapilink method)": [[101, "XeprAPILink._set_cur_exp_param", false]], "_set_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_hidden_param", false]], "_set_hidden_param() (xeprapilink method)": [[101, "XeprAPILink._set_hidden_param", false]], "_set_xepr_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_Xepr_global", false]], "_set_xepr_global() (xeprapilink method)": [[101, "XeprAPILink._set_Xepr_global", false]], "_setup_echo() (autodeer.hardware.xepr_experiments.mpfutune method)": [[118, "autodeer.hardware.xepr_experiments.MPFUtune._setup_echo", false]], "_setup_echo() (mpfutune method)": [[116, "MPFUtune._setup_echo", false]], "_setup_exp() (autodeer.hardware.xepr_experiments.eldortune method)": [[118, "autodeer.hardware.xepr_experiments.ELDORtune._setup_exp", false]], "_setup_exp() (autodeer.hardware.xepr_experiments.pulseprofile method)": [[118, "autodeer.hardware.xepr_experiments.PulseProfile._setup_exp", false]], "_setup_exp() (eldortune method)": [[115, "ELDORtune._setup_exp", false]], "_setup_exp() (pulseprofile method)": [[117, "PulseProfile._setup_exp", false]], "_similate_respro() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy._similate_respro", false]], "_simulate_2d_relax() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy._simulate_2D_relax", false]], "_simulate_cp() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy._simulate_CP", false]], "_simulate_deer() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy._simulate_deer", false]], "_simulate_field_sweep() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy._simulate_field_sweep", false]], "_simulate_reptimescan() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy._simulate_reptimescan", false]], "_simulate_t2() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy._simulate_T2", false]], "_smooth() (autodeer.refocusedecho2danalysis method)": [[119, "autodeer.RefocusedEcho2DAnalysis._smooth", false]], "_smooth() (autodeer.relaxation.refocusedecho2danalysis method)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis._smooth", false]], "_smooth() (refocusedecho2danalysis method)": [[36, "RefocusedEcho2DAnalysis._smooth", false], [39, "RefocusedEcho2DAnalysis._smooth", false]], "_spfu_channels() (in module autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU._SPFU_channels", false]], "_stability_check() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis._stability_check", false]], "_stability_check() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis._stability_check", false]], "_tmp_dir (autodeer.hardware.dummy_xepr.dummy_api attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_api._tmp_dir", false]], "_tmp_dir (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink._tmp_dir", false]], "_tmp_dir (dummy_api attribute)": [[105, "dummy_api._tmp_dir", false]], "_tmp_dir (xeprapilink attribute)": [[101, "XeprAPILink._tmp_dir", false]], "_to_dict() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter._to_dict", false]], "_to_dict() (autodeer.parameter method)": [[119, "autodeer.Parameter._to_dict", false], [119, "id101", false], [119, "id205", false], [119, "id34", false]], "_to_dict() (autodeer.pulse method)": [[119, "autodeer.Pulse._to_dict", false], [119, "id131", false], [119, "id169", false]], "_to_dict() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse._to_dict", false]], "_to_dict() (autodeer.sequence method)": [[119, "autodeer.Sequence._to_dict", false], [119, "id248", false], [119, "id69", false]], "_to_dict() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence._to_dict", false]], "_to_dict() (parameter method)": [[33, "Parameter._to_dict", false], [57, "Parameter._to_dict", false]], "_to_dict() (pulse method)": [[34, "Pulse._to_dict", false], [126, "Pulse._to_dict", false]], "_to_dict() (sequence method)": [[49, "Sequence._to_dict", false], [140, "Sequence._to_dict", false]], "_to_json() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter._to_json", false]], "_to_json() (autodeer.parameter method)": [[119, "autodeer.Parameter._to_json", false], [119, "id102", false], [119, "id206", false], [119, "id35", false]], "_to_json() (autodeer.pulse method)": [[119, "autodeer.Pulse._to_json", false], [119, "id132", false], [119, "id170", false]], "_to_json() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse._to_json", false]], "_to_json() (autodeer.sequence method)": [[119, "autodeer.Sequence._to_json", false], [119, "id249", false], [119, "id70", false]], "_to_json() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence._to_json", false]], "_to_json() (parameter method)": [[33, "Parameter._to_json", false], [57, "Parameter._to_json", false]], "_to_json() (pulse method)": [[34, "Pulse._to_json", false], [126, "Pulse._to_json", false]], "_to_json() (sequence method)": [[49, "Sequence._to_json", false], [140, "Sequence._to_json", false]], "_xepr_retry() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink._xepr_retry", false]], "_xepr_retry() (xeprapilink method)": [[101, "XeprAPILink._xepr_retry", false]], "a (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.A", false]], "a (spinsystem attribute)": [[21, "SpinSystem.A", false]], "abort_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.abort_exp", false]], "abort_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.abort_exp", false]], "abort_exp() (dummy_api method)": [[105, "dummy_api.abort_exp", false]], "abort_exp() (xeprapilink method)": [[101, "XeprAPILink.abort_exp", false]], "acquire_dataset() (autodeer.classes.interface method)": [[58, "autodeer.classes.Interface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.dummy.dummyinterface method)": [[104, "autodeer.hardware.dummy.dummyInterface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_dataset", false]], "acquire_dataset() (autodeer.interface method)": [[119, "autodeer.Interface.acquire_dataset", false], [119, "id217", false]], "acquire_dataset() (brukerawg method)": [[90, "BrukerAWG.acquire_dataset", false]], "acquire_dataset() (brukermpfu method)": [[92, "BrukerMPFU.acquire_dataset", false]], "acquire_dataset() (dummyinterface method)": [[103, "dummyInterface.acquire_dataset", false]], "acquire_dataset() (eth_awg_interface method)": [[98, "ETH_awg_interface.acquire_dataset", false]], "acquire_dataset() (interface method)": [[29, "Interface.acquire_dataset", false], [56, "Interface.acquire_dataset", false]], "acquire_dataset() (xeprapilink method)": [[101, "XeprAPILink.acquire_dataset", false]], "acquire_dataset_from_matlab() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.acquire_dataset_from_matlab", false]], "acquire_dataset_from_matlab() (eth_awg_interface method)": [[98, "ETH_awg_interface.acquire_dataset_from_matlab", false]], "acquire_scan() (autodeer.hardware.dummy_xepr.dummy_api method)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan", false]], "acquire_scan() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan", false]], "acquire_scan() (dummy_api method)": [[105, "dummy_api.acquire_scan", false]], "acquire_scan() (xeprapilink method)": [[101, "XeprAPILink.acquire_scan", false]], "acquire_scan_2d() (autodeer.hardware.dummy_xepr.dummy_api method)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan_2d", false]], "acquire_scan_2d() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan_2d", false]], "acquire_scan_2d() (dummy_api method)": [[105, "dummy_api.acquire_scan_2d", false]], "acquire_scan_2d() (xeprapilink method)": [[101, "XeprAPILink.acquire_scan_2d", false]], "acquire_scan_at() (autodeer.hardware.dummy_xepr.dummy_api method)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan_at", false]], "acquire_scan_at() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan_at", false]], "acquire_scan_at() (dummy_api method)": [[105, "dummy_api.acquire_scan_at", false]], "acquire_scan_at() (xeprapilink method)": [[101, "XeprAPILink.acquire_scan_at", false]], "add_axis() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter.add_axis", false]], "add_axis() (autodeer.parameter method)": [[119, "autodeer.Parameter.add_axis", false], [119, "id195", false], [119, "id24", false], [119, "id91", false]], "add_axis() (parameter method)": [[33, "Parameter.add_axis", false], [57, "Parameter.add_axis", false]], "add_code_block() (autodeer.reporter method)": [[119, "autodeer.Reporter.add_code_block", false]], "add_code_block() (autodeer.reporter.reporter method)": [[132, "autodeer.reporter.Reporter.add_code_block", false]], "add_code_block() (reporter method)": [[42, "Reporter.add_code_block", false], [130, "Reporter.add_code_block", false]], "add_eseem_avg() (autodeer.deersequence method)": [[119, "autodeer.DEERSequence.add_ESEEM_avg", false], [119, "id262", false]], "add_eseem_avg() (autodeer.sequences.deersequence method)": [[143, "autodeer.sequences.DEERSequence.add_ESEEM_avg", false]], "add_eseem_avg() (deersequence method)": [[15, "DEERSequence.add_ESEEM_avg", false], [134, "DEERSequence.add_ESEEM_avg", false]], "add_figure() (autodeer.reporter method)": [[119, "autodeer.Reporter.add_figure", false]], "add_figure() (autodeer.reporter.reporter method)": [[132, "autodeer.reporter.Reporter.add_figure", false]], "add_figure() (reporter method)": [[42, "Reporter.add_figure", false], [130, "Reporter.add_figure", false]], "add_new_entry() (autodeer.gui.log.logdialog method)": [[76, "autodeer.gui.log.LogDialog.add_new_entry", false]], "add_new_entry() (logdialog method)": [[75, "LogDialog.add_new_entry", false]], "add_new_section() (autodeer.reporter method)": [[119, "autodeer.Reporter.add_new_section", false]], "add_new_section() (autodeer.reporter.reporter method)": [[132, "autodeer.reporter.Reporter.add_new_section", false]], "add_new_section() (reporter method)": [[42, "Reporter.add_new_section", false], [130, "Reporter.add_new_section", false]], "add_noise() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy.add_noise", false]], "add_page_break() (autodeer.reporter method)": [[119, "autodeer.Reporter.add_page_break", false]], "add_page_break() (autodeer.reporter.reporter method)": [[132, "autodeer.reporter.Reporter.add_page_break", false]], "add_page_break() (reporter method)": [[42, "Reporter.add_page_break", false], [130, "Reporter.add_page_break", false]], "add_phaseshift() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy.add_phaseshift", false]], "add_space() (autodeer.reporter method)": [[119, "autodeer.Reporter.add_space", false]], "add_space() (autodeer.reporter.reporter method)": [[132, "autodeer.reporter.Reporter.add_space", false]], "add_space() (reporter method)": [[42, "Reporter.add_space", false], [130, "Reporter.add_space", false]], "add_table() (autodeer.reporter method)": [[119, "autodeer.Reporter.add_table", false]], "add_table() (autodeer.reporter.reporter method)": [[132, "autodeer.reporter.Reporter.add_table", false]], "add_table() (reporter method)": [[42, "Reporter.add_table", false], [130, "Reporter.add_table", false]], "add_text() (autodeer.reporter method)": [[119, "autodeer.Reporter.add_text", false]], "add_text() (autodeer.reporter.reporter method)": [[132, "autodeer.reporter.Reporter.add_text", false]], "add_text() (reporter method)": [[42, "Reporter.add_text", false], [130, "Reporter.add_text", false]], "add_title() (autodeer.reporter method)": [[119, "autodeer.Reporter.add_title", false]], "add_title() (autodeer.reporter.reporter method)": [[132, "autodeer.reporter.Reporter.add_title", false]], "add_title() (reporter method)": [[42, "Reporter.add_title", false], [130, "Reporter.add_title", false]], "addpulse() (autodeer.sequence method)": [[119, "autodeer.Sequence.addPulse", false], [119, "id235", false], [119, "id56", false]], "addpulse() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence.addPulse", false]], "addpulse() (sequence method)": [[49, "Sequence.addPulse", false], [140, "Sequence.addPulse", false]], "advanced_mode_inputs() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.advanced_mode_inputs", false]], "advanced_mode_inputs() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.advanced_mode_inputs", false]], "advanced_mode_inputs() (autodeerui method)": [[70, "autoDEERUI.advanced_mode_inputs", false], [79, "autoDEERUI.advanced_mode_inputs", false]], "amp_factor (autodeer.frequencysweptpulse property)": [[119, "autodeer.FrequencySweptPulse.amp_factor", false]], "amp_factor (autodeer.pulse property)": [[119, "autodeer.Pulse.amp_factor", false], [119, "id113", false], [119, "id151", false]], "amp_factor (autodeer.pulses.frequencysweptpulse property)": [[129, "autodeer.pulses.FrequencySweptPulse.amp_factor", false]], "amp_factor (autodeer.pulses.pulse property)": [[129, "autodeer.pulses.Pulse.amp_factor", false]], "amp_factor (frequencysweptpulse property)": [[25, "FrequencySweptPulse.amp_factor", false], [123, "FrequencySweptPulse.amp_factor", false]], "amp_factor (pulse property)": [[34, "Pulse.amp_factor", false], [126, "Pulse.amp_factor", false]], "api (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.api", false]], "api (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.api", false]], "api (autodeer.hardware.xepr_experiments.deer attribute)": [[118, "autodeer.hardware.xepr_experiments.DEER.api", false]], "api (autodeer.hardware.xepr_experiments.eldortune attribute)": [[118, "autodeer.hardware.xepr_experiments.ELDORtune.api", false]], "api (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[118, "autodeer.hardware.xepr_experiments.MPFUtune.api", false]], "api (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[118, "autodeer.hardware.xepr_experiments.PulseProfile.api", false]], "api (brukerawg attribute)": [[90, "BrukerAWG.api", false]], "api (brukermpfu attribute)": [[92, "BrukerMPFU.api", false]], "api (deer attribute)": [[114, "DEER.api", false]], "api (eldortune attribute)": [[115, "ELDORtune.api", false]], "api (mpfutune attribute)": [[116, "MPFUtune.api", false]], "api (pulseprofile attribute)": [[117, "PulseProfile.api", false]], "app (in module autodeer.gui.__main__)": [[69, "autodeer.gui.__main__.app", false]], "app (in module autodeer.gui.main)": [[80, "autodeer.gui.main.app", false]], "app (in module autodeer.gui.quickdeer)": [[85, "autodeer.gui.quickdeer.app", false]], "aqexprun() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.aqExpRun", false]], "aqexprun() (dummy_cur_exp method)": [[106, "dummy_cur_exp.aqExpRun", false]], "aqexpselect() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqExpSelect", false]], "aqexpselect() (dummy_xepr.xeprcmds method)": [[110, "dummy_xepr.XeprCmds.aqExpSelect", false]], "aqexpselect() (xeprcmds method)": [[111, "XeprCmds.aqExpSelect", false]], "aqgetparmaxvalue (autodeer.hardware.dummy_xepr.dummy_param attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_param.aqGetParMaxValue", false]], "aqgetparmaxvalue (dummy_param attribute)": [[109, "dummy_param.aqGetParMaxValue", false]], "aqgetparminvalue (autodeer.hardware.dummy_xepr.dummy_param attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_param.aqGetParMinValue", false]], "aqgetparminvalue (dummy_param attribute)": [[109, "dummy_param.aqGetParMinValue", false]], "aqpgcompile() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgCompile", false]], "aqpgcompile() (dummy_xepr.xeprcmds method)": [[110, "dummy_xepr.XeprCmds.aqPgCompile", false]], "aqpgcompile() (xeprcmds method)": [[111, "XeprCmds.aqPgCompile", false]], "aqpgdefload() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgDefLoad", false]], "aqpgdefload() (dummy_xepr.xeprcmds method)": [[110, "dummy_xepr.XeprCmds.aqPgDefLoad", false]], "aqpgdefload() (xeprcmds method)": [[111, "XeprCmds.aqPgDefLoad", false]], "aqpgdefsaveas() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgDefSaveAs", false]], "aqpgdefsaveas() (dummy_xepr.xeprcmds method)": [[110, "dummy_xepr.XeprCmds.aqPgDefSaveAs", false]], "aqpgdefsaveas() (xeprcmds method)": [[111, "XeprCmds.aqPgDefSaveAs", false]], "aqpgload() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgLoad", false]], "aqpgload() (dummy_xepr.xeprcmds method)": [[110, "dummy_xepr.XeprCmds.aqPgLoad", false]], "aqpgload() (xeprcmds method)": [[111, "XeprCmds.aqPgLoad", false]], "aqpgsaveas() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgSaveAs", false]], "aqpgsaveas() (dummy_xepr.xeprcmds method)": [[110, "dummy_xepr.XeprCmds.aqPgSaveAs", false]], "aqpgsaveas() (xeprcmds method)": [[111, "XeprCmds.aqPgSaveAs", false]], "aqpgshowprg() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgShowPrg", false]], "aqpgshowprg() (dummy_xepr.xeprcmds method)": [[110, "dummy_xepr.XeprCmds.aqPgShowPrg", false]], "aqpgshowprg() (xeprcmds method)": [[111, "XeprCmds.aqPgShowPrg", false]], "args (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.args", false]], "args (autodeer.gui.main.worker attribute)": [[80, "autodeer.gui.main.Worker.args", false]], "args (autodeer.gui.tools.worker attribute)": [[89, "autodeer.gui.tools.Worker.args", false]], "args (autodeer.gui.worker attribute)": [[74, "autodeer.gui.Worker.args", false]], "args (autodeerworker attribute)": [[72, "autoDEERWorker.args", false]], "args (worker attribute)": [[67, "Worker.args", false], [77, "Worker.args", false], [87, "Worker.args", false]], "autodeer": [[119, "module-autodeer", false]], "autodeer._version": [[55, "module-autodeer._version", false]], "autodeer.classes": [[58, "module-autodeer.classes", false]], "autodeer.colors": [[59, "module-autodeer.colors", false]], "autodeer.criteria": [[64, "module-autodeer.criteria", false]], "autodeer.dataset": [[66, "module-autodeer.dataset", false]], "autodeer.deer_analysis": [[16, "module-autodeer.DEER_analysis", false]], "autodeer.fieldsweep": [[22, "module-autodeer.FieldSweep", false]], "autodeer.gui": [[74, "module-autodeer.gui", false]], "autodeer.gui.__main__": [[69, "module-autodeer.gui.__main__", false]], "autodeer.gui.autodeer_worker": [[73, "module-autodeer.gui.autoDEER_worker", false]], "autodeer.gui.log": [[76, "module-autodeer.gui.log", false]], "autodeer.gui.main": [[80, "module-autodeer.gui.main", false]], "autodeer.gui.modetune": [[83, "module-autodeer.gui.modetune", false]], "autodeer.gui.quickdeer": [[85, "module-autodeer.gui.quickdeer", false]], "autodeer.gui.test_main": [[86, "module-autodeer.gui.test_main", false]], "autodeer.gui.tools": [[89, "module-autodeer.gui.tools", false]], "autodeer.hardware": [[113, "module-autodeer.hardware", false]], "autodeer.hardware.bruker_awg": [[91, "module-autodeer.hardware.Bruker_AWG", false]], "autodeer.hardware.bruker_mpfu": [[93, "module-autodeer.hardware.Bruker_MPFU", false]], "autodeer.hardware.bruker_tools": [[97, "module-autodeer.hardware.Bruker_tools", false]], "autodeer.hardware.dummy": [[104, "module-autodeer.hardware.dummy", false]], "autodeer.hardware.dummy_xepr": [[112, "module-autodeer.hardware.dummy_xepr", false]], "autodeer.hardware.eth_awg": [[99, "module-autodeer.hardware.ETH_awg", false]], "autodeer.hardware.eth_awg_load": [[100, "module-autodeer.hardware.ETH_awg_load", false]], "autodeer.hardware.xepr_experiments": [[118, "module-autodeer.hardware.xepr_experiments", false]], "autodeer.hardware.xeprapi_link": [[102, "module-autodeer.hardware.XeprAPI_link", false]], "autodeer.logging": [[32, "module-autodeer.Logging", false]], "autodeer.pulses": [[129, "module-autodeer.pulses", false]], "autodeer.relaxation": [[41, "module-autodeer.Relaxation", false]], "autodeer.reporter": [[132, "module-autodeer.reporter", false]], "autodeer.respro": [[46, "module-autodeer.ResPro", false]], "autodeer.sequences": [[143, "module-autodeer.sequences", false]], "autodeer.tools": [[144, "module-autodeer.tools", false]], "autodeer.twod_experiment": [[54, "module-autodeer.TwoD_Experiment", false]], "autodeer.utils": [[145, "module-autodeer.utils", false]], "autodeersignals (built-in class)": [[71, "autoDEERSignals", false]], "autodeersignals (class in autodeer.gui.autodeer_worker)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals", false]], "autodeerui (built-in class)": [[70, "autoDEERUI", false], [79, "autoDEERUI", false]], "autodeerui (class in autodeer.gui)": [[74, "autodeer.gui.autoDEERUI", false]], "autodeerui (class in autodeer.gui.main)": [[80, "autodeer.gui.main.autoDEERUI", false]], "autodeerworker (built-in class)": [[72, "autoDEERWorker", false]], "autodeerworker (class in autodeer.gui.autodeer_worker)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker", false]], "autoeprdecoder() (in module autodeer)": [[119, "autodeer.autoEPRDecoder", false], [119, "id110", false], [119, "id148", false], [119, "id42", false]], "autoeprdecoder() (in module autodeer.utils)": [[145, "autodeer.utils.autoEPRDecoder", false]], "averages (autodeer.sequence attribute)": [[119, "autodeer.Sequence.averages", false], [119, "id229", false], [119, "id50", false]], "averages (autodeer.sequences.sequence attribute)": [[143, "autodeer.sequences.Sequence.averages", false]], "averages (sequence attribute)": [[49, "Sequence.averages", false], [140, "Sequence.averages", false]], "awg (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.AWG", false]], "awg (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.AWG", false]], "awg (autodeer.hardware.xepr_experiments.deer attribute)": [[118, "autodeer.hardware.xepr_experiments.DEER.awg", false]], "awg (autodeerworker attribute)": [[72, "autoDEERWorker.AWG", false]], "awg (deer attribute)": [[114, "DEER.awg", false]], "awg (pulsespel attribute)": [[96, "PulseSpel.AWG", false]], "awg_freq (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.awg_freq", false]], "awg_freq (eth_awg_interface attribute)": [[98, "ETH_awg_interface.awg_freq", false]], "ax_id (autodeer.classes.parameter attribute)": [[58, "autodeer.classes.Parameter.ax_id", false]], "ax_id (autodeer.parameter attribute)": [[119, "autodeer.Parameter.ax_id", false], [119, "id194", false], [119, "id23", false], [119, "id90", false]], "ax_id (parameter attribute)": [[33, "Parameter.ax_id", false], [57, "Parameter.ax_id", false]], "axes_uuid (autodeer.sequence attribute)": [[119, "autodeer.Sequence.axes_uuid", false], [119, "id226", false], [119, "id47", false]], "axes_uuid (autodeer.sequences.sequence attribute)": [[143, "autodeer.sequences.Sequence.axes_uuid", false]], "axes_uuid (sequence attribute)": [[49, "Sequence.axes_uuid", false], [140, "Sequence.axes_uuid", false]], "axis (autodeer.classes.parameter attribute)": [[58, "autodeer.classes.Parameter.axis", false]], "axis (autodeer.parameter attribute)": [[119, "autodeer.Parameter.axis", false], [119, "id193", false], [119, "id22", false], [119, "id89", false]], "axis (autodeer.refocusedecho2danalysis attribute)": [[119, "autodeer.RefocusedEcho2DAnalysis.axis", false]], "axis (autodeer.relaxation.refocusedecho2danalysis attribute)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.axis", false]], "axis (autodeer.relaxation.reptimeanalysis attribute)": [[41, "autodeer.Relaxation.ReptimeAnalysis.axis", false]], "axis (autodeer.reptimeanalysis attribute)": [[119, "autodeer.ReptimeAnalysis.axis", false]], "axis (parameter attribute)": [[33, "Parameter.axis", false], [57, "Parameter.axis", false]], "axis (refocusedecho2danalysis attribute)": [[36, "RefocusedEcho2DAnalysis.axis", false], [39, "RefocusedEcho2DAnalysis.axis", false]], "axis (reptimeanalysis attribute)": [[40, "ReptimeAnalysis.axis", false], [43, "ReptimeAnalysis.axis", false]], "b (autodeer.fieldsweepsequence attribute)": [[119, "autodeer.FieldSweepSequence.B", false]], "b (autodeer.sequences.fieldsweepsequence attribute)": [[143, "autodeer.sequences.FieldSweepSequence.B", false]], "b (fieldsweepsequence attribute)": [[24, "FieldSweepSequence.B", false], [135, "FieldSweepSequence.B", false]], "background_func() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.background_func", false]], "bandwidth (autodeer.pulse property)": [[119, "autodeer.Pulse.bandwidth", false], [119, "id112", false], [119, "id150", false]], "bandwidth (autodeer.pulses.pulse property)": [[129, "autodeer.pulses.Pulse.bandwidth", false]], "bandwidth (pulse property)": [[34, "Pulse.bandwidth", false], [126, "Pulse.bandwidth", false]], "beta (autodeer.hspulse attribute)": [[119, "autodeer.HSPulse.beta", false]], "beta (autodeer.pulses.hspulse attribute)": [[129, "autodeer.pulses.HSPulse.beta", false]], "beta (hspulse attribute)": [[27, "HSPulse.beta", false], [125, "HSPulse.beta", false]], "bg_data (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.bg_data", false]], "bg_data (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.bg_data", false]], "bg_data (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.bg_data", false]], "bg_data (brukerawg attribute)": [[90, "BrukerAWG.bg_data", false]], "bg_data (brukermpfu attribute)": [[92, "BrukerMPFU.bg_data", false]], "bg_data (eth_awg_interface attribute)": [[98, "ETH_awg_interface.bg_data", false]], "bg_thread (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.bg_thread", false]], "bg_thread (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.bg_thread", false]], "bg_thread (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.bg_thread", false]], "bg_thread (brukerawg attribute)": [[90, "BrukerAWG.bg_thread", false]], "bg_thread (brukermpfu attribute)": [[92, "BrukerMPFU.bg_thread", false]], "bg_thread (eth_awg_interface attribute)": [[98, "ETH_awg_interface.bg_thread", false]], "bg_thread() (in module autodeer.hardware.eth_awg)": [[99, "autodeer.hardware.ETH_awg.bg_thread", false]], "bphasecycles (autodeer.hardware.bruker_tools.psphasecycle attribute)": [[97, "autodeer.hardware.Bruker_tools.PSPhaseCycle.BPhaseCycles", false]], "bphasecycles (psphasecycle attribute)": [[94, "PSPhaseCycle.BPhaseCycles", false]], "bridge (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.Bridge", false]], "bridge (dummyinterface attribute)": [[103, "dummyInterface.Bridge", false]], "bridge_config (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.bridge_config", false]], "bridge_config (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.bridge_config", false]], "bridge_config (brukerawg attribute)": [[90, "BrukerAWG.bridge_config", false]], "bridge_config (brukermpfu attribute)": [[92, "BrukerMPFU.bridge_config", false]], "bruker (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.Bruker", false]], "bruker (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.Bruker", false]], "bruker (autodeerui attribute)": [[70, "autoDEERUI.Bruker", false], [79, "autoDEERUI.Bruker", false]], "brukerawg (built-in class)": [[90, "BrukerAWG", false]], "brukerawg (class in autodeer.hardware.bruker_awg)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG", false]], "brukermpfu (built-in class)": [[92, "BrukerMPFU", false]], "brukermpfu (class in autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU", false]], "brxamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden.BrXAmp", false]], "brxamp (dummy_hidden attribute)": [[108, "dummy_hidden.BrXAmp", false]], "brxphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden.BrXPhase", false]], "brxphase (dummy_hidden attribute)": [[108, "dummy_hidden.BrXPhase", false]], "bryamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden.BrYAmp", false]], "bryamp (dummy_hidden attribute)": [[108, "dummy_hidden.BrYAmp", false]], "bryphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden.BrYPhase", false]], "bryphase (dummy_hidden attribute)": [[108, "dummy_hidden.BrYPhase", false]], "bspline_extra() (in module autodeer.respro)": [[46, "autodeer.ResPro.BSpline_extra", false]], "build__lowpass_butter_filter() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.build__lowpass_butter_filter", false]], "build_default_pulses() (in module autodeer)": [[119, "autodeer.build_default_pulses", false]], "build_default_pulses() (in module autodeer.pulses)": [[129, "autodeer.pulses.build_default_pulses", false]], "build_shape() (autodeer.pulse method)": [[119, "autodeer.Pulse.build_shape", false], [119, "id118", false], [119, "id156", false]], "build_shape() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse.build_shape", false]], "build_shape() (pulse method)": [[34, "Pulse.build_shape", false], [126, "Pulse.build_shape", false]], "build_spectrum() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.build_spectrum", false]], "build_table() (autodeer.pulse method)": [[119, "autodeer.Pulse.build_table", false], [119, "id119", false], [119, "id157", false]], "build_table() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse.build_table", false]], "build_table() (in module autodeer)": [[119, "autodeer.build_table", false], [119, "id107", false], [119, "id41", false]], "build_table() (in module autodeer.utils)": [[145, "autodeer.utils.build_table", false]], "build_table() (pulse method)": [[34, "Pulse.build_table", false], [126, "Pulse.build_table", false]], "build_unique_progtable() (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.build_unique_progtable", false]], "calc_correction_factor() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.calc_correction_factor", false]], "calc_d0() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.calc_d0", false]], "calc_d0() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.calc_d0", false]], "calc_d0() (autodeer.hardware.xepr_experiments.mpfutune method)": [[118, "autodeer.hardware.xepr_experiments.MPFUtune.calc_d0", false]], "calc_d0() (brukerawg method)": [[90, "BrukerAWG.calc_d0", false]], "calc_d0() (brukermpfu method)": [[92, "BrukerMPFU.calc_d0", false]], "calc_d0() (mpfutune method)": [[116, "MPFUtune.calc_d0", false]], "calc_d0_from_hahn_echo() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (brukerawg method)": [[90, "BrukerAWG.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (brukermpfu method)": [[92, "BrukerMPFU.calc_d0_from_Hahn_Echo", false]], "calc_deer_settings() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.calc_deer_settings", false]], "calc_gyro() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.calc_gyro", false]], "calc_gyro() (autodeer.fieldsweepanalysis method)": [[119, "autodeer.FieldSweepAnalysis.calc_gyro", false]], "calc_gyro() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.calc_gyro", false], [23, "FieldSweepAnalysis.calc_gyro", false]], "calc_identifiability() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.calc_identifiability", false]], "calc_noise_level() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.calc_noise_level", false]], "calc_noise_level() (autodeer.fieldsweepanalysis method)": [[119, "autodeer.FieldSweepAnalysis.calc_noise_level", false]], "calc_noise_level() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.calc_noise_level", false], [23, "FieldSweepAnalysis.calc_noise_level", false]], "calc_optimal_reptime() (autodeer.relaxation.reptimeanalysis method)": [[41, "autodeer.Relaxation.ReptimeAnalysis.calc_optimal_reptime", false]], "calc_optimal_reptime() (autodeer.reptimeanalysis method)": [[119, "autodeer.ReptimeAnalysis.calc_optimal_reptime", false]], "calc_optimal_reptime() (reptimeanalysis method)": [[40, "ReptimeAnalysis.calc_optimal_reptime", false], [43, "ReptimeAnalysis.calc_optimal_reptime", false]], "calc_overlap() (in module autodeer.respro)": [[46, "autodeer.ResPro.calc_overlap", false]], "calc_percieved_freq() (in module autodeer.hardware.eth_awg_load)": [[100, "autodeer.hardware.ETH_awg_load.calc_percieved_freq", false]], "calc_rel_positions() (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.calc_rel_positions", false]], "calculate_noise_level() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_noise_level", false]], "calculate_noise_level() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.calculate_noise_level", false]], "calculate_optimal() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_optimal", false]], "calculate_optimal() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.calculate_optimal", false]], "calculate_snr_threshold() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_snr_threshold", false]], "calculate_snr_threshold() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.calculate_snr_threshold", false]], "calibratefreq() (in module autodeer.hardware.xepr_experiments)": [[118, "autodeer.hardware.xepr_experiments.CalibrateFreq", false]], "carrpurcellanalysis (built-in class)": [[12, "CarrPurcellAnalysis", false], [38, "CarrPurcellAnalysis", false]], "carrpurcellanalysis (class in autodeer)": [[119, "autodeer.CarrPurcellAnalysis", false]], "carrpurcellanalysis (class in autodeer.relaxation)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis", false]], "carrpurcellsequence (built-in class)": [[13, "CarrPurcellSequence", false], [133, "CarrPurcellSequence", false]], "carrpurcellsequence (class in autodeer)": [[119, "autodeer.CarrPurcellSequence", false]], "carrpurcellsequence (class in autodeer.sequences)": [[143, "autodeer.sequences.CarrPurcellSequence", false]], "ceil() (in module autodeer.respro)": [[46, "autodeer.ResPro.ceil", false]], "centerfield (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.CenterField", false]], "centerfield (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.CenterField", false]], "change_dimensions() (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.change_dimensions", false]], "change_lo() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.change_LO", false]], "change_lo() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.change_LO", false]], "change_lo() (autodeerui method)": [[70, "autoDEERUI.change_LO", false], [79, "autoDEERUI.change_LO", false]], "change_log_level() (in module autodeer.logging)": [[32, "autodeer.Logging.change_log_level", false]], "check_cp() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.check_CP", false]], "check_cp() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.check_CP", false]], "check_cp() (autodeerui method)": [[70, "autoDEERUI.check_CP", false], [79, "autoDEERUI.check_CP", false]], "check_decay() (autodeer.carrpurcellanalysis method)": [[119, "autodeer.CarrPurcellAnalysis.check_decay", false]], "check_decay() (autodeer.relaxation.carrpurcellanalysis method)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.check_decay", false]], "check_decay() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.check_decay", false], [38, "CarrPurcellAnalysis.check_decay", false]], "check_t2() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.check_T2", false]], "check_t2() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.check_T2", false]], "check_t2() (autodeerui method)": [[70, "autoDEERUI.check_T2", false], [79, "autoDEERUI.check_T2", false]], "check_variable() (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.check_variable", false]], "checkpulsespel() (autodeer.hardware.bruker_tools.psparvar method)": [[97, "autodeer.hardware.Bruker_tools.PSparvar.checkPulseSpel", false]], "checkpulsespel() (psparvar method)": [[95, "PSparvar.checkPulseSpel", false]], "chirppulse (built-in class)": [[14, "ChirpPulse", false], [120, "ChirpPulse", false]], "chirppulse (class in autodeer)": [[119, "autodeer.ChirpPulse", false]], "chirppulse (class in autodeer.pulses)": [[129, "autodeer.pulses.ChirpPulse", false]], "clear_all() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.clear_all", false]], "clear_all() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.clear_all", false]], "clear_all() (autodeer.gui.quickdeer.deerplot method)": [[85, "autodeer.gui.quickdeer.DEERplot.clear_all", false]], "clear_all() (autodeerui method)": [[70, "autoDEERUI.clear_all", false], [79, "autoDEERUI.clear_all", false]], "clear_all() (deerplot method)": [[84, "DEERplot.clear_all", false]], "clear_log() (autodeer.gui.log.logdialog method)": [[76, "autodeer.gui.log.LogDialog.clear_log", false]], "clear_log() (logdialog method)": [[75, "LogDialog.clear_log", false]], "clearlayout() (autodeer.gui.quickdeer.deerplot method)": [[85, "autodeer.gui.quickdeer.DEERplot.clearLayout", false]], "clearlayout() (deerplot method)": [[84, "DEERplot.clearLayout", false]], "cmap (in module autodeer)": [[119, "autodeer.cmap", false]], "cmap (in module autodeer.relaxation)": [[41, "autodeer.Relaxation.cmap", false]], "combo_figure() (in module autodeer)": [[119, "autodeer.combo_figure", false]], "combo_figure() (in module autodeer.reporter)": [[132, "autodeer.reporter.combo_figure", false]], "compile_pulsespel_def() (autodeer.hardware.dummy_xepr.dummy_api method)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.compile_PulseSpel_def", false]], "compile_pulsespel_def() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.compile_PulseSpel_def", false]], "compile_pulsespel_def() (dummy_api method)": [[105, "dummy_api.compile_PulseSpel_def", false]], "compile_pulsespel_def() (xeprapilink method)": [[101, "XeprAPILink.compile_PulseSpel_def", false]], "compile_pulsespel_prg() (autodeer.hardware.dummy_xepr.dummy_api method)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (dummy_api method)": [[105, "dummy_api.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (xeprapilink method)": [[101, "XeprAPILink.compile_PulseSpel_prg", false]], "config (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.config", false]], "config (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.config", false]], "config (autodeerui attribute)": [[70, "autoDEERUI.config", false], [79, "autoDEERUI.config", false]], "connect() (autodeer.classes.interface method)": [[58, "autodeer.classes.Interface.connect", false]], "connect() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.connect", false]], "connect() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.connect", false]], "connect() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.connect", false]], "connect() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.connect", false]], "connect() (autodeer.interface method)": [[119, "autodeer.Interface.connect", false], [119, "id216", false]], "connect() (brukerawg method)": [[90, "BrukerAWG.connect", false]], "connect() (brukermpfu method)": [[92, "BrukerMPFU.connect", false]], "connect() (eth_awg_interface method)": [[98, "ETH_awg_interface.connect", false]], "connect() (interface method)": [[29, "Interface.connect", false], [56, "Interface.connect", false]], "connect() (xeprapilink method)": [[101, "XeprAPILink.connect", false]], "connect_spectrometer() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.connect_spectrometer", false]], "connect_spectrometer() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.connect_spectrometer", false]], "connect_spectrometer() (autodeerui method)": [[70, "autoDEERUI.connect_spectrometer", false], [79, "autoDEERUI.connect_spectrometer", false]], "connected (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.connected", false]], "connected (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.connected", false]], "connected (autodeerui attribute)": [[70, "autoDEERUI.connected", false], [79, "autoDEERUI.connected", false]], "convert() (autodeer.sequence method)": [[119, "autodeer.Sequence.convert", false], [119, "id242", false], [119, "id63", false]], "convert() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence.convert", false]], "convert() (sequence method)": [[49, "Sequence.convert", false], [140, "Sequence.convert", false]], "convert_progtable() (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.convert_progtable", false]], "copy() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter.copy", false]], "copy() (autodeer.parameter method)": [[119, "autodeer.Parameter.copy", false], [119, "id100", false], [119, "id204", false], [119, "id33", false]], "copy() (autodeer.pulse method)": [[119, "autodeer.Pulse.copy", false], [119, "id130", false], [119, "id168", false]], "copy() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse.copy", false]], "copy() (autodeer.sequence method)": [[119, "autodeer.Sequence.copy", false], [119, "id247", false], [119, "id68", false]], "copy() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence.copy", false]], "copy() (parameter method)": [[33, "Parameter.copy", false], [57, "Parameter.copy", false]], "copy() (pulse method)": [[34, "Pulse.copy", false], [126, "Pulse.copy", false]], "copy() (sequence method)": [[49, "Sequence.copy", false], [140, "Sequence.copy", false]], "core_logger (autodeer.gui.log.logdialog attribute)": [[76, "autodeer.gui.log.LogDialog.core_logger", false]], "core_logger (logdialog attribute)": [[75, "LogDialog.core_logger", false]], "cores (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.cores", false]], "cores (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.cores", false]], "cores (autodeer.gui.quickdeer.deerplot attribute)": [[85, "autodeer.gui.quickdeer.DEERplot.cores", false]], "cores (autodeerui attribute)": [[70, "autoDEERUI.cores", false], [79, "autoDEERUI.cores", false]], "cores (deerplot attribute)": [[84, "DEERplot.cores", false]], "correction_factor (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.correction_factor", false]], "correction_factor (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.correction_factor", false]], "correction_factor (autodeerui attribute)": [[70, "autoDEERUI.correction_factor", false], [79, "autoDEERUI.correction_factor", false]], "correctphase (autodeer.dataset.epraccessor property)": [[66, "autodeer.dataset.EPRAccessor.correctphase", false]], "correctphase (autodeer.epraccessor property)": [[119, "autodeer.EPRAccessor.correctphase", false]], "correctphase (epraccessor property)": [[19, "EPRAccessor.correctphase", false], [65, "EPRAccessor.correctphase", false]], "correctphasefull (autodeer.dataset.epraccessor property)": [[66, "autodeer.dataset.EPRAccessor.correctphasefull", false]], "correctphasefull (autodeer.epraccessor property)": [[119, "autodeer.EPRAccessor.correctphasefull", false]], "correctphasefull (epraccessor property)": [[19, "EPRAccessor.correctphasefull", false], [65, "EPRAccessor.correctphasefull", false]], "cp_run() (in module autodeer.hardware.xepr_experiments)": [[118, "autodeer.hardware.xepr_experiments.CP_run", false]], "create_bahrenberg_plots() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_bahrenberg_plots", false]], "create_bahrenberg_plots() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.create_bahrenberg_plots", false]], "create_dataset_from_axes() (in module autodeer)": [[119, "autodeer.create_dataset_from_axes", false]], "create_dataset_from_axes() (in module autodeer.dataset)": [[66, "autodeer.dataset.create_dataset_from_axes", false]], "create_dataset_from_bruker() (in module autodeer)": [[119, "autodeer.create_dataset_from_bruker", false]], "create_dataset_from_bruker() (in module autodeer.dataset)": [[66, "autodeer.dataset.create_dataset_from_bruker", false]], "create_dataset_from_sequence() (in module autodeer)": [[119, "autodeer.create_dataset_from_sequence", false]], "create_dataset_from_sequence() (in module autodeer.dataset)": [[66, "autodeer.dataset.create_dataset_from_sequence", false]], "create_fieldsweep_figure() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.create_fieldsweep_figure", false]], "create_fieldsweep_figure() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.create_fieldsweep_figure", false]], "create_fieldsweep_figure() (autodeerui method)": [[70, "autoDEERUI.create_fieldsweep_figure", false], [79, "autoDEERUI.create_fieldsweep_figure", false]], "create_figure() (autodeer.gui.modetune.modetune method)": [[83, "autodeer.gui.modetune.ModeTune.create_figure", false]], "create_figure() (autodeer.gui.quickdeer.deerplot method)": [[85, "autodeer.gui.quickdeer.DEERplot.create_figure", false]], "create_figure() (deerplot method)": [[84, "DEERplot.create_figure", false]], "create_figure() (modetune method)": [[81, "ModeTune.create_figure", false]], "create_nmodel() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.create_Nmodel", false]], "create_relax_figure() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.create_relax_figure", false]], "create_relax_figure() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.create_relax_figure", false]], "create_relax_figure() (autodeerui method)": [[70, "autoDEERUI.create_relax_figure", false], [79, "autoDEERUI.create_relax_figure", false]], "create_report() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.create_report", false]], "create_report() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.create_report", false]], "create_report() (autodeerui method)": [[70, "autoDEERUI.create_report", false], [79, "autoDEERUI.create_report", false]], "create_report() (in module autodeer.reporter)": [[132, "autodeer.reporter.create_report", false]], "create_respro_figure() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.create_respro_figure", false]], "create_respro_figure() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.create_respro_figure", false]], "create_respro_figure() (autodeerui method)": [[70, "autoDEERUI.create_respro_figure", false], [79, "autoDEERUI.create_respro_figure", false]], "create_save_name() (in module autodeer.gui)": [[74, "autodeer.gui.create_save_name", false]], "create_save_name() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.create_save_name", false]], "create_slice_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_slice_plot", false]], "create_slice_plot() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.create_slice_plot", false]], "create_twod_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_twoD_plot", false]], "create_twod_plot() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.create_twoD_plot", false]], "criteria (built-in class)": [[60, "Criteria", false]], "criteria (class in autodeer.criteria)": [[64, "autodeer.criteria.Criteria", false]], "cur_exp (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.cur_exp", false]], "cur_exp (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.cur_exp", false]], "cur_exp (autodeer.hardware.dummy_xepr.dummy_xepr attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.cur_exp", false]], "cur_exp (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.cur_exp", false]], "cur_exp (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.cur_exp", false]], "cur_exp (brukerawg attribute)": [[90, "BrukerAWG.cur_exp", false]], "cur_exp (brukermpfu attribute)": [[92, "BrukerMPFU.cur_exp", false]], "cur_exp (dummy_xepr attribute)": [[110, "dummy_xepr.cur_exp", false]], "cur_exp (eth_awg_interface attribute)": [[98, "ETH_awg_interface.cur_exp", false]], "cur_exp (xeprapilink attribute)": [[101, "XeprAPILink.cur_exp", false]], "current_data (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.current_data", false]], "current_data (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.current_data", false]], "current_data (autodeer.gui.quickdeer.deerplot attribute)": [[85, "autodeer.gui.quickdeer.DEERplot.current_data", false]], "current_data (autodeerui attribute)": [[70, "autoDEERUI.current_data", false], [79, "autoDEERUI.current_data", false]], "current_data (deerplot attribute)": [[84, "DEERplot.current_data", false]], "current_folder (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.current_folder", false]], "current_folder (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.current_folder", false]], "current_folder (autodeer.gui.quickdeer.deerplot attribute)": [[85, "autodeer.gui.quickdeer.DEERplot.current_folder", false]], "current_folder (autodeerui attribute)": [[70, "autoDEERUI.current_folder", false], [79, "autoDEERUI.current_folder", false]], "current_folder (deerplot attribute)": [[84, "DEERplot.current_folder", false]], "current_results (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.current_results", false]], "current_results (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.current_results", false]], "current_results (autodeer.gui.quickdeer.deerplot attribute)": [[85, "autodeer.gui.quickdeer.DEERplot.current_results", false]], "current_results (autodeerui attribute)": [[70, "autoDEERUI.current_results", false], [79, "autoDEERUI.current_results", false]], "current_results (deerplot attribute)": [[84, "DEERplot.current_results", false]], "d0 (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.d0", false]], "d0 (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.d0", false]], "d0 (autodeer.hardware.xepr_experiments.deer attribute)": [[118, "autodeer.hardware.xepr_experiments.DEER.d0", false]], "d0 (autodeer.hardware.xepr_experiments.eldortune attribute)": [[118, "autodeer.hardware.xepr_experiments.ELDORtune.d0", false]], "d0 (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[118, "autodeer.hardware.xepr_experiments.MPFUtune.d0", false]], "d0 (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[118, "autodeer.hardware.xepr_experiments.PulseProfile.d0", false]], "d0 (brukerawg attribute)": [[90, "BrukerAWG.d0", false]], "d0 (brukermpfu attribute)": [[92, "BrukerMPFU.d0", false]], "d0 (deer attribute)": [[114, "DEER.d0", false]], "d0 (eldortune attribute)": [[115, "ELDORtune.d0", false]], "d0 (mpfutune attribute)": [[116, "MPFUtune.d0", false]], "d0 (pulseprofile attribute)": [[117, "PulseProfile.d0", false]], "data (autodeer.carrpurcellanalysis attribute)": [[119, "autodeer.CarrPurcellAnalysis.data", false]], "data (autodeer.fieldsweep.fieldsweepanalysis attribute)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.data", false]], "data (autodeer.fieldsweepanalysis attribute)": [[119, "autodeer.FieldSweepAnalysis.data", false]], "data (autodeer.refocusedecho2danalysis attribute)": [[119, "autodeer.RefocusedEcho2DAnalysis.data", false]], "data (autodeer.relaxation.carrpurcellanalysis attribute)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.data", false]], "data (autodeer.relaxation.refocusedecho2danalysis attribute)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.data", false]], "data (carrpurcellanalysis attribute)": [[12, "CarrPurcellAnalysis.data", false], [38, "CarrPurcellAnalysis.data", false]], "data (fieldsweepanalysis attribute)": [[20, "FieldSweepAnalysis.data", false], [23, "FieldSweepAnalysis.data", false]], "data (refocusedecho2danalysis attribute)": [[36, "RefocusedEcho2DAnalysis.data", false], [39, "RefocusedEcho2DAnalysis.data", false]], "dataset (autodeer.carrpurcellanalysis attribute)": [[119, "autodeer.CarrPurcellAnalysis.dataset", false]], "dataset (autodeer.refocusedecho2danalysis attribute)": [[119, "autodeer.RefocusedEcho2DAnalysis.dataset", false]], "dataset (autodeer.relaxation.carrpurcellanalysis attribute)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.dataset", false]], "dataset (autodeer.relaxation.refocusedecho2danalysis attribute)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.dataset", false]], "dataset (autodeer.resonatorprofileanalysis attribute)": [[119, "autodeer.ResonatorProfileAnalysis.dataset", false]], "dataset (autodeer.respro.resonatorprofileanalysis attribute)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.dataset", false]], "dataset (carrpurcellanalysis attribute)": [[12, "CarrPurcellAnalysis.dataset", false], [38, "CarrPurcellAnalysis.dataset", false]], "dataset (refocusedecho2danalysis attribute)": [[36, "RefocusedEcho2DAnalysis.dataset", false], [39, "RefocusedEcho2DAnalysis.dataset", false]], "dataset (resonatorprofileanalysis attribute)": [[45, "ResonatorProfileAnalysis.dataset", false], [47, "ResonatorProfileAnalysis.dataset", false]], "deadtime (autodeer.deersequence attribute)": [[119, "autodeer.DEERSequence.deadtime", false], [119, "id260", false]], "deadtime (autodeer.sequences.deersequence attribute)": [[143, "autodeer.sequences.DEERSequence.deadtime", false]], "deadtime (deersequence attribute)": [[15, "DEERSequence.deadtime", false], [134, "DEERSequence.deadtime", false]], "deer (built-in class)": [[114, "DEER", false]], "deer (class in autodeer.hardware.xepr_experiments)": [[118, "autodeer.hardware.xepr_experiments.DEER", false]], "deer5p_run() (in module autodeer.hardware.xepr_experiments)": [[118, "autodeer.hardware.xepr_experiments.DEER5p_run", false]], "deer_inputs (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.deer_inputs", false]], "deer_inputs (autodeerworker attribute)": [[72, "autoDEERWorker.deer_inputs", false]], "deer_settings (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.deer_settings", false]], "deer_settings (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.deer_settings", false]], "deer_settings (autodeerui attribute)": [[70, "autoDEERUI.deer_settings", false], [79, "autoDEERUI.deer_settings", false]], "deeranalysis() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.DEERanalysis", false]], "deeranalysis_plot() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.DEERanalysis_plot", false]], "deeranalysis_plot_pub() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.DEERanalysis_plot_pub", false]], "deeranalysis_process() (in module autodeer.gui.quickdeer)": [[85, "autodeer.gui.quickdeer.deeranalysis_process", false]], "deercriteria (built-in class)": [[61, "DEERCriteria", false]], "deercriteria (class in autodeer.criteria)": [[64, "autodeer.criteria.DEERCriteria", false]], "deerplot (built-in class)": [[84, "DEERplot", false]], "deerplot (class in autodeer.gui.quickdeer)": [[85, "autodeer.gui.quickdeer.DEERplot", false]], "deersequence (built-in class)": [[15, "DEERSequence", false], [134, "DEERSequence", false]], "deersequence (class in autodeer)": [[119, "autodeer.DEERSequence", false], [119, "id254", false]], "deersequence (class in autodeer.sequences)": [[143, "autodeer.sequences.DEERSequence", false]], "def_file_str (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.def_file_str", false]], "def_file_str (pulsespel attribute)": [[96, "PulseSpel.def_file_str", false]], "delay (built-in class)": [[17, "Delay", false], [121, "Delay", false]], "delay (class in autodeer)": [[119, "autodeer.Delay", false], [119, "id141", false]], "delay (class in autodeer.pulses)": [[129, "autodeer.pulses.Delay", false]], "description (autodeer.classes.parameter attribute)": [[58, "autodeer.classes.Parameter.description", false]], "description (autodeer.criteria.criteria attribute)": [[64, "autodeer.criteria.Criteria.description", false]], "description (autodeer.criteria.deercriteria attribute)": [[64, "autodeer.criteria.DEERCriteria.description", false]], "description (autodeer.parameter attribute)": [[119, "autodeer.Parameter.description", false], [119, "id191", false], [119, "id20", false], [119, "id87", false]], "description (criteria attribute)": [[60, "Criteria.description", false]], "description (deercriteria attribute)": [[61, "DEERCriteria.description", false]], "description (parameter attribute)": [[33, "Parameter.description", false], [57, "Parameter.description", false]], "det_frq (autodeer.hardware.xepr_experiments.deer attribute)": [[118, "autodeer.hardware.xepr_experiments.DEER.det_frq", false]], "det_frq (deer attribute)": [[114, "DEER.det_frq", false]], "detect_dicts (autodeer.hardware.bruker_tools.psphasecycle attribute)": [[97, "autodeer.hardware.Bruker_tools.PSPhaseCycle.detect_dicts", false]], "detect_dicts (psphasecycle attribute)": [[94, "PSPhaseCycle.detect_dicts", false]], "detect_eseem() (in module autodeer)": [[119, "autodeer.detect_ESEEM", false]], "detect_eseem() (in module autodeer.relaxation)": [[41, "autodeer.Relaxation.detect_ESEEM", false]], "detection (built-in class)": [[18, "Detection", false], [122, "Detection", false]], "detection (class in autodeer)": [[119, "autodeer.Detection", false], [119, "id137", false], [119, "id175", false]], "detection (class in autodeer.pulses)": [[129, "autodeer.pulses.Detection", false]], "determine_twt_split() (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.determine_TWT_split", false]], "dictformater (built-in class)": [[30, "DictFormater", false]], "dictformater (class in autodeer.logging)": [[32, "autodeer.Logging.DictFormater", false]], "dig_rate (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.dig_rate", false]], "dig_rate (eth_awg_interface attribute)": [[98, "ETH_awg_interface.dig_rate", false]], "digitally_upconvert() (in module autodeer.hardware.eth_awg_load)": [[100, "autodeer.hardware.ETH_awg_load.digitally_upconvert", false]], "dim (autodeer.carrpurcellsequence attribute)": [[119, "autodeer.CarrPurcellSequence.dim", false]], "dim (autodeer.classes.parameter property)": [[58, "autodeer.classes.Parameter.dim", false]], "dim (autodeer.parameter property)": [[119, "autodeer.Parameter.dim", false], [119, "id17", false], [119, "id188", false], [119, "id84", false]], "dim (autodeer.reptimescan attribute)": [[119, "autodeer.ReptimeScan.dim", false]], "dim (autodeer.sequences.carrpurcellsequence attribute)": [[143, "autodeer.sequences.CarrPurcellSequence.dim", false]], "dim (autodeer.sequences.reptimescan attribute)": [[143, "autodeer.sequences.ReptimeScan.dim", false]], "dim (carrpurcellsequence attribute)": [[13, "CarrPurcellSequence.dim", false], [133, "CarrPurcellSequence.dim", false]], "dim (parameter property)": [[33, "Parameter.dim", false], [57, "Parameter.dim", false]], "dim (reptimescan attribute)": [[44, "ReptimeScan.dim", false], [138, "ReptimeScan.dim", false]], "dims (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.dims", false]], "dims (pulsespel attribute)": [[96, "PulseSpel.dims", false]], "discussion_url (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.discussion_url", false]], "discussion_url (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.discussion_url", false]], "discussion_url (autodeerui attribute)": [[70, "autoDEERUI.discussion_url", false], [79, "autoDEERUI.discussion_url", false]], "dl_params (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.DL_params", false]], "dl_params (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.DL_params", false]], "dl_params (autodeer.gui.quickdeer.deerplot attribute)": [[85, "autodeer.gui.quickdeer.DEERplot.DL_params", false]], "dl_params (autodeerui attribute)": [[70, "autoDEERUI.DL_params", false], [79, "autoDEERUI.DL_params", false]], "dl_params (deerplot attribute)": [[84, "DEERplot.DL_params", false]], "docs_url (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.docs_url", false]], "docs_url (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.docs_url", false]], "docs_url (autodeerui attribute)": [[70, "autoDEERUI.docs_url", false], [79, "autoDEERUI.docs_url", false]], "draw() (autodeer.reporter.svgflowable method)": [[132, "autodeer.reporter.SvgFlowable.draw", false]], "draw() (svgflowable method)": [[131, "SvgFlowable.draw", false]], "drawing (autodeer.reporter.svgflowable attribute)": [[132, "autodeer.reporter.SvgFlowable.drawing", false]], "drawing (svgflowable attribute)": [[131, "SvgFlowable.drawing", false]], "dt (autodeer.deersequence attribute)": [[119, "autodeer.DEERSequence.dt", false], [119, "id259", false]], "dt (autodeer.refocusedecho2dsequence attribute)": [[119, "autodeer.RefocusedEcho2DSequence.dt", false]], "dt (autodeer.sequences.deersequence attribute)": [[143, "autodeer.sequences.DEERSequence.dt", false]], "dt (autodeer.sequences.refocusedecho2dsequence attribute)": [[143, "autodeer.sequences.RefocusedEcho2DSequence.dt", false]], "dt (deersequence attribute)": [[15, "DEERSequence.dt", false], [134, "DEERSequence.dt", false]], "dt (refocusedecho2dsequence attribute)": [[37, "RefocusedEcho2DSequence.dt", false], [137, "RefocusedEcho2DSequence.dt", false]], "dummy (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.Dummy", false]], "dummy (dummyinterface attribute)": [[103, "dummyInterface.Dummy", false]], "dummy_api (built-in class)": [[105, "dummy_api", false]], "dummy_api (class in autodeer.hardware.dummy_xepr)": [[112, "autodeer.hardware.dummy_xepr.dummy_api", false]], "dummy_cur_exp (built-in class)": [[106, "dummy_cur_exp", false]], "dummy_cur_exp (class in autodeer.hardware.dummy_xepr)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp", false]], "dummy_dataset (built-in class)": [[107, "dummy_dataset", false]], "dummy_dataset (class in autodeer.hardware.dummy_xepr)": [[112, "autodeer.hardware.dummy_xepr.dummy_dataset", false]], "dummy_hidden (built-in class)": [[108, "dummy_hidden", false]], "dummy_hidden (class in autodeer.hardware.dummy_xepr)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden", false]], "dummy_param (built-in class)": [[109, "dummy_param", false]], "dummy_param (class in autodeer.hardware.dummy_xepr)": [[112, "autodeer.hardware.dummy_xepr.dummy_param", false]], "dummy_xepr (built-in class)": [[110, "dummy_xepr", false]], "dummy_xepr (class in autodeer.hardware.dummy_xepr)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr", false]], "dummy_xepr.xeprcmds (built-in class)": [[110, "dummy_xepr.XeprCmds", false]], "dummy_xepr.xeprcmds (class in autodeer.hardware.dummy_xepr)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds", false]], "dummyinterface (built-in class)": [[103, "dummyInterface", false]], "dummyinterface (class in autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy.dummyInterface", false]], "eldortune (built-in class)": [[115, "ELDORtune", false]], "eldortune (class in autodeer.hardware.xepr_experiments)": [[118, "autodeer.hardware.xepr_experiments.ELDORtune", false]], "eldortune() (in module autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU.ELDORtune", false]], "emit() (autodeer.logging.qtloghandler method)": [[32, "autodeer.Logging.QtLogHandler.emit", false]], "emit() (qtloghandler method)": [[31, "QtLogHandler.emit", false]], "end_signal (autodeer.criteria.criteria attribute)": [[64, "autodeer.criteria.Criteria.end_signal", false]], "end_signal (criteria attribute)": [[60, "Criteria.end_signal", false]], "endtimecriteria (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.EndTimeCriteria", false]], "endtimecriteria (autodeerworker attribute)": [[72, "autoDEERWorker.EndTimeCriteria", false]], "epraccessor (built-in class)": [[19, "EPRAccessor", false], [65, "EPRAccessor", false]], "epraccessor (class in autodeer)": [[119, "autodeer.EPRAccessor", false]], "epraccessor (class in autodeer.dataset)": [[66, "autodeer.dataset.EPRAccessor", false]], "eprload() (in module autodeer)": [[119, "autodeer.eprload", false]], "eprload() (in module autodeer.tools)": [[144, "autodeer.tools.eprload", false]], "erot() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.erot", false]], "error (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.error", false]], "error (autodeer.gui.main.workersignals attribute)": [[80, "autodeer.gui.main.WorkerSignals.error", false]], "error (autodeer.gui.tools.workersignals attribute)": [[89, "autodeer.gui.tools.WorkerSignals.error", false]], "error (autodeer.gui.workersignals attribute)": [[74, "autodeer.gui.WorkerSignals.error", false]], "error (autodeersignals attribute)": [[71, "autoDEERSignals.error", false]], "error (workersignals attribute)": [[68, "WorkerSignals.error", false], [78, "WorkerSignals.error", false], [88, "WorkerSignals.error", false]], "eseem (autodeer.deersequence attribute)": [[119, "autodeer.DEERSequence.ESEEM", false], [119, "id261", false]], "eseem (autodeer.sequences.deersequence attribute)": [[143, "autodeer.sequences.DEERSequence.ESEEM", false]], "eseem (deersequence attribute)": [[15, "DEERSequence.ESEEM", false], [134, "DEERSequence.ESEEM", false]], "estimated_snr() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.estimated_snr", false]], "estimated_snr() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.estimated_snr", false]], "eth_awg_interface (built-in class)": [[98, "ETH_awg_interface", false]], "eth_awg_interface (class in autodeer.hardware.eth_awg)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface", false]], "events (autodeer.hardware.bruker_tools.psparvar attribute)": [[97, "autodeer.hardware.Bruker_tools.PSparvar.events", false]], "events (psparvar attribute)": [[95, "PSparvar.events", false]], "evolution() (autodeer.sequence method)": [[119, "autodeer.Sequence.evolution", false], [119, "id238", false], [119, "id59", false]], "evolution() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence.evolution", false]], "evolution() (sequence method)": [[49, "Sequence.evolution", false], [140, "Sequence.evolution", false]], "exciteprofile() (autodeer.pulse method)": [[119, "autodeer.Pulse.exciteprofile", false], [119, "id125", false], [119, "id163", false]], "exciteprofile() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse.exciteprofile", false]], "exciteprofile() (pulse method)": [[34, "Pulse.exciteprofile", false], [126, "Pulse.exciteprofile", false]], "exp_file_str (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.exp_file_str", false]], "exp_file_str (pulsespel attribute)": [[96, "PulseSpel.exp_file_str", false]], "eyekron() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.eyekron", false]], "f_lims (autodeer.resonatorprofileanalysis attribute)": [[119, "autodeer.ResonatorProfileAnalysis.f_lims", false]], "f_lims (autodeer.respro.resonatorprofileanalysis attribute)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.f_lims", false]], "f_lims (resonatorprofileanalysis attribute)": [[45, "ResonatorProfileAnalysis.f_lims", false], [47, "ResonatorProfileAnalysis.f_lims", false]], "fc (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.fc", false]], "fc (dummyinterface attribute)": [[103, "dummyInterface.fc", false]], "fft (autodeer.dataset.epraccessor property)": [[66, "autodeer.dataset.EPRAccessor.fft", false]], "fft (autodeer.epraccessor property)": [[119, "autodeer.EPRAccessor.fft", false]], "fft (epraccessor property)": [[19, "EPRAccessor.fft", false], [65, "EPRAccessor.fft", false]], "fieldsweep_fit() (in module autodeer.gui.main)": [[80, "autodeer.gui.main.fieldsweep_fit", false]], "fieldsweepanalysis (built-in class)": [[20, "FieldSweepAnalysis", false], [23, "FieldSweepAnalysis", false]], "fieldsweepanalysis (class in autodeer)": [[119, "autodeer.FieldSweepAnalysis", false]], "fieldsweepanalysis (class in autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis", false]], "fieldsweepsequence (built-in class)": [[24, "FieldSweepSequence", false], [135, "FieldSweepSequence", false]], "fieldsweepsequence (class in autodeer)": [[119, "autodeer.FieldSweepSequence", false]], "fieldsweepsequence (class in autodeer.sequences)": [[143, "autodeer.sequences.FieldSweepSequence", false]], "fill_table() (in module autodeer.gui)": [[74, "autodeer.gui.fill_table", false]], "fill_table() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.fill_table", false]], "find_cur_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_cur_exp", false]], "find_cur_exp() (xeprapilink method)": [[101, "XeprAPILink.find_cur_exp", false]], "find_hidden() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_hidden", false]], "find_hidden() (xeprapilink method)": [[101, "XeprAPILink.find_hidden", false]], "find_longest_pulse() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.find_longest_pulse", false]], "find_max() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.find_max", false]], "find_max() (autodeer.fieldsweepanalysis method)": [[119, "autodeer.FieldSweepAnalysis.find_max", false]], "find_max() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.find_max", false], [23, "FieldSweepAnalysis.find_max", false]], "find_max_pulse_length() (in module autodeer.hardware.eth_awg_load)": [[100, "autodeer.hardware.ETH_awg_load.find_max_pulse_length", false]], "find_min() (autodeer.hardware.xepr_experiments.eldortune method)": [[118, "autodeer.hardware.xepr_experiments.ELDORtune.find_min", false]], "find_min() (eldortune method)": [[115, "ELDORtune.find_min", false]], "find_optimal() (autodeer.carrpurcellanalysis method)": [[119, "autodeer.CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (autodeer.refocusedecho2danalysis method)": [[119, "autodeer.RefocusedEcho2DAnalysis.find_optimal", false]], "find_optimal() (autodeer.relaxation.carrpurcellanalysis method)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (autodeer.relaxation.refocusedecho2danalysis method)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.find_optimal", false]], "find_optimal() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.find_optimal", false], [38, "CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (refocusedecho2danalysis method)": [[36, "RefocusedEcho2DAnalysis.find_optimal", false], [39, "RefocusedEcho2DAnalysis.find_optimal", false]], "find_xepr() (autodeer.hardware.dummy_xepr.dummy_api method)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.find_Xepr", false]], "find_xepr() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_Xepr", false]], "find_xepr() (dummy_api method)": [[105, "dummy_api.find_Xepr", false]], "find_xepr() (xeprapilink method)": [[101, "XeprAPILink.find_Xepr", false]], "finished (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.finished", false]], "finished (autodeer.gui.main.workersignals attribute)": [[80, "autodeer.gui.main.WorkerSignals.finished", false]], "finished (autodeer.gui.tools.workersignals attribute)": [[89, "autodeer.gui.tools.WorkerSignals.finished", false]], "finished (autodeer.gui.workersignals attribute)": [[74, "autodeer.gui.WorkerSignals.finished", false]], "finished (autodeersignals attribute)": [[71, "autoDEERSignals.finished", false]], "finished (workersignals attribute)": [[68, "WorkerSignals.finished", false], [78, "WorkerSignals.finished", false], [88, "WorkerSignals.finished", false]], "finished_signal (autodeer.gui.modetune.get_dataworker attribute)": [[83, "autodeer.gui.modetune.get_dataWorker.finished_signal", false]], "finished_signal (get_dataworker attribute)": [[82, "get_dataWorker.finished_signal", false]], "fit() (autodeer.carrpurcellanalysis method)": [[119, "autodeer.CarrPurcellAnalysis.fit", false]], "fit() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.fit", false]], "fit() (autodeer.fieldsweepanalysis method)": [[119, "autodeer.FieldSweepAnalysis.fit", false]], "fit() (autodeer.relaxation.carrpurcellanalysis method)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.fit", false]], "fit() (autodeer.relaxation.reptimeanalysis method)": [[41, "autodeer.Relaxation.ReptimeAnalysis.fit", false]], "fit() (autodeer.reptimeanalysis method)": [[119, "autodeer.ReptimeAnalysis.fit", false]], "fit() (autodeer.resonatorprofileanalysis method)": [[119, "autodeer.ResonatorProfileAnalysis.fit", false]], "fit() (autodeer.respro.resonatorprofileanalysis method)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.fit", false]], "fit() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.fit", false], [38, "CarrPurcellAnalysis.fit", false]], "fit() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.fit", false], [23, "FieldSweepAnalysis.fit", false]], "fit() (reptimeanalysis method)": [[40, "ReptimeAnalysis.fit", false], [43, "ReptimeAnalysis.fit", false]], "fit() (resonatorprofileanalysis method)": [[45, "ResonatorProfileAnalysis.fit", false], [47, "ResonatorProfileAnalysis.fit", false]], "five_pulse() (autodeer.deersequence method)": [[119, "autodeer.DEERSequence.five_pulse", false], [119, "id265", false]], "five_pulse() (autodeer.sequences.deersequence method)": [[143, "autodeer.sequences.DEERSequence.five_pulse", false]], "five_pulse() (deersequence method)": [[15, "DEERSequence.five_pulse", false], [134, "DEERSequence.five_pulse", false]], "floor() (in module autodeer.respro)": [[46, "autodeer.ResPro.floor", false]], "fn (autodeer.gui.main.worker attribute)": [[80, "autodeer.gui.main.Worker.fn", false]], "fn (autodeer.gui.tools.worker attribute)": [[89, "autodeer.gui.tools.Worker.fn", false]], "fn (autodeer.gui.worker attribute)": [[74, "autodeer.gui.Worker.fn", false]], "fn (worker attribute)": [[67, "Worker.fn", false], [77, "Worker.fn", false], [87, "Worker.fn", false]], "footer() (autodeer.reporter method)": [[119, "autodeer.Reporter.footer", false]], "footer() (autodeer.reporter.reporter method)": [[132, "autodeer.reporter.Reporter.footer", false]], "footer() (reporter method)": [[42, "Reporter.footer", false], [130, "Reporter.footer", false]], "format() (autodeer.logging.dictformater method)": [[32, "autodeer.Logging.DictFormater.format", false]], "format() (dictformater method)": [[30, "DictFormater.format", false]], "four_pulse() (autodeer.deersequence method)": [[119, "autodeer.DEERSequence.four_pulse", false], [119, "id264", false]], "four_pulse() (autodeer.sequences.deersequence method)": [[143, "autodeer.sequences.DEERSequence.four_pulse", false]], "four_pulse() (deersequence method)": [[15, "DEERSequence.four_pulse", false], [134, "DEERSequence.four_pulse", false]], "frame (autodeer.reporter attribute)": [[119, "autodeer.Reporter.frame", false]], "frame (autodeer.reporter.reporter attribute)": [[132, "autodeer.reporter.Reporter.frame", false]], "frame (reporter attribute)": [[42, "Reporter.frame", false], [130, "Reporter.frame", false]], "freq (autodeer.detection attribute)": [[119, "autodeer.Detection.freq", false], [119, "id139", false], [119, "id177", false]], "freq (autodeer.gaussianpulse attribute)": [[119, "autodeer.GaussianPulse.freq", false]], "freq (autodeer.pulses.detection attribute)": [[129, "autodeer.pulses.Detection.freq", false]], "freq (autodeer.pulses.gaussianpulse attribute)": [[129, "autodeer.pulses.GaussianPulse.freq", false]], "freq (autodeer.pulses.rectpulse attribute)": [[129, "autodeer.pulses.RectPulse.freq", false]], "freq (autodeer.pulses.sincpulse attribute)": [[129, "autodeer.pulses.SincPulse.freq", false]], "freq (autodeer.rectpulse attribute)": [[119, "autodeer.RectPulse.freq", false], [119, "id146", false]], "freq (autodeer.sincpulse attribute)": [[119, "autodeer.SincPulse.freq", false]], "freq (detection attribute)": [[18, "Detection.freq", false], [122, "Detection.freq", false]], "freq (gaussianpulse attribute)": [[26, "GaussianPulse.freq", false], [124, "GaussianPulse.freq", false]], "freq (rectpulse attribute)": [[35, "RectPulse.freq", false], [127, "RectPulse.freq", false]], "freq (sincpulse attribute)": [[50, "SincPulse.freq", false], [128, "SincPulse.freq", false]], "frequencymon (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.FrequencyMon", false]], "frequencymon (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.FrequencyMon", false]], "frequencysweptpulse (built-in class)": [[25, "FrequencySweptPulse", false], [123, "FrequencySweptPulse", false]], "frequencysweptpulse (class in autodeer)": [[119, "autodeer.FrequencySweptPulse", false]], "frequencysweptpulse (class in autodeer.pulses)": [[129, "autodeer.pulses.FrequencySweptPulse", false]], "fsweep_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.fsweep_result", false]], "fsweep_result (autodeersignals attribute)": [[71, "autoDEERSignals.fsweep_result", false]], "fsweep_toolbar() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.fsweep_toolbar", false]], "fsweep_toolbar() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.fsweep_toolbar", false]], "fsweep_toolbar() (autodeerui method)": [[70, "autoDEERUI.fsweep_toolbar", false], [79, "autoDEERUI.fsweep_toolbar", false]], "ftacqmodeslct (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.FTAcqModeSlct", false]], "ftacqmodeslct (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.FTAcqModeSlct", false]], "func() (autodeer.chirppulse method)": [[119, "autodeer.ChirpPulse.func", false]], "func() (autodeer.gaussianpulse method)": [[119, "autodeer.GaussianPulse.func", false]], "func() (autodeer.hspulse method)": [[119, "autodeer.HSPulse.func", false]], "func() (autodeer.pulses.chirppulse method)": [[129, "autodeer.pulses.ChirpPulse.func", false]], "func() (autodeer.pulses.gaussianpulse method)": [[129, "autodeer.pulses.GaussianPulse.func", false]], "func() (autodeer.pulses.hspulse method)": [[129, "autodeer.pulses.HSPulse.func", false]], "func() (autodeer.pulses.rectpulse method)": [[129, "autodeer.pulses.RectPulse.func", false]], "func() (autodeer.pulses.sincpulse method)": [[129, "autodeer.pulses.SincPulse.func", false]], "func() (autodeer.rectpulse method)": [[119, "autodeer.RectPulse.func", false], [119, "id147", false]], "func() (autodeer.sincpulse method)": [[119, "autodeer.SincPulse.func", false]], "func() (chirppulse method)": [[14, "ChirpPulse.func", false], [120, "ChirpPulse.func", false]], "func() (gaussianpulse method)": [[26, "GaussianPulse.func", false], [124, "GaussianPulse.func", false]], "func() (hspulse method)": [[27, "HSPulse.func", false], [125, "HSPulse.func", false]], "func() (rectpulse method)": [[35, "RectPulse.func", false], [127, "RectPulse.func", false]], "func() (sincpulse method)": [[50, "SincPulse.func", false], [128, "SincPulse.func", false]], "functional() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.functional", false]], "fwhm (autodeer.gaussianpulse attribute)": [[119, "autodeer.GaussianPulse.FWHM", false]], "fwhm (autodeer.pulses.gaussianpulse attribute)": [[129, "autodeer.pulses.GaussianPulse.FWHM", false]], "fwhm (gaussianpulse attribute)": [[26, "GaussianPulse.FWHM", false], [124, "GaussianPulse.FWHM", false]], "fwidth (autodeer.resonatorprofilesequence attribute)": [[119, "autodeer.ResonatorProfileSequence.fwidth", false]], "fwidth (autodeer.sequences.resonatorprofilesequence attribute)": [[143, "autodeer.sequences.ResonatorProfileSequence.fwidth", false]], "fwidth (resonatorprofilesequence attribute)": [[48, "ResonatorProfileSequence.fwidth", false], [139, "ResonatorProfileSequence.fwidth", false]], "g (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.g", false]], "g (spinsystem attribute)": [[21, "SpinSystem.g", false]], "gaussianpulse (built-in class)": [[26, "GaussianPulse", false], [124, "GaussianPulse", false]], "gaussianpulse (class in autodeer)": [[119, "autodeer.GaussianPulse", false]], "gaussianpulse (class in autodeer.pulses)": [[129, "autodeer.pulses.GaussianPulse", false]], "gcd() (in module autodeer)": [[119, "autodeer.gcd", false]], "gcd() (in module autodeer.utils)": [[145, "autodeer.utils.gcd", false]], "get_acquisition_mode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_Acquisition_mode", false]], "get_acquisition_mode() (xeprapilink method)": [[101, "XeprAPILink.get_Acquisition_mode", false]], "get_all_axes() (in module autodeer)": [[119, "autodeer.get_all_axes", false]], "get_all_axes() (in module autodeer.dataset)": [[66, "autodeer.dataset.get_all_axes", false]], "get_all_fixed_param() (in module autodeer)": [[119, "autodeer.get_all_fixed_param", false]], "get_all_fixed_param() (in module autodeer.dataset)": [[66, "autodeer.dataset.get_all_fixed_param", false]], "get_arange() (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.get_arange", false]], "get_attenuator() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_attenuator", false]], "get_attenuator() (xeprapilink method)": [[101, "XeprAPILink.get_attenuator", false]], "get_axis() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter.get_axis", false]], "get_axis() (autodeer.parameter method)": [[119, "autodeer.Parameter.get_axis", false], [119, "id196", false], [119, "id25", false], [119, "id92", false]], "get_axis() (parameter method)": [[33, "Parameter.get_axis", false], [57, "Parameter.get_axis", false]], "get_config_file() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_config_file", false]], "get_config_file() (xeprapilink method)": [[101, "XeprAPILink.get_config_file", false]], "get_counterfreq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_counterfreq", false]], "get_counterfreq() (xeprapilink method)": [[101, "XeprAPILink.get_counterfreq", false]], "get_dataworker (built-in class)": [[82, "get_dataWorker", false]], "get_dataworker (class in autodeer.gui.modetune)": [[83, "autodeer.gui.modetune.get_dataWorker", false]], "get_eldor_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_ELDOR_freq", false]], "get_eldor_freq() (xeprapilink method)": [[101, "XeprAPILink.get_ELDOR_freq", false]], "get_field() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_field", false]], "get_field() (xeprapilink method)": [[101, "XeprAPILink.get_field", false]], "get_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_freq", false]], "get_freq() (xeprapilink method)": [[101, "XeprAPILink.get_freq", false]], "get_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_hidden_param", false]], "get_hidden_param() (xeprapilink method)": [[101, "XeprAPILink.get_hidden_param", false]], "get_mw_amp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_MW_amp", false]], "get_mw_amp() (xeprapilink method)": [[101, "XeprAPILink.get_MW_amp", false]], "get_nutations() (in module autodeer.hardware.xepr_experiments)": [[118, "autodeer.hardware.xepr_experiments.get_nutations", false]], "get_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_param", false]], "get_param() (xeprapilink method)": [[101, "XeprAPILink.get_param", false]], "get_phase() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_phase", false]], "get_phase() (xeprapilink method)": [[101, "XeprAPILink.get_phase", false]], "get_phasecycle() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PhaseCycle", false]], "get_phasecycle() (xeprapilink method)": [[101, "XeprAPILink.get_PhaseCycle", false]], "get_pulsespel_def_filename() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_def_filename", false]], "get_pulsespel_def_filename() (xeprapilink method)": [[101, "XeprAPILink.get_PulseSpel_def_filename", false]], "get_pulsespel_def_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_def_filepath", false]], "get_pulsespel_def_filepath() (xeprapilink method)": [[101, "XeprAPILink.get_PulseSpel_def_filepath", false]], "get_pulsespel_exp_filename() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_exp_filename", false]], "get_pulsespel_exp_filename() (xeprapilink method)": [[101, "XeprAPILink.get_PulseSpel_exp_filename", false]], "get_pulsespel_exp_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_exp_filepath", false]], "get_pulsespel_exp_filepath() (xeprapilink method)": [[101, "XeprAPILink.get_PulseSpel_exp_filepath", false]], "get_pulsespel_experiment() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_experiment", false]], "get_pulsespel_experiment() (xeprapilink method)": [[101, "XeprAPILink.get_PulseSpel_experiment", false]], "get_pulsespel_phase_cycling() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_phase_cycling", false]], "get_pulsespel_phase_cycling() (xeprapilink method)": [[101, "XeprAPILink.get_PulseSpel_phase_cycling", false]], "get_replacemode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_ReplaceMode", false]], "get_replacemode() (xeprapilink method)": [[101, "XeprAPILink.get_ReplaceMode", false]], "get_sequence_rows() (in module autodeer.gui)": [[74, "autodeer.gui.get_sequence_rows", false]], "get_sequence_rows() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.get_sequence_rows", false]], "get_spec_config() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_spec_config", false]], "get_spec_config() (xeprapilink method)": [[101, "XeprAPILink.get_spec_config", false]], "get_specjet_data() (in module autodeer.hardware.bruker_awg)": [[91, "autodeer.hardware.Bruker_AWG.get_specjet_data", false]], "get_specjet_data() (in module autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU.get_specjet_data", false]], "get_sweep_width() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_sweep_width", false]], "get_sweep_width() (xeprapilink method)": [[101, "XeprAPILink.get_sweep_width", false]], "get_vexp() (in module autodeer.gui.quickdeer)": [[85, "autodeer.gui.quickdeer.get_Vexp", false]], "get_video_bandwidth() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_video_bandwidth", false]], "get_video_bandwidth() (xeprapilink method)": [[101, "XeprAPILink.get_video_bandwidth", false]], "get_video_gain() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_video_gain", false]], "get_video_gain() (xeprapilink method)": [[101, "XeprAPILink.get_video_gain", false]], "getcistring() (in module autodeer.gui)": [[74, "autodeer.gui.getCIstring", false]], "getcistring() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.getCIstring", false]], "getparam() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.getParam", false]], "getparam() (autodeer.hardware.dummy_xepr.dummy_hidden method)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden.getParam", false]], "getparam() (dummy_cur_exp method)": [[106, "dummy_cur_exp.getParam", false]], "getparam() (dummy_hidden method)": [[108, "dummy_hidden.getParam", false]], "github_url (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.github_url", false]], "github_url (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.github_url", false]], "github_url (autodeerui attribute)": [[70, "autoDEERUI.github_url", false], [79, "autoDEERUI.github_url", false]], "gnscale (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.gnscale", false]], "gnscale (spinsystem attribute)": [[21, "SpinSystem.gnscale", false]], "gyro (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.gyro", false]], "gyro (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.gyro", false]], "gyro (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.gyro", false]], "gyro (autodeer.resonatorprofilesequence attribute)": [[119, "autodeer.ResonatorProfileSequence.gyro", false]], "gyro (autodeer.sequences.resonatorprofilesequence attribute)": [[143, "autodeer.sequences.ResonatorProfileSequence.gyro", false]], "gyro (autodeerui attribute)": [[70, "autoDEERUI.gyro", false], [79, "autoDEERUI.gyro", false]], "gyro (autodeerworker attribute)": [[72, "autoDEERWorker.gyro", false]], "gyro (resonatorprofilesequence attribute)": [[48, "ResonatorProfileSequence.gyro", false], [139, "ResonatorProfileSequence.gyro", false]], "hahnechosequence (built-in class)": [[28, "HahnEchoSequence", false], [136, "HahnEchoSequence", false]], "hahnechosequence (class in autodeer)": [[119, "autodeer.HahnEchoSequence", false]], "hahnechosequence (class in autodeer.sequences)": [[143, "autodeer.sequences.HahnEchoSequence", false]], "ham() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.ham", false]], "ham_ez() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.ham_ez", false]], "ham_nz() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.ham_nz", false]], "hardware_logger (autodeer.gui.log.logdialog attribute)": [[76, "autodeer.gui.log.LogDialog.hardware_logger", false]], "hardware_logger (logdialog attribute)": [[75, "LogDialog.hardware_logger", false]], "hardware_meta (in module autodeer.hardware.dummy_xepr)": [[112, "autodeer.hardware.dummy_xepr.hardware_meta", false]], "hardware_wait (autodeer.hardware.xepr_experiments.eldortune attribute)": [[118, "autodeer.hardware.xepr_experiments.ELDORtune.hardware_wait", false]], "hardware_wait (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[118, "autodeer.hardware.xepr_experiments.MPFUtune.hardware_wait", false]], "hardware_wait (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[118, "autodeer.hardware.xepr_experiments.PulseProfile.hardware_wait", false]], "hardware_wait (eldortune attribute)": [[115, "ELDORtune.hardware_wait", false]], "hardware_wait (mpfutune attribute)": [[116, "MPFUtune.hardware_wait", false]], "hardware_wait (pulseprofile attribute)": [[117, "PulseProfile.hardware_wait", false]], "header (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.header", false]], "header() (autodeer.reporter method)": [[119, "autodeer.Reporter.header", false]], "header() (autodeer.reporter.reporter method)": [[132, "autodeer.reporter.Reporter.header", false]], "header() (reporter method)": [[42, "Reporter.header", false], [130, "Reporter.header", false]], "height (autodeer.reporter.svgflowable attribute)": [[132, "autodeer.reporter.SvgFlowable.height", false]], "height (svgflowable attribute)": [[131, "SvgFlowable.height", false]], "hidden (autodeer.hardware.dummy_xepr.dummy_xepr attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.hidden", false]], "hidden (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.hidden", false]], "hidden (dummy_xepr attribute)": [[110, "dummy_xepr.hidden", false]], "hidden (xeprapilink attribute)": [[101, "XeprAPILink.hidden", false]], "hspulse (built-in class)": [[27, "HSPulse", false], [125, "HSPulse", false]], "hspulse (class in autodeer)": [[119, "autodeer.HSPulse", false]], "hspulse (class in autodeer.pulses)": [[129, "autodeer.pulses.HSPulse", false]], "hw_log (in module autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU.hw_log", false]], "hw_log (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.hw_log", false]], "hw_log (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy.hw_log", false]], "hw_log (in module autodeer.hardware.dummy_xepr)": [[112, "autodeer.hardware.dummy_xepr.hw_log", false]], "hw_log (in module autodeer.hardware.xeprapi_link)": [[102, "autodeer.hardware.XeprAPI_link.hw_log", false]], "hybrid (autodeer.hardware.xepr_experiments.deer attribute)": [[118, "autodeer.hardware.xepr_experiments.DEER.hybrid", false]], "hybrid (deer attribute)": [[114, "DEER.hybrid", false]], "i (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.I", false]], "i (spinsystem attribute)": [[21, "SpinSystem.I", false]], "identifyroi() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.IdentifyROI", false]], "ifgain (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.IFgain", false]], "ifgain (eth_awg_interface attribute)": [[98, "ETH_awg_interface.IFgain", false]], "ifgain_options (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.IFgain_options", false]], "ifgain_options (eth_awg_interface attribute)": [[98, "ETH_awg_interface.IFgain_options", false]], "import_data() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.import_data", false]], "import_data() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.import_data", false]], "import_dataset() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.import_dataset", false]], "import_dataset() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.import_dataset", false]], "initialise_deer_settings() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.initialise_deer_settings", false]], "initialise_deer_settings() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.initialise_deer_settings", false]], "initialise_deer_settings() (autodeerui method)": [[70, "autoDEERUI.initialise_deer_settings", false], [79, "autoDEERUI.initialise_deer_settings", false]], "interface (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.interface", false]], "interface (autodeer.gui.modetune.get_dataworker attribute)": [[83, "autodeer.gui.modetune.get_dataWorker.interface", false]], "interface (autodeer.gui.modetune.modetune attribute)": [[83, "autodeer.gui.modetune.ModeTune.interface", false]], "interface (autodeerworker attribute)": [[72, "autoDEERWorker.interface", false]], "interface (built-in class)": [[29, "Interface", false], [56, "Interface", false]], "interface (class in autodeer)": [[119, "autodeer.Interface", false], [119, "id211", false]], "interface (class in autodeer.classes)": [[58, "autodeer.classes.Interface", false]], "interface (get_dataworker attribute)": [[82, "get_dataWorker.interface", false]], "interface (modetune attribute)": [[81, "ModeTune.interface", false]], "invert_signal() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.invert_signal", false]], "invert_signal() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.invert_signal", false]], "is_exp_running() (autodeer.hardware.dummy_xepr.dummy_api method)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.is_exp_running", false]], "is_exp_running() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.is_exp_running", false]], "is_exp_running() (dummy_api method)": [[105, "dummy_api.is_exp_running", false]], "is_exp_running() (xeprapilink method)": [[101, "XeprAPILink.is_exp_running", false]], "is_static() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter.is_static", false]], "is_static() (autodeer.parameter method)": [[119, "autodeer.Parameter.is_static", false], [119, "id198", false], [119, "id27", false], [119, "id94", false]], "is_static() (autodeer.pulse method)": [[119, "autodeer.Pulse.is_static", false], [119, "id120", false], [119, "id158", false]], "is_static() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse.is_static", false]], "is_static() (parameter method)": [[33, "Parameter.is_static", false], [57, "Parameter.is_static", false]], "is_static() (pulse method)": [[34, "Pulse.is_static", false], [126, "Pulse.is_static", false]], "isdelayfocused() (autodeer.pulse method)": [[119, "autodeer.Pulse.isDelayFocused", false], [119, "id121", false], [119, "id159", false]], "isdelayfocused() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse.isDelayFocused", false]], "isdelayfocused() (autodeer.sequence method)": [[119, "autodeer.Sequence.isDelayFocused", false], [119, "id241", false], [119, "id62", false]], "isdelayfocused() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence.isDelayFocused", false]], "isdelayfocused() (pulse method)": [[34, "Pulse.isDelayFocused", false], [126, "Pulse.isDelayFocused", false]], "isdelayfocused() (sequence method)": [[49, "Sequence.isDelayFocused", false], [140, "Sequence.isDelayFocused", false]], "ispulsefocused() (autodeer.pulse method)": [[119, "autodeer.Pulse.isPulseFocused", false], [119, "id122", false], [119, "id160", false]], "ispulsefocused() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse.isPulseFocused", false]], "ispulsefocused() (autodeer.sequence method)": [[119, "autodeer.Sequence.isPulseFocused", false], [119, "id240", false], [119, "id61", false]], "ispulsefocused() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence.isPulseFocused", false]], "ispulsefocused() (pulse method)": [[34, "Pulse.isPulseFocused", false], [126, "Pulse.isPulseFocused", false]], "ispulsefocused() (sequence method)": [[49, "Sequence.isPulseFocused", false], [140, "Sequence.isPulseFocused", false]], "isrunning() (autodeer.classes.interface method)": [[58, "autodeer.classes.Interface.isrunning", false]], "isrunning() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.isrunning", false]], "isrunning() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.isrunning", false]], "isrunning() (autodeer.hardware.dummy.dummyinterface method)": [[104, "autodeer.hardware.dummy.dummyInterface.isrunning", false]], "isrunning() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.isrunning", false]], "isrunning() (autodeer.interface method)": [[119, "autodeer.Interface.isrunning", false], [119, "id219", false]], "isrunning() (brukerawg method)": [[90, "BrukerAWG.isrunning", false]], "isrunning() (brukermpfu method)": [[92, "BrukerMPFU.isrunning", false]], "isrunning() (dummyinterface method)": [[103, "dummyInterface.isrunning", false]], "isrunning() (eth_awg_interface method)": [[98, "ETH_awg_interface.isrunning", false]], "isrunning() (interface method)": [[29, "Interface.isrunning", false], [56, "Interface.isrunning", false]], "issues_url (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.issues_url", false]], "issues_url (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.issues_url", false]], "issues_url (autodeerui attribute)": [[70, "autoDEERUI.issues_url", false], [79, "autoDEERUI.issues_url", false]], "key1 (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.key1", false]], "key1 (dummyinterface attribute)": [[103, "dummyInterface.key1", false]], "kroneye() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.kroneye", false]], "kwargs (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.kwargs", false]], "kwargs (autodeer.gui.main.worker attribute)": [[80, "autodeer.gui.main.Worker.kwargs", false]], "kwargs (autodeer.gui.tools.worker attribute)": [[89, "autodeer.gui.tools.Worker.kwargs", false]], "kwargs (autodeer.gui.worker attribute)": [[74, "autodeer.gui.Worker.kwargs", false]], "kwargs (autodeerworker attribute)": [[72, "autoDEERWorker.kwargs", false]], "kwargs (worker attribute)": [[67, "Worker.kwargs", false], [77, "Worker.kwargs", false], [87, "Worker.kwargs", false]], "launch() (autodeer.classes.interface method)": [[58, "autodeer.classes.Interface.launch", false]], "launch() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.launch", false]], "launch() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.launch", false]], "launch() (autodeer.hardware.dummy.dummyinterface method)": [[104, "autodeer.hardware.dummy.dummyInterface.launch", false]], "launch() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch", false]], "launch() (autodeer.interface method)": [[119, "autodeer.Interface.launch", false], [119, "id218", false]], "launch() (brukerawg method)": [[90, "BrukerAWG.launch", false]], "launch() (brukermpfu method)": [[92, "BrukerMPFU.launch", false]], "launch() (dummyinterface method)": [[103, "dummyInterface.launch", false]], "launch() (eth_awg_interface method)": [[98, "ETH_awg_interface.launch", false]], "launch() (interface method)": [[29, "Interface.launch", false], [56, "Interface.launch", false]], "launch_long() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_long", false]], "launch_long() (eth_awg_interface method)": [[98, "ETH_awg_interface.launch_long", false]], "launch_normal() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_normal", false]], "launch_normal() (eth_awg_interface method)": [[98, "ETH_awg_interface.launch_normal", false]], "launch_withifgain() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_withIFGain", false]], "launch_withifgain() (eth_awg_interface method)": [[98, "ETH_awg_interface.launch_withIFGain", false]], "list_str_to_type() (in module autodeer.gui)": [[74, "autodeer.gui.list_str_to_type", false]], "list_str_to_type() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.list_str_to_type", false]], "lo (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.LO", false]], "lo (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.LO", false]], "lo (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.LO", false]], "lo (autodeer.sequence attribute)": [[119, "autodeer.Sequence.LO", false], [119, "id228", false], [119, "id49", false]], "lo (autodeer.sequences.sequence attribute)": [[143, "autodeer.sequences.Sequence.LO", false]], "lo (autodeerui attribute)": [[70, "autoDEERUI.LO", false], [79, "autoDEERUI.LO", false]], "lo (autodeerworker attribute)": [[72, "autoDEERWorker.LO", false]], "lo (sequence attribute)": [[49, "Sequence.LO", false], [140, "Sequence.LO", false]], "load() (autodeer.classes.parameter class method)": [[58, "autodeer.classes.Parameter.load", false]], "load() (autodeer.parameter class method)": [[119, "autodeer.Parameter.load", false], [119, "id106", false], [119, "id210", false], [119, "id39", false]], "load() (autodeer.pulse class method)": [[119, "autodeer.Pulse.load", false], [119, "id136", false], [119, "id174", false]], "load() (autodeer.pulses.pulse class method)": [[129, "autodeer.pulses.Pulse.load", false]], "load() (autodeer.sequence class method)": [[119, "autodeer.Sequence.load", false], [119, "id253", false], [119, "id74", false]], "load() (autodeer.sequences.sequence class method)": [[143, "autodeer.sequences.Sequence.load", false]], "load() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.load", false]], "load() (parameter class method)": [[33, "Parameter.load", false], [57, "Parameter.load", false]], "load() (pulse class method)": [[34, "Pulse.load", false], [126, "Pulse.load", false]], "load() (sequence class method)": [[49, "Sequence.load", false], [140, "Sequence.load", false]], "load() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.load", false]], "load_epr_file() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.load_epr_file", false]], "load_epr_file() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.load_epr_file", false]], "load_epr_file() (autodeerui method)": [[70, "autoDEERUI.load_epr_file", false], [79, "autoDEERUI.load_epr_file", false]], "load_epr_file() (in module autodeer.gui)": [[74, "autodeer.gui.load_epr_file", false]], "load_epr_file() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.load_epr_file", false]], "load_folder() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.load_folder", false]], "load_folder() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.load_folder", false]], "load_folder() (autodeerui method)": [[70, "autoDEERUI.load_folder", false], [79, "autoDEERUI.load_folder", false]], "load_spectrometer_config() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.load_spectrometer_config", false]], "load_spectrometer_config() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.load_spectrometer_config", false]], "load_spectrometer_config() (autodeerui method)": [[70, "autoDEERUI.load_spectrometer_config", false], [79, "autoDEERUI.load_spectrometer_config", false]], "log (autodeer.gui.log.logdialog attribute)": [[76, "autodeer.gui.log.LogDialog.log", false]], "log (in module autodeer.criteria)": [[64, "autodeer.criteria.log", false]], "log (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.log", false]], "log (in module autodeer.hardware.eth_awg)": [[99, "autodeer.hardware.ETH_awg.log", false]], "log (in module autodeer.tools)": [[144, "autodeer.tools.log", false]], "log (logdialog attribute)": [[75, "LogDialog.log", false]], "log_levels (autodeer.gui.log.logdialog attribute)": [[76, "autodeer.gui.log.LogDialog.log_levels", false]], "log_levels (logdialog attribute)": [[75, "LogDialog.log_levels", false]], "logdialog (built-in class)": [[75, "LogDialog", false]], "logdialog (class in autodeer.gui.log)": [[76, "autodeer.gui.log.LogDialog", false]], "logo_pixmap (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.logo_pixmap", false]], "logo_pixmap (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.logo_pixmap", false]], "logo_pixmap (autodeerui attribute)": [[70, "autoDEERUI.logo_pixmap", false], [79, "autoDEERUI.logo_pixmap", false]], "longdeer (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.longDEER", false]], "longdeer (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.longDEER", false]], "longdeer (autodeerui attribute)": [[70, "autoDEERUI.longDEER", false], [79, "autoDEERUI.longDEER", false]], "longdeer_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.longdeer_result", false]], "longdeer_result (autodeersignals attribute)": [[71, "autoDEERSignals.longdeer_result", false]], "longdeer_update (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.longdeer_update", false]], "longdeer_update (autodeersignals attribute)": [[71, "autoDEERSignals.longdeer_update", false]], "match_filter_dc() (in module autodeer.hardware.eth_awg_load)": [[100, "autodeer.hardware.ETH_awg_load.match_filter_dc", false]], "max_tau (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.max_tau", false]], "max_tau (autodeerworker attribute)": [[72, "autoDEERWorker.max_tau", false]], "meta (autodeer.hardware.dummy_xepr.dummy_api attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.meta", false]], "meta (dummy_api attribute)": [[105, "dummy_api.meta", false]], "min_reptime (autodeer.reptimescan attribute)": [[119, "autodeer.ReptimeScan.min_reptime", false]], "min_reptime (autodeer.sequences.reptimescan attribute)": [[143, "autodeer.sequences.ReptimeScan.min_reptime", false]], "min_reptime (reptimescan attribute)": [[44, "ReptimeScan.min_reptime", false], [138, "ReptimeScan.min_reptime", false]], "min_tp (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.Min_tp", false]], "min_tp (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.Min_tp", false]], "min_tp (autodeerui attribute)": [[70, "autoDEERUI.Min_tp", false], [79, "autoDEERUI.Min_tp", false]], "minbrxamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrXAmp", false]], "minbrxamp (dummy_hidden attribute)": [[108, "dummy_hidden.MinBrXAmp", false]], "minbrxphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrXPhase", false]], "minbrxphase (dummy_hidden attribute)": [[108, "dummy_hidden.MinBrXPhase", false]], "minbryamp (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrYAmp", false]], "minbryamp (dummy_hidden attribute)": [[108, "dummy_hidden.MinBrYAmp", false]], "minbryphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden.MinBrYPhase", false]], "minbryphase (dummy_hidden attribute)": [[108, "dummy_hidden.MinBrYPhase", false]], "mnr_estimate() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.MNR_estimate", false]], "mode (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.mode", false]], "mode (dummyinterface attribute)": [[103, "dummyInterface.mode", false]], "modetune (built-in class)": [[81, "ModeTune", false]], "modetune (class in autodeer.gui.modetune)": [[83, "autodeer.gui.modetune.ModeTune", false]], "module": [[16, "module-autodeer.DEER_analysis", false], [22, "module-autodeer.FieldSweep", false], [32, "module-autodeer.Logging", false], [41, "module-autodeer.Relaxation", false], [46, "module-autodeer.ResPro", false], [54, "module-autodeer.TwoD_Experiment", false], [55, "module-autodeer._version", false], [58, "module-autodeer.classes", false], [59, "module-autodeer.colors", false], [64, "module-autodeer.criteria", false], [66, "module-autodeer.dataset", false], [69, "module-autodeer.gui.__main__", false], [73, "module-autodeer.gui.autoDEER_worker", false], [74, "module-autodeer.gui", false], [76, "module-autodeer.gui.log", false], [80, "module-autodeer.gui.main", false], [83, "module-autodeer.gui.modetune", false], [85, "module-autodeer.gui.quickdeer", false], [86, "module-autodeer.gui.test_main", false], [89, "module-autodeer.gui.tools", false], [91, "module-autodeer.hardware.Bruker_AWG", false], [93, "module-autodeer.hardware.Bruker_MPFU", false], [97, "module-autodeer.hardware.Bruker_tools", false], [99, "module-autodeer.hardware.ETH_awg", false], [100, "module-autodeer.hardware.ETH_awg_load", false], [102, "module-autodeer.hardware.XeprAPI_link", false], [104, "module-autodeer.hardware.dummy", false], [112, "module-autodeer.hardware.dummy_xepr", false], [113, "module-autodeer.hardware", false], [118, "module-autodeer.hardware.xepr_experiments", false], [119, "module-autodeer", false], [129, "module-autodeer.pulses", false], [132, "module-autodeer.reporter", false], [143, "module-autodeer.sequences", false], [144, "module-autodeer.tools", false], [145, "module-autodeer.utils", false]], "module_dir (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.MODULE_DIR", false]], "module_dir (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.MODULE_DIR", false]], "module_dir (in module autodeer.hardware.xepr_experiments)": [[118, "autodeer.hardware.xepr_experiments.MODULE_DIR", false]], "mpfu (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.MPFU", false]], "mpfu (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.MPFU", false]], "mpfu (autodeer.hardware.xepr_experiments.deer attribute)": [[118, "autodeer.hardware.xepr_experiments.DEER.mpfu", false]], "mpfu (brukermpfu attribute)": [[92, "BrukerMPFU.MPFU", false]], "mpfu (deer attribute)": [[114, "DEER.mpfu", false]], "mpfu (pulsespel attribute)": [[96, "PulseSpel.MPFU", false]], "mpfutune (built-in class)": [[116, "MPFUtune", false]], "mpfutune (class in autodeer.hardware.xepr_experiments)": [[118, "autodeer.hardware.xepr_experiments.MPFUtune", false]], "mpfutune() (in module autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU.MPFUtune", false]], "mutex (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.mutex", false]], "mutex (autodeerworker attribute)": [[72, "autoDEERWorker.mutex", false]], "n (autodeer.carrpurcellsequence attribute)": [[119, "autodeer.CarrPurcellSequence.n", false]], "n (autodeer.sequences.carrpurcellsequence attribute)": [[143, "autodeer.sequences.CarrPurcellSequence.n", false]], "n (carrpurcellsequence attribute)": [[13, "CarrPurcellSequence.n", false], [133, "CarrPurcellSequence.n", false]], "n_files (autodeer.resonatorprofileanalysis attribute)": [[119, "autodeer.ResonatorProfileAnalysis.n_files", false]], "n_files (autodeer.respro.resonatorprofileanalysis attribute)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.n_files", false]], "n_files (resonatorprofileanalysis attribute)": [[45, "ResonatorProfileAnalysis.n_files", false], [47, "ResonatorProfileAnalysis.n_files", false]], "name (autodeer.carrpurcellsequence attribute)": [[119, "autodeer.CarrPurcellSequence.name", false]], "name (autodeer.classes.parameter attribute)": [[58, "autodeer.classes.Parameter.name", false]], "name (autodeer.criteria.criteria attribute)": [[64, "autodeer.criteria.Criteria.name", false]], "name (autodeer.criteria.deercriteria attribute)": [[64, "autodeer.criteria.DEERCriteria.name", false]], "name (autodeer.deersequence attribute)": [[119, "autodeer.DEERSequence.name", false], [119, "id255", false]], "name (autodeer.fieldsweepsequence attribute)": [[119, "autodeer.FieldSweepSequence.name", false]], "name (autodeer.hahnechosequence attribute)": [[119, "autodeer.HahnEchoSequence.name", false]], "name (autodeer.parameter attribute)": [[119, "autodeer.Parameter.name", false], [119, "id18", false], [119, "id189", false], [119, "id85", false]], "name (autodeer.pulse attribute)": [[119, "autodeer.Pulse.name", false], [119, "id114", false], [119, "id152", false]], "name (autodeer.pulses.pulse attribute)": [[129, "autodeer.pulses.Pulse.name", false]], "name (autodeer.refocusedecho2dsequence attribute)": [[119, "autodeer.RefocusedEcho2DSequence.name", false]], "name (autodeer.reptimescan attribute)": [[119, "autodeer.ReptimeScan.name", false]], "name (autodeer.resonatorprofilesequence attribute)": [[119, "autodeer.ResonatorProfileSequence.name", false]], "name (autodeer.sequence attribute)": [[119, "autodeer.Sequence.name", false], [119, "id231", false], [119, "id52", false]], "name (autodeer.sequences.carrpurcellsequence attribute)": [[143, "autodeer.sequences.CarrPurcellSequence.name", false]], "name (autodeer.sequences.deersequence attribute)": [[143, "autodeer.sequences.DEERSequence.name", false]], "name (autodeer.sequences.fieldsweepsequence attribute)": [[143, "autodeer.sequences.FieldSweepSequence.name", false]], "name (autodeer.sequences.hahnechosequence attribute)": [[143, "autodeer.sequences.HahnEchoSequence.name", false]], "name (autodeer.sequences.refocusedecho2dsequence attribute)": [[143, "autodeer.sequences.RefocusedEcho2DSequence.name", false]], "name (autodeer.sequences.reptimescan attribute)": [[143, "autodeer.sequences.ReptimeScan.name", false]], "name (autodeer.sequences.resonatorprofilesequence attribute)": [[143, "autodeer.sequences.ResonatorProfileSequence.name", false]], "name (autodeer.sequences.sequence attribute)": [[143, "autodeer.sequences.Sequence.name", false]], "name (autodeer.sequences.t2relaxationsequence attribute)": [[143, "autodeer.sequences.T2RelaxationSequence.name", false]], "name (autodeer.sequences.twtprofilesequence attribute)": [[143, "autodeer.sequences.TWTProfileSequence.name", false]], "name (autodeer.t2relaxationsequence attribute)": [[119, "autodeer.T2RelaxationSequence.name", false]], "name (autodeer.twtprofilesequence attribute)": [[119, "autodeer.TWTProfileSequence.name", false]], "name (carrpurcellsequence attribute)": [[13, "CarrPurcellSequence.name", false], [133, "CarrPurcellSequence.name", false]], "name (criteria attribute)": [[60, "Criteria.name", false]], "name (deercriteria attribute)": [[61, "DEERCriteria.name", false]], "name (deersequence attribute)": [[15, "DEERSequence.name", false], [134, "DEERSequence.name", false]], "name (fieldsweepsequence attribute)": [[24, "FieldSweepSequence.name", false], [135, "FieldSweepSequence.name", false]], "name (hahnechosequence attribute)": [[28, "HahnEchoSequence.name", false], [136, "HahnEchoSequence.name", false]], "name (parameter attribute)": [[33, "Parameter.name", false], [57, "Parameter.name", false]], "name (pulse attribute)": [[34, "Pulse.name", false], [126, "Pulse.name", false]], "name (refocusedecho2dsequence attribute)": [[37, "RefocusedEcho2DSequence.name", false], [137, "RefocusedEcho2DSequence.name", false]], "name (reptimescan attribute)": [[44, "ReptimeScan.name", false], [138, "ReptimeScan.name", false]], "name (resonatorprofilesequence attribute)": [[48, "ResonatorProfileSequence.name", false], [139, "ResonatorProfileSequence.name", false]], "name (sequence attribute)": [[49, "Sequence.name", false], [140, "Sequence.name", false]], "name (t2relaxationsequence attribute)": [[51, "T2RelaxationSequence.name", false], [141, "T2RelaxationSequence.name", false]], "name (twtprofilesequence attribute)": [[52, "TWTProfileSequence.name", false], [142, "TWTProfileSequence.name", false]], "nbscansdone (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.NbScansDone", false]], "nbscansdone (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.NbScansDone", false]], "nbscanstodo (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.NbScansToDo", false]], "nbscanstodo (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.NbScansToDo", false]], "ndeer_cp() (autodeer.deersequence method)": [[119, "autodeer.DEERSequence.nDEER_CP", false], [119, "id267", false]], "ndeer_cp() (autodeer.sequences.deersequence method)": [[143, "autodeer.sequences.DEERSequence.nDEER_CP", false]], "ndeer_cp() (deersequence method)": [[15, "DEERSequence.nDEER_CP", false], [134, "DEERSequence.nDEER_CP", false]], "nelectrons (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.nElectrons", false]], "nelectrons (spinsystem attribute)": [[21, "SpinSystem.nElectrons", false]], "new_data() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.new_data", false]], "new_data() (autodeerworker method)": [[72, "autoDEERWorker.new_data", false]], "new_pulses() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.new_pulses", false]], "new_pulses() (autodeerworker method)": [[72, "autoDEERWorker.new_pulses", false]], "nnuclei (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.nNuclei", false]], "nnuclei (spinsystem attribute)": [[21, "SpinSystem.nNuclei", false]], "noise_frac (autodeer.twod_experiment.twodexperimentanalysis attribute)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.noise_frac", false]], "noise_frac (twodexperimentanalysis attribute)": [[53, "TwoDExperimentAnalysis.noise_frac", false]], "normalise (autodeer.dataset.epraccessor property)": [[66, "autodeer.dataset.EPRAccessor.normalise", false]], "normalise (autodeer.epraccessor property)": [[119, "autodeer.EPRAccessor.normalise", false]], "normalise (epraccessor property)": [[19, "EPRAccessor.normalise", false], [65, "EPRAccessor.normalise", false]], "normalise_01() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.normalise_01", false]], "nstates (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.nStates", false]], "nstates (spinsystem attribute)": [[21, "SpinSystem.nStates", false]], "num_pulses (autodeer.sequence attribute)": [[119, "autodeer.Sequence.num_pulses", false], [119, "id225", false], [119, "id46", false]], "num_pulses (autodeer.sequences.sequence attribute)": [[143, "autodeer.sequences.Sequence.num_pulses", false]], "num_pulses (sequence attribute)": [[49, "Sequence.num_pulses", false], [140, "Sequence.num_pulses", false]], "o (autodeer.hardware.dummy_xepr.dummy_dataset attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_dataset.O", false]], "o (dummy_dataset attribute)": [[107, "dummy_dataset.O", false]], "optimal_slice_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.optimal_slice_plot", false]], "optimal_slice_plot() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.optimal_slice_plot", false]], "optimal_tau1() (autodeer.refocusedecho2danalysis method)": [[119, "autodeer.RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimal_tau1() (autodeer.relaxation.refocusedecho2danalysis method)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimal_tau1() (refocusedecho2danalysis method)": [[36, "RefocusedEcho2DAnalysis.optimal_tau1", false], [39, "RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimise_pulses() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.optimise_pulses", false]], "optimise_pulses() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.optimise_pulses", false]], "optimise_pulses() (autodeerui method)": [[70, "autoDEERUI.optimise_pulses", false], [79, "autoDEERUI.optimise_pulses", false]], "optimise_pulses() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.optimise_pulses", false]], "optimise_pulses_button() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.optimise_pulses_button", false]], "optimise_pulses_button() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.optimise_pulses_button", false]], "optimise_pulses_button() (autodeerui method)": [[70, "autoDEERUI.optimise_pulses_button", false], [79, "autoDEERUI.optimise_pulses_button", false]], "optimise_spectra_position() (in module autodeer)": [[119, "autodeer.optimise_spectra_position", false]], "optimise_spectra_position() (in module autodeer.respro)": [[46, "autodeer.ResPro.optimise_spectra_position", false]], "order (autodeer.pulses.sincpulse attribute)": [[129, "autodeer.pulses.SincPulse.order", false]], "order (autodeer.sincpulse attribute)": [[119, "autodeer.SincPulse.order", false]], "order (sincpulse attribute)": [[50, "SincPulse.order", false], [128, "SincPulse.order", false]], "order1 (autodeer.hspulse attribute)": [[119, "autodeer.HSPulse.order1", false]], "order1 (autodeer.pulses.hspulse attribute)": [[129, "autodeer.pulses.HSPulse.order1", false]], "order1 (hspulse attribute)": [[27, "HSPulse.order1", false], [125, "HSPulse.order1", false]], "order2 (autodeer.hspulse attribute)": [[119, "autodeer.HSPulse.order2", false]], "order2 (autodeer.pulses.hspulse attribute)": [[129, "autodeer.pulses.HSPulse.order2", false]], "order2 (hspulse attribute)": [[27, "HSPulse.order2", false], [125, "HSPulse.order2", false]], "package_dir (in module autodeer.reporter)": [[132, "autodeer.reporter.package_dir", false]], "package_directory (in module autodeer.gui.log)": [[76, "autodeer.gui.log.package_directory", false]], "package_directory (in module autodeer.gui.main)": [[80, "autodeer.gui.main.package_directory", false]], "package_directory (in module autodeer.gui.modetune)": [[83, "autodeer.gui.modetune.package_directory", false]], "package_directory (in module autodeer.gui.quickdeer)": [[85, "autodeer.gui.quickdeer.package_directory", false]], "param_in_mhz() (in module autodeer.gui)": [[74, "autodeer.gui.param_in_MHz", false]], "param_in_mhz() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.param_in_MHz", false]], "param_in_us() (in module autodeer.gui)": [[74, "autodeer.gui.param_in_us", false]], "param_in_us() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.param_in_us", false]], "parameter (built-in class)": [[33, "Parameter", false], [57, "Parameter", false]], "parameter (class in autodeer)": [[119, "autodeer.Parameter", false], [119, "id0", false], [119, "id179", false], [119, "id75", false]], "parameter (class in autodeer.classes)": [[58, "autodeer.classes.Parameter", false]], "parvar (autodeer.hardware.bruker_tools.psparvar attribute)": [[97, "autodeer.hardware.Bruker_tools.PSparvar.parvar", false]], "parvar (psparvar attribute)": [[95, "PSparvar.parvar", false]], "parvars (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.parvars", false]], "parvars (pulsespel attribute)": [[96, "PulseSpel.parvars", false]], "pause_and_wait() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.pause_and_wait", false]], "pause_and_wait() (autodeerworker method)": [[72, "autoDEERWorker.pause_and_wait", false]], "pause_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.pause_exp", false]], "pause_exp() (xeprapilink method)": [[101, "XeprAPILink.pause_exp", false]], "pcyc (autodeer.delay attribute)": [[119, "autodeer.Delay.pcyc", false], [119, "id143", false]], "pcyc (autodeer.detection attribute)": [[119, "autodeer.Detection.pcyc", false], [119, "id140", false], [119, "id178", false]], "pcyc (autodeer.pulses.delay attribute)": [[129, "autodeer.pulses.Delay.pcyc", false]], "pcyc (autodeer.pulses.detection attribute)": [[129, "autodeer.pulses.Detection.pcyc", false]], "pcyc (delay attribute)": [[17, "Delay.pcyc", false], [121, "Delay.pcyc", false]], "pcyc (detection attribute)": [[18, "Detection.pcyc", false], [122, "Detection.pcyc", false]], "pcyc_str (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.pcyc_str", false]], "pcyc_str (pulsespel attribute)": [[96, "PulseSpel.pcyc_str", false]], "pdf (autodeer.reporter attribute)": [[119, "autodeer.Reporter.pdf", false]], "pdf (autodeer.reporter.reporter attribute)": [[132, "autodeer.reporter.Reporter.pdf", false]], "pdf (reporter attribute)": [[42, "Reporter.pdf", false], [130, "Reporter.pdf", false]], "phasecorrect_all_points() (in module autodeer.gui.modetune)": [[83, "autodeer.gui.modetune.phasecorrect_all_points", false]], "place_hash (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.place_hash", false]], "place_hash (pulsespel attribute)": [[96, "PulseSpel.place_hash", false]], "plot() (autodeer.carrpurcellanalysis method)": [[119, "autodeer.CarrPurcellAnalysis.plot", false]], "plot() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.plot", false]], "plot() (autodeer.fieldsweepanalysis method)": [[119, "autodeer.FieldSweepAnalysis.plot", false]], "plot() (autodeer.pulse method)": [[119, "autodeer.Pulse.plot", false], [119, "id123", false], [119, "id161", false]], "plot() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse.plot", false]], "plot() (autodeer.relaxation.carrpurcellanalysis method)": [[41, "autodeer.Relaxation.CarrPurcellAnalysis.plot", false]], "plot() (autodeer.relaxation.reptimeanalysis method)": [[41, "autodeer.Relaxation.ReptimeAnalysis.plot", false]], "plot() (autodeer.reptimeanalysis method)": [[119, "autodeer.ReptimeAnalysis.plot", false]], "plot() (autodeer.resonatorprofileanalysis method)": [[119, "autodeer.ResonatorProfileAnalysis.plot", false]], "plot() (autodeer.respro.resonatorprofileanalysis method)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.plot", false]], "plot() (autodeer.sequence method)": [[119, "autodeer.Sequence.plot", false], [119, "id233", false], [119, "id54", false]], "plot() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence.plot", false]], "plot() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.plot", false], [38, "CarrPurcellAnalysis.plot", false]], "plot() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.plot", false], [23, "FieldSweepAnalysis.plot", false]], "plot() (pulse method)": [[34, "Pulse.plot", false], [126, "Pulse.plot", false]], "plot() (reptimeanalysis method)": [[40, "ReptimeAnalysis.plot", false], [43, "ReptimeAnalysis.plot", false]], "plot() (resonatorprofileanalysis method)": [[45, "ResonatorProfileAnalysis.plot", false], [47, "ResonatorProfileAnalysis.plot", false]], "plot() (sequence method)": [[49, "Sequence.plot", false], [140, "Sequence.plot", false]], "plot1d() (autodeer.refocusedecho2danalysis method)": [[119, "autodeer.RefocusedEcho2DAnalysis.plot1D", false]], "plot1d() (autodeer.relaxation.refocusedecho2danalysis method)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.plot1D", false]], "plot1d() (refocusedecho2danalysis method)": [[36, "RefocusedEcho2DAnalysis.plot1D", false], [39, "RefocusedEcho2DAnalysis.plot1D", false]], "plot2d() (autodeer.refocusedecho2danalysis method)": [[119, "autodeer.RefocusedEcho2DAnalysis.plot2D", false]], "plot2d() (autodeer.relaxation.refocusedecho2danalysis method)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis.plot2D", false]], "plot2d() (refocusedecho2danalysis method)": [[36, "RefocusedEcho2DAnalysis.plot2D", false], [39, "RefocusedEcho2DAnalysis.plot2D", false]], "plot_1drelax() (in module autodeer)": [[119, "autodeer.plot_1Drelax", false]], "plot_1drelax() (in module autodeer.relaxation)": [[41, "autodeer.Relaxation.plot_1Drelax", false]], "plot_fft() (autodeer.pulse method)": [[119, "autodeer.Pulse.plot_fft", false], [119, "id127", false], [119, "id165", false]], "plot_fft() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse.plot_fft", false]], "plot_fft() (pulse method)": [[34, "Pulse.plot_fft", false], [126, "Pulse.plot_fft", false]], "plot_overlap() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.plot_overlap", false]], "plot_pulse_exc() (autodeer.sequence method)": [[119, "autodeer.Sequence.plot_pulse_exc", false], [119, "id234", false], [119, "id55", false]], "plot_pulse_exc() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence.plot_pulse_exc", false]], "plot_pulse_exc() (sequence method)": [[49, "Sequence.plot_pulse_exc", false], [140, "Sequence.plot_pulse_exc", false]], "plsspelexpslct (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELEXPSlct", false]], "plsspelexpslct (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.PlsSPELEXPSlct", false]], "plsspelglbpaf (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELGlbPaF", false]], "plsspelglbpaf (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.PlsSPELGlbPaF", false]], "plsspellistslct (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELLISTSlct", false]], "plsspellistslct (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.PlsSPELLISTSlct", false]], "plsspelprgpaf (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.PlsSPELPrgPaF", false]], "plsspelprgpaf (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.PlsSPELPrgPaF", false]], "pool (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.pool", false]], "pool (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.pool", false]], "pool (brukerawg attribute)": [[90, "BrukerAWG.pool", false]], "pool (brukermpfu attribute)": [[92, "BrukerMPFU.pool", false]], "possible_delays (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.possible_delays", false]], "possible_delays (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.possible_delays", false]], "possible_delays (pulsespel attribute)": [[96, "PulseSpel.possible_delays", false]], "possible_pulses (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.possible_pulses", false]], "possible_pulses (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.possible_pulses", false]], "possible_pulses (pulsespel attribute)": [[96, "PulseSpel.possible_pulses", false]], "possible_vars (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.possible_vars", false]], "possible_vars (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.possible_vars", false]], "possible_vars (pulsespel attribute)": [[96, "PulseSpel.possible_vars", false]], "primary_colors (in module autodeer)": [[119, "autodeer.primary_colors", false]], "primary_colors (in module autodeer.colors)": [[59, "autodeer.colors.primary_colors", false]], "priorties (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.priorties", false]], "priorties (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.priorties", false]], "priorties (autodeerui attribute)": [[70, "autoDEERUI.priorties", false], [79, "autoDEERUI.priorties", false]], "process_deeranalysis() (autodeer.gui.quickdeer.deerplot method)": [[85, "autodeer.gui.quickdeer.DEERplot.process_deeranalysis", false]], "process_deeranalysis() (deerplot method)": [[84, "DEERplot.process_deeranalysis", false]], "process_nutations() (autodeer.resonatorprofileanalysis method)": [[119, "autodeer.ResonatorProfileAnalysis.process_nutations", false]], "process_nutations() (autodeer.respro.resonatorprofileanalysis method)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.process_nutations", false]], "process_nutations() (resonatorprofileanalysis method)": [[45, "ResonatorProfileAnalysis.process_nutations", false], [47, "ResonatorProfileAnalysis.process_nutations", false]], "progress (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.progress", false]], "progress (autodeer.gui.main.workersignals attribute)": [[80, "autodeer.gui.main.WorkerSignals.progress", false]], "progress (autodeersignals attribute)": [[71, "autoDEERSignals.progress", false]], "progress (workersignals attribute)": [[78, "WorkerSignals.progress", false]], "progress_bar() (in module autodeer.tools)": [[144, "autodeer.tools.progress_bar", false]], "progress_bar_frac() (in module autodeer.tools)": [[144, "autodeer.tools.progress_bar_frac", false]], "progression (autodeer.pulse attribute)": [[119, "autodeer.Pulse.Progression", false], [119, "id115", false], [119, "id153", false]], "progression (autodeer.pulses.pulse attribute)": [[129, "autodeer.pulses.Pulse.Progression", false]], "progression (pulse attribute)": [[34, "Pulse.Progression", false], [126, "Pulse.Progression", false]], "progtable (autodeer.hardware.bruker_tools.psparvar attribute)": [[97, "autodeer.hardware.Bruker_tools.PSparvar.progTable", false]], "progtable (autodeer.sequence attribute)": [[119, "autodeer.Sequence.progTable", false], [119, "id232", false], [119, "id53", false]], "progtable (autodeer.sequences.sequence attribute)": [[143, "autodeer.sequences.Sequence.progTable", false]], "progtable (psparvar attribute)": [[95, "PSparvar.progTable", false]], "progtable (sequence attribute)": [[49, "Sequence.progTable", false], [140, "Sequence.progTable", false]], "progtable_n (autodeer.hardware.bruker_tools.psparvar attribute)": [[97, "autodeer.hardware.Bruker_tools.PSparvar.progTable_n", false]], "progtable_n (psparvar attribute)": [[95, "PSparvar.progTable_n", false]], "project (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.project", false]], "project (autodeerworker attribute)": [[72, "autoDEERWorker.project", false]], "ps_length (autodeer.hardware.xepr_experiments.eldortune attribute)": [[118, "autodeer.hardware.xepr_experiments.ELDORtune.ps_length", false]], "ps_length (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[118, "autodeer.hardware.xepr_experiments.MPFUtune.ps_length", false]], "ps_length (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[118, "autodeer.hardware.xepr_experiments.PulseProfile.ps_length", false]], "ps_length (eldortune attribute)": [[115, "ELDORtune.ps_length", false]], "ps_length (mpfutune attribute)": [[116, "MPFUtune.ps_length", false]], "ps_length (pulseprofile attribute)": [[117, "PulseProfile.ps_length", false]], "psparvar (built-in class)": [[95, "PSparvar", false]], "psparvar (class in autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.PSparvar", false]], "psphasecycle (built-in class)": [[94, "PSPhaseCycle", false]], "psphasecycle (class in autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.PSPhaseCycle", false]], "pulse (built-in class)": [[34, "Pulse", false], [126, "Pulse", false]], "pulse (class in autodeer)": [[119, "autodeer.Pulse", false], [119, "id111", false], [119, "id149", false]], "pulse (class in autodeer.pulses)": [[129, "autodeer.pulses.Pulse", false]], "pulseprofile (built-in class)": [[117, "PulseProfile", false]], "pulseprofile (class in autodeer.hardware.xepr_experiments)": [[118, "autodeer.hardware.xepr_experiments.PulseProfile", false]], "pulses (autodeer.classes.interface attribute)": [[58, "autodeer.classes.Interface.pulses", false]], "pulses (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.pulses", false]], "pulses (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.pulses", false]], "pulses (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.pulses", false]], "pulses (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.pulses", false]], "pulses (autodeer.hardware.eth_awg.eth_awg_interface attribute)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.pulses", false]], "pulses (autodeer.interface attribute)": [[119, "autodeer.Interface.pulses", false], [119, "id212", false]], "pulses (autodeer.sequence attribute)": [[119, "autodeer.Sequence.pulses", false], [119, "id224", false], [119, "id45", false]], "pulses (autodeer.sequences.sequence attribute)": [[143, "autodeer.sequences.Sequence.pulses", false]], "pulses (autodeerui attribute)": [[70, "autoDEERUI.pulses", false], [79, "autoDEERUI.pulses", false]], "pulses (autodeerworker attribute)": [[72, "autoDEERWorker.pulses", false]], "pulses (dummyinterface attribute)": [[103, "dummyInterface.pulses", false]], "pulses (eth_awg_interface attribute)": [[98, "ETH_awg_interface.pulses", false]], "pulses (interface attribute)": [[29, "Interface.pulses", false], [56, "Interface.pulses", false]], "pulses (sequence attribute)": [[49, "Sequence.pulses", false], [140, "Sequence.pulses", false]], "pulsespel (autodeer.hardware.bruker_tools.psparvar attribute)": [[97, "autodeer.hardware.Bruker_tools.PSparvar.PulseSpel", false]], "pulsespel (built-in class)": [[96, "PulseSpel", false]], "pulsespel (class in autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel", false]], "pulsespel (psparvar attribute)": [[95, "PSparvar.PulseSpel", false]], "pump_frq (autodeer.hardware.xepr_experiments.deer attribute)": [[118, "autodeer.hardware.xepr_experiments.DEER.pump_frq", false]], "pump_frq (deer attribute)": [[114, "DEER.pump_frq", false]], "pyqt_table_from_dict() (in module autodeer.gui)": [[74, "autodeer.gui.pyqt_table_from_dict", false]], "pyqt_table_from_dict() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.pyqt_table_from_dict", false]], "q (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.Q", false]], "q (dummyinterface attribute)": [[103, "dummyInterface.Q", false]], "q_deer (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.q_DEER", false]], "q_deer (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.q_DEER", false]], "q_deer (autodeerui attribute)": [[70, "autoDEERUI.q_DEER", false], [79, "autoDEERUI.q_DEER", false]], "qcrit (autodeer.frequencysweptpulse property)": [[119, "autodeer.FrequencySweptPulse.Qcrit", false]], "qcrit (autodeer.pulses.frequencysweptpulse property)": [[129, "autodeer.pulses.FrequencySweptPulse.Qcrit", false]], "qcrit (frequencysweptpulse property)": [[25, "FrequencySweptPulse.Qcrit", false], [123, "FrequencySweptPulse.Qcrit", false]], "qtloghandler (built-in class)": [[31, "QtLogHandler", false]], "qtloghandler (class in autodeer.logging)": [[32, "autodeer.Logging.QtLogHandler", false]], "queue (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.queue", false]], "queue (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.queue", false]], "queue (autodeerui attribute)": [[70, "autoDEERUI.queue", false], [79, "autoDEERUI.queue", false]], "quick_deer_state (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.quick_deer_state", false]], "quick_deer_state (autodeerworker attribute)": [[72, "autoDEERWorker.quick_deer_state", false]], "quickdeer_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.quickdeer_result", false]], "quickdeer_result (autodeersignals attribute)": [[71, "autoDEERSignals.quickdeer_result", false]], "quickdeer_update (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.quickdeer_update", false]], "quickdeer_update (autodeersignals attribute)": [[71, "autoDEERSignals.quickdeer_update", false]], "raise_warning() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.raise_warning", false]], "raise_warning() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.raise_warning", false]], "raise_warning() (autodeerui method)": [[70, "autoDEERUI.raise_warning", false], [79, "autoDEERUI.raise_warning", false]], "read_table() (in module autodeer.gui)": [[74, "autodeer.gui.read_table", false]], "read_table() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.read_table", false]], "rectpulse (built-in class)": [[35, "RectPulse", false], [127, "RectPulse", false]], "rectpulse (class in autodeer)": [[119, "autodeer.RectPulse", false], [119, "id145", false]], "rectpulse (class in autodeer.pulses)": [[129, "autodeer.pulses.RectPulse", false]], "reduce_uuid (autodeer.sequence attribute)": [[119, "autodeer.Sequence.reduce_uuid", false], [119, "id227", false], [119, "id48", false]], "reduce_uuid (autodeer.sequences.sequence attribute)": [[143, "autodeer.sequences.Sequence.reduce_uuid", false]], "reduce_uuid (sequence attribute)": [[49, "Sequence.reduce_uuid", false], [140, "Sequence.reduce_uuid", false]], "refocusedecho2danalysis (built-in class)": [[36, "RefocusedEcho2DAnalysis", false], [39, "RefocusedEcho2DAnalysis", false]], "refocusedecho2danalysis (class in autodeer)": [[119, "autodeer.RefocusedEcho2DAnalysis", false]], "refocusedecho2danalysis (class in autodeer.relaxation)": [[41, "autodeer.Relaxation.RefocusedEcho2DAnalysis", false]], "refocusedecho2dsequence (built-in class)": [[37, "RefocusedEcho2DSequence", false], [137, "RefocusedEcho2DSequence", false]], "refocusedecho2dsequence (class in autodeer)": [[119, "autodeer.RefocusedEcho2DSequence", false]], "refocusedecho2dsequence (class in autodeer.sequences)": [[143, "autodeer.sequences.RefocusedEcho2DSequence", false]], "refresh_deer() (autodeer.gui.quickdeer.deerplot method)": [[85, "autodeer.gui.quickdeer.DEERplot.refresh_deer", false]], "refresh_deer() (deerplot method)": [[84, "DEERplot.refresh_deer", false]], "refresh_fieldsweep_after_fit() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_fieldsweep_after_fit() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_fieldsweep_after_fit() (autodeerui method)": [[70, "autoDEERUI.refresh_fieldsweep_after_fit", false], [79, "autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_relax() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.refresh_relax", false]], "refresh_relax() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.refresh_relax", false]], "refresh_relax() (autodeerui method)": [[70, "autoDEERUI.refresh_relax", false], [79, "autoDEERUI.refresh_relax", false]], "refresh_relax_figure() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.refresh_relax_figure", false]], "refresh_relax_figure() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.refresh_relax_figure", false]], "refresh_relax_figure() (autodeerui method)": [[70, "autoDEERUI.refresh_relax_figure", false], [79, "autoDEERUI.refresh_relax_figure", false]], "refresh_respro() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.refresh_respro", false]], "refresh_respro() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.refresh_respro", false]], "refresh_respro() (autodeerui method)": [[70, "autoDEERUI.refresh_respro", false], [79, "autoDEERUI.refresh_respro", false]], "refresh_t2() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.refresh_T2", false]], "refresh_t2() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.refresh_T2", false]], "refresh_t2() (autodeerui method)": [[70, "autoDEERUI.refresh_T2", false], [79, "autoDEERUI.refresh_T2", false]], "reim_colors (in module autodeer.colors)": [[59, "autodeer.colors.ReIm_colors", false]], "rel_positions (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.rel_positions", false]], "rel_positions (pulsespel attribute)": [[96, "PulseSpel.rel_positions", false]], "relax2d_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.Relax2D_result", false]], "relax2d_result (autodeersignals attribute)": [[71, "autoDEERSignals.Relax2D_result", false]], "relax_process() (in module autodeer.gui.main)": [[80, "autodeer.gui.main.relax_process", false]], "relax_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.relax_result", false]], "relax_result (autodeersignals attribute)": [[71, "autoDEERSignals.relax_result", false]], "relax_toolbar() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.relax_toolbar", false]], "relax_toolbar() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.relax_toolbar", false]], "relax_toolbar() (autodeerui method)": [[70, "autoDEERUI.relax_toolbar", false], [79, "autoDEERUI.relax_toolbar", false]], "remove_dynamic() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter.remove_dynamic", false]], "remove_dynamic() (autodeer.parameter method)": [[119, "autodeer.Parameter.remove_dynamic", false], [119, "id197", false], [119, "id26", false], [119, "id93", false]], "remove_dynamic() (parameter method)": [[33, "Parameter.remove_dynamic", false], [57, "Parameter.remove_dynamic", false]], "remove_echo() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.remove_echo", false]], "replacemode (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.ReplaceMode", false]], "replacemode (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.ReplaceMode", false]], "reporter (built-in class)": [[42, "Reporter", false], [130, "Reporter", false]], "reporter (class in autodeer)": [[119, "autodeer.Reporter", false]], "reporter (class in autodeer.reporter)": [[132, "autodeer.reporter.Reporter", false]], "reptime (autodeer.reptimescan attribute)": [[119, "autodeer.ReptimeScan.reptime", false]], "reptime (autodeer.sequences.reptimescan attribute)": [[143, "autodeer.sequences.ReptimeScan.reptime", false]], "reptime (reptimescan attribute)": [[44, "ReptimeScan.reptime", false], [138, "ReptimeScan.reptime", false]], "reptime_scan_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.reptime_scan_result", false]], "reptime_scan_result (autodeersignals attribute)": [[71, "autoDEERSignals.reptime_scan_result", false]], "reptimeanalysis (built-in class)": [[40, "ReptimeAnalysis", false], [43, "ReptimeAnalysis", false]], "reptimeanalysis (class in autodeer)": [[119, "autodeer.ReptimeAnalysis", false]], "reptimeanalysis (class in autodeer.relaxation)": [[41, "autodeer.Relaxation.ReptimeAnalysis", false]], "reptimescan (built-in class)": [[44, "ReptimeScan", false], [138, "ReptimeScan", false]], "reptimescan (class in autodeer)": [[119, "autodeer.ReptimeScan", false]], "reptimescan (class in autodeer.sequences)": [[143, "autodeer.sequences.ReptimeScan", false]], "rerun_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.rerun_exp", false]], "rerun_exp() (xeprapilink method)": [[101, "XeprAPILink.rerun_exp", false]], "resample_and_shift_vector() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.resample_and_shift_vector", false]], "resfields() (in module autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.resfields", false]], "resonator (autodeer.classes.interface attribute)": [[58, "autodeer.classes.Interface.resonator", false]], "resonator (autodeer.interface attribute)": [[119, "autodeer.Interface.resonator", false], [119, "id215", false]], "resonator (interface attribute)": [[29, "Interface.resonator", false], [56, "Interface.resonator", false]], "resonator_list (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.resonator_list", false]], "resonator_list (dummyinterface attribute)": [[103, "dummyInterface.resonator_list", false]], "resonatorprofileanalysis (built-in class)": [[45, "ResonatorProfileAnalysis", false], [47, "ResonatorProfileAnalysis", false]], "resonatorprofileanalysis (class in autodeer)": [[119, "autodeer.ResonatorProfileAnalysis", false]], "resonatorprofileanalysis (class in autodeer.respro)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis", false]], "resonatorprofilesequence (built-in class)": [[48, "ResonatorProfileSequence", false], [139, "ResonatorProfileSequence", false]], "resonatorprofilesequence (class in autodeer)": [[119, "autodeer.ResonatorProfileSequence", false]], "resonatorprofilesequence (class in autodeer.sequences)": [[143, "autodeer.sequences.ResonatorProfileSequence", false]], "respro_process() (in module autodeer.gui.main)": [[80, "autodeer.gui.main.respro_process", false]], "respro_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.respro_result", false]], "respro_result (autodeersignals attribute)": [[71, "autoDEERSignals.respro_result", false]], "respro_toolbar() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.respro_toolbar", false]], "respro_toolbar() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.respro_toolbar", false]], "respro_toolbar() (autodeerui method)": [[70, "autoDEERUI.respro_toolbar", false], [79, "autoDEERUI.respro_toolbar", false]], "result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.result", false]], "result (autodeer.gui.main.workersignals attribute)": [[80, "autodeer.gui.main.WorkerSignals.result", false]], "result (autodeer.gui.tools.workersignals attribute)": [[89, "autodeer.gui.tools.WorkerSignals.result", false]], "result (autodeer.gui.workersignals attribute)": [[74, "autodeer.gui.WorkerSignals.result", false]], "result (autodeersignals attribute)": [[71, "autoDEERSignals.result", false]], "result (workersignals attribute)": [[68, "WorkerSignals.result", false], [78, "WorkerSignals.result", false], [88, "WorkerSignals.result", false]], "result_signal (autodeer.gui.modetune.get_dataworker attribute)": [[83, "autodeer.gui.modetune.get_dataWorker.result_signal", false]], "result_signal (get_dataworker attribute)": [[82, "get_dataWorker.result_signal", false]], "results (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.results", false]], "results (autodeerworker attribute)": [[72, "autoDEERWorker.results", false]], "rng (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy.rng", false]], "round_step() (in module autodeer)": [[119, "autodeer.round_step", false]], "round_step() (in module autodeer.utils)": [[145, "autodeer.utils.round_step", false]], "run() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.run", false]], "run() (autodeer.gui.main.worker method)": [[80, "autodeer.gui.main.Worker.run", false]], "run() (autodeer.gui.modetune.get_dataworker method)": [[83, "autodeer.gui.modetune.get_dataWorker.run", false]], "run() (autodeer.gui.tools.worker method)": [[89, "autodeer.gui.tools.Worker.run", false]], "run() (autodeer.gui.worker method)": [[74, "autodeer.gui.Worker.run", false]], "run() (autodeerworker method)": [[72, "autoDEERWorker.run", false]], "run() (get_dataworker method)": [[82, "get_dataWorker.run", false]], "run() (worker method)": [[67, "Worker.run", false], [77, "Worker.run", false], [87, "Worker.run", false]], "run_2d_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_2D_relax", false]], "run_2d_relax() (autodeerworker method)": [[72, "autoDEERWorker.run_2D_relax", false]], "run_4p() (autodeer.hardware.xepr_experiments.deer method)": [[118, "autodeer.hardware.xepr_experiments.DEER.run_4p", false]], "run_4p() (deer method)": [[114, "DEER.run_4p", false]], "run_5p() (autodeer.hardware.xepr_experiments.deer method)": [[118, "autodeer.hardware.xepr_experiments.DEER.run_5p", false]], "run_5p() (deer method)": [[114, "DEER.run_5p", false]], "run_cp() (autodeer.hardware.xepr_experiments.deer method)": [[118, "autodeer.hardware.xepr_experiments.DEER.run_CP", false]], "run_cp() (deer method)": [[114, "DEER.run_CP", false]], "run_cp_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_CP_relax", false]], "run_cp_relax() (autodeerworker method)": [[72, "autoDEERWorker.run_CP_relax", false]], "run_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_deer", false]], "run_deer() (autodeerworker method)": [[72, "autoDEERWorker.run_deer", false]], "run_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.run_exp", false]], "run_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.run_exp", false]], "run_exp() (dummy_api method)": [[105, "dummy_api.run_exp", false]], "run_exp() (xeprapilink method)": [[101, "XeprAPILink.run_exp", false]], "run_fsweep() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_fsweep", false]], "run_fsweep() (autodeerworker method)": [[72, "autoDEERWorker.run_fsweep", false]], "run_general() (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.run_general", false]], "run_long_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_long_deer", false]], "run_long_deer() (autodeerworker method)": [[72, "autoDEERWorker.run_long_deer", false]], "run_quick_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_quick_deer", false]], "run_quick_deer() (autodeerworker method)": [[72, "autoDEERWorker.run_quick_deer", false]], "run_reptime_opt() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_reptime_opt", false]], "run_reptime_opt() (autodeerworker method)": [[72, "autoDEERWorker.run_reptime_opt", false]], "run_respro() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_respro", false]], "run_respro() (autodeerworker method)": [[72, "autoDEERWorker.run_respro", false]], "run_t2_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_T2_relax", false]], "run_t2_relax() (autodeerworker method)": [[72, "autoDEERWorker.run_T2_relax", false]], "runadvancedautodeer() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.RunAdvancedAutoDEER", false]], "runadvancedautodeer() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.RunAdvancedAutoDEER", false]], "runadvancedautodeer() (autodeerui method)": [[70, "autoDEERUI.RunAdvancedAutoDEER", false], [79, "autoDEERUI.RunAdvancedAutoDEER", false]], "runautodeer() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.RunAutoDEER", false]], "runautodeer() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.RunAutoDEER", false]], "runautodeer() (autodeerui method)": [[70, "autoDEERUI.RunAutoDEER", false], [79, "autoDEERUI.RunAutoDEER", false]], "runfullyautodeer() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.RunFullyAutoDEER", false]], "runfullyautodeer() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.RunFullyAutoDEER", false]], "runfullyautodeer() (autodeerui method)": [[70, "autoDEERUI.RunFullyAutoDEER", false], [79, "autoDEERUI.RunFullyAutoDEER", false]], "s (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.S", false]], "s (spinsystem attribute)": [[21, "SpinSystem.S", false]], "sampleconccombobox_opts (in module autodeer.gui.main)": [[80, "autodeer.gui.main.SampleConcComboBox_opts", false]], "samplename (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.samplename", false]], "samplename (autodeerworker attribute)": [[72, "autoDEERWorker.samplename", false]], "save() (autodeer.classes.parameter method)": [[58, "autodeer.classes.Parameter.save", false]], "save() (autodeer.dataset.epraccessor method)": [[66, "autodeer.dataset.EPRAccessor.save", false]], "save() (autodeer.epraccessor method)": [[119, "autodeer.EPRAccessor.save", false]], "save() (autodeer.hardware.bruker_tools.pulsespel method)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.save", false]], "save() (autodeer.parameter method)": [[119, "autodeer.Parameter.save", false], [119, "id103", false], [119, "id207", false], [119, "id36", false]], "save() (autodeer.pulse method)": [[119, "autodeer.Pulse.save", false], [119, "id133", false], [119, "id171", false]], "save() (autodeer.pulses.pulse method)": [[129, "autodeer.pulses.Pulse.save", false]], "save() (autodeer.sequence method)": [[119, "autodeer.Sequence.save", false], [119, "id250", false], [119, "id71", false]], "save() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence.save", false]], "save() (epraccessor method)": [[19, "EPRAccessor.save", false], [65, "EPRAccessor.save", false]], "save() (parameter method)": [[33, "Parameter.save", false], [57, "Parameter.save", false]], "save() (pulse method)": [[34, "Pulse.save", false], [126, "Pulse.save", false]], "save() (pulsespel method)": [[96, "PulseSpel.save", false]], "save() (sequence method)": [[49, "Sequence.save", false], [140, "Sequence.save", false]], "save_data() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.save_data", false]], "save_data() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.save_data", false]], "save_data() (autodeerui method)": [[70, "autoDEERUI.save_data", false], [79, "autoDEERUI.save_data", false]], "save_data() (in module autodeer.gui.modetune)": [[83, "autodeer.gui.modetune.save_data", false]], "save_file() (in module autodeer)": [[119, "autodeer.save_file", false]], "save_file() (in module autodeer.utils)": [[145, "autodeer.utils.save_file", false]], "save_log_to_file() (autodeer.gui.log.logdialog method)": [[76, "autodeer.gui.log.LogDialog.save_log_to_file", false]], "save_log_to_file() (logdialog method)": [[75, "LogDialog.save_log_to_file", false]], "save_pulsespel_def() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.save_PulseSpel_def", false]], "save_pulsespel_def() (xeprapilink method)": [[101, "XeprAPILink.save_PulseSpel_def", false]], "save_pulsespel_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.save_PulseSpel_exp", false]], "save_pulsespel_exp() (xeprapilink method)": [[101, "XeprAPILink.save_PulseSpel_exp", false]], "savefolder (autodeer.classes.interface attribute)": [[58, "autodeer.classes.Interface.savefolder", false]], "savefolder (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.savefolder", false]], "savefolder (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.savefolder", false]], "savefolder (autodeer.hardware.eth_awg.eth_awg_interface property)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.savefolder", false]], "savefolder (autodeer.interface attribute)": [[119, "autodeer.Interface.savefolder", false], [119, "id213", false]], "savefolder (brukerawg attribute)": [[90, "BrukerAWG.savefolder", false]], "savefolder (brukermpfu attribute)": [[92, "BrukerMPFU.savefolder", false]], "savefolder (eth_awg_interface property)": [[98, "ETH_awg_interface.savefolder", false]], "savefolder (interface attribute)": [[29, "Interface.savefolder", false], [56, "Interface.savefolder", false]], "savename (autodeer.classes.interface attribute)": [[58, "autodeer.classes.Interface.savename", false]], "savename (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.savename", false]], "savename (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.savename", false]], "savename (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.savename", false]], "savename (autodeer.interface attribute)": [[119, "autodeer.Interface.savename", false], [119, "id214", false]], "savename (autodeerworker attribute)": [[72, "autoDEERWorker.savename", false]], "savename (brukerawg attribute)": [[90, "BrukerAWG.savename", false]], "savename (brukermpfu attribute)": [[92, "BrukerMPFU.savename", false]], "savename (interface attribute)": [[29, "Interface.savename", false], [56, "Interface.savename", false]], "scale (autodeer.delay attribute)": [[119, "autodeer.Delay.scale", false], [119, "id144", false]], "scale (autodeer.detection attribute)": [[119, "autodeer.Detection.scale", false], [119, "id138", false], [119, "id176", false]], "scale (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.scale", false]], "scale (autodeer.pulses.delay attribute)": [[129, "autodeer.pulses.Delay.scale", false]], "scale (autodeer.pulses.detection attribute)": [[129, "autodeer.pulses.Detection.scale", false]], "scale (delay attribute)": [[17, "Delay.scale", false], [121, "Delay.scale", false]], "scale (detection attribute)": [[18, "Detection.scale", false], [122, "Detection.scale", false]], "scale (dummyinterface attribute)": [[103, "dummyInterface.scale", false]], "scipy_filter_dc() (in module autodeer.hardware.eth_awg_load)": [[100, "autodeer.hardware.ETH_awg_load.scipy_filter_dc", false]], "select_pcyc() (autodeer.deersequence method)": [[119, "autodeer.DEERSequence.select_pcyc", false], [119, "id268", false]], "select_pcyc() (autodeer.sequences.deersequence method)": [[143, "autodeer.sequences.DEERSequence.select_pcyc", false]], "select_pcyc() (deersequence method)": [[15, "DEERSequence.select_pcyc", false], [134, "DEERSequence.select_pcyc", false]], "select_resonator() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.select_resonator", false]], "select_resonator() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.select_resonator", false]], "select_resonator() (autodeerui method)": [[70, "autoDEERUI.select_resonator", false], [79, "autoDEERUI.select_resonator", false]], "seq (autodeer.relaxation.reptimeanalysis attribute)": [[41, "autodeer.Relaxation.ReptimeAnalysis.seq", false]], "seq (autodeer.reptimeanalysis attribute)": [[119, "autodeer.ReptimeAnalysis.seq", false]], "seq (reptimeanalysis attribute)": [[40, "ReptimeAnalysis.seq", false], [43, "ReptimeAnalysis.seq", false]], "seqtable_steps (autodeer.sequence property)": [[119, "autodeer.Sequence.seqtable_steps", false], [119, "id223", false], [119, "id44", false]], "seqtable_steps (autodeer.sequences.sequence property)": [[143, "autodeer.sequences.Sequence.seqtable_steps", false]], "seqtable_steps (sequence property)": [[49, "Sequence.seqtable_steps", false], [140, "Sequence.seqtable_steps", false]], "sequence (autodeer.dataset.epraccessor property)": [[66, "autodeer.dataset.EPRAccessor.sequence", false]], "sequence (autodeer.epraccessor property)": [[119, "autodeer.EPRAccessor.sequence", false]], "sequence (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.sequence", false]], "sequence (built-in class)": [[49, "Sequence", false], [140, "Sequence", false]], "sequence (class in autodeer)": [[119, "autodeer.Sequence", false], [119, "id222", false], [119, "id43", false]], "sequence (class in autodeer.sequences)": [[143, "autodeer.sequences.Sequence", false]], "sequence (epraccessor property)": [[19, "EPRAccessor.sequence", false], [65, "EPRAccessor.sequence", false]], "sequence (pulsespel attribute)": [[96, "PulseSpel.sequence", false]], "set_2d_max_tau() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.set_2D_max_tau", false]], "set_2d_max_tau() (autodeerworker method)": [[72, "autoDEERWorker.set_2D_max_tau", false]], "set_acquisition_mode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_Acquisition_mode", false]], "set_acquisition_mode() (xeprapilink method)": [[101, "XeprAPILink.set_Acquisition_mode", false]], "set_attenuator() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_attenuator", false]], "set_attenuator() (xeprapilink method)": [[101, "XeprAPILink.set_attenuator", false]], "set_config_file() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_config_file", false]], "set_config_file() (xeprapilink method)": [[101, "XeprAPILink.set_config_file", false]], "set_eldor_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_ELDOR_freq", false]], "set_eldor_freq() (xeprapilink method)": [[101, "XeprAPILink.set_ELDOR_freq", false]], "set_field() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_field", false]], "set_field() (xeprapilink method)": [[101, "XeprAPILink.set_field", false]], "set_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_freq", false]], "set_freq() (xeprapilink method)": [[101, "XeprAPILink.set_freq", false]], "set_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_hidden_param", false]], "set_hidden_param() (xeprapilink method)": [[101, "XeprAPILink.set_hidden_param", false]], "set_mw_amp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_MW_amp", false]], "set_mw_amp() (xeprapilink method)": [[101, "XeprAPILink.set_MW_amp", false]], "set_noise_mode() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.set_noise_mode", false]], "set_noise_mode() (autodeerworker method)": [[72, "autoDEERWorker.set_noise_mode", false]], "set_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_param", false]], "set_param() (xeprapilink method)": [[101, "XeprAPILink.set_param", false]], "set_phase() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_phase", false]], "set_phase() (xeprapilink method)": [[101, "XeprAPILink.set_phase", false]], "set_phasecycle() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PhaseCycle", false]], "set_phasecycle() (xeprapilink method)": [[101, "XeprAPILink.set_PhaseCycle", false]], "set_pulsespel_def_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_def_filepath", false]], "set_pulsespel_def_filepath() (xeprapilink method)": [[101, "XeprAPILink.set_PulseSpel_def_filepath", false]], "set_pulsespel_exp_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_exp_filepath", false]], "set_pulsespel_exp_filepath() (xeprapilink method)": [[101, "XeprAPILink.set_PulseSpel_exp_filepath", false]], "set_pulsespel_experiment() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_experiment", false]], "set_pulsespel_experiment() (xeprapilink method)": [[101, "XeprAPILink.set_PulseSpel_experiment", false]], "set_pulsespel_phase_cycling() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_phase_cycling", false]], "set_pulsespel_phase_cycling() (xeprapilink method)": [[101, "XeprAPILink.set_PulseSpel_phase_cycling", false]], "set_pulsespel_var() (autodeer.hardware.dummy_xepr.dummy_api method)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.set_PulseSpel_var", false]], "set_pulsespel_var() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_var", false]], "set_pulsespel_var() (dummy_api method)": [[105, "dummy_api.set_PulseSpel_var", false]], "set_pulsespel_var() (xeprapilink method)": [[101, "XeprAPILink.set_PulseSpel_var", false]], "set_replacemode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_ReplaceMode", false]], "set_replacemode() (xeprapilink method)": [[101, "XeprAPILink.set_ReplaceMode", false]], "set_snr_target() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_snr_target", false]], "set_snr_target() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.set_snr_target", false]], "set_snr_threshold() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_snr_threshold", false]], "set_snr_threshold() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.set_snr_threshold", false]], "set_spectrometer_connected_light() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.set_spectrometer_connected_light", false]], "set_spectrometer_connected_light() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.set_spectrometer_connected_light", false]], "set_spectrometer_connected_light() (autodeerui method)": [[70, "autoDEERUI.set_spectrometer_connected_light", false], [79, "autoDEERUI.set_spectrometer_connected_light", false]], "set_sweep_width() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_sweep_width", false]], "set_sweep_width() (xeprapilink method)": [[101, "XeprAPILink.set_sweep_width", false]], "set_time_target() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_time_target", false]], "set_time_target() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.set_time_target", false]], "set_video_bandwidth() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_video_bandwidth", false]], "set_video_bandwidth() (xeprapilink method)": [[101, "XeprAPILink.set_video_bandwidth", false]], "set_video_gain() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_video_gain", false]], "set_video_gain() (xeprapilink method)": [[101, "XeprAPILink.set_video_gain", false]], "setup() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.setup", false]], "setup() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.setup", false]], "setup() (brukerawg method)": [[90, "BrukerAWG.setup", false]], "setup() (brukermpfu method)": [[92, "BrukerMPFU.setup", false]], "setup_flag (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.setup_flag", false]], "setup_flag (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.setup_flag", false]], "setup_flag (brukerawg attribute)": [[90, "BrukerAWG.setup_flag", false]], "setup_flag (brukermpfu attribute)": [[92, "BrukerMPFU.setup_flag", false]], "setup_inputs() (autodeer.gui.quickdeer.deerplot method)": [[85, "autodeer.gui.quickdeer.DEERplot.setup_inputs", false]], "setup_inputs() (deerplot method)": [[84, "DEERplot.setup_inputs", false]], "setup_logs() (in module autodeer.logging)": [[32, "autodeer.Logging.setup_logs", false]], "seven_pulse() (autodeer.deersequence method)": [[119, "autodeer.DEERSequence.seven_pulse", false], [119, "id266", false]], "seven_pulse() (autodeer.sequences.deersequence method)": [[143, "autodeer.sequences.DEERSequence.seven_pulse", false]], "seven_pulse() (deersequence method)": [[15, "DEERSequence.seven_pulse", false], [134, "DEERSequence.seven_pulse", false]], "shade_colors (in module autodeer.colors)": [[59, "autodeer.colors.shade_colors", false]], "shift_detfreq_to_zero() (autodeer.sequence method)": [[119, "autodeer.Sequence.shift_detfreq_to_zero", false], [119, "id239", false], [119, "id60", false]], "shift_detfreq_to_zero() (autodeer.sequences.sequence method)": [[143, "autodeer.sequences.Sequence.shift_detfreq_to_zero", false]], "shift_detfreq_to_zero() (sequence method)": [[49, "Sequence.shift_detfreq_to_zero", false], [140, "Sequence.shift_detfreq_to_zero", false]], "shift_pulse_freq() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.shift_pulse_freq", false]], "shotreptime (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.ShotRepTime", false]], "shotreptime (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.ShotRepTime", false]], "shots (autodeer.sequence attribute)": [[119, "autodeer.Sequence.shots", false], [119, "id230", false], [119, "id51", false]], "shots (autodeer.sequences.sequence attribute)": [[143, "autodeer.sequences.Sequence.shots", false]], "shots (sequence attribute)": [[49, "Sequence.shots", false], [140, "Sequence.shots", false]], "shotsploop (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.ShotsPLoop", false]], "shotsploop (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.ShotsPLoop", false]], "signal (autodeer.logging.qtloghandler attribute)": [[32, "autodeer.Logging.QtLogHandler.signal", false]], "signal (qtloghandler attribute)": [[31, "QtLogHandler.signal", false]], "signalphase (autodeer.hardware.dummy_xepr.dummy_hidden attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_hidden.SignalPhase", false]], "signalphase (dummy_hidden attribute)": [[108, "dummy_hidden.SignalPhase", false]], "signals (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.signals", false]], "signals (autodeer.gui.main.worker attribute)": [[80, "autodeer.gui.main.Worker.signals", false]], "signals (autodeer.gui.modetune.get_dataworker attribute)": [[83, "autodeer.gui.modetune.get_dataWorker.signals", false]], "signals (autodeer.gui.tools.worker attribute)": [[89, "autodeer.gui.tools.Worker.signals", false]], "signals (autodeer.gui.worker attribute)": [[74, "autodeer.gui.Worker.signals", false]], "signals (autodeerworker attribute)": [[72, "autoDEERWorker.signals", false]], "signals (get_dataworker attribute)": [[82, "get_dataWorker.signals", false]], "signals (worker attribute)": [[67, "Worker.signals", false], [77, "Worker.signals", false], [87, "Worker.signals", false]], "simulate() (autodeer.deersequence method)": [[119, "autodeer.DEERSequence.simulate", false], [119, "id269", false]], "simulate() (autodeer.sequences.deersequence method)": [[143, "autodeer.sequences.DEERSequence.simulate", false]], "simulate() (deersequence method)": [[15, "DEERSequence.simulate", false], [134, "DEERSequence.simulate", false]], "sincpulse (built-in class)": [[50, "SincPulse", false], [128, "SincPulse", false]], "sincpulse (class in autodeer)": [[119, "autodeer.SincPulse", false]], "sincpulse (class in autodeer.pulses)": [[129, "autodeer.pulses.SincPulse", false]], "size (autodeer.hardware.dummy_xepr.dummy_dataset attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_dataset.size", false]], "size (dummy_dataset attribute)": [[107, "dummy_dataset.size", false]], "smooth() (autodeer.fieldsweep.fieldsweepanalysis method)": [[22, "autodeer.FieldSweep.FieldSweepAnalysis.smooth", false]], "smooth() (autodeer.fieldsweepanalysis method)": [[119, "autodeer.FieldSweepAnalysis.smooth", false]], "smooth() (fieldsweepanalysis method)": [[20, "FieldSweepAnalysis.smooth", false], [23, "FieldSweepAnalysis.smooth", false]], "snr (autodeer.dataset.epraccessor property)": [[66, "autodeer.dataset.EPRAccessor.SNR", false]], "snr (autodeer.epraccessor property)": [[119, "autodeer.EPRAccessor.SNR", false]], "snr (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.SNR", false]], "snr (dummyinterface attribute)": [[103, "dummyInterface.SNR", false]], "snr (epraccessor property)": [[19, "EPRAccessor.SNR", false], [65, "EPRAccessor.SNR", false]], "snr_normalize() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.snr_normalize", false]], "snr_normalize() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.snr_normalize", false]], "snr_target (autodeer.twod_experiment.twodexperimentanalysis attribute)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.snr_target", false]], "snr_target (twodexperimentanalysis attribute)": [[53, "TwoDExperimentAnalysis.snr_target", false]], "snrcriteria (built-in class)": [[62, "SNRCriteria", false]], "snrcriteria (class in autodeer.criteria)": [[64, "autodeer.criteria.SNRCriteria", false]], "sop() (in module autodeer)": [[119, "autodeer.sop", false], [119, "id108", false]], "sop() (in module autodeer.utils)": [[145, "autodeer.utils.sop", false]], "spec_config (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.spec_config", false]], "spec_config (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.spec_config", false]], "spec_config (brukerawg attribute)": [[90, "BrukerAWG.spec_config", false]], "spec_config (brukermpfu attribute)": [[92, "BrukerMPFU.spec_config", false]], "spectromterinterface (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.spectromterInterface", false]], "spectromterinterface (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.spectromterInterface", false]], "spectromterinterface (autodeerui attribute)": [[70, "autoDEERUI.spectromterInterface", false], [79, "autoDEERUI.spectromterInterface", false]], "speedup (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.speedup", false]], "speedup (dummyinterface attribute)": [[103, "dummyInterface.speedup", false]], "spfutune() (in module autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU.SPFUtune", false]], "spins (autodeer.fieldsweep.spinsystem attribute)": [[22, "autodeer.FieldSweep.SpinSystem.Spins", false]], "spins (spinsystem attribute)": [[21, "SpinSystem.Spins", false]], "spinsystem (built-in class)": [[21, "SpinSystem", false]], "spinsystem (class in autodeer.fieldsweep)": [[22, "autodeer.FieldSweep.SpinSystem", false]], "srt (autodeer.hardware.xepr_experiments.deer attribute)": [[118, "autodeer.hardware.xepr_experiments.DEER.srt", false]], "srt (autodeer.hardware.xepr_experiments.eldortune attribute)": [[118, "autodeer.hardware.xepr_experiments.ELDORtune.srt", false]], "srt (autodeer.hardware.xepr_experiments.mpfutune attribute)": [[118, "autodeer.hardware.xepr_experiments.MPFUtune.srt", false]], "srt (autodeer.hardware.xepr_experiments.pulseprofile attribute)": [[118, "autodeer.hardware.xepr_experiments.PulseProfile.srt", false]], "srt (deer attribute)": [[114, "DEER.srt", false]], "srt (eldortune attribute)": [[115, "ELDORtune.srt", false]], "srt (mpfutune attribute)": [[116, "MPFUtune.srt", false]], "srt (pulseprofile attribute)": [[117, "PulseProfile.srt", false]], "start_mode_tune() (autodeer.gui.modetune.modetune method)": [[83, "autodeer.gui.modetune.ModeTune.start_mode_tune", false]], "start_mode_tune() (modetune method)": [[81, "ModeTune.start_mode_tune", false]], "start_time (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.start_time", false]], "start_time (dummyinterface attribute)": [[103, "dummyInterface.start_time", false]], "starttime (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.starttime", false]], "starttime (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.starttime", false]], "starttime (autodeerui attribute)": [[70, "autoDEERUI.starttime", false], [79, "autoDEERUI.starttime", false]], "state (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.state", false]], "state (dummyinterface attribute)": [[103, "dummyInterface.state", false]], "status (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.status", false]], "status (autodeersignals attribute)": [[71, "autoDEERSignals.status", false]], "step (autodeer.reptimescan attribute)": [[119, "autodeer.ReptimeScan.step", false]], "step (autodeer.sequences.reptimescan attribute)": [[143, "autodeer.sequences.ReptimeScan.step", false]], "step (reptimescan attribute)": [[44, "ReptimeScan.step", false], [138, "ReptimeScan.step", false]], "step_hash (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.step_hash", false]], "step_hash (pulsespel attribute)": [[96, "PulseSpel.step_hash", false]], "step_parameters() (in module autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU.step_parameters", false]], "stop() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.stop", false]], "stop() (autodeerworker method)": [[72, "autoDEERWorker.stop", false]], "stop_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[112, "autodeer.hardware.dummy_xepr.dummy_api.stop_exp", false]], "stop_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.stop_exp", false]], "stop_exp() (dummy_api method)": [[105, "dummy_api.stop_exp", false]], "stop_exp() (xeprapilink method)": [[101, "XeprAPILink.stop_exp", false]], "stop_flag (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.stop_flag", false]], "stop_flag (autodeerworker attribute)": [[72, "autoDEERWorker.stop_flag", false]], "story (autodeer.reporter attribute)": [[119, "autodeer.Reporter.story", false]], "story (autodeer.reporter.reporter attribute)": [[132, "autodeer.reporter.Reporter.story", false]], "story (reporter attribute)": [[42, "Reporter.story", false], [130, "Reporter.story", false]], "str_to_list_type() (in module autodeer.gui)": [[74, "autodeer.gui.str_to_list_type", false]], "str_to_list_type() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.str_to_list_type", false]], "styles (in module autodeer.reporter)": [[132, "autodeer.reporter.styles", false]], "svgflowable (built-in class)": [[131, "SvgFlowable", false]], "svgflowable (class in autodeer.reporter)": [[132, "autodeer.reporter.SvgFlowable", false]], "sweeprate (autodeer.chirppulse property)": [[119, "autodeer.ChirpPulse.sweeprate", false]], "sweeprate (autodeer.frequencysweptpulse property)": [[119, "autodeer.FrequencySweptPulse.sweeprate", false]], "sweeprate (autodeer.hspulse property)": [[119, "autodeer.HSPulse.sweeprate", false]], "sweeprate (autodeer.pulses.chirppulse property)": [[129, "autodeer.pulses.ChirpPulse.sweeprate", false]], "sweeprate (autodeer.pulses.frequencysweptpulse property)": [[129, "autodeer.pulses.FrequencySweptPulse.sweeprate", false]], "sweeprate (autodeer.pulses.hspulse property)": [[129, "autodeer.pulses.HSPulse.sweeprate", false]], "sweeprate (chirppulse property)": [[14, "ChirpPulse.sweeprate", false], [120, "ChirpPulse.sweeprate", false]], "sweeprate (frequencysweptpulse property)": [[25, "FrequencySweptPulse.sweeprate", false], [123, "FrequencySweptPulse.sweeprate", false]], "sweeprate (hspulse property)": [[27, "HSPulse.sweeprate", false], [125, "HSPulse.sweeprate", false]], "sweepspexp (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.SweepsPExp", false]], "sweepspexp (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.SweepsPExp", false]], "sweepwidth (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.SweepWidth", false]], "sweepwidth (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.SweepWidth", false]], "t (autodeer.resonatorprofileanalysis attribute)": [[119, "autodeer.ResonatorProfileAnalysis.t", false]], "t (autodeer.respro.resonatorprofileanalysis attribute)": [[46, "autodeer.ResPro.ResonatorProfileAnalysis.t", false]], "t (resonatorprofileanalysis attribute)": [[45, "ResonatorProfileAnalysis.t", false], [47, "ResonatorProfileAnalysis.t", false]], "t2_process() (in module autodeer.gui.main)": [[80, "autodeer.gui.main.T2_process", false]], "t2_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.T2_result", false]], "t2_result (autodeersignals attribute)": [[71, "autoDEERSignals.T2_result", false]], "t2relaxationsequence (built-in class)": [[51, "T2RelaxationSequence", false], [141, "T2RelaxationSequence", false]], "t2relaxationsequence (class in autodeer)": [[119, "autodeer.T2RelaxationSequence", false]], "t2relaxationsequence (class in autodeer.sequences)": [[143, "autodeer.sequences.T2RelaxationSequence", false]], "tau (autodeer.carrpurcellsequence attribute)": [[119, "autodeer.CarrPurcellSequence.tau", false]], "tau (autodeer.sequences.carrpurcellsequence attribute)": [[143, "autodeer.sequences.CarrPurcellSequence.tau", false]], "tau (autodeer.sequences.t2relaxationsequence attribute)": [[143, "autodeer.sequences.T2RelaxationSequence.tau", false]], "tau (autodeer.t2relaxationsequence attribute)": [[119, "autodeer.T2RelaxationSequence.tau", false]], "tau (carrpurcellsequence attribute)": [[13, "CarrPurcellSequence.tau", false], [133, "CarrPurcellSequence.tau", false]], "tau (t2relaxationsequence attribute)": [[51, "T2RelaxationSequence.tau", false], [141, "T2RelaxationSequence.tau", false]], "tau1 (autodeer.deersequence attribute)": [[119, "autodeer.DEERSequence.tau1", false], [119, "id257", false]], "tau1 (autodeer.refocusedecho2dsequence attribute)": [[119, "autodeer.RefocusedEcho2DSequence.tau1", false]], "tau1 (autodeer.sequences.deersequence attribute)": [[143, "autodeer.sequences.DEERSequence.tau1", false]], "tau1 (autodeer.sequences.refocusedecho2dsequence attribute)": [[143, "autodeer.sequences.RefocusedEcho2DSequence.tau1", false]], "tau1 (deersequence attribute)": [[15, "DEERSequence.tau1", false], [134, "DEERSequence.tau1", false]], "tau1 (refocusedecho2dsequence attribute)": [[37, "RefocusedEcho2DSequence.tau1", false], [137, "RefocusedEcho2DSequence.tau1", false]], "tau1us (autodeer.deersequence attribute)": [[119, "autodeer.DEERSequence.tau1us", false], [119, "id256", false]], "tau1us (autodeer.sequences.deersequence attribute)": [[143, "autodeer.sequences.DEERSequence.tau1us", false]], "tau1us (deersequence attribute)": [[15, "DEERSequence.tau1us", false], [134, "DEERSequence.tau1us", false]], "tau2 (autodeer.deersequence attribute)": [[119, "autodeer.DEERSequence.tau2", false], [119, "id258", false]], "tau2 (autodeer.refocusedecho2dsequence attribute)": [[119, "autodeer.RefocusedEcho2DSequence.tau2", false]], "tau2 (autodeer.sequences.deersequence attribute)": [[143, "autodeer.sequences.DEERSequence.tau2", false]], "tau2 (autodeer.sequences.refocusedecho2dsequence attribute)": [[143, "autodeer.sequences.RefocusedEcho2DSequence.tau2", false]], "tau2 (deersequence attribute)": [[15, "DEERSequence.tau2", false], [134, "DEERSequence.tau2", false]], "tau2 (refocusedecho2dsequence attribute)": [[37, "RefocusedEcho2DSequence.tau2", false], [137, "RefocusedEcho2DSequence.tau2", false]], "tau_init (autodeer.refocusedecho2dsequence attribute)": [[119, "autodeer.RefocusedEcho2DSequence.tau_init", false]], "tau_init (autodeer.sequences.refocusedecho2dsequence attribute)": [[143, "autodeer.sequences.RefocusedEcho2DSequence.tau_init", false]], "tau_init (refocusedecho2dsequence attribute)": [[37, "RefocusedEcho2DSequence.tau_init", false], [137, "RefocusedEcho2DSequence.tau_init", false]], "temp_dir (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.temp_dir", false]], "temp_dir (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.temp_dir", false]], "temp_dir (brukerawg attribute)": [[90, "BrukerAWG.temp_dir", false]], "temp_dir (brukermpfu attribute)": [[92, "BrukerMPFU.temp_dir", false]], "template (autodeer.reporter attribute)": [[119, "autodeer.Reporter.template", false]], "template (autodeer.reporter.reporter attribute)": [[132, "autodeer.reporter.Reporter.template", false]], "template (reporter attribute)": [[42, "Reporter.template", false], [130, "Reporter.template", false]], "terminate() (autodeer.classes.interface method)": [[58, "autodeer.classes.Interface.terminate", false]], "terminate() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.terminate", false]], "terminate() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.terminate", false]], "terminate() (autodeer.hardware.dummy.dummyinterface method)": [[104, "autodeer.hardware.dummy.dummyInterface.terminate", false]], "terminate() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.terminate", false]], "terminate() (autodeer.interface method)": [[119, "autodeer.Interface.terminate", false], [119, "id220", false]], "terminate() (brukerawg method)": [[90, "BrukerAWG.terminate", false]], "terminate() (brukermpfu method)": [[92, "BrukerMPFU.terminate", false]], "terminate() (dummyinterface method)": [[103, "dummyInterface.terminate", false]], "terminate() (eth_awg_interface method)": [[98, "ETH_awg_interface.terminate", false]], "terminate() (interface method)": [[29, "Interface.terminate", false], [56, "Interface.terminate", false]], "terminate_at() (autodeer.classes.interface method)": [[58, "autodeer.classes.Interface.terminate_at", false]], "terminate_at() (autodeer.interface method)": [[119, "autodeer.Interface.terminate_at", false], [119, "id221", false]], "terminate_at() (interface method)": [[29, "Interface.terminate_at", false], [56, "Interface.terminate_at", false]], "test (autodeer.criteria.criteria attribute)": [[64, "autodeer.criteria.Criteria.test", false]], "test (criteria attribute)": [[60, "Criteria.test", false]], "test_if_mpfu_compatability() (in module autodeer.hardware.bruker_awg)": [[91, "autodeer.hardware.Bruker_AWG.test_if_MPFU_compatability", false]], "test_if_mpfu_compatability() (in module autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU.test_if_MPFU_compatability", false]], "test_interval (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.test_interval", false]], "test_interval (autodeerworker attribute)": [[72, "autoDEERWorker.test_interval", false]], "test_snr() (in module autodeer.gui)": [[74, "autodeer.gui.test_SNR", false]], "test_snr() (in module autodeer.gui.tools)": [[89, "autodeer.gui.tools.test_SNR", false]], "threadpool (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.threadpool", false]], "threadpool (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.threadpool", false]], "threadpool (autodeer.gui.quickdeer.deerplot attribute)": [[85, "autodeer.gui.quickdeer.DEERplot.threadpool", false]], "threadpool (autodeerui attribute)": [[70, "autoDEERUI.threadpool", false], [79, "autoDEERUI.threadpool", false]], "threadpool (deerplot attribute)": [[84, "DEERplot.threadpool", false]], "three_pulse() (autodeer.deersequence method)": [[119, "autodeer.DEERSequence.three_pulse", false], [119, "id263", false]], "three_pulse() (autodeer.sequences.deersequence method)": [[143, "autodeer.sequences.DEERSequence.three_pulse", false]], "three_pulse() (deersequence method)": [[15, "DEERSequence.three_pulse", false], [134, "DEERSequence.three_pulse", false]], "time_target (autodeer.twod_experiment.twodexperimentanalysis attribute)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.time_target", false]], "time_target (twodexperimentanalysis attribute)": [[53, "TwoDExperimentAnalysis.time_target", false]], "timecriteria (built-in class)": [[63, "TimeCriteria", false]], "timecriteria (class in autodeer.criteria)": [[64, "autodeer.criteria.TimeCriteria", false]], "timeout (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERSignals.timeout", false]], "timeout (autodeersignals attribute)": [[71, "autoDEERSignals.timeout", false]], "timeout() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.timeout", false]], "timeout() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.timeout", false]], "timeout() (autodeerui method)": [[70, "autoDEERUI.timeout", false], [79, "autoDEERUI.timeout", false]], "toolbar() (autodeer.gui.quickdeer.deerplot method)": [[85, "autodeer.gui.quickdeer.DEERplot.toolbar", false]], "toolbar() (deerplot method)": [[84, "DEERplot.toolbar", false]], "tp (autodeer.delay attribute)": [[119, "autodeer.Delay.tp", false], [119, "id142", false]], "tp (autodeer.pulses.delay attribute)": [[129, "autodeer.pulses.Delay.tp", false]], "tp (delay attribute)": [[17, "Delay.tp", false], [121, "Delay.tp", false]], "trace_length (autodeer.twod_experiment.twodexperimentanalysis attribute)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.trace_length", false]], "trace_length (twodexperimentanalysis attribute)": [[53, "TwoDExperimentAnalysis.trace_length", false]], "transpose_dict_of_list() (in module autodeer)": [[119, "autodeer.transpose_dict_of_list", false]], "transpose_dict_of_list() (in module autodeer.utils)": [[145, "autodeer.utils.transpose_dict_of_list", false]], "transpose_list_of_dicts() (in module autodeer)": [[119, "autodeer.transpose_list_of_dicts", false]], "transpose_list_of_dicts() (in module autodeer.utils)": [[145, "autodeer.utils.transpose_list_of_dicts", false]], "tune() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune", false]], "tune() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune", false]], "tune() (autodeer.hardware.xepr_experiments.eldortune method)": [[118, "autodeer.hardware.xepr_experiments.ELDORtune.tune", false]], "tune() (autodeer.hardware.xepr_experiments.mpfutune method)": [[118, "autodeer.hardware.xepr_experiments.MPFUtune.tune", false]], "tune() (brukermpfu method)": [[92, "BrukerMPFU.tune", false]], "tune() (eldortune method)": [[115, "ELDORtune.tune", false]], "tune() (eth_awg_interface method)": [[98, "ETH_awg_interface.tune", false]], "tune() (mpfutune method)": [[116, "MPFUtune.tune", false]], "tune_nutation() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_nutation", false]], "tune_nutation() (brukerawg method)": [[90, "BrukerAWG.tune_nutation", false]], "tune_phase() (autodeer.hardware.xepr_experiments.mpfutune method)": [[118, "autodeer.hardware.xepr_experiments.MPFUtune.tune_phase", false]], "tune_phase() (in module autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU.tune_phase", false]], "tune_phase() (mpfutune method)": [[116, "MPFUtune.tune_phase", false]], "tune_power() (autodeer.hardware.xepr_experiments.mpfutune method)": [[118, "autodeer.hardware.xepr_experiments.MPFUtune.tune_power", false]], "tune_power() (in module autodeer.hardware.bruker_mpfu)": [[93, "autodeer.hardware.Bruker_MPFU.tune_power", false]], "tune_power() (mpfutune method)": [[116, "MPFUtune.tune_power", false]], "tune_pulse() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_pulse", false]], "tune_pulse() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune_pulse", false]], "tune_pulse() (autodeer.hardware.dummy.dummyinterface method)": [[104, "autodeer.hardware.dummy.dummyInterface.tune_pulse", false]], "tune_pulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune_pulse", false]], "tune_pulse() (brukerawg method)": [[90, "BrukerAWG.tune_pulse", false]], "tune_pulse() (brukermpfu method)": [[92, "BrukerMPFU.tune_pulse", false]], "tune_pulse() (dummyinterface method)": [[103, "dummyInterface.tune_pulse", false]], "tune_pulse() (eth_awg_interface method)": [[98, "ETH_awg_interface.tune_pulse", false]], "tune_pulses() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.tune_pulses", false]], "tune_pulses() (autodeerworker method)": [[72, "autoDEERWorker.tune_pulses", false]], "tune_rectpulse() (autodeer.hardware.bruker_awg.brukerawg method)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.dummy.dummyinterface method)": [[104, "autodeer.hardware.dummy.dummyInterface.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[99, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune_rectpulse", false]], "tune_rectpulse() (brukerawg method)": [[90, "BrukerAWG.tune_rectpulse", false]], "tune_rectpulse() (brukermpfu method)": [[92, "BrukerMPFU.tune_rectpulse", false]], "tune_rectpulse() (dummyinterface method)": [[103, "dummyInterface.tune_rectpulse", false]], "tune_rectpulse() (eth_awg_interface method)": [[98, "ETH_awg_interface.tune_rectpulse", false]], "tuning (autodeer.hardware.bruker_awg.brukerawg attribute)": [[91, "autodeer.hardware.Bruker_AWG.BrukerAWG.tuning", false]], "tuning (autodeer.hardware.bruker_mpfu.brukermpfu attribute)": [[93, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tuning", false]], "tuning (brukerawg attribute)": [[90, "BrukerAWG.tuning", false]], "tuning (brukermpfu attribute)": [[92, "BrukerMPFU.tuning", false]], "twodexperimentanalysis (built-in class)": [[53, "TwoDExperimentAnalysis", false]], "twodexperimentanalysis (class in autodeer.twod_experiment)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis", false]], "twtprofilesequence (built-in class)": [[52, "TWTProfileSequence", false], [142, "TWTProfileSequence", false]], "twtprofilesequence (class in autodeer)": [[119, "autodeer.TWTProfileSequence", false]], "twtprofilesequence (class in autodeer.sequences)": [[143, "autodeer.sequences.TWTProfileSequence", false]], "ui (autodeer.gui.modetune.modetune attribute)": [[83, "autodeer.gui.modetune.ModeTune.ui", false]], "ui (modetune attribute)": [[81, "ModeTune.ui", false]], "unique_parvars (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.unique_parvars", false]], "unique_parvars (pulsespel attribute)": [[96, "PulseSpel.unique_parvars", false]], "unit (autodeer.classes.parameter attribute)": [[58, "autodeer.classes.Parameter.unit", false]], "unit (autodeer.parameter attribute)": [[119, "autodeer.Parameter.unit", false], [119, "id19", false], [119, "id190", false], [119, "id86", false]], "unit (parameter attribute)": [[33, "Parameter.unit", false], [57, "Parameter.unit", false]], "update_analysis_table() (autodeer.gui.quickdeer.deerplot method)": [[85, "autodeer.gui.quickdeer.DEERplot.update_analysis_table", false]], "update_analysis_table() (deerplot method)": [[84, "DEERplot.update_analysis_table", false]], "update_deer_settings() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.update_deer_settings", false]], "update_deer_settings() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.update_deer_settings", false]], "update_deer_settings() (autodeerui method)": [[70, "autoDEERUI.update_deer_settings", false], [79, "autoDEERUI.update_deer_settings", false]], "update_deersettings() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_deersettings", false]], "update_deersettings() (autodeerworker method)": [[72, "autoDEERWorker.update_deersettings", false]], "update_dip() (autodeer.gui.modetune.modetune method)": [[83, "autodeer.gui.modetune.ModeTune.update_dip", false]], "update_dip() (modetune method)": [[81, "ModeTune.update_dip", false]], "update_fieldsweep() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.update_fieldsweep", false]], "update_fieldsweep() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.update_fieldsweep", false]], "update_fieldsweep() (autodeerui method)": [[70, "autoDEERUI.update_fieldsweep", false], [79, "autoDEERUI.update_fieldsweep", false]], "update_figure() (autodeer.gui.modetune.modetune method)": [[83, "autodeer.gui.modetune.ModeTune.update_figure", false]], "update_figure() (autodeer.gui.quickdeer.deerplot method)": [[85, "autodeer.gui.quickdeer.DEERplot.update_figure", false]], "update_figure() (deerplot method)": [[84, "DEERplot.update_figure", false]], "update_figure() (modetune method)": [[81, "ModeTune.update_figure", false]], "update_fit_result() (autodeer.gui.quickdeer.deerplot method)": [[85, "autodeer.gui.quickdeer.DEERplot.update_fit_result", false]], "update_fit_result() (deerplot method)": [[84, "DEERplot.update_fit_result", false]], "update_gyro() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_gyro", false]], "update_gyro() (autodeerworker method)": [[72, "autoDEERWorker.update_gyro", false]], "update_inputs_from_dataset() (autodeer.gui.quickdeer.deerplot method)": [[85, "autodeer.gui.quickdeer.DEERplot.update_inputs_from_dataset", false]], "update_inputs_from_dataset() (deerplot method)": [[84, "DEERplot.update_inputs_from_dataset", false]], "update_lo() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_LO", false]], "update_lo() (autodeerworker method)": [[72, "autoDEERWorker.update_LO", false]], "update_log_text() (autodeer.gui.log.logdialog method)": [[76, "autodeer.gui.log.LogDialog.update_log_text", false]], "update_log_text() (logdialog method)": [[75, "LogDialog.update_log_text", false]], "update_longdeer() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.update_longdeer", false]], "update_longdeer() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.update_longdeer", false]], "update_longdeer() (autodeerui method)": [[70, "autoDEERUI.update_longdeer", false], [79, "autoDEERUI.update_longdeer", false]], "update_optimise_pulses_figure() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.update_optimise_pulses_figure", false]], "update_optimise_pulses_figure() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.update_optimise_pulses_figure", false]], "update_optimise_pulses_figure() (autodeerui method)": [[70, "autoDEERUI.update_optimise_pulses_figure", false], [79, "autoDEERUI.update_optimise_pulses_figure", false]], "update_quickdeer() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.update_quickdeer", false]], "update_quickdeer() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.update_quickdeer", false]], "update_quickdeer() (autodeerui method)": [[70, "autoDEERUI.update_quickdeer", false], [79, "autoDEERUI.update_quickdeer", false]], "update_relax() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.update_relax", false]], "update_relax() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.update_relax", false]], "update_relax() (autodeerui method)": [[70, "autoDEERUI.update_relax", false], [79, "autoDEERUI.update_relax", false]], "update_relax2d() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.update_relax2D", false]], "update_relax2d() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.update_relax2D", false]], "update_relax2d() (autodeerui method)": [[70, "autoDEERUI.update_relax2D", false], [79, "autoDEERUI.update_relax2D", false]], "update_reptime() (autodeer.gui.autodeer_worker.autodeerworker method)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_reptime", false]], "update_reptime() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.update_reptime", false]], "update_reptime() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.update_reptime", false]], "update_reptime() (autodeerui method)": [[70, "autoDEERUI.update_reptime", false], [79, "autoDEERUI.update_reptime", false]], "update_reptime() (autodeerworker method)": [[72, "autoDEERWorker.update_reptime", false]], "update_respro() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.update_respro", false]], "update_respro() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.update_respro", false]], "update_respro() (autodeerui method)": [[70, "autoDEERUI.update_respro", false], [79, "autoDEERUI.update_respro", false]], "update_t2() (autodeer.gui.autodeerui method)": [[74, "autodeer.gui.autoDEERUI.update_T2", false]], "update_t2() (autodeer.gui.main.autodeerui method)": [[80, "autodeer.gui.main.autoDEERUI.update_T2", false]], "update_t2() (autodeerui method)": [[70, "autoDEERUI.update_T2", false], [79, "autoDEERUI.update_T2", false]], "updaterate (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.updaterate", false]], "updaterate (autodeerworker attribute)": [[72, "autoDEERWorker.updaterate", false]], "user_inputs (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.user_inputs", false]], "user_inputs (autodeerworker attribute)": [[72, "autoDEERWorker.user_inputs", false]], "userinput (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.userinput", false]], "userinput (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.userinput", false]], "userinput (autodeerui attribute)": [[70, "autoDEERUI.userinput", false], [79, "autoDEERUI.userinput", false]], "uwb_eval_match() (in module autodeer.hardware.eth_awg_load)": [[100, "autodeer.hardware.ETH_awg_load.uwb_eval_match", false]], "uwb_load() (in module autodeer.hardware.eth_awg_load)": [[100, "autodeer.hardware.ETH_awg_load.uwb_load", false]], "val (autodeer.hardware.dummy_xepr.dummy_param attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_param.val", false]], "val (dummy_param attribute)": [[109, "dummy_param.val", false]], "val_in_ns() (in module autodeer)": [[119, "autodeer.val_in_ns", false]], "val_in_ns() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy.val_in_ns", false]], "val_in_ns() (in module autodeer.utils)": [[145, "autodeer.utils.val_in_ns", false]], "val_in_us() (in module autodeer)": [[119, "autodeer.val_in_us", false]], "val_in_us() (in module autodeer.deer_analysis)": [[16, "autodeer.DEER_analysis.val_in_us", false]], "val_in_us() (in module autodeer.hardware.dummy)": [[104, "autodeer.hardware.dummy.val_in_us", false]], "val_in_us() (in module autodeer.utils)": [[145, "autodeer.utils.val_in_us", false]], "value (autodeer.hardware.dummy_xepr.dummy_param property)": [[112, "autodeer.hardware.dummy_xepr.dummy_param.value", false]], "value (dummy_param property)": [[109, "dummy_param.value", false]], "value_at_pos() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.value_at_pos", false]], "value_at_pos() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.value_at_pos", false]], "value_at_time() (autodeer.twod_experiment.twodexperimentanalysis method)": [[54, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.value_at_time", false]], "value_at_time() (twodexperimentanalysis method)": [[53, "TwoDExperimentAnalysis.value_at_time", false]], "var_hash (autodeer.hardware.bruker_tools.pulsespel attribute)": [[97, "autodeer.hardware.Bruker_tools.PulseSpel.var_hash", false]], "var_hash (pulsespel attribute)": [[96, "PulseSpel.var_hash", false]], "virtual (autodeer.classes.parameter attribute)": [[58, "autodeer.classes.Parameter.virtual", false]], "virtual (autodeer.parameter attribute)": [[119, "autodeer.Parameter.virtual", false], [119, "id192", false], [119, "id21", false], [119, "id88", false]], "virtual (parameter attribute)": [[33, "Parameter.virtual", false], [57, "Parameter.virtual", false]], "vpsave() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.vpSave", false]], "vpsave() (dummy_xepr.xeprcmds method)": [[110, "dummy_xepr.XeprCmds.vpSave", false]], "vpsave() (xeprcmds method)": [[111, "XeprCmds.vpSave", false]], "wait (autodeer.gui.autodeer_worker.autodeerworker attribute)": [[73, "autodeer.gui.autoDEER_worker.autoDEERWorker.wait", false]], "wait (autodeerworker attribute)": [[72, "autoDEERWorker.wait", false]], "waitcondition (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.waitCondition", false]], "waitcondition (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.waitCondition", false]], "waitcondition (autodeerui attribute)": [[70, "autoDEERUI.waitCondition", false], [79, "autoDEERUI.waitCondition", false]], "width (autodeer.reporter.svgflowable attribute)": [[132, "autodeer.reporter.SvgFlowable.width", false]], "width (svgflowable attribute)": [[131, "SvgFlowable.width", false]], "window (autodeer.pulses.sincpulse attribute)": [[129, "autodeer.pulses.SincPulse.window", false]], "window (autodeer.sincpulse attribute)": [[119, "autodeer.SincPulse.window", false]], "window (in module autodeer.gui.__main__)": [[69, "autodeer.gui.__main__.window", false]], "window (sincpulse attribute)": [[50, "SincPulse.window", false], [128, "SincPulse.window", false]], "worker (autodeer.gui.autodeerui attribute)": [[74, "autodeer.gui.autoDEERUI.worker", false]], "worker (autodeer.gui.main.autodeerui attribute)": [[80, "autodeer.gui.main.autoDEERUI.worker", false]], "worker (autodeerui attribute)": [[70, "autoDEERUI.worker", false], [79, "autoDEERUI.worker", false]], "worker (built-in class)": [[67, "Worker", false], [77, "Worker", false], [87, "Worker", false]], "worker (class in autodeer.gui)": [[74, "autodeer.gui.Worker", false]], "worker (class in autodeer.gui.main)": [[80, "autodeer.gui.main.Worker", false]], "worker (class in autodeer.gui.tools)": [[89, "autodeer.gui.tools.Worker", false]], "workersignals (built-in class)": [[68, "WorkerSignals", false], [78, "WorkerSignals", false], [88, "WorkerSignals", false]], "workersignals (class in autodeer.gui)": [[74, "autodeer.gui.WorkerSignals", false]], "workersignals (class in autodeer.gui.main)": [[80, "autodeer.gui.main.WorkerSignals", false]], "workersignals (class in autodeer.gui.tools)": [[89, "autodeer.gui.tools.WorkerSignals", false]], "wrap() (autodeer.reporter.svgflowable method)": [[132, "autodeer.reporter.SvgFlowable.wrap", false]], "wrap() (svgflowable method)": [[131, "SvgFlowable.wrap", false]], "write_pulsespel_file() (in module autodeer.hardware.bruker_tools)": [[97, "autodeer.hardware.Bruker_tools.write_pulsespel_file", false]], "x (autodeer.hardware.dummy.dummyinterface attribute)": [[104, "autodeer.hardware.dummy.dummyInterface.x", false]], "x (dummyinterface attribute)": [[103, "dummyInterface.x", false]], "xepr (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.Xepr", false]], "xepr (xeprapilink attribute)": [[101, "XeprAPILink.Xepr", false]], "xepr_path (in module autodeer.hardware.xeprapi_link)": [[102, "autodeer.hardware.XeprAPI_link.xepr_path", false]], "xepr_save() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.xepr_save", false]], "xepr_save() (xeprapilink method)": [[101, "XeprAPILink.xepr_save", false]], "xeprapilink (built-in class)": [[101, "XeprAPILink", false]], "xeprapilink (class in autodeer.hardware.xeprapi_link)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink", false]], "xeprcmds (autodeer.hardware.xeprapi_link.xeprapilink attribute)": [[102, "autodeer.hardware.XeprAPI_link.XeprAPILink.XeprCmds", false]], "xeprcmds (built-in class)": [[111, "XeprCmds", false]], "xeprcmds (xeprapilink attribute)": [[101, "XeprAPILink.XeprCmds", false]], "xeprdataset() (autodeer.hardware.dummy_xepr.dummy_xepr method)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprDataset", false]], "xeprdataset() (dummy_xepr method)": [[110, "dummy_xepr.XeprDataset", false]], "xeprexperiment() (autodeer.hardware.dummy_xepr.dummy_xepr method)": [[112, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprExperiment", false]], "xeprexperiment() (dummy_xepr method)": [[110, "dummy_xepr.XeprExperiment", false]], "xspecres (autodeer.hardware.dummy_xepr.dummy_cur_exp attribute)": [[112, "autodeer.hardware.dummy_xepr.dummy_cur_exp.XSpecRes", false]], "xspecres (dummy_cur_exp attribute)": [[106, "dummy_cur_exp.XSpecRes", false]]}, "objects": {"": [[90, 0, 1, "", "BrukerAWG"], [92, 0, 1, "", "BrukerMPFU"], [38, 0, 1, "", "CarrPurcellAnalysis"], [133, 0, 1, "", "CarrPurcellSequence"], [120, 0, 1, "", "ChirpPulse"], [60, 0, 1, "", "Criteria"], [114, 0, 1, "", "DEER"], [61, 0, 1, "", "DEERCriteria"], [134, 0, 1, "", "DEERSequence"], [84, 0, 1, "", "DEERplot"], [121, 0, 1, "", "Delay"], [122, 0, 1, "", "Detection"], [30, 0, 1, "", "DictFormater"], [115, 0, 1, "", "ELDORtune"], [65, 0, 1, "", "EPRAccessor"], [98, 0, 1, "", "ETH_awg_interface"], [23, 0, 1, "", "FieldSweepAnalysis"], [135, 0, 1, "", "FieldSweepSequence"], [123, 0, 1, "", "FrequencySweptPulse"], [124, 0, 1, "", "GaussianPulse"], [125, 0, 1, "", "HSPulse"], [136, 0, 1, "", "HahnEchoSequence"], [56, 0, 1, "", "Interface"], [75, 0, 1, "", "LogDialog"], [116, 0, 1, "", "MPFUtune"], [81, 0, 1, "", "ModeTune"], [94, 0, 1, "", "PSPhaseCycle"], [95, 0, 1, "", "PSparvar"], [57, 0, 1, "", "Parameter"], [126, 0, 1, "", "Pulse"], [117, 0, 1, "", "PulseProfile"], [96, 0, 1, "", "PulseSpel"], [31, 0, 1, "", "QtLogHandler"], [127, 0, 1, "", "RectPulse"], [39, 0, 1, "", "RefocusedEcho2DAnalysis"], [137, 0, 1, "", "RefocusedEcho2DSequence"], [130, 0, 1, "", "Reporter"], [43, 0, 1, "", "ReptimeAnalysis"], [138, 0, 1, "", "ReptimeScan"], [47, 0, 1, "", "ResonatorProfileAnalysis"], [139, 0, 1, "", "ResonatorProfileSequence"], [62, 0, 1, "", "SNRCriteria"], [140, 0, 1, "", "Sequence"], [128, 0, 1, "", "SincPulse"], [21, 0, 1, "", "SpinSystem"], [131, 0, 1, "", "SvgFlowable"], [141, 0, 1, "", "T2RelaxationSequence"], [142, 0, 1, "", "TWTProfileSequence"], [63, 0, 1, "", "TimeCriteria"], [53, 0, 1, "", "TwoDExperimentAnalysis"], [87, 0, 1, "", "Worker"], [88, 0, 1, "", "WorkerSignals"], [101, 0, 1, "", "XeprAPILink"], [111, 0, 1, "", "XeprCmds"], [71, 0, 1, "", "autoDEERSignals"], [79, 0, 1, "", "autoDEERUI"], [72, 0, 1, "", "autoDEERWorker"], [119, 4, 0, "-", "autodeer"], [103, 0, 1, "", "dummyInterface"], [105, 0, 1, "", "dummy_api"], [106, 0, 1, "", "dummy_cur_exp"], [107, 0, 1, "", "dummy_dataset"], [108, 0, 1, "", "dummy_hidden"], [109, 0, 1, "", "dummy_param"], [110, 0, 1, "", "dummy_xepr"], [82, 0, 1, "", "get_dataWorker"]], "BrukerAWG": [[90, 1, 1, "", "_launch_complex_thread"], [90, 1, 1, "", "acquire_dataset"], [90, 2, 1, "", "api"], [90, 2, 1, "", "bg_data"], [90, 2, 1, "", "bg_thread"], [90, 2, 1, "", "bridge_config"], [90, 1, 1, "", "calc_d0"], [90, 1, 1, "", "calc_d0_from_Hahn_Echo"], [90, 1, 1, "", "connect"], [90, 2, 1, "", "cur_exp"], [90, 2, 1, "", "d0"], [90, 1, 1, "", "isrunning"], [90, 1, 1, "", "launch"], [90, 2, 1, "", "pool"], [90, 2, 1, "", "savefolder"], [90, 2, 1, "", "savename"], [90, 1, 1, "", "setup"], [90, 2, 1, "", "setup_flag"], [90, 2, 1, "", "spec_config"], [90, 2, 1, "", "temp_dir"], [90, 1, 1, "", "terminate"], [90, 1, 1, "", "tune_nutation"], [90, 1, 1, "", "tune_pulse"], [90, 1, 1, "", "tune_rectpulse"], [90, 2, 1, "", "tuning"]], "BrukerMPFU": [[92, 2, 1, "", "MPFU"], [92, 1, 1, "", "_launch_complex_thread"], [92, 1, 1, "", "acquire_dataset"], [92, 2, 1, "", "api"], [92, 2, 1, "", "bg_data"], [92, 2, 1, "", "bg_thread"], [92, 2, 1, "", "bridge_config"], [92, 1, 1, "", "calc_d0"], [92, 1, 1, "", "calc_d0_from_Hahn_Echo"], [92, 1, 1, "", "connect"], [92, 2, 1, "", "cur_exp"], [92, 2, 1, "", "d0"], [92, 1, 1, "", "isrunning"], [92, 1, 1, "", "launch"], [92, 2, 1, "", "pool"], [92, 2, 1, "", "savefolder"], [92, 2, 1, "", "savename"], [92, 1, 1, "", "setup"], [92, 2, 1, "", "setup_flag"], [92, 2, 1, "", "spec_config"], [92, 2, 1, "", "temp_dir"], [92, 1, 1, "", "terminate"], [92, 1, 1, "", "tune"], [92, 1, 1, "", "tune_pulse"], [92, 1, 1, "", "tune_rectpulse"], [92, 2, 1, "", "tuning"]], "CarrPurcellAnalysis": [[38, 1, 1, "", "check_decay"], [38, 2, 1, "", "data"], [38, 2, 1, "", "dataset"], [38, 1, 1, "", "find_optimal"], [38, 1, 1, "", "fit"], [38, 1, 1, "", "plot"]], "CarrPurcellSequence": [[133, 1, 1, "", "_build_sequence"], [133, 2, 1, "", "dim"], [133, 2, 1, "", "n"], [133, 2, 1, "", "name"], [133, 2, 1, "", "tau"]], "ChirpPulse": [[120, 1, 1, "", "func"], [120, 3, 1, "", "sweeprate"]], "Criteria": [[60, 1, 1, "", "__add__"], [60, 2, 1, "", "description"], [60, 2, 1, "", "end_signal"], [60, 2, 1, "", "name"], [60, 2, 1, "", "test"]], "DEER": [[114, 2, 1, "", "api"], [114, 2, 1, "", "awg"], [114, 2, 1, "", "d0"], [114, 2, 1, "", "det_frq"], [114, 2, 1, "", "hybrid"], [114, 2, 1, "", "mpfu"], [114, 2, 1, "", "pump_frq"], [114, 1, 1, "", "run_4p"], [114, 1, 1, "", "run_5p"], [114, 1, 1, "", "run_CP"], [114, 2, 1, "", "srt"]], "DEERCriteria": [[61, 2, 1, "", "description"], [61, 2, 1, "", "name"]], "DEERSequence": [[134, 2, 1, "", "ESEEM"], [134, 1, 1, "", "add_ESEEM_avg"], [134, 2, 1, "", "deadtime"], [134, 2, 1, "", "dt"], [134, 1, 1, "", "five_pulse"], [134, 1, 1, "", "four_pulse"], [134, 1, 1, "", "nDEER_CP"], [134, 2, 1, "", "name"], [134, 1, 1, "", "select_pcyc"], [134, 1, 1, "", "seven_pulse"], [134, 1, 1, "", "simulate"], [134, 2, 1, "", "tau1"], [134, 2, 1, "", "tau1us"], [134, 2, 1, "", "tau2"], [134, 1, 1, "", "three_pulse"]], "DEERplot": [[84, 2, 1, "", "DL_params"], [84, 1, 1, "", "clearLayout"], [84, 1, 1, "", "clear_all"], [84, 2, 1, "", "cores"], [84, 1, 1, "", "create_figure"], [84, 2, 1, "", "current_data"], [84, 2, 1, "", "current_folder"], [84, 2, 1, "", "current_results"], [84, 1, 1, "", "process_deeranalysis"], [84, 1, 1, "", "refresh_deer"], [84, 1, 1, "", "setup_inputs"], [84, 2, 1, "", "threadpool"], [84, 1, 1, "", "toolbar"], [84, 1, 1, "", "update_analysis_table"], [84, 1, 1, "", "update_figure"], [84, 1, 1, "", "update_fit_result"], [84, 1, 1, "", "update_inputs_from_dataset"]], "Delay": [[121, 2, 1, "", "pcyc"], [121, 2, 1, "", "scale"], [121, 2, 1, "", "tp"]], "Detection": [[122, 2, 1, "", "freq"], [122, 2, 1, "", "pcyc"], [122, 2, 1, "", "scale"]], "DictFormater": [[30, 1, 1, "", "format"]], "ELDORtune": [[115, 1, 1, "", "_get_exp"], [115, 1, 1, "", "_setup_exp"], [115, 2, 1, "", "api"], [115, 2, 1, "", "d0"], [115, 1, 1, "", "find_min"], [115, 2, 1, "", "hardware_wait"], [115, 2, 1, "", "ps_length"], [115, 2, 1, "", "srt"], [115, 1, 1, "", "tune"]], "EPRAccessor": [[65, 3, 1, "", "SNR"], [65, 2, 1, "", "_obj"], [65, 3, 1, "", "correctphase"], [65, 3, 1, "", "correctphasefull"], [65, 3, 1, "", "fft"], [65, 3, 1, "", "normalise"], [65, 1, 1, "", "save"], [65, 3, 1, "", "sequence"]], "ETH_awg_interface": [[98, 2, 1, "", "IFgain"], [98, 2, 1, "", "IFgain_options"], [98, 1, 1, "", "_build_exp_struct"], [98, 1, 1, "", "_build_parvar"], [98, 1, 1, "", "_build_phase_cycle"], [98, 1, 1, "", "_build_pulse"], [98, 1, 1, "", "acquire_dataset"], [98, 1, 1, "", "acquire_dataset_from_matlab"], [98, 2, 1, "", "awg_freq"], [98, 2, 1, "", "bg_data"], [98, 2, 1, "", "bg_thread"], [98, 1, 1, "", "connect"], [98, 2, 1, "", "cur_exp"], [98, 2, 1, "", "dig_rate"], [98, 1, 1, "", "isrunning"], [98, 1, 1, "", "launch"], [98, 1, 1, "", "launch_long"], [98, 1, 1, "", "launch_normal"], [98, 1, 1, "", "launch_withIFGain"], [98, 2, 1, "", "pulses"], [98, 3, 1, "", "savefolder"], [98, 1, 1, "", "terminate"], [98, 1, 1, "", "tune"], [98, 1, 1, "", "tune_pulse"], [98, 1, 1, "", "tune_rectpulse"]], "FieldSweepAnalysis": [[23, 1, 1, "", "calc_gyro"], [23, 1, 1, "", "calc_noise_level"], [23, 2, 1, "", "data"], [23, 1, 1, "", "find_max"], [23, 1, 1, "", "fit"], [23, 1, 1, "", "plot"], [23, 1, 1, "", "smooth"]], "FieldSweepSequence": [[135, 2, 1, "", "B"], [135, 2, 1, "", "name"]], "FrequencySweptPulse": [[123, 3, 1, "", "Qcrit"], [123, 3, 1, "", "amp_factor"], [123, 3, 1, "", "sweeprate"]], "GaussianPulse": [[124, 2, 1, "", "FWHM"], [124, 2, 1, "", "freq"], [124, 1, 1, "", "func"]], "HSPulse": [[125, 2, 1, "", "beta"], [125, 1, 1, "", "func"], [125, 2, 1, "", "order1"], [125, 2, 1, "", "order2"], [125, 3, 1, "", "sweeprate"]], "HahnEchoSequence": [[136, 2, 1, "", "name"]], "Interface": [[56, 1, 1, "", "acquire_dataset"], [56, 1, 1, "", "connect"], [56, 1, 1, "", "isrunning"], [56, 1, 1, "", "launch"], [56, 2, 1, "", "pulses"], [56, 2, 1, "", "resonator"], [56, 2, 1, "", "savefolder"], [56, 2, 1, "", "savename"], [56, 1, 1, "", "terminate"], [56, 1, 1, "", "terminate_at"]], "LogDialog": [[75, 1, 1, "", "add_new_entry"], [75, 1, 1, "", "clear_log"], [75, 2, 1, "", "core_logger"], [75, 2, 1, "", "hardware_logger"], [75, 2, 1, "", "log"], [75, 2, 1, "", "log_levels"], [75, 1, 1, "", "save_log_to_file"], [75, 1, 1, "", "update_log_text"]], "MPFUtune": [[116, 1, 1, "", "_setup_echo"], [116, 2, 1, "", "api"], [116, 1, 1, "", "calc_d0"], [116, 2, 1, "", "d0"], [116, 2, 1, "", "hardware_wait"], [116, 2, 1, "", "ps_length"], [116, 2, 1, "", "srt"], [116, 1, 1, "", "tune"], [116, 1, 1, "", "tune_phase"], [116, 1, 1, "", "tune_power"]], "ModeTune": [[81, 1, 1, "", "create_figure"], [81, 2, 1, "", "interface"], [81, 1, 1, "", "start_mode_tune"], [81, 2, 1, "", "ui"], [81, 1, 1, "", "update_dip"], [81, 1, 1, "", "update_figure"]], "PSPhaseCycle": [[94, 2, 1, "", "BPhaseCycles"], [94, 1, 1, "", "_MPFU"], [94, 1, 1, "", "__str__"], [94, 1, 1, "", "_detect"], [94, 1, 1, "", "_main"], [94, 2, 1, "", "detect_dicts"]], "PSparvar": [[95, 2, 1, "", "PulseSpel"], [95, 1, 1, "", "checkPulseSpel"], [95, 2, 1, "", "events"], [95, 2, 1, "", "parvar"], [95, 2, 1, "", "progTable"], [95, 2, 1, "", "progTable_n"]], "Parameter": [[57, 1, 1, "", "__add__"], [57, 1, 1, "", "__eq__"], [57, 1, 1, "", "__mul__"], [57, 1, 1, "", "__rmul__"], [57, 1, 1, "", "__sub__"], [57, 1, 1, "", "_from_dict"], [57, 1, 1, "", "_from_json"], [57, 1, 1, "", "_to_dict"], [57, 1, 1, "", "_to_json"], [57, 1, 1, "", "add_axis"], [57, 2, 1, "", "ax_id"], [57, 2, 1, "", "axis"], [57, 1, 1, "", "copy"], [57, 2, 1, "", "description"], [57, 3, 1, "", "dim"], [57, 1, 1, "", "get_axis"], [57, 1, 1, "", "is_static"], [57, 1, 1, "", "load"], [57, 2, 1, "", "name"], [57, 1, 1, "", "remove_dynamic"], [57, 1, 1, "", "save"], [57, 2, 1, "", "unit"], [57, 2, 1, "", "virtual"]], "Pulse": [[126, 2, 1, "", "Progression"], [126, 1, 1, "", "__str__"], [126, 1, 1, "", "_addPhaseCycle"], [126, 1, 1, "", "_buildFMAM"], [126, 1, 1, "", "_calc_fft"], [126, 1, 1, "", "_from_dict"], [126, 1, 1, "", "_from_json"], [126, 1, 1, "", "_pcyc_str"], [126, 1, 1, "", "_to_dict"], [126, 1, 1, "", "_to_json"], [126, 3, 1, "", "amp_factor"], [126, 3, 1, "", "bandwidth"], [126, 1, 1, "", "build_shape"], [126, 1, 1, "", "build_table"], [126, 1, 1, "", "copy"], [126, 1, 1, "", "exciteprofile"], [126, 1, 1, "", "isDelayFocused"], [126, 1, 1, "", "isPulseFocused"], [126, 1, 1, "", "is_static"], [126, 1, 1, "", "load"], [126, 2, 1, "", "name"], [126, 1, 1, "", "plot"], [126, 1, 1, "", "plot_fft"], [126, 1, 1, "", "save"]], "PulseProfile": [[117, 1, 1, "", "_freq_sweep"], [117, 1, 1, "", "_setup_exp"], [117, 2, 1, "", "api"], [117, 2, 1, "", "d0"], [117, 2, 1, "", "hardware_wait"], [117, 2, 1, "", "ps_length"], [117, 2, 1, "", "srt"]], "PulseSpel": [[96, 2, 1, "", "AWG"], [96, 2, 1, "", "MPFU"], [96, 1, 1, "", "_ExpDefs"], [96, 1, 1, "", "__str__"], [96, 1, 1, "", "_addAWGPulse"], [96, 1, 1, "", "_addDef"], [96, 1, 1, "", "_addExp"], [96, 1, 1, "", "_addPhaseCycle"], [96, 1, 1, "", "_addScanLoop"], [96, 1, 1, "", "_check_sequence"], [96, 1, 1, "", "_cmpl_Exp"], [96, 1, 1, "", "_cmpl_def"], [96, 1, 1, "", "_new_delay"], [96, 1, 1, "", "_new_pulse"], [96, 1, 1, "", "_new_var"], [96, 2, 1, "", "def_file_str"], [96, 2, 1, "", "dims"], [96, 2, 1, "", "exp_file_str"], [96, 2, 1, "", "parvars"], [96, 2, 1, "", "pcyc_str"], [96, 2, 1, "", "place_hash"], [96, 2, 1, "", "possible_delays"], [96, 2, 1, "", "possible_pulses"], [96, 2, 1, "", "possible_vars"], [96, 2, 1, "", "rel_positions"], [96, 1, 1, "", "save"], [96, 2, 1, "", "sequence"], [96, 2, 1, "", "step_hash"], [96, 2, 1, "", "unique_parvars"], [96, 2, 1, "", "var_hash"]], "QtLogHandler": [[31, 1, 1, "", "emit"], [31, 2, 1, "", "signal"]], "RectPulse": [[127, 2, 1, "", "freq"], [127, 1, 1, "", "func"]], "RefocusedEcho2DAnalysis": [[39, 1, 1, "", "_smooth"], [39, 2, 1, "", "axis"], [39, 2, 1, "", "data"], [39, 2, 1, "", "dataset"], [39, 1, 1, "", "find_optimal"], [39, 1, 1, "", "optimal_tau1"], [39, 1, 1, "", "plot1D"], [39, 1, 1, "", "plot2D"]], "RefocusedEcho2DSequence": [[137, 1, 1, "", "_build_sequence"], [137, 2, 1, "", "dt"], [137, 2, 1, "", "name"], [137, 2, 1, "", "tau1"], [137, 2, 1, "", "tau2"], [137, 2, 1, "", "tau_init"]], "Reporter": [[130, 1, 1, "", "_build"], [130, 1, 1, "", "add_code_block"], [130, 1, 1, "", "add_figure"], [130, 1, 1, "", "add_new_section"], [130, 1, 1, "", "add_page_break"], [130, 1, 1, "", "add_space"], [130, 1, 1, "", "add_table"], [130, 1, 1, "", "add_text"], [130, 1, 1, "", "add_title"], [130, 1, 1, "", "footer"], [130, 2, 1, "", "frame"], [130, 1, 1, "", "header"], [130, 2, 1, "", "pdf"], [130, 2, 1, "", "story"], [130, 2, 1, "", "template"]], "ReptimeAnalysis": [[43, 2, 1, "", "axis"], [43, 1, 1, "", "calc_optimal_reptime"], [43, 1, 1, "", "fit"], [43, 1, 1, "", "plot"], [43, 2, 1, "", "seq"]], "ReptimeScan": [[138, 2, 1, "", "dim"], [138, 2, 1, "", "min_reptime"], [138, 2, 1, "", "name"], [138, 2, 1, "", "reptime"], [138, 2, 1, "", "step"]], "ResonatorProfileAnalysis": [[47, 1, 1, "", "_process_fit"], [47, 2, 1, "", "dataset"], [47, 2, 1, "", "f_lims"], [47, 1, 1, "", "fit"], [47, 2, 1, "", "n_files"], [47, 1, 1, "", "plot"], [47, 1, 1, "", "process_nutations"], [47, 2, 1, "", "t"]], "ResonatorProfileSequence": [[139, 1, 1, "", "_build_sequence"], [139, 2, 1, "", "fwidth"], [139, 2, 1, "", "gyro"], [139, 2, 1, "", "name"]], "Sequence": [[140, 2, 1, "", "LO"], [140, 1, 1, "", "__str__"], [140, 1, 1, "", "_buildPhaseCycle"], [140, 1, 1, "", "_checkRect"], [140, 1, 1, "", "_convert_to_delay"], [140, 1, 1, "", "_convert_to_pulses"], [140, 1, 1, "", "_estimate_time"], [140, 1, 1, "", "_from_dict"], [140, 1, 1, "", "_from_json"], [140, 1, 1, "", "_to_dict"], [140, 1, 1, "", "_to_json"], [140, 1, 1, "", "addPulse"], [140, 2, 1, "", "averages"], [140, 2, 1, "", "axes_uuid"], [140, 1, 1, "", "convert"], [140, 1, 1, "", "copy"], [140, 1, 1, "", "evolution"], [140, 1, 1, "", "isDelayFocused"], [140, 1, 1, "", "isPulseFocused"], [140, 1, 1, "", "load"], [140, 2, 1, "", "name"], [140, 2, 1, "", "num_pulses"], [140, 1, 1, "", "plot"], [140, 1, 1, "", "plot_pulse_exc"], [140, 2, 1, "", "progTable"], [140, 2, 1, "", "pulses"], [140, 2, 1, "", "reduce_uuid"], [140, 1, 1, "", "save"], [140, 3, 1, "", "seqtable_steps"], [140, 1, 1, "", "shift_detfreq_to_zero"], [140, 2, 1, "", "shots"]], "SincPulse": [[128, 2, 1, "", "freq"], [128, 1, 1, "", "func"], [128, 2, 1, "", "order"], [128, 2, 1, "", "window"]], "SpinSystem": [[21, 2, 1, "", "A"], [21, 2, 1, "", "I"], [21, 2, 1, "", "S"], [21, 2, 1, "", "Spins"], [21, 2, 1, "", "g"], [21, 2, 1, "", "gnscale"], [21, 2, 1, "", "nElectrons"], [21, 2, 1, "", "nNuclei"], [21, 2, 1, "", "nStates"]], "SvgFlowable": [[131, 1, 1, "", "draw"], [131, 2, 1, "", "drawing"], [131, 2, 1, "", "height"], [131, 2, 1, "", "width"], [131, 1, 1, "", "wrap"]], "T2RelaxationSequence": [[141, 2, 1, "", "name"], [141, 2, 1, "", "tau"]], "TWTProfileSequence": [[142, 1, 1, "", "_build_sequence"], [142, 2, 1, "", "name"]], "TwoDExperimentAnalysis": [[53, 1, 1, "", "_data_transpose"], [53, 1, 1, "", "_stability_check"], [53, 1, 1, "", "calculate_noise_level"], [53, 1, 1, "", "calculate_optimal"], [53, 1, 1, "", "calculate_snr_threshold"], [53, 1, 1, "", "create_bahrenberg_plots"], [53, 1, 1, "", "create_slice_plot"], [53, 1, 1, "", "create_twoD_plot"], [53, 1, 1, "", "estimated_snr"], [53, 1, 1, "", "import_data"], [53, 1, 1, "", "import_dataset"], [53, 1, 1, "", "invert_signal"], [53, 1, 1, "", "load"], [53, 2, 1, "", "noise_frac"], [53, 1, 1, "", "optimal_slice_plot"], [53, 1, 1, "", "set_snr_target"], [53, 1, 1, "", "set_snr_threshold"], [53, 1, 1, "", "set_time_target"], [53, 1, 1, "", "snr_normalize"], [53, 2, 1, "", "snr_target"], [53, 2, 1, "", "time_target"], [53, 2, 1, "", "trace_length"], [53, 1, 1, "", "value_at_pos"], [53, 1, 1, "", "value_at_time"]], "Worker": [[87, 2, 1, "", "args"], [87, 2, 1, "", "fn"], [87, 2, 1, "", "kwargs"], [87, 1, 1, "", "run"], [87, 2, 1, "", "signals"]], "WorkerSignals": [[88, 2, 1, "", "error"], [88, 2, 1, "", "finished"], [78, 2, 1, "", "progress"], [88, 2, 1, "", "result"]], "XeprAPILink": [[101, 2, 1, "", "Xepr"], [101, 2, 1, "", "XeprCmds"], [101, 1, 1, "", "_get_Xepr_global"], [101, 1, 1, "", "_get_cur_exp_global"], [101, 1, 1, "", "_set_Xepr_global"], [101, 1, 1, "", "_set_cur_exp_global"], [101, 1, 1, "", "_set_cur_exp_param"], [101, 1, 1, "", "_set_hidden_param"], [101, 2, 1, "", "_tmp_dir"], [101, 1, 1, "", "_xepr_retry"], [101, 1, 1, "", "abort_exp"], [101, 1, 1, "", "acquire_dataset"], [101, 1, 1, "", "acquire_scan"], [101, 1, 1, "", "acquire_scan_2d"], [101, 1, 1, "", "acquire_scan_at"], [101, 1, 1, "", "compile_PulseSpel_def"], [101, 1, 1, "", "compile_PulseSpel_prg"], [101, 1, 1, "", "connect"], [101, 2, 1, "", "cur_exp"], [101, 1, 1, "", "find_Xepr"], [101, 1, 1, "", "find_cur_exp"], [101, 1, 1, "", "find_hidden"], [101, 1, 1, "", "get_Acquisition_mode"], [101, 1, 1, "", "get_ELDOR_freq"], [101, 1, 1, "", "get_MW_amp"], [101, 1, 1, "", "get_PhaseCycle"], [101, 1, 1, "", "get_PulseSpel_def_filename"], [101, 1, 1, "", "get_PulseSpel_def_filepath"], [101, 1, 1, "", "get_PulseSpel_exp_filename"], [101, 1, 1, "", "get_PulseSpel_exp_filepath"], [101, 1, 1, "", "get_PulseSpel_experiment"], [101, 1, 1, "", "get_PulseSpel_phase_cycling"], [101, 1, 1, "", "get_ReplaceMode"], [101, 1, 1, "", "get_attenuator"], [101, 1, 1, "", "get_config_file"], [101, 1, 1, "", "get_counterfreq"], [101, 1, 1, "", "get_field"], [101, 1, 1, "", "get_freq"], [101, 1, 1, "", "get_hidden_param"], [101, 1, 1, "", "get_param"], [101, 1, 1, "", "get_phase"], [101, 1, 1, "", "get_spec_config"], [101, 1, 1, "", "get_sweep_width"], [101, 1, 1, "", "get_video_bandwidth"], [101, 1, 1, "", "get_video_gain"], [101, 2, 1, "", "hidden"], [101, 1, 1, "", "is_exp_running"], [101, 1, 1, "", "pause_exp"], [101, 1, 1, "", "rerun_exp"], [101, 1, 1, "", "run_exp"], [101, 1, 1, "", "save_PulseSpel_def"], [101, 1, 1, "", "save_PulseSpel_exp"], [101, 1, 1, "", "set_Acquisition_mode"], [101, 1, 1, "", "set_ELDOR_freq"], [101, 1, 1, "", "set_MW_amp"], [101, 1, 1, "", "set_PhaseCycle"], [101, 1, 1, "", "set_PulseSpel_def_filepath"], [101, 1, 1, "", "set_PulseSpel_exp_filepath"], [101, 1, 1, "", "set_PulseSpel_experiment"], [101, 1, 1, "", "set_PulseSpel_phase_cycling"], [101, 1, 1, "", "set_PulseSpel_var"], [101, 1, 1, "", "set_ReplaceMode"], [101, 1, 1, "", "set_attenuator"], [101, 1, 1, "", "set_config_file"], [101, 1, 1, "", "set_field"], [101, 1, 1, "", "set_freq"], [101, 1, 1, "", "set_hidden_param"], [101, 1, 1, "", "set_param"], [101, 1, 1, "", "set_phase"], [101, 1, 1, "", "set_sweep_width"], [101, 1, 1, "", "set_video_bandwidth"], [101, 1, 1, "", "set_video_gain"], [101, 1, 1, "", "stop_exp"], [101, 1, 1, "", "xepr_save"]], "XeprCmds": [[111, 1, 1, "", "aqExpSelect"], [111, 1, 1, "", "aqPgCompile"], [111, 1, 1, "", "aqPgDefLoad"], [111, 1, 1, "", "aqPgDefSaveAs"], [111, 1, 1, "", "aqPgLoad"], [111, 1, 1, "", "aqPgSaveAs"], [111, 1, 1, "", "aqPgShowPrg"], [111, 1, 1, "", "vpSave"]], "autoDEERSignals": [[71, 2, 1, "", "Relax2D_result"], [71, 2, 1, "", "T2_result"], [71, 2, 1, "", "error"], [71, 2, 1, "", "finished"], [71, 2, 1, "", "fsweep_result"], [71, 2, 1, "", "longdeer_result"], [71, 2, 1, "", "longdeer_update"], [71, 2, 1, "", "progress"], [71, 2, 1, "", "quickdeer_result"], [71, 2, 1, "", "quickdeer_update"], [71, 2, 1, "", "relax_result"], [71, 2, 1, "", "reptime_scan_result"], [71, 2, 1, "", "respro_result"], [71, 2, 1, "", "result"], [71, 2, 1, "", "status"], [71, 2, 1, "", "timeout"]], "autoDEERUI": [[79, 2, 1, "", "Bruker"], [79, 2, 1, "", "DL_params"], [79, 2, 1, "", "LO"], [79, 2, 1, "", "Min_tp"], [79, 1, 1, "", "RunAdvancedAutoDEER"], [79, 1, 1, "", "RunAutoDEER"], [79, 1, 1, "", "RunFullyAutoDEER"], [79, 1, 1, "", "advanced_mode_inputs"], [79, 1, 1, "", "change_LO"], [79, 1, 1, "", "check_CP"], [79, 1, 1, "", "check_T2"], [79, 1, 1, "", "clear_all"], [79, 2, 1, "", "config"], [79, 1, 1, "", "connect_spectrometer"], [79, 2, 1, "", "connected"], [79, 2, 1, "", "cores"], [79, 2, 1, "", "correction_factor"], [79, 1, 1, "", "create_fieldsweep_figure"], [79, 1, 1, "", "create_relax_figure"], [79, 1, 1, "", "create_report"], [79, 1, 1, "", "create_respro_figure"], [79, 2, 1, "", "current_data"], [79, 2, 1, "", "current_folder"], [79, 2, 1, "", "current_results"], [79, 2, 1, "", "deer_settings"], [79, 2, 1, "", "discussion_url"], [79, 2, 1, "", "docs_url"], [79, 1, 1, "", "fsweep_toolbar"], [79, 2, 1, "", "github_url"], [79, 2, 1, "", "gyro"], [79, 1, 1, "", "initialise_deer_settings"], [79, 2, 1, "", "issues_url"], [79, 1, 1, "", "load_epr_file"], [79, 1, 1, "", "load_folder"], [79, 1, 1, "", "load_spectrometer_config"], [79, 2, 1, "", "logo_pixmap"], [79, 2, 1, "", "longDEER"], [79, 1, 1, "", "optimise_pulses"], [79, 1, 1, "", "optimise_pulses_button"], [79, 2, 1, "", "priorties"], [79, 2, 1, "", "pulses"], [79, 2, 1, "", "q_DEER"], [79, 2, 1, "", "queue"], [79, 1, 1, "", "raise_warning"], [79, 1, 1, "", "refresh_T2"], [79, 1, 1, "", "refresh_fieldsweep_after_fit"], [79, 1, 1, "", "refresh_relax"], [79, 1, 1, "", "refresh_relax_figure"], [79, 1, 1, "", "refresh_respro"], [79, 1, 1, "", "relax_toolbar"], [79, 1, 1, "", "respro_toolbar"], [79, 1, 1, "", "save_data"], [79, 1, 1, "", "select_resonator"], [79, 1, 1, "", "set_spectrometer_connected_light"], [79, 2, 1, "", "spectromterInterface"], [79, 2, 1, "", "starttime"], [79, 2, 1, "", "threadpool"], [79, 1, 1, "", "timeout"], [79, 1, 1, "", "update_T2"], [79, 1, 1, "", "update_deer_settings"], [79, 1, 1, "", "update_fieldsweep"], [79, 1, 1, "", "update_longdeer"], [79, 1, 1, "", "update_optimise_pulses_figure"], [79, 1, 1, "", "update_quickdeer"], [79, 1, 1, "", "update_relax"], [79, 1, 1, "", "update_relax2D"], [79, 1, 1, "", "update_reptime"], [79, 1, 1, "", "update_respro"], [79, 2, 1, "", "userinput"], [79, 2, 1, "", "waitCondition"], [79, 2, 1, "", "worker"]], "autoDEERWorker": [[72, 2, 1, "", "AWG"], [72, 2, 1, "", "EndTimeCriteria"], [72, 2, 1, "", "LO"], [72, 1, 1, "", "_build_methods"], [72, 2, 1, "", "args"], [72, 2, 1, "", "deer_inputs"], [72, 2, 1, "", "gyro"], [72, 2, 1, "", "interface"], [72, 2, 1, "", "kwargs"], [72, 2, 1, "", "max_tau"], [72, 2, 1, "", "mutex"], [72, 1, 1, "", "new_data"], [72, 1, 1, "", "new_pulses"], [72, 1, 1, "", "pause_and_wait"], [72, 2, 1, "", "project"], [72, 2, 1, "", "pulses"], [72, 2, 1, "", "quick_deer_state"], [72, 2, 1, "", "results"], [72, 1, 1, "", "run"], [72, 1, 1, "", "run_2D_relax"], [72, 1, 1, "", "run_CP_relax"], [72, 1, 1, "", "run_T2_relax"], [72, 1, 1, "", "run_deer"], [72, 1, 1, "", "run_fsweep"], [72, 1, 1, "", "run_long_deer"], [72, 1, 1, "", "run_quick_deer"], [72, 1, 1, "", "run_reptime_opt"], [72, 1, 1, "", "run_respro"], [72, 2, 1, "", "samplename"], [72, 2, 1, "", "savename"], [72, 1, 1, "", "set_2D_max_tau"], [72, 1, 1, "", "set_noise_mode"], [72, 2, 1, "", "signals"], [72, 1, 1, "", "stop"], [72, 2, 1, "", "stop_flag"], [72, 2, 1, "", "test_interval"], [72, 1, 1, "", "tune_pulses"], [72, 1, 1, "", "update_LO"], [72, 1, 1, "", "update_deersettings"], [72, 1, 1, "", "update_gyro"], [72, 1, 1, "", "update_reptime"], [72, 2, 1, "", "updaterate"], [72, 2, 1, "", "user_inputs"], [72, 2, 1, "", "wait"]], "autodeer": [[119, 0, 1, "", "CarrPurcellAnalysis"], [119, 0, 1, "", "CarrPurcellSequence"], [119, 0, 1, "", "ChirpPulse"], [119, 0, 1, "id254", "DEERSequence"], [16, 4, 0, "-", "DEER_analysis"], [119, 0, 1, "id141", "Delay"], [119, 0, 1, "id175", "Detection"], [119, 0, 1, "", "EPRAccessor"], [22, 4, 0, "-", "FieldSweep"], [119, 0, 1, "", "FieldSweepAnalysis"], [119, 0, 1, "", "FieldSweepSequence"], [119, 0, 1, "", "FrequencySweptPulse"], [119, 0, 1, "", "GaussianPulse"], [119, 0, 1, "", "HSPulse"], [119, 0, 1, "", "HahnEchoSequence"], [119, 0, 1, "id211", "Interface"], [32, 4, 0, "-", "Logging"], [119, 0, 1, "id179", "Parameter"], [119, 0, 1, "id149", "Pulse"], [119, 0, 1, "id145", "RectPulse"], [119, 0, 1, "", "RefocusedEcho2DAnalysis"], [119, 0, 1, "", "RefocusedEcho2DSequence"], [41, 4, 0, "-", "Relaxation"], [119, 0, 1, "", "Reporter"], [119, 0, 1, "", "ReptimeAnalysis"], [119, 0, 1, "", "ReptimeScan"], [46, 4, 0, "-", "ResPro"], [119, 0, 1, "", "ResonatorProfileAnalysis"], [119, 0, 1, "", "ResonatorProfileSequence"], [119, 0, 1, "id222", "Sequence"], [119, 0, 1, "", "SincPulse"], [119, 0, 1, "", "T2RelaxationSequence"], [119, 0, 1, "", "TWTProfileSequence"], [54, 4, 0, "-", "TwoD_Experiment"], [119, 6, 1, "", "__version__"], [55, 4, 0, "-", "_version"], [119, 5, 1, "id148", "autoEPRDecoder"], [119, 5, 1, "", "build_default_pulses"], [119, 5, 1, "id107", "build_table"], [58, 4, 0, "-", "classes"], [119, 6, 1, "", "cmap"], [59, 4, 0, "-", "colors"], [119, 5, 1, "", "combo_figure"], [119, 5, 1, "", "create_dataset_from_axes"], [119, 5, 1, "", "create_dataset_from_bruker"], [119, 5, 1, "", "create_dataset_from_sequence"], [64, 4, 0, "-", "criteria"], [66, 4, 0, "-", "dataset"], [119, 5, 1, "", "detect_ESEEM"], [119, 5, 1, "", "eprload"], [119, 5, 1, "", "gcd"], [119, 5, 1, "", "get_all_axes"], [119, 5, 1, "", "get_all_fixed_param"], [74, 4, 0, "-", "gui"], [113, 4, 0, "-", "hardware"], [119, 5, 1, "", "optimise_spectra_position"], [119, 5, 1, "", "plot_1Drelax"], [119, 6, 1, "", "primary_colors"], [129, 4, 0, "-", "pulses"], [132, 4, 0, "-", "reporter"], [119, 5, 1, "", "round_step"], [119, 5, 1, "", "save_file"], [143, 4, 0, "-", "sequences"], [119, 5, 1, "id108", "sop"], [144, 4, 0, "-", "tools"], [119, 5, 1, "", "transpose_dict_of_list"], [119, 5, 1, "", "transpose_list_of_dicts"], [145, 4, 0, "-", "utils"], [119, 5, 1, "", "val_in_ns"], [119, 5, 1, "", "val_in_us"]], "autodeer.CarrPurcellAnalysis": [[119, 1, 1, "", "check_decay"], [119, 2, 1, "", "data"], [119, 2, 1, "", "dataset"], [119, 1, 1, "", "find_optimal"], [119, 1, 1, "", "fit"], [119, 1, 1, "", "plot"]], "autodeer.CarrPurcellSequence": [[119, 1, 1, "", "_build_sequence"], [119, 2, 1, "", "dim"], [119, 2, 1, "", "n"], [119, 2, 1, "", "name"], [119, 2, 1, "", "tau"]], "autodeer.ChirpPulse": [[119, 1, 1, "", "func"], [119, 3, 1, "", "sweeprate"]], "autodeer.DEERSequence": [[119, 2, 1, "id261", "ESEEM"], [119, 1, 1, "id262", "add_ESEEM_avg"], [119, 2, 1, "id260", "deadtime"], [119, 2, 1, "id259", "dt"], [119, 1, 1, "id265", "five_pulse"], [119, 1, 1, "id264", "four_pulse"], [119, 1, 1, "id267", "nDEER_CP"], [119, 2, 1, "id255", "name"], [119, 1, 1, "id268", "select_pcyc"], [119, 1, 1, "id266", "seven_pulse"], [119, 1, 1, "id269", "simulate"], [119, 2, 1, "id257", "tau1"], [119, 2, 1, "id256", "tau1us"], [119, 2, 1, "id258", "tau2"], [119, 1, 1, "id263", "three_pulse"]], "autodeer.DEER_analysis": [[16, 5, 1, "", "DEERanalysis"], [16, 5, 1, "", "DEERanalysis_plot"], [16, 5, 1, "", "DEERanalysis_plot_pub"], [16, 5, 1, "", "IdentifyROI"], [16, 5, 1, "", "MNR_estimate"], [16, 6, 1, "", "MODULE_DIR"], [16, 5, 1, "", "background_func"], [16, 5, 1, "", "build__lowpass_butter_filter"], [16, 5, 1, "", "calc_correction_factor"], [16, 5, 1, "", "calc_deer_settings"], [16, 5, 1, "", "calc_identifiability"], [16, 5, 1, "", "find_longest_pulse"], [16, 5, 1, "", "functional"], [16, 6, 1, "", "log"], [16, 5, 1, "", "normalise_01"], [16, 5, 1, "", "optimise_pulses"], [16, 5, 1, "", "plot_overlap"], [16, 5, 1, "", "remove_echo"], [16, 5, 1, "", "resample_and_shift_vector"], [16, 5, 1, "", "shift_pulse_freq"], [16, 5, 1, "", "val_in_us"]], "autodeer.Delay": [[119, 2, 1, "id143", "pcyc"], [119, 2, 1, "id144", "scale"], [119, 2, 1, "id142", "tp"]], "autodeer.Detection": [[119, 2, 1, "id177", "freq"], [119, 2, 1, "id178", "pcyc"], [119, 2, 1, "id176", "scale"]], "autodeer.EPRAccessor": [[119, 3, 1, "", "SNR"], [119, 2, 1, "", "_obj"], [119, 3, 1, "", "correctphase"], [119, 3, 1, "", "correctphasefull"], [119, 3, 1, "", "fft"], [119, 3, 1, "", "normalise"], [119, 1, 1, "", "save"], [119, 3, 1, "", "sequence"]], "autodeer.FieldSweep": [[22, 0, 1, "", "FieldSweepAnalysis"], [22, 0, 1, "", "SpinSystem"], [22, 5, 1, "", "build_spectrum"], [22, 5, 1, "", "create_Nmodel"], [22, 5, 1, "", "erot"], [22, 5, 1, "", "eyekron"], [22, 5, 1, "", "ham"], [22, 5, 1, "", "ham_ez"], [22, 5, 1, "", "ham_nz"], [22, 5, 1, "", "kroneye"], [22, 5, 1, "", "resfields"]], "autodeer.FieldSweep.FieldSweepAnalysis": [[22, 1, 1, "", "calc_gyro"], [22, 1, 1, "", "calc_noise_level"], [22, 2, 1, "", "data"], [22, 1, 1, "", "find_max"], [22, 1, 1, "", "fit"], [22, 1, 1, "", "plot"], [22, 1, 1, "", "smooth"]], "autodeer.FieldSweep.SpinSystem": [[22, 2, 1, "", "A"], [22, 2, 1, "", "I"], [22, 2, 1, "", "S"], [22, 2, 1, "", "Spins"], [22, 2, 1, "", "g"], [22, 2, 1, "", "gnscale"], [22, 2, 1, "", "nElectrons"], [22, 2, 1, "", "nNuclei"], [22, 2, 1, "", "nStates"]], "autodeer.FieldSweepAnalysis": [[119, 1, 1, "", "calc_gyro"], [119, 1, 1, "", "calc_noise_level"], [119, 2, 1, "", "data"], [119, 1, 1, "", "find_max"], [119, 1, 1, "", "fit"], [119, 1, 1, "", "plot"], [119, 1, 1, "", "smooth"]], "autodeer.FieldSweepSequence": [[119, 2, 1, "", "B"], [119, 2, 1, "", "name"]], "autodeer.FrequencySweptPulse": [[119, 3, 1, "", "Qcrit"], [119, 3, 1, "", "amp_factor"], [119, 3, 1, "", "sweeprate"]], "autodeer.GaussianPulse": [[119, 2, 1, "", "FWHM"], [119, 2, 1, "", "freq"], [119, 1, 1, "", "func"]], "autodeer.HSPulse": [[119, 2, 1, "", "beta"], [119, 1, 1, "", "func"], [119, 2, 1, "", "order1"], [119, 2, 1, "", "order2"], [119, 3, 1, "", "sweeprate"]], "autodeer.HahnEchoSequence": [[119, 2, 1, "", "name"]], "autodeer.Interface": [[119, 1, 1, "id217", "acquire_dataset"], [119, 1, 1, "id216", "connect"], [119, 1, 1, "id219", "isrunning"], [119, 1, 1, "id218", "launch"], [119, 2, 1, "id212", "pulses"], [119, 2, 1, "id215", "resonator"], [119, 2, 1, "id213", "savefolder"], [119, 2, 1, "id214", "savename"], [119, 1, 1, "id220", "terminate"], [119, 1, 1, "id221", "terminate_at"]], "autodeer.Logging": [[32, 0, 1, "", "DictFormater"], [32, 0, 1, "", "QtLogHandler"], [32, 5, 1, "", "change_log_level"], [32, 5, 1, "", "setup_logs"]], "autodeer.Logging.DictFormater": [[32, 1, 1, "", "format"]], "autodeer.Logging.QtLogHandler": [[32, 1, 1, "", "emit"], [32, 2, 1, "", "signal"]], "autodeer.Parameter": [[119, 1, 1, "id200", "__add__"], [119, 1, 1, "id199", "__eq__"], [119, 1, 1, "id202", "__mul__"], [119, 1, 1, "id203", "__rmul__"], [119, 1, 1, "id201", "__sub__"], [119, 1, 1, "id208", "_from_dict"], [119, 1, 1, "id209", "_from_json"], [119, 1, 1, "id205", "_to_dict"], [119, 1, 1, "id206", "_to_json"], [119, 1, 1, "id195", "add_axis"], [119, 2, 1, "id194", "ax_id"], [119, 2, 1, "id193", "axis"], [119, 1, 1, "id204", "copy"], [119, 2, 1, "id191", "description"], [119, 3, 1, "id188", "dim"], [119, 1, 1, "id196", "get_axis"], [119, 1, 1, "id198", "is_static"], [119, 1, 1, "id210", "load"], [119, 2, 1, "id189", "name"], [119, 1, 1, "id197", "remove_dynamic"], [119, 1, 1, "id207", "save"], [119, 2, 1, "id190", "unit"], [119, 2, 1, "id192", "virtual"]], "autodeer.Pulse": [[119, 2, 1, "id153", "Progression"], [119, 1, 1, "id167", "__str__"], [119, 1, 1, "id154", "_addPhaseCycle"], [119, 1, 1, "id155", "_buildFMAM"], [119, 1, 1, "id162", "_calc_fft"], [119, 1, 1, "id172", "_from_dict"], [119, 1, 1, "id173", "_from_json"], [119, 1, 1, "id166", "_pcyc_str"], [119, 1, 1, "id169", "_to_dict"], [119, 1, 1, "id170", "_to_json"], [119, 3, 1, "id151", "amp_factor"], [119, 3, 1, "id150", "bandwidth"], [119, 1, 1, "id156", "build_shape"], [119, 1, 1, "id157", "build_table"], [119, 1, 1, "id168", "copy"], [119, 1, 1, "id163", "exciteprofile"], [119, 1, 1, "id159", "isDelayFocused"], [119, 1, 1, "id160", "isPulseFocused"], [119, 1, 1, "id158", "is_static"], [119, 1, 1, "id174", "load"], [119, 2, 1, "id152", "name"], [119, 1, 1, "id161", "plot"], [119, 1, 1, "id165", "plot_fft"], [119, 1, 1, "id171", "save"]], "autodeer.RectPulse": [[119, 2, 1, "id146", "freq"], [119, 1, 1, "id147", "func"]], "autodeer.RefocusedEcho2DAnalysis": [[119, 1, 1, "", "_smooth"], [119, 2, 1, "", "axis"], [119, 2, 1, "", "data"], [119, 2, 1, "", "dataset"], [119, 1, 1, "", "find_optimal"], [119, 1, 1, "", "optimal_tau1"], [119, 1, 1, "", "plot1D"], [119, 1, 1, "", "plot2D"]], "autodeer.RefocusedEcho2DSequence": [[119, 1, 1, "", "_build_sequence"], [119, 2, 1, "", "dt"], [119, 2, 1, "", "name"], [119, 2, 1, "", "tau1"], [119, 2, 1, "", "tau2"], [119, 2, 1, "", "tau_init"]], "autodeer.Relaxation": [[41, 0, 1, "", "CarrPurcellAnalysis"], [41, 0, 1, "", "RefocusedEcho2DAnalysis"], [41, 0, 1, "", "ReptimeAnalysis"], [41, 6, 1, "", "cmap"], [41, 5, 1, "", "detect_ESEEM"], [41, 5, 1, "", "plot_1Drelax"]], "autodeer.Relaxation.CarrPurcellAnalysis": [[41, 1, 1, "", "check_decay"], [41, 2, 1, "", "data"], [41, 2, 1, "", "dataset"], [41, 1, 1, "", "find_optimal"], [41, 1, 1, "", "fit"], [41, 1, 1, "", "plot"]], "autodeer.Relaxation.RefocusedEcho2DAnalysis": [[41, 1, 1, "", "_smooth"], [41, 2, 1, "", "axis"], [41, 2, 1, "", "data"], [41, 2, 1, "", "dataset"], [41, 1, 1, "", "find_optimal"], [41, 1, 1, "", "optimal_tau1"], [41, 1, 1, "", "plot1D"], [41, 1, 1, "", "plot2D"]], "autodeer.Relaxation.ReptimeAnalysis": [[41, 2, 1, "", "axis"], [41, 1, 1, "", "calc_optimal_reptime"], [41, 1, 1, "", "fit"], [41, 1, 1, "", "plot"], [41, 2, 1, "", "seq"]], "autodeer.Reporter": [[119, 1, 1, "", "_build"], [119, 1, 1, "", "add_code_block"], [119, 1, 1, "", "add_figure"], [119, 1, 1, "", "add_new_section"], [119, 1, 1, "", "add_page_break"], [119, 1, 1, "", "add_space"], [119, 1, 1, "", "add_table"], [119, 1, 1, "", "add_text"], [119, 1, 1, "", "add_title"], [119, 1, 1, "", "footer"], [119, 2, 1, "", "frame"], [119, 1, 1, "", "header"], [119, 2, 1, "", "pdf"], [119, 2, 1, "", "story"], [119, 2, 1, "", "template"]], "autodeer.ReptimeAnalysis": [[119, 2, 1, "", "axis"], [119, 1, 1, "", "calc_optimal_reptime"], [119, 1, 1, "", "fit"], [119, 1, 1, "", "plot"], [119, 2, 1, "", "seq"]], "autodeer.ReptimeScan": [[119, 2, 1, "", "dim"], [119, 2, 1, "", "min_reptime"], [119, 2, 1, "", "name"], [119, 2, 1, "", "reptime"], [119, 2, 1, "", "step"]], "autodeer.ResPro": [[46, 5, 1, "", "BSpline_extra"], [46, 0, 1, "", "ResonatorProfileAnalysis"], [46, 5, 1, "", "calc_overlap"], [46, 5, 1, "", "ceil"], [46, 5, 1, "", "floor"], [46, 5, 1, "", "optimise_spectra_position"]], "autodeer.ResPro.ResonatorProfileAnalysis": [[46, 1, 1, "", "_process_fit"], [46, 2, 1, "", "dataset"], [46, 2, 1, "", "f_lims"], [46, 1, 1, "", "fit"], [46, 2, 1, "", "n_files"], [46, 1, 1, "", "plot"], [46, 1, 1, "", "process_nutations"], [46, 2, 1, "", "t"]], "autodeer.ResonatorProfileAnalysis": [[119, 1, 1, "", "_process_fit"], [119, 2, 1, "", "dataset"], [119, 2, 1, "", "f_lims"], [119, 1, 1, "", "fit"], [119, 2, 1, "", "n_files"], [119, 1, 1, "", "plot"], [119, 1, 1, "", "process_nutations"], [119, 2, 1, "", "t"]], "autodeer.ResonatorProfileSequence": [[119, 1, 1, "", "_build_sequence"], [119, 2, 1, "", "fwidth"], [119, 2, 1, "", "gyro"], [119, 2, 1, "", "name"]], "autodeer.Sequence": [[119, 2, 1, "id228", "LO"], [119, 1, 1, "id246", "__str__"], [119, 1, 1, "id237", "_buildPhaseCycle"], [119, 1, 1, "id245", "_checkRect"], [119, 1, 1, "id243", "_convert_to_delay"], [119, 1, 1, "id244", "_convert_to_pulses"], [119, 1, 1, "id236", "_estimate_time"], [119, 1, 1, "id251", "_from_dict"], [119, 1, 1, "id252", "_from_json"], [119, 1, 1, "id248", "_to_dict"], [119, 1, 1, "id249", "_to_json"], [119, 1, 1, "id235", "addPulse"], [119, 2, 1, "id229", "averages"], [119, 2, 1, "id226", "axes_uuid"], [119, 1, 1, "id242", "convert"], [119, 1, 1, "id247", "copy"], [119, 1, 1, "id238", "evolution"], [119, 1, 1, "id241", "isDelayFocused"], [119, 1, 1, "id240", "isPulseFocused"], [119, 1, 1, "id253", "load"], [119, 2, 1, "id231", "name"], [119, 2, 1, "id225", "num_pulses"], [119, 1, 1, "id233", "plot"], [119, 1, 1, "id234", "plot_pulse_exc"], [119, 2, 1, "id232", "progTable"], [119, 2, 1, "id224", "pulses"], [119, 2, 1, "id227", "reduce_uuid"], [119, 1, 1, "id250", "save"], [119, 3, 1, "id223", "seqtable_steps"], [119, 1, 1, "id239", "shift_detfreq_to_zero"], [119, 2, 1, "id230", "shots"]], "autodeer.SincPulse": [[119, 2, 1, "", "freq"], [119, 1, 1, "", "func"], [119, 2, 1, "", "order"], [119, 2, 1, "", "window"]], "autodeer.T2RelaxationSequence": [[119, 2, 1, "", "name"], [119, 2, 1, "", "tau"]], "autodeer.TWTProfileSequence": [[119, 1, 1, "", "_build_sequence"], [119, 2, 1, "", "name"]], "autodeer.TwoD_Experiment": [[54, 0, 1, "", "TwoDExperimentAnalysis"]], "autodeer.TwoD_Experiment.TwoDExperimentAnalysis": [[54, 1, 1, "", "_data_transpose"], [54, 1, 1, "", "_stability_check"], [54, 1, 1, "", "calculate_noise_level"], [54, 1, 1, "", "calculate_optimal"], [54, 1, 1, "", "calculate_snr_threshold"], [54, 1, 1, "", "create_bahrenberg_plots"], [54, 1, 1, "", "create_slice_plot"], [54, 1, 1, "", "create_twoD_plot"], [54, 1, 1, "", "estimated_snr"], [54, 1, 1, "", "import_data"], [54, 1, 1, "", "import_dataset"], [54, 1, 1, "", "invert_signal"], [54, 1, 1, "", "load"], [54, 2, 1, "", "noise_frac"], [54, 1, 1, "", "optimal_slice_plot"], [54, 1, 1, "", "set_snr_target"], [54, 1, 1, "", "set_snr_threshold"], [54, 1, 1, "", "set_time_target"], [54, 1, 1, "", "snr_normalize"], [54, 2, 1, "", "snr_target"], [54, 2, 1, "", "time_target"], [54, 2, 1, "", "trace_length"], [54, 1, 1, "", "value_at_pos"], [54, 1, 1, "", "value_at_time"]], "autodeer._version": [[55, 6, 1, "", "__version__"]], "autodeer.classes": [[58, 0, 1, "", "Interface"], [58, 0, 1, "", "Parameter"]], "autodeer.classes.Interface": [[58, 1, 1, "", "acquire_dataset"], [58, 1, 1, "", "connect"], [58, 1, 1, "", "isrunning"], [58, 1, 1, "", "launch"], [58, 2, 1, "", "pulses"], [58, 2, 1, "", "resonator"], [58, 2, 1, "", "savefolder"], [58, 2, 1, "", "savename"], [58, 1, 1, "", "terminate"], [58, 1, 1, "", "terminate_at"]], "autodeer.classes.Parameter": [[58, 1, 1, "", "__add__"], [58, 1, 1, "", "__eq__"], [58, 1, 1, "", "__mul__"], [58, 1, 1, "", "__rmul__"], [58, 1, 1, "", "__sub__"], [58, 1, 1, "", "_from_dict"], [58, 1, 1, "", "_from_json"], [58, 1, 1, "", "_to_dict"], [58, 1, 1, "", "_to_json"], [58, 1, 1, "", "add_axis"], [58, 2, 1, "", "ax_id"], [58, 2, 1, "", "axis"], [58, 1, 1, "", "copy"], [58, 2, 1, "", "description"], [58, 3, 1, "", "dim"], [58, 1, 1, "", "get_axis"], [58, 1, 1, "", "is_static"], [58, 1, 1, "", "load"], [58, 2, 1, "", "name"], [58, 1, 1, "", "remove_dynamic"], [58, 1, 1, "", "save"], [58, 2, 1, "", "unit"], [58, 2, 1, "", "virtual"]], "autodeer.colors": [[59, 6, 1, "", "ReIm_colors"], [59, 6, 1, "", "primary_colors"], [59, 6, 1, "", "shade_colors"]], "autodeer.criteria": [[64, 0, 1, "", "Criteria"], [64, 0, 1, "", "DEERCriteria"], [64, 0, 1, "", "SNRCriteria"], [64, 0, 1, "", "TimeCriteria"], [64, 6, 1, "", "log"]], "autodeer.criteria.Criteria": [[64, 1, 1, "", "__add__"], [64, 2, 1, "", "description"], [64, 2, 1, "", "end_signal"], [64, 2, 1, "", "name"], [64, 2, 1, "", "test"]], "autodeer.criteria.DEERCriteria": [[64, 2, 1, "", "description"], [64, 2, 1, "", "name"]], "autodeer.dataset": [[66, 0, 1, "", "EPRAccessor"], [66, 5, 1, "", "create_dataset_from_axes"], [66, 5, 1, "", "create_dataset_from_bruker"], [66, 5, 1, "", "create_dataset_from_sequence"], [66, 5, 1, "", "get_all_axes"], [66, 5, 1, "", "get_all_fixed_param"]], "autodeer.dataset.EPRAccessor": [[66, 3, 1, "", "SNR"], [66, 2, 1, "", "_obj"], [66, 3, 1, "", "correctphase"], [66, 3, 1, "", "correctphasefull"], [66, 3, 1, "", "fft"], [66, 3, 1, "", "normalise"], [66, 1, 1, "", "save"], [66, 3, 1, "", "sequence"]], "autodeer.gui": [[74, 0, 1, "", "Worker"], [74, 0, 1, "", "WorkerSignals"], [69, 4, 0, "-", "__main__"], [74, 0, 1, "", "autoDEERUI"], [73, 4, 0, "-", "autoDEER_worker"], [74, 5, 1, "", "create_save_name"], [74, 5, 1, "", "fill_table"], [74, 5, 1, "", "getCIstring"], [74, 5, 1, "", "get_sequence_rows"], [74, 5, 1, "", "list_str_to_type"], [74, 5, 1, "", "load_epr_file"], [76, 4, 0, "-", "log"], [80, 4, 0, "-", "main"], [83, 4, 0, "-", "modetune"], [74, 5, 1, "", "param_in_MHz"], [74, 5, 1, "", "param_in_us"], [74, 5, 1, "", "pyqt_table_from_dict"], [85, 4, 0, "-", "quickdeer"], [74, 5, 1, "", "read_table"], [74, 5, 1, "", "str_to_list_type"], [74, 5, 1, "", "test_SNR"], [86, 4, 0, "-", "test_main"], [89, 4, 0, "-", "tools"]], "autodeer.gui.Worker": [[74, 2, 1, "", "args"], [74, 2, 1, "", "fn"], [74, 2, 1, "", "kwargs"], [74, 1, 1, "", "run"], [74, 2, 1, "", "signals"]], "autodeer.gui.WorkerSignals": [[74, 2, 1, "", "error"], [74, 2, 1, "", "finished"], [74, 2, 1, "", "result"]], "autodeer.gui.__main__": [[69, 6, 1, "", "app"], [69, 6, 1, "", "window"]], "autodeer.gui.autoDEERUI": [[74, 2, 1, "", "Bruker"], [74, 2, 1, "", "DL_params"], [74, 2, 1, "", "LO"], [74, 2, 1, "", "Min_tp"], [74, 1, 1, "", "RunAdvancedAutoDEER"], [74, 1, 1, "", "RunAutoDEER"], [74, 1, 1, "", "RunFullyAutoDEER"], [74, 1, 1, "", "advanced_mode_inputs"], [74, 1, 1, "", "change_LO"], [74, 1, 1, "", "check_CP"], [74, 1, 1, "", "check_T2"], [74, 1, 1, "", "clear_all"], [74, 2, 1, "", "config"], [74, 1, 1, "", "connect_spectrometer"], [74, 2, 1, "", "connected"], [74, 2, 1, "", "cores"], [74, 2, 1, "", "correction_factor"], [74, 1, 1, "", "create_fieldsweep_figure"], [74, 1, 1, "", "create_relax_figure"], [74, 1, 1, "", "create_report"], [74, 1, 1, "", "create_respro_figure"], [74, 2, 1, "", "current_data"], [74, 2, 1, "", "current_folder"], [74, 2, 1, "", "current_results"], [74, 2, 1, "", "deer_settings"], [74, 2, 1, "", "discussion_url"], [74, 2, 1, "", "docs_url"], [74, 1, 1, "", "fsweep_toolbar"], [74, 2, 1, "", "github_url"], [74, 2, 1, "", "gyro"], [74, 1, 1, "", "initialise_deer_settings"], [74, 2, 1, "", "issues_url"], [74, 1, 1, "", "load_epr_file"], [74, 1, 1, "", "load_folder"], [74, 1, 1, "", "load_spectrometer_config"], [74, 2, 1, "", "logo_pixmap"], [74, 2, 1, "", "longDEER"], [74, 1, 1, "", "optimise_pulses"], [74, 1, 1, "", "optimise_pulses_button"], [74, 2, 1, "", "priorties"], [74, 2, 1, "", "pulses"], [74, 2, 1, "", "q_DEER"], [74, 2, 1, "", "queue"], [74, 1, 1, "", "raise_warning"], [74, 1, 1, "", "refresh_T2"], [74, 1, 1, "", "refresh_fieldsweep_after_fit"], [74, 1, 1, "", "refresh_relax"], [74, 1, 1, "", "refresh_relax_figure"], [74, 1, 1, "", "refresh_respro"], [74, 1, 1, "", "relax_toolbar"], [74, 1, 1, "", "respro_toolbar"], [74, 1, 1, "", "save_data"], [74, 1, 1, "", "select_resonator"], [74, 1, 1, "", "set_spectrometer_connected_light"], [74, 2, 1, "", "spectromterInterface"], [74, 2, 1, "", "starttime"], [74, 2, 1, "", "threadpool"], [74, 1, 1, "", "timeout"], [74, 1, 1, "", "update_T2"], [74, 1, 1, "", "update_deer_settings"], [74, 1, 1, "", "update_fieldsweep"], [74, 1, 1, "", "update_longdeer"], [74, 1, 1, "", "update_optimise_pulses_figure"], [74, 1, 1, "", "update_quickdeer"], [74, 1, 1, "", "update_relax"], [74, 1, 1, "", "update_relax2D"], [74, 1, 1, "", "update_reptime"], [74, 1, 1, "", "update_respro"], [74, 2, 1, "", "userinput"], [74, 2, 1, "", "waitCondition"], [74, 2, 1, "", "worker"]], "autodeer.gui.autoDEER_worker": [[73, 0, 1, "", "autoDEERSignals"], [73, 0, 1, "", "autoDEERWorker"]], "autodeer.gui.autoDEER_worker.autoDEERSignals": [[73, 2, 1, "", "Relax2D_result"], [73, 2, 1, "", "T2_result"], [73, 2, 1, "", "error"], [73, 2, 1, "", "finished"], [73, 2, 1, "", "fsweep_result"], [73, 2, 1, "", "longdeer_result"], [73, 2, 1, "", "longdeer_update"], [73, 2, 1, "", "progress"], [73, 2, 1, "", "quickdeer_result"], [73, 2, 1, "", "quickdeer_update"], [73, 2, 1, "", "relax_result"], [73, 2, 1, "", "reptime_scan_result"], [73, 2, 1, "", "respro_result"], [73, 2, 1, "", "result"], [73, 2, 1, "", "status"], [73, 2, 1, "", "timeout"]], "autodeer.gui.autoDEER_worker.autoDEERWorker": [[73, 2, 1, "", "AWG"], [73, 2, 1, "", "EndTimeCriteria"], [73, 2, 1, "", "LO"], [73, 1, 1, "", "_build_methods"], [73, 2, 1, "", "args"], [73, 2, 1, "", "deer_inputs"], [73, 2, 1, "", "gyro"], [73, 2, 1, "", "interface"], [73, 2, 1, "", "kwargs"], [73, 2, 1, "", "max_tau"], [73, 2, 1, "", "mutex"], [73, 1, 1, "", "new_data"], [73, 1, 1, "", "new_pulses"], [73, 1, 1, "", "pause_and_wait"], [73, 2, 1, "", "project"], [73, 2, 1, "", "pulses"], [73, 2, 1, "", "quick_deer_state"], [73, 2, 1, "", "results"], [73, 1, 1, "", "run"], [73, 1, 1, "", "run_2D_relax"], [73, 1, 1, "", "run_CP_relax"], [73, 1, 1, "", "run_T2_relax"], [73, 1, 1, "", "run_deer"], [73, 1, 1, "", "run_fsweep"], [73, 1, 1, "", "run_long_deer"], [73, 1, 1, "", "run_quick_deer"], [73, 1, 1, "", "run_reptime_opt"], [73, 1, 1, "", "run_respro"], [73, 2, 1, "", "samplename"], [73, 2, 1, "", "savename"], [73, 1, 1, "", "set_2D_max_tau"], [73, 1, 1, "", "set_noise_mode"], [73, 2, 1, "", "signals"], [73, 1, 1, "", "stop"], [73, 2, 1, "", "stop_flag"], [73, 2, 1, "", "test_interval"], [73, 1, 1, "", "tune_pulses"], [73, 1, 1, "", "update_LO"], [73, 1, 1, "", "update_deersettings"], [73, 1, 1, "", "update_gyro"], [73, 1, 1, "", "update_reptime"], [73, 2, 1, "", "updaterate"], [73, 2, 1, "", "user_inputs"], [73, 2, 1, "", "wait"]], "autodeer.gui.log": [[76, 0, 1, "", "LogDialog"], [76, 6, 1, "", "package_directory"]], "autodeer.gui.log.LogDialog": [[76, 1, 1, "", "add_new_entry"], [76, 1, 1, "", "clear_log"], [76, 2, 1, "", "core_logger"], [76, 2, 1, "", "hardware_logger"], [76, 2, 1, "", "log"], [76, 2, 1, "", "log_levels"], [76, 1, 1, "", "save_log_to_file"], [76, 1, 1, "", "update_log_text"]], "autodeer.gui.main": [[80, 6, 1, "", "SampleConcComboBox_opts"], [80, 5, 1, "", "T2_process"], [80, 0, 1, "", "Worker"], [80, 0, 1, "", "WorkerSignals"], [80, 6, 1, "", "app"], [80, 0, 1, "", "autoDEERUI"], [80, 5, 1, "", "fieldsweep_fit"], [80, 6, 1, "", "package_directory"], [80, 5, 1, "", "relax_process"], [80, 5, 1, "", "respro_process"]], "autodeer.gui.main.Worker": [[80, 2, 1, "", "args"], [80, 2, 1, "", "fn"], [80, 2, 1, "", "kwargs"], [80, 1, 1, "", "run"], [80, 2, 1, "", "signals"]], "autodeer.gui.main.WorkerSignals": [[80, 2, 1, "", "error"], [80, 2, 1, "", "finished"], [80, 2, 1, "", "progress"], [80, 2, 1, "", "result"]], "autodeer.gui.main.autoDEERUI": [[80, 2, 1, "", "Bruker"], [80, 2, 1, "", "DL_params"], [80, 2, 1, "", "LO"], [80, 2, 1, "", "Min_tp"], [80, 1, 1, "", "RunAdvancedAutoDEER"], [80, 1, 1, "", "RunAutoDEER"], [80, 1, 1, "", "RunFullyAutoDEER"], [80, 1, 1, "", "advanced_mode_inputs"], [80, 1, 1, "", "change_LO"], [80, 1, 1, "", "check_CP"], [80, 1, 1, "", "check_T2"], [80, 1, 1, "", "clear_all"], [80, 2, 1, "", "config"], [80, 1, 1, "", "connect_spectrometer"], [80, 2, 1, "", "connected"], [80, 2, 1, "", "cores"], [80, 2, 1, "", "correction_factor"], [80, 1, 1, "", "create_fieldsweep_figure"], [80, 1, 1, "", "create_relax_figure"], [80, 1, 1, "", "create_report"], [80, 1, 1, "", "create_respro_figure"], [80, 2, 1, "", "current_data"], [80, 2, 1, "", "current_folder"], [80, 2, 1, "", "current_results"], [80, 2, 1, "", "deer_settings"], [80, 2, 1, "", "discussion_url"], [80, 2, 1, "", "docs_url"], [80, 1, 1, "", "fsweep_toolbar"], [80, 2, 1, "", "github_url"], [80, 2, 1, "", "gyro"], [80, 1, 1, "", "initialise_deer_settings"], [80, 2, 1, "", "issues_url"], [80, 1, 1, "", "load_epr_file"], [80, 1, 1, "", "load_folder"], [80, 1, 1, "", "load_spectrometer_config"], [80, 2, 1, "", "logo_pixmap"], [80, 2, 1, "", "longDEER"], [80, 1, 1, "", "optimise_pulses"], [80, 1, 1, "", "optimise_pulses_button"], [80, 2, 1, "", "priorties"], [80, 2, 1, "", "pulses"], [80, 2, 1, "", "q_DEER"], [80, 2, 1, "", "queue"], [80, 1, 1, "", "raise_warning"], [80, 1, 1, "", "refresh_T2"], [80, 1, 1, "", "refresh_fieldsweep_after_fit"], [80, 1, 1, "", "refresh_relax"], [80, 1, 1, "", "refresh_relax_figure"], [80, 1, 1, "", "refresh_respro"], [80, 1, 1, "", "relax_toolbar"], [80, 1, 1, "", "respro_toolbar"], [80, 1, 1, "", "save_data"], [80, 1, 1, "", "select_resonator"], [80, 1, 1, "", "set_spectrometer_connected_light"], [80, 2, 1, "", "spectromterInterface"], [80, 2, 1, "", "starttime"], [80, 2, 1, "", "threadpool"], [80, 1, 1, "", "timeout"], [80, 1, 1, "", "update_T2"], [80, 1, 1, "", "update_deer_settings"], [80, 1, 1, "", "update_fieldsweep"], [80, 1, 1, "", "update_longdeer"], [80, 1, 1, "", "update_optimise_pulses_figure"], [80, 1, 1, "", "update_quickdeer"], [80, 1, 1, "", "update_relax"], [80, 1, 1, "", "update_relax2D"], [80, 1, 1, "", "update_reptime"], [80, 1, 1, "", "update_respro"], [80, 2, 1, "", "userinput"], [80, 2, 1, "", "waitCondition"], [80, 2, 1, "", "worker"]], "autodeer.gui.modetune": [[83, 0, 1, "", "ModeTune"], [83, 0, 1, "", "get_dataWorker"], [83, 6, 1, "", "package_directory"], [83, 5, 1, "", "phasecorrect_all_points"], [83, 5, 1, "", "save_data"]], "autodeer.gui.modetune.ModeTune": [[83, 1, 1, "", "create_figure"], [83, 2, 1, "", "interface"], [83, 1, 1, "", "start_mode_tune"], [83, 2, 1, "", "ui"], [83, 1, 1, "", "update_dip"], [83, 1, 1, "", "update_figure"]], "autodeer.gui.modetune.get_dataWorker": [[83, 2, 1, "", "finished_signal"], [83, 2, 1, "", "interface"], [83, 2, 1, "", "result_signal"], [83, 1, 1, "", "run"], [83, 2, 1, "", "signals"]], "autodeer.gui.quickdeer": [[85, 0, 1, "", "DEERplot"], [85, 6, 1, "", "app"], [85, 5, 1, "", "deeranalysis_process"], [85, 5, 1, "", "get_Vexp"], [85, 6, 1, "", "package_directory"]], "autodeer.gui.quickdeer.DEERplot": [[85, 2, 1, "", "DL_params"], [85, 1, 1, "", "clearLayout"], [85, 1, 1, "", "clear_all"], [85, 2, 1, "", "cores"], [85, 1, 1, "", "create_figure"], [85, 2, 1, "", "current_data"], [85, 2, 1, "", "current_folder"], [85, 2, 1, "", "current_results"], [85, 1, 1, "", "process_deeranalysis"], [85, 1, 1, "", "refresh_deer"], [85, 1, 1, "", "setup_inputs"], [85, 2, 1, "", "threadpool"], [85, 1, 1, "", "toolbar"], [85, 1, 1, "", "update_analysis_table"], [85, 1, 1, "", "update_figure"], [85, 1, 1, "", "update_fit_result"], [85, 1, 1, "", "update_inputs_from_dataset"]], "autodeer.gui.tools": [[89, 0, 1, "", "Worker"], [89, 0, 1, "", "WorkerSignals"], [89, 5, 1, "", "create_save_name"], [89, 5, 1, "", "fill_table"], [89, 5, 1, "", "getCIstring"], [89, 5, 1, "", "get_sequence_rows"], [89, 5, 1, "", "list_str_to_type"], [89, 5, 1, "", "load_epr_file"], [89, 5, 1, "", "param_in_MHz"], [89, 5, 1, "", "param_in_us"], [89, 5, 1, "", "pyqt_table_from_dict"], [89, 5, 1, "", "read_table"], [89, 5, 1, "", "str_to_list_type"], [89, 5, 1, "", "test_SNR"]], "autodeer.gui.tools.Worker": [[89, 2, 1, "", "args"], [89, 2, 1, "", "fn"], [89, 2, 1, "", "kwargs"], [89, 1, 1, "", "run"], [89, 2, 1, "", "signals"]], "autodeer.gui.tools.WorkerSignals": [[89, 2, 1, "", "error"], [89, 2, 1, "", "finished"], [89, 2, 1, "", "result"]], "autodeer.hardware": [[91, 4, 0, "-", "Bruker_AWG"], [93, 4, 0, "-", "Bruker_MPFU"], [97, 4, 0, "-", "Bruker_tools"], [99, 4, 0, "-", "ETH_awg"], [100, 4, 0, "-", "ETH_awg_load"], [102, 4, 0, "-", "XeprAPI_link"], [104, 4, 0, "-", "dummy"], [112, 4, 0, "-", "dummy_xepr"], [118, 4, 0, "-", "xepr_experiments"]], "autodeer.hardware.Bruker_AWG": [[91, 0, 1, "", "BrukerAWG"], [91, 5, 1, "", "get_specjet_data"], [91, 5, 1, "", "test_if_MPFU_compatability"]], "autodeer.hardware.Bruker_AWG.BrukerAWG": [[91, 1, 1, "", "_launch_complex_thread"], [91, 1, 1, "", "acquire_dataset"], [91, 2, 1, "", "api"], [91, 2, 1, "", "bg_data"], [91, 2, 1, "", "bg_thread"], [91, 2, 1, "", "bridge_config"], [91, 1, 1, "", "calc_d0"], [91, 1, 1, "", "calc_d0_from_Hahn_Echo"], [91, 1, 1, "", "connect"], [91, 2, 1, "", "cur_exp"], [91, 2, 1, "", "d0"], [91, 1, 1, "", "isrunning"], [91, 1, 1, "", "launch"], [91, 2, 1, "", "pool"], [91, 2, 1, "", "savefolder"], [91, 2, 1, "", "savename"], [91, 1, 1, "", "setup"], [91, 2, 1, "", "setup_flag"], [91, 2, 1, "", "spec_config"], [91, 2, 1, "", "temp_dir"], [91, 1, 1, "", "terminate"], [91, 1, 1, "", "tune_nutation"], [91, 1, 1, "", "tune_pulse"], [91, 1, 1, "", "tune_rectpulse"], [91, 2, 1, "", "tuning"]], "autodeer.hardware.Bruker_MPFU": [[93, 0, 1, "", "BrukerMPFU"], [93, 5, 1, "", "ELDORtune"], [93, 5, 1, "", "MPFUtune"], [93, 5, 1, "", "SPFUtune"], [93, 5, 1, "", "_MPFU_channels"], [93, 5, 1, "", "_SPFU_channels"], [93, 5, 1, "", "get_specjet_data"], [93, 6, 1, "", "hw_log"], [93, 5, 1, "", "step_parameters"], [93, 5, 1, "", "test_if_MPFU_compatability"], [93, 5, 1, "", "tune_phase"], [93, 5, 1, "", "tune_power"]], "autodeer.hardware.Bruker_MPFU.BrukerMPFU": [[93, 2, 1, "", "MPFU"], [93, 1, 1, "", "_launch_complex_thread"], [93, 1, 1, "", "acquire_dataset"], [93, 2, 1, "", "api"], [93, 2, 1, "", "bg_data"], [93, 2, 1, "", "bg_thread"], [93, 2, 1, "", "bridge_config"], [93, 1, 1, "", "calc_d0"], [93, 1, 1, "", "calc_d0_from_Hahn_Echo"], [93, 1, 1, "", "connect"], [93, 2, 1, "", "cur_exp"], [93, 2, 1, "", "d0"], [93, 1, 1, "", "isrunning"], [93, 1, 1, "", "launch"], [93, 2, 1, "", "pool"], [93, 2, 1, "", "savefolder"], [93, 2, 1, "", "savename"], [93, 1, 1, "", "setup"], [93, 2, 1, "", "setup_flag"], [93, 2, 1, "", "spec_config"], [93, 2, 1, "", "temp_dir"], [93, 1, 1, "", "terminate"], [93, 1, 1, "", "tune"], [93, 1, 1, "", "tune_pulse"], [93, 1, 1, "", "tune_rectpulse"], [93, 2, 1, "", "tuning"]], "autodeer.hardware.Bruker_tools": [[97, 6, 1, "", "MODULE_DIR"], [97, 0, 1, "", "PSPhaseCycle"], [97, 0, 1, "", "PSparvar"], [97, 0, 1, "", "PulseSpel"], [97, 5, 1, "", "_addAWGPulse"], [97, 5, 1, "", "build_unique_progtable"], [97, 5, 1, "", "calc_rel_positions"], [97, 5, 1, "", "change_dimensions"], [97, 5, 1, "", "check_variable"], [97, 5, 1, "", "convert_progtable"], [97, 5, 1, "", "determine_TWT_split"], [97, 5, 1, "", "get_arange"], [97, 6, 1, "", "header"], [97, 6, 1, "", "hw_log"], [97, 6, 1, "", "possible_delays"], [97, 6, 1, "", "possible_pulses"], [97, 6, 1, "", "possible_vars"], [97, 5, 1, "", "run_general"], [97, 5, 1, "", "write_pulsespel_file"]], "autodeer.hardware.Bruker_tools.PSPhaseCycle": [[97, 2, 1, "", "BPhaseCycles"], [97, 1, 1, "", "_MPFU"], [97, 1, 1, "", "__str__"], [97, 1, 1, "", "_detect"], [97, 1, 1, "", "_main"], [97, 2, 1, "", "detect_dicts"]], "autodeer.hardware.Bruker_tools.PSparvar": [[97, 2, 1, "", "PulseSpel"], [97, 1, 1, "", "checkPulseSpel"], [97, 2, 1, "", "events"], [97, 2, 1, "", "parvar"], [97, 2, 1, "", "progTable"], [97, 2, 1, "", "progTable_n"]], "autodeer.hardware.Bruker_tools.PulseSpel": [[97, 2, 1, "", "AWG"], [97, 2, 1, "", "MPFU"], [97, 1, 1, "", "_ExpDefs"], [97, 1, 1, "", "__str__"], [97, 1, 1, "", "_addAWGPulse"], [97, 1, 1, "", "_addDef"], [97, 1, 1, "", "_addExp"], [97, 1, 1, "", "_addPhaseCycle"], [97, 1, 1, "", "_addScanLoop"], [97, 1, 1, "", "_check_sequence"], [97, 1, 1, "", "_cmpl_Exp"], [97, 1, 1, "", "_cmpl_def"], [97, 1, 1, "", "_new_delay"], [97, 1, 1, "", "_new_pulse"], [97, 1, 1, "", "_new_var"], [97, 2, 1, "", "def_file_str"], [97, 2, 1, "", "dims"], [97, 2, 1, "", "exp_file_str"], [97, 2, 1, "", "parvars"], [97, 2, 1, "", "pcyc_str"], [97, 2, 1, "", "place_hash"], [97, 2, 1, "", "possible_delays"], [97, 2, 1, "", "possible_pulses"], [97, 2, 1, "", "possible_vars"], [97, 2, 1, "", "rel_positions"], [97, 1, 1, "", "save"], [97, 2, 1, "", "sequence"], [97, 2, 1, "", "step_hash"], [97, 2, 1, "", "unique_parvars"], [97, 2, 1, "", "var_hash"]], "autodeer.hardware.ETH_awg": [[99, 0, 1, "", "ETH_awg_interface"], [99, 5, 1, "", "bg_thread"], [99, 6, 1, "", "log"]], "autodeer.hardware.ETH_awg.ETH_awg_interface": [[99, 2, 1, "", "IFgain"], [99, 2, 1, "", "IFgain_options"], [99, 1, 1, "", "_build_exp_struct"], [99, 1, 1, "", "_build_parvar"], [99, 1, 1, "", "_build_phase_cycle"], [99, 1, 1, "", "_build_pulse"], [99, 1, 1, "", "acquire_dataset"], [99, 1, 1, "", "acquire_dataset_from_matlab"], [99, 2, 1, "", "awg_freq"], [99, 2, 1, "", "bg_data"], [99, 2, 1, "", "bg_thread"], [99, 1, 1, "", "connect"], [99, 2, 1, "", "cur_exp"], [99, 2, 1, "", "dig_rate"], [99, 1, 1, "", "isrunning"], [99, 1, 1, "", "launch"], [99, 1, 1, "", "launch_long"], [99, 1, 1, "", "launch_normal"], [99, 1, 1, "", "launch_withIFGain"], [99, 2, 1, "", "pulses"], [99, 3, 1, "", "savefolder"], [99, 1, 1, "", "terminate"], [99, 1, 1, "", "tune"], [99, 1, 1, "", "tune_pulse"], [99, 1, 1, "", "tune_rectpulse"]], "autodeer.hardware.ETH_awg_load": [[100, 5, 1, "", "calc_percieved_freq"], [100, 5, 1, "", "digitally_upconvert"], [100, 5, 1, "", "find_max_pulse_length"], [100, 5, 1, "", "match_filter_dc"], [100, 5, 1, "", "scipy_filter_dc"], [100, 5, 1, "", "uwb_eval_match"], [100, 5, 1, "", "uwb_load"]], "autodeer.hardware.XeprAPI_link": [[102, 0, 1, "", "XeprAPILink"], [102, 6, 1, "", "hw_log"], [102, 6, 1, "", "xepr_path"]], "autodeer.hardware.XeprAPI_link.XeprAPILink": [[102, 2, 1, "", "Xepr"], [102, 2, 1, "", "XeprCmds"], [102, 1, 1, "", "_get_Xepr_global"], [102, 1, 1, "", "_get_cur_exp_global"], [102, 1, 1, "", "_set_Xepr_global"], [102, 1, 1, "", "_set_cur_exp_global"], [102, 1, 1, "", "_set_cur_exp_param"], [102, 1, 1, "", "_set_hidden_param"], [102, 2, 1, "", "_tmp_dir"], [102, 1, 1, "", "_xepr_retry"], [102, 1, 1, "", "abort_exp"], [102, 1, 1, "", "acquire_dataset"], [102, 1, 1, "", "acquire_scan"], [102, 1, 1, "", "acquire_scan_2d"], [102, 1, 1, "", "acquire_scan_at"], [102, 1, 1, "", "compile_PulseSpel_def"], [102, 1, 1, "", "compile_PulseSpel_prg"], [102, 1, 1, "", "connect"], [102, 2, 1, "", "cur_exp"], [102, 1, 1, "", "find_Xepr"], [102, 1, 1, "", "find_cur_exp"], [102, 1, 1, "", "find_hidden"], [102, 1, 1, "", "get_Acquisition_mode"], [102, 1, 1, "", "get_ELDOR_freq"], [102, 1, 1, "", "get_MW_amp"], [102, 1, 1, "", "get_PhaseCycle"], [102, 1, 1, "", "get_PulseSpel_def_filename"], [102, 1, 1, "", "get_PulseSpel_def_filepath"], [102, 1, 1, "", "get_PulseSpel_exp_filename"], [102, 1, 1, "", "get_PulseSpel_exp_filepath"], [102, 1, 1, "", "get_PulseSpel_experiment"], [102, 1, 1, "", "get_PulseSpel_phase_cycling"], [102, 1, 1, "", "get_ReplaceMode"], [102, 1, 1, "", "get_attenuator"], [102, 1, 1, "", "get_config_file"], [102, 1, 1, "", "get_counterfreq"], [102, 1, 1, "", "get_field"], [102, 1, 1, "", "get_freq"], [102, 1, 1, "", "get_hidden_param"], [102, 1, 1, "", "get_param"], [102, 1, 1, "", "get_phase"], [102, 1, 1, "", "get_spec_config"], [102, 1, 1, "", "get_sweep_width"], [102, 1, 1, "", "get_video_bandwidth"], [102, 1, 1, "", "get_video_gain"], [102, 2, 1, "", "hidden"], [102, 1, 1, "", "is_exp_running"], [102, 1, 1, "", "pause_exp"], [102, 1, 1, "", "rerun_exp"], [102, 1, 1, "", "run_exp"], [102, 1, 1, "", "save_PulseSpel_def"], [102, 1, 1, "", "save_PulseSpel_exp"], [102, 1, 1, "", "set_Acquisition_mode"], [102, 1, 1, "", "set_ELDOR_freq"], [102, 1, 1, "", "set_MW_amp"], [102, 1, 1, "", "set_PhaseCycle"], [102, 1, 1, "", "set_PulseSpel_def_filepath"], [102, 1, 1, "", "set_PulseSpel_exp_filepath"], [102, 1, 1, "", "set_PulseSpel_experiment"], [102, 1, 1, "", "set_PulseSpel_phase_cycling"], [102, 1, 1, "", "set_PulseSpel_var"], [102, 1, 1, "", "set_ReplaceMode"], [102, 1, 1, "", "set_attenuator"], [102, 1, 1, "", "set_config_file"], [102, 1, 1, "", "set_field"], [102, 1, 1, "", "set_freq"], [102, 1, 1, "", "set_hidden_param"], [102, 1, 1, "", "set_param"], [102, 1, 1, "", "set_phase"], [102, 1, 1, "", "set_sweep_width"], [102, 1, 1, "", "set_video_bandwidth"], [102, 1, 1, "", "set_video_gain"], [102, 1, 1, "", "stop_exp"], [102, 1, 1, "", "xepr_save"]], "autodeer.hardware.dummy": [[104, 5, 1, "", "_gen_ESEEM"], [104, 5, 1, "", "_similate_respro"], [104, 5, 1, "", "_simulate_2D_relax"], [104, 5, 1, "", "_simulate_CP"], [104, 5, 1, "", "_simulate_T2"], [104, 5, 1, "", "_simulate_deer"], [104, 5, 1, "", "_simulate_field_sweep"], [104, 5, 1, "", "_simulate_reptimescan"], [104, 5, 1, "", "add_noise"], [104, 5, 1, "", "add_phaseshift"], [104, 0, 1, "", "dummyInterface"], [104, 6, 1, "", "hw_log"], [104, 6, 1, "", "rng"], [104, 5, 1, "", "val_in_ns"], [104, 5, 1, "", "val_in_us"]], "autodeer.hardware.dummy.dummyInterface": [[104, 2, 1, "", "Bridge"], [104, 2, 1, "", "Dummy"], [104, 2, 1, "", "Q"], [104, 2, 1, "", "SNR"], [104, 1, 1, "", "acquire_dataset"], [104, 2, 1, "", "fc"], [104, 1, 1, "", "isrunning"], [104, 2, 1, "", "key1"], [104, 1, 1, "", "launch"], [104, 2, 1, "", "mode"], [104, 2, 1, "", "pulses"], [104, 2, 1, "", "resonator_list"], [104, 2, 1, "", "scale"], [104, 2, 1, "", "speedup"], [104, 2, 1, "", "start_time"], [104, 2, 1, "", "state"], [104, 1, 1, "", "terminate"], [104, 1, 1, "", "tune_pulse"], [104, 1, 1, "", "tune_rectpulse"], [104, 2, 1, "", "x"]], "autodeer.hardware.dummy_xepr": [[112, 0, 1, "", "dummy_api"], [112, 0, 1, "", "dummy_cur_exp"], [112, 0, 1, "", "dummy_dataset"], [112, 0, 1, "", "dummy_hidden"], [112, 0, 1, "", "dummy_param"], [112, 0, 1, "", "dummy_xepr"], [112, 6, 1, "", "hardware_meta"], [112, 6, 1, "", "hw_log"]], "autodeer.hardware.dummy_xepr.dummy_api": [[112, 2, 1, "", "_tmp_dir"], [112, 1, 1, "", "abort_exp"], [112, 1, 1, "", "acquire_scan"], [112, 1, 1, "", "acquire_scan_2d"], [112, 1, 1, "", "acquire_scan_at"], [112, 1, 1, "", "compile_PulseSpel_def"], [112, 1, 1, "", "compile_PulseSpel_prg"], [112, 1, 1, "", "find_Xepr"], [112, 1, 1, "", "is_exp_running"], [112, 2, 1, "", "meta"], [112, 1, 1, "", "run_exp"], [112, 1, 1, "", "set_PulseSpel_var"], [112, 1, 1, "", "stop_exp"]], "autodeer.hardware.dummy_xepr.dummy_cur_exp": [[112, 2, 1, "", "CenterField"], [112, 2, 1, "", "FTAcqModeSlct"], [112, 2, 1, "", "FrequencyMon"], [112, 2, 1, "", "NbScansDone"], [112, 2, 1, "", "NbScansToDo"], [112, 2, 1, "", "PlsSPELEXPSlct"], [112, 2, 1, "", "PlsSPELGlbPaF"], [112, 2, 1, "", "PlsSPELLISTSlct"], [112, 2, 1, "", "PlsSPELPrgPaF"], [112, 2, 1, "", "ReplaceMode"], [112, 2, 1, "", "ShotRepTime"], [112, 2, 1, "", "ShotsPLoop"], [112, 2, 1, "", "SweepWidth"], [112, 2, 1, "", "SweepsPExp"], [112, 2, 1, "", "XSpecRes"], [112, 1, 1, "", "__getitem__"], [112, 1, 1, "", "aqExpRun"], [112, 1, 1, "", "getParam"]], "autodeer.hardware.dummy_xepr.dummy_dataset": [[112, 2, 1, "", "O"], [112, 2, 1, "", "size"]], "autodeer.hardware.dummy_xepr.dummy_hidden": [[112, 2, 1, "", "BrXAmp"], [112, 2, 1, "", "BrXPhase"], [112, 2, 1, "", "BrYAmp"], [112, 2, 1, "", "BrYPhase"], [112, 2, 1, "", "MinBrXAmp"], [112, 2, 1, "", "MinBrXPhase"], [112, 2, 1, "", "MinBrYAmp"], [112, 2, 1, "", "MinBrYPhase"], [112, 2, 1, "", "SignalPhase"], [112, 1, 1, "", "__getitem__"], [112, 1, 1, "", "getParam"]], "autodeer.hardware.dummy_xepr.dummy_param": [[112, 2, 1, "", "aqGetParMaxValue"], [112, 2, 1, "", "aqGetParMinValue"], [112, 2, 1, "", "val"], [112, 3, 1, "", "value"]], "autodeer.hardware.dummy_xepr.dummy_xepr": [[112, 0, 1, "", "XeprCmds"], [112, 1, 1, "", "XeprDataset"], [112, 1, 1, "", "XeprExperiment"], [112, 2, 1, "", "cur_exp"], [112, 2, 1, "", "hidden"]], "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds": [[112, 1, 1, "", "aqExpSelect"], [112, 1, 1, "", "aqPgCompile"], [112, 1, 1, "", "aqPgDefLoad"], [112, 1, 1, "", "aqPgDefSaveAs"], [112, 1, 1, "", "aqPgLoad"], [112, 1, 1, "", "aqPgSaveAs"], [112, 1, 1, "", "aqPgShowPrg"], [112, 1, 1, "", "vpSave"]], "autodeer.hardware.xepr_experiments": [[118, 5, 1, "", "CP_run"], [118, 5, 1, "", "CalibrateFreq"], [118, 0, 1, "", "DEER"], [118, 5, 1, "", "DEER5p_run"], [118, 0, 1, "", "ELDORtune"], [118, 6, 1, "", "MODULE_DIR"], [118, 0, 1, "", "MPFUtune"], [118, 0, 1, "", "PulseProfile"], [118, 5, 1, "", "get_nutations"]], "autodeer.hardware.xepr_experiments.DEER": [[118, 2, 1, "", "api"], [118, 2, 1, "", "awg"], [118, 2, 1, "", "d0"], [118, 2, 1, "", "det_frq"], [118, 2, 1, "", "hybrid"], [118, 2, 1, "", "mpfu"], [118, 2, 1, "", "pump_frq"], [118, 1, 1, "", "run_4p"], [118, 1, 1, "", "run_5p"], [118, 1, 1, "", "run_CP"], [118, 2, 1, "", "srt"]], "autodeer.hardware.xepr_experiments.ELDORtune": [[118, 1, 1, "", "_get_exp"], [118, 1, 1, "", "_setup_exp"], [118, 2, 1, "", "api"], [118, 2, 1, "", "d0"], [118, 1, 1, "", "find_min"], [118, 2, 1, "", "hardware_wait"], [118, 2, 1, "", "ps_length"], [118, 2, 1, "", "srt"], [118, 1, 1, "", "tune"]], "autodeer.hardware.xepr_experiments.MPFUtune": [[118, 1, 1, "", "_setup_echo"], [118, 2, 1, "", "api"], [118, 1, 1, "", "calc_d0"], [118, 2, 1, "", "d0"], [118, 2, 1, "", "hardware_wait"], [118, 2, 1, "", "ps_length"], [118, 2, 1, "", "srt"], [118, 1, 1, "", "tune"], [118, 1, 1, "", "tune_phase"], [118, 1, 1, "", "tune_power"]], "autodeer.hardware.xepr_experiments.PulseProfile": [[118, 1, 1, "", "_freq_sweep"], [118, 1, 1, "", "_setup_exp"], [118, 2, 1, "", "api"], [118, 2, 1, "", "d0"], [118, 2, 1, "", "hardware_wait"], [118, 2, 1, "", "ps_length"], [118, 2, 1, "", "srt"]], "autodeer.pulses": [[129, 0, 1, "", "ChirpPulse"], [129, 0, 1, "", "Delay"], [129, 0, 1, "", "Detection"], [129, 0, 1, "", "FrequencySweptPulse"], [129, 0, 1, "", "GaussianPulse"], [129, 0, 1, "", "HSPulse"], [129, 0, 1, "", "Pulse"], [129, 0, 1, "", "RectPulse"], [129, 0, 1, "", "SincPulse"], [129, 5, 1, "", "build_default_pulses"]], "autodeer.pulses.ChirpPulse": [[129, 1, 1, "", "func"], [129, 3, 1, "", "sweeprate"]], "autodeer.pulses.Delay": [[129, 2, 1, "", "pcyc"], [129, 2, 1, "", "scale"], [129, 2, 1, "", "tp"]], "autodeer.pulses.Detection": [[129, 2, 1, "", "freq"], [129, 2, 1, "", "pcyc"], [129, 2, 1, "", "scale"]], "autodeer.pulses.FrequencySweptPulse": [[129, 3, 1, "", "Qcrit"], [129, 3, 1, "", "amp_factor"], [129, 3, 1, "", "sweeprate"]], "autodeer.pulses.GaussianPulse": [[129, 2, 1, "", "FWHM"], [129, 2, 1, "", "freq"], [129, 1, 1, "", "func"]], "autodeer.pulses.HSPulse": [[129, 2, 1, "", "beta"], [129, 1, 1, "", "func"], [129, 2, 1, "", "order1"], [129, 2, 1, "", "order2"], [129, 3, 1, "", "sweeprate"]], "autodeer.pulses.Pulse": [[129, 2, 1, "", "Progression"], [129, 1, 1, "", "__str__"], [129, 1, 1, "", "_addPhaseCycle"], [129, 1, 1, "", "_buildFMAM"], [129, 1, 1, "", "_calc_fft"], [129, 1, 1, "", "_from_dict"], [129, 1, 1, "", "_from_json"], [129, 1, 1, "", "_pcyc_str"], [129, 1, 1, "", "_to_dict"], [129, 1, 1, "", "_to_json"], [129, 3, 1, "", "amp_factor"], [129, 3, 1, "", "bandwidth"], [129, 1, 1, "", "build_shape"], [129, 1, 1, "", "build_table"], [129, 1, 1, "", "copy"], [129, 1, 1, "", "exciteprofile"], [129, 1, 1, "", "isDelayFocused"], [129, 1, 1, "", "isPulseFocused"], [129, 1, 1, "", "is_static"], [129, 1, 1, "", "load"], [129, 2, 1, "", "name"], [129, 1, 1, "", "plot"], [129, 1, 1, "", "plot_fft"], [129, 1, 1, "", "save"]], "autodeer.pulses.RectPulse": [[129, 2, 1, "", "freq"], [129, 1, 1, "", "func"]], "autodeer.pulses.SincPulse": [[129, 2, 1, "", "freq"], [129, 1, 1, "", "func"], [129, 2, 1, "", "order"], [129, 2, 1, "", "window"]], "autodeer.reporter": [[132, 0, 1, "", "Reporter"], [132, 0, 1, "", "SvgFlowable"], [132, 5, 1, "", "combo_figure"], [132, 5, 1, "", "create_report"], [132, 6, 1, "", "package_dir"], [132, 6, 1, "", "styles"]], "autodeer.reporter.Reporter": [[132, 1, 1, "", "_build"], [132, 1, 1, "", "add_code_block"], [132, 1, 1, "", "add_figure"], [132, 1, 1, "", "add_new_section"], [132, 1, 1, "", "add_page_break"], [132, 1, 1, "", "add_space"], [132, 1, 1, "", "add_table"], [132, 1, 1, "", "add_text"], [132, 1, 1, "", "add_title"], [132, 1, 1, "", "footer"], [132, 2, 1, "", "frame"], [132, 1, 1, "", "header"], [132, 2, 1, "", "pdf"], [132, 2, 1, "", "story"], [132, 2, 1, "", "template"]], "autodeer.reporter.SvgFlowable": [[132, 1, 1, "", "draw"], [132, 2, 1, "", "drawing"], [132, 2, 1, "", "height"], [132, 2, 1, "", "width"], [132, 1, 1, "", "wrap"]], "autodeer.sequences": [[143, 0, 1, "", "CarrPurcellSequence"], [143, 0, 1, "", "DEERSequence"], [143, 0, 1, "", "FieldSweepSequence"], [143, 0, 1, "", "HahnEchoSequence"], [143, 0, 1, "", "RefocusedEcho2DSequence"], [143, 0, 1, "", "ReptimeScan"], [143, 0, 1, "", "ResonatorProfileSequence"], [143, 0, 1, "", "Sequence"], [143, 0, 1, "", "T2RelaxationSequence"], [143, 0, 1, "", "TWTProfileSequence"]], "autodeer.sequences.CarrPurcellSequence": [[143, 1, 1, "", "_build_sequence"], [143, 2, 1, "", "dim"], [143, 2, 1, "", "n"], [143, 2, 1, "", "name"], [143, 2, 1, "", "tau"]], "autodeer.sequences.DEERSequence": [[143, 2, 1, "", "ESEEM"], [143, 1, 1, "", "add_ESEEM_avg"], [143, 2, 1, "", "deadtime"], [143, 2, 1, "", "dt"], [143, 1, 1, "", "five_pulse"], [143, 1, 1, "", "four_pulse"], [143, 1, 1, "", "nDEER_CP"], [143, 2, 1, "", "name"], [143, 1, 1, "", "select_pcyc"], [143, 1, 1, "", "seven_pulse"], [143, 1, 1, "", "simulate"], [143, 2, 1, "", "tau1"], [143, 2, 1, "", "tau1us"], [143, 2, 1, "", "tau2"], [143, 1, 1, "", "three_pulse"]], "autodeer.sequences.FieldSweepSequence": [[143, 2, 1, "", "B"], [143, 2, 1, "", "name"]], "autodeer.sequences.HahnEchoSequence": [[143, 2, 1, "", "name"]], "autodeer.sequences.RefocusedEcho2DSequence": [[143, 1, 1, "", "_build_sequence"], [143, 2, 1, "", "dt"], [143, 2, 1, "", "name"], [143, 2, 1, "", "tau1"], [143, 2, 1, "", "tau2"], [143, 2, 1, "", "tau_init"]], "autodeer.sequences.ReptimeScan": [[143, 2, 1, "", "dim"], [143, 2, 1, "", "min_reptime"], [143, 2, 1, "", "name"], [143, 2, 1, "", "reptime"], [143, 2, 1, "", "step"]], "autodeer.sequences.ResonatorProfileSequence": [[143, 1, 1, "", "_build_sequence"], [143, 2, 1, "", "fwidth"], [143, 2, 1, "", "gyro"], [143, 2, 1, "", "name"]], "autodeer.sequences.Sequence": [[143, 2, 1, "", "LO"], [143, 1, 1, "", "__str__"], [143, 1, 1, "", "_buildPhaseCycle"], [143, 1, 1, "", "_checkRect"], [143, 1, 1, "", "_convert_to_delay"], [143, 1, 1, "", "_convert_to_pulses"], [143, 1, 1, "", "_estimate_time"], [143, 1, 1, "", "_from_dict"], [143, 1, 1, "", "_from_json"], [143, 1, 1, "", "_to_dict"], [143, 1, 1, "", "_to_json"], [143, 1, 1, "", "addPulse"], [143, 2, 1, "", "averages"], [143, 2, 1, "", "axes_uuid"], [143, 1, 1, "", "convert"], [143, 1, 1, "", "copy"], [143, 1, 1, "", "evolution"], [143, 1, 1, "", "isDelayFocused"], [143, 1, 1, "", "isPulseFocused"], [143, 1, 1, "", "load"], [143, 2, 1, "", "name"], [143, 2, 1, "", "num_pulses"], [143, 1, 1, "", "plot"], [143, 1, 1, "", "plot_pulse_exc"], [143, 2, 1, "", "progTable"], [143, 2, 1, "", "pulses"], [143, 2, 1, "", "reduce_uuid"], [143, 1, 1, "", "save"], [143, 3, 1, "", "seqtable_steps"], [143, 1, 1, "", "shift_detfreq_to_zero"], [143, 2, 1, "", "shots"]], "autodeer.sequences.T2RelaxationSequence": [[143, 2, 1, "", "name"], [143, 2, 1, "", "tau"]], "autodeer.sequences.TWTProfileSequence": [[143, 1, 1, "", "_build_sequence"], [143, 2, 1, "", "name"]], "autodeer.tools": [[144, 5, 1, "", "eprload"], [144, 6, 1, "", "log"], [144, 5, 1, "", "progress_bar"], [144, 5, 1, "", "progress_bar_frac"]], "autodeer.utils": [[145, 5, 1, "", "autoEPRDecoder"], [145, 5, 1, "", "build_table"], [145, 5, 1, "", "gcd"], [145, 5, 1, "", "round_step"], [145, 5, 1, "", "save_file"], [145, 5, 1, "", "sop"], [145, 5, 1, "", "transpose_dict_of_list"], [145, 5, 1, "", "transpose_list_of_dicts"], [145, 5, 1, "", "val_in_ns"], [145, 5, 1, "", "val_in_us"]], "dummyInterface": [[103, 2, 1, "", "Bridge"], [103, 2, 1, "", "Dummy"], [103, 2, 1, "", "Q"], [103, 2, 1, "", "SNR"], [103, 1, 1, "", "acquire_dataset"], [103, 2, 1, "", "fc"], [103, 1, 1, "", "isrunning"], [103, 2, 1, "", "key1"], [103, 1, 1, "", "launch"], [103, 2, 1, "", "mode"], [103, 2, 1, "", "pulses"], [103, 2, 1, "", "resonator_list"], [103, 2, 1, "", "scale"], [103, 2, 1, "", "speedup"], [103, 2, 1, "", "start_time"], [103, 2, 1, "", "state"], [103, 1, 1, "", "terminate"], [103, 1, 1, "", "tune_pulse"], [103, 1, 1, "", "tune_rectpulse"], [103, 2, 1, "", "x"]], "dummy_api": [[105, 2, 1, "", "_tmp_dir"], [105, 1, 1, "", "abort_exp"], [105, 1, 1, "", "acquire_scan"], [105, 1, 1, "", "acquire_scan_2d"], [105, 1, 1, "", "acquire_scan_at"], [105, 1, 1, "", "compile_PulseSpel_def"], [105, 1, 1, "", "compile_PulseSpel_prg"], [105, 1, 1, "", "find_Xepr"], [105, 1, 1, "", "is_exp_running"], [105, 2, 1, "", "meta"], [105, 1, 1, "", "run_exp"], [105, 1, 1, "", "set_PulseSpel_var"], [105, 1, 1, "", "stop_exp"]], "dummy_cur_exp": [[106, 2, 1, "", "CenterField"], [106, 2, 1, "", "FTAcqModeSlct"], [106, 2, 1, "", "FrequencyMon"], [106, 2, 1, "", "NbScansDone"], [106, 2, 1, "", "NbScansToDo"], [106, 2, 1, "", "PlsSPELEXPSlct"], [106, 2, 1, "", "PlsSPELGlbPaF"], [106, 2, 1, "", "PlsSPELLISTSlct"], [106, 2, 1, "", "PlsSPELPrgPaF"], [106, 2, 1, "", "ReplaceMode"], [106, 2, 1, "", "ShotRepTime"], [106, 2, 1, "", "ShotsPLoop"], [106, 2, 1, "", "SweepWidth"], [106, 2, 1, "", "SweepsPExp"], [106, 2, 1, "", "XSpecRes"], [106, 1, 1, "", "__getitem__"], [106, 1, 1, "", "aqExpRun"], [106, 1, 1, "", "getParam"]], "dummy_dataset": [[107, 2, 1, "", "O"], [107, 2, 1, "", "size"]], "dummy_hidden": [[108, 2, 1, "", "BrXAmp"], [108, 2, 1, "", "BrXPhase"], [108, 2, 1, "", "BrYAmp"], [108, 2, 1, "", "BrYPhase"], [108, 2, 1, "", "MinBrXAmp"], [108, 2, 1, "", "MinBrXPhase"], [108, 2, 1, "", "MinBrYAmp"], [108, 2, 1, "", "MinBrYPhase"], [108, 2, 1, "", "SignalPhase"], [108, 1, 1, "", "__getitem__"], [108, 1, 1, "", "getParam"]], "dummy_param": [[109, 2, 1, "", "aqGetParMaxValue"], [109, 2, 1, "", "aqGetParMinValue"], [109, 2, 1, "", "val"], [109, 3, 1, "", "value"]], "dummy_xepr": [[110, 0, 1, "", "XeprCmds"], [110, 1, 1, "", "XeprDataset"], [110, 1, 1, "", "XeprExperiment"], [110, 2, 1, "", "cur_exp"], [110, 2, 1, "", "hidden"]], "dummy_xepr.XeprCmds": [[110, 1, 1, "", "aqExpSelect"], [110, 1, 1, "", "aqPgCompile"], [110, 1, 1, "", "aqPgDefLoad"], [110, 1, 1, "", "aqPgDefSaveAs"], [110, 1, 1, "", "aqPgLoad"], [110, 1, 1, "", "aqPgSaveAs"], [110, 1, 1, "", "aqPgShowPrg"], [110, 1, 1, "", "vpSave"]], "get_dataWorker": [[82, 2, 1, "", "finished_signal"], [82, 2, 1, "", "interface"], [82, 2, 1, "", "result_signal"], [82, 1, 1, "", "run"], [82, 2, 1, "", "signals"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "module", "Python module"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:property", "4": "py:module", "5": "py:function", "6": "py:data"}, "terms": {"": [21, 22, 30, 32, 33, 34, 57, 58, 98, 99, 119, 126, 129, 149, 155], "0": [8, 12, 14, 16, 17, 18, 22, 25, 26, 27, 29, 33, 34, 35, 38, 40, 41, 43, 45, 46, 47, 48, 50, 53, 54, 55, 56, 57, 58, 61, 62, 64, 70, 72, 73, 74, 79, 80, 81, 83, 85, 93, 98, 99, 100, 101, 102, 103, 104, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 139, 143, 152, 153, 155, 157, 159, 161], "00": 155, "002803632236095": [70, 74, 79, 80, 81, 83], "0028087": 152, "00bbd6": 59, "01": 159, "015": 152, "02": [152, 155], "025": 152, "03": [45, 46, 47, 119, 155, 157], "05": [12, 38, 41, 119], "08": [22, 152], "08737812e": 155, "1": [3, 4, 8, 12, 14, 15, 16, 17, 20, 21, 22, 23, 25, 27, 33, 34, 38, 41, 44, 45, 46, 47, 52, 53, 54, 57, 58, 62, 64, 70, 74, 79, 80, 84, 85, 89, 90, 91, 92, 93, 98, 99, 101, 102, 114, 116, 118, 119, 120, 121, 123, 125, 126, 129, 134, 138, 142, 143, 145, 151, 152, 153, 156, 157, 160, 161], "10": [29, 33, 56, 57, 58, 119, 152, 155, 159], "100": [4, 13, 15, 37, 44, 52, 93, 116, 118, 119, 133, 134, 137, 138, 142, 143, 149, 152, 159, 161], "1000": [22, 34, 45, 46, 47, 72, 73, 119, 126, 129, 152, 153], "10000": [34, 119, 126, 129], "100000000": 22, "100n": 161, "10400": 152, "11": [34, 119, 126, 129, 145, 152], "119": [34, 119, 126, 129], "12": [70, 74, 79, 80, 119, 129, 152, 155], "120": 152, "1201": 152, "12181": 152, "12182": 152, "12183": 152, "12220": [159, 161], "12220g": 164, "128": [14, 26, 27, 50, 118, 119, 120, 124, 125, 128, 129, 152, 161], "13": 152, "13570": [34, 119, 126, 129], "13582": [34, 119, 126, 129], "14": 152, "15": [152, 153, 155], "16": [15, 26, 35, 53, 54, 72, 73, 93, 114, 115, 116, 117, 118, 119, 124, 127, 129, 134, 143, 149, 152, 153, 155, 161], "168": 157, "16n": [15, 119, 134, 143], "16step_4p": [15, 119, 134, 143, 153], "16step_5p": [15, 119, 134, 143, 152, 153], "17400": 152, "178": [34, 119, 126, 129, 145], "18": 155, "180": 159, "19": [22, 151, 153], "192": 157, "1d": [20, 22, 23, 36, 39, 41, 119], "1e": [22, 152, 155], "1e3": [152, 153, 159], "1e4": 155, "1e8": 155, "1mhz": 157, "1st": [15, 119, 134, 143], "2": [15, 16, 29, 30, 32, 33, 34, 45, 46, 47, 53, 54, 56, 57, 58, 74, 89, 90, 91, 92, 93, 97, 98, 99, 101, 102, 115, 116, 117, 118, 119, 126, 129, 134, 143, 145, 152, 153, 155, 157, 160, 161], "20": [16, 27, 44, 53, 54, 101, 102, 119, 125, 129, 138, 143, 149, 152, 155], "200": [15, 51, 72, 73, 101, 102, 114, 118, 119, 134, 141, 143, 152, 161], "2000": [48, 119, 139, 143, 152], "2006": [34, 119, 126, 129, 145], "2008": [62, 64], "2009": [34, 119, 126, 129, 145], "200n": 161, "2013": [151, 153], "2014": 151, "2015": [34, 119, 126, 129, 153], "2017": 153, "2021": 151, "2024": 151, "203": 157, "2050": 157, "217": 152, "2172": 152, "23200": 152, "24": 152, "2400": 152, "24000": 152, "25": [16, 22], "2500": 152, "256": 118, "2600": 152, "265": 155, "2800": 152, "2d": [16, 36, 37, 39, 41, 53, 54, 97, 101, 102, 105, 112, 119, 137, 143, 149, 167], "2e2": 161, "2e3": [152, 153], "2x2": [119, 132], "3": [3, 4, 6, 7, 8, 10, 15, 16, 30, 32, 34, 36, 39, 41, 48, 72, 73, 93, 97, 101, 102, 118, 119, 126, 129, 134, 139, 143, 151, 152, 153, 155, 161], "30": [12, 16, 20, 22, 23, 38, 41, 62, 64, 72, 73, 93, 116, 118, 119, 152, 159], "3000": 152, "30th": 151, "31": 152, "32": [15, 26, 45, 46, 47, 119, 124, 129, 134, 143, 152, 153, 161], "320": 152, "32000": 152, "32e3": 152, "32step_7p": [15, 119, 134, 143, 153], "33": [45, 46, 47, 119, 152, 155, 157], "332": 152, "3339": [30, 32], "34": [152, 155, 159, 161], "35": [45, 46, 47, 119, 155, 157], "36": [45, 46, 47, 119, 152], "38": 152, "3e3": [159, 161], "3ghz": [48, 119, 139, 143], "4": [15, 16, 53, 54, 62, 64, 118, 119, 134, 143, 152, 155, 164], "40": [51, 97, 119, 141, 143, 152], "400": [37, 90, 91, 98, 99, 103, 104, 115, 116, 117, 118, 119, 137, 143, 161], "4000000": [117, 118], "4095": [118, 157], "42": [34, 119, 126, 129, 145], "42a399": [41, 59, 119], "49": 152, "4_dev": 152, "4pdeer": [16, 36, 39, 41, 119, 149], "4puls": [36, 39, 41, 53, 54, 119], "4u": 16, "5": [12, 15, 38, 41, 42, 45, 46, 47, 53, 54, 72, 73, 98, 99, 115, 116, 117, 118, 119, 130, 132, 134, 143, 152, 154, 155, 157], "50": [15, 72, 73, 114, 118, 119, 134, 143, 152, 153], "500": [48, 119, 139, 143, 152], "501": 152, "50k": 152, "512": [53, 54, 152], "52260651e": 155, "55": [34, 119, 126, 129, 145], "550": 93, "5600": 152, "5800": 152, "5e3": 152, "5pdeer": [16, 36, 39, 41, 119, 149], "5puls": [36, 39, 41, 53, 54, 119], "5u": 16, "6": [27, 50, 119, 125, 128, 129, 152, 153, 155], "60": [72, 73, 93], "6000": 152, "6000000": [114, 115, 116, 118], "650": 155, "6614": [34, 119, 126, 129, 145], "6625": [34, 119, 126, 129, 145], "67652": 157, "680": [116, 118], "6e3": 161, "6u": 161, "7": [15, 119, 134, 143, 152], "70": 157, "700": [115, 117, 118], "747": 152, "75": [53, 54], "770": 152, "7800": 152, "8": [4, 15, 55, 119, 134, 143, 152, 153, 155, 157, 164], "80": [114, 118, 152, 155], "800": 152, "8000": 152, "82": 155, "85625754e": 155, "8n": [15, 119, 134, 143], "8step_3p": [15, 119, 134, 143, 153], "9": [40, 41, 43, 119, 151, 152], "90": [149, 159], "91334739e": 155, "92378391e": 155, "976": 155, "99": 16, "A": [16, 18, 21, 22, 25, 29, 33, 34, 44, 51, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 90, 91, 92, 93, 97, 98, 99, 103, 104, 116, 117, 118, 119, 122, 123, 126, 129, 132, 138, 141, 143, 144, 145, 151, 152, 153, 154, 155, 156, 159, 160, 161, 164, 166], "As": [154, 155, 166], "At": [149, 150, 154], "BE": [17, 119, 121, 129], "By": [28, 31, 32, 33, 51, 57, 58, 119, 136, 141, 143], "For": [16, 149, 152, 156, 157, 159, 160, 161, 162, 166], "IF": [98, 99], "If": [12, 15, 16, 29, 30, 32, 33, 34, 36, 38, 39, 41, 45, 46, 47, 49, 53, 54, 56, 57, 58, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 119, 126, 129, 134, 140, 143, 149, 153, 159, 166], "In": [151, 152, 157, 159, 161], "It": [45, 46, 47, 98, 99, 119, 147, 149, 152, 153, 154, 161, 162, 164, 166], "No": [68, 71, 73, 74, 78, 80, 88, 89, 92, 93, 161], "On": [151, 154, 155, 159, 160, 164, 166], "One": [151, 153, 157, 164], "That": 164, "The": [0, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 62, 63, 64, 67, 72, 73, 74, 77, 80, 87, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 157, 159, 160, 161, 164, 168], "There": [53, 54, 101, 102, 152, 156, 159, 161, 163, 164, 168], "These": [101, 102, 105, 112, 149, 157, 159, 164], "To": [0, 53, 54, 150, 151, 161, 164], "WILL": [17, 119, 121, 129], "With": [36, 39, 41, 119, 153], "_": 159, "__add__": [33, 57, 58, 60, 64, 119], "__eq__": [33, 57, 58, 119], "__getitem__": [106, 108, 112], "__init__": 161, "__main__": [74, 119, 146], "__mul__": [33, 57, 58, 119], "__o": [33, 57, 58, 60, 64, 119], "__rmul__": [33, 57, 58, 119], "__str__": [34, 49, 94, 96, 97, 119, 126, 129, 140, 143], "__sub__": [33, 57, 58, 119], "__version__": [55, 119], "_addawgpuls": [96, 97], "_adddef": [96, 97], "_addexp": [96, 97], "_addphasecycl": [34, 96, 97, 119, 126, 129], "_addscanloop": [96, 97], "_arg": [131, 132], "_build": [42, 119, 130, 132], "_build_exp_struct": [98, 99], "_build_method": [72, 73], "_build_parvar": [98, 99], "_build_phase_cycl": [98, 99], "_build_puls": [98, 99], "_build_sequ": [13, 37, 48, 52, 119, 133, 137, 139, 142, 143], "_buildfmam": [34, 119, 126, 129, 161], "_buildphasecycl": [49, 119, 140, 143], "_calc_fft": [34, 119, 126, 129], "_check_sequ": [96, 97], "_checkrect": [49, 119, 140, 143], "_cmpl_def": [96, 97], "_cmpl_exp": [96, 97], "_convert_to_delai": [49, 119, 140, 143], "_convert_to_puls": [49, 119, 140, 143], "_data_transpos": [53, 54], "_description_": [12, 15, 16, 20, 22, 23, 38, 41, 53, 54, 61, 62, 64, 74, 89, 95, 97, 98, 99, 100, 101, 102, 117, 118, 119, 134, 143, 144, 145], "_detect": [94, 97], "_estimate_tim": [49, 119, 140, 143], "_expdef": [96, 97], "_freq_sweep": [117, 118], "_from_dict": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "_from_json": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "_gen_eseem": 104, "_get_cur_exp_glob": [101, 102], "_get_exp": [115, 118], "_get_xepr_glob": [101, 102], "_launch_complex_thread": [90, 91, 92, 93], "_main": [94, 97], "_mpfu": [94, 97], "_mpfu_channel": 93, "_new_delai": [96, 97], "_new_puls": [96, 97], "_new_var": [96, 97], "_obj": [19, 65, 66, 119], "_pcyc_str": [34, 119, 126, 129], "_process_fit": [45, 46, 47, 119], "_set_cur_exp_glob": [101, 102], "_set_cur_exp_param": [101, 102], "_set_hidden_param": [101, 102], "_set_xepr_glob": [101, 102], "_setup_echo": [116, 118], "_setup_exp": [115, 117, 118], "_similate_respro": 104, "_simulate_2d_relax": 104, "_simulate_cp": 104, "_simulate_d": 104, "_simulate_field_sweep": 104, "_simulate_reptimescan": 104, "_simulate_t2": 104, "_smooth": [36, 39, 41, 119], "_spfu_channel": 93, "_stability_check": [53, 54], "_summary_": [101, 102], "_tmp_dir": [101, 102, 105, 112], "_to_dict": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "_to_json": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "_type_": [13, 15, 16, 24, 28, 29, 35, 37, 48, 50, 51, 53, 54, 56, 58, 61, 64, 74, 89, 97, 98, 99, 116, 117, 118, 119, 127, 128, 129, 133, 134, 135, 136, 137, 139, 141, 143], "_version": [119, 146], "_xepr_retri": [101, 102], "a4": [42, 119, 130, 132], "a_shift": 16, "ab": 93, "abil": [154, 156], "abl": 150, "abort": [101, 102, 105, 112], "abort_exp": [101, 102, 105, 112], "about": [18, 119, 122, 129, 152, 159, 161], "abov": [15, 30, 32, 45, 46, 47, 53, 54, 119, 134, 143, 150, 153, 161], "absolut": [62, 63, 64], "abstract": [25, 119, 123, 129], "accept": 164, "acces": 159, "access": [159, 164, 168], "accumul": [49, 52, 119, 140, 142, 143], "accur": 159, "achiev": [16, 149], "acquir": [29, 56, 58, 90, 91, 92, 93, 98, 99, 101, 102, 103, 104, 105, 112, 119, 159], "acquire_dataset": [29, 56, 58, 90, 91, 92, 93, 98, 99, 101, 102, 103, 104, 119, 152, 159], "acquire_dataset_from_matlab": [98, 99], "acquire_scan": [101, 102, 105, 112], "acquire_scan_2d": [101, 102, 105, 112], "acquire_scan_at": [101, 102, 105, 112], "acquisit": 97, "acquisition_mod": 97, "across": [15, 119, 134, 143, 149, 157], "act": [31, 32], "activ": [147, 156, 159, 162], "actual": [31, 32, 112, 159], "ad": [16, 28, 29, 30, 32, 33, 34, 41, 51, 56, 57, 58, 90, 91, 92, 93, 98, 99, 100, 103, 104, 119, 126, 129, 132, 136, 141, 143, 152, 153, 156, 159, 161, 164, 167], "add": [34, 49, 119, 126, 129, 140, 143, 151, 161, 164], "add_axi": [33, 57, 58, 119], "add_code_block": [42, 119, 130, 132], "add_eseem_avg": [15, 119, 134, 143], "add_figur": [42, 119, 130, 132], "add_new_entri": [75, 76], "add_new_sect": [42, 119, 130, 132], "add_nois": 104, "add_page_break": [42, 119, 130, 132], "add_phaseshift": 104, "add_spac": [42, 119, 130, 132], "add_tabl": [42, 119, 130, 132], "add_text": [42, 119, 130, 132], "add_titl": [42, 119, 130, 132], "addit": [153, 155, 159, 160, 161], "addition": [147, 149, 154, 166], "addpuls": [49, 119, 140, 143, 161], "addpulsesprog": 161, "adjust": [101, 102, 149, 154, 159], "administr": 164, "advanc": [70, 74, 79, 80, 152, 156, 159, 167], "advanced_mode_input": [70, 74, 79, 80], "advantag": [153, 161], "advent": 153, "after": [16, 90, 91, 92, 93, 101, 102, 105, 112, 151, 153, 156, 159, 164], "again": 149, "aic": 155, "aim": [150, 164], "aim_mnr": 16, "aim_tim": 16, "aimtim": 16, "akin": 154, "al": [62, 64, 153], "alert": 164, "algorithm": [62, 64, 167], "algorithum": 147, "align": [53, 54], "all": [8, 15, 18, 32, 34, 49, 53, 54, 97, 98, 99, 100, 116, 118, 119, 122, 126, 129, 134, 140, 143, 149, 150, 152, 153, 154, 159, 160, 161, 162, 164, 166], "allow": [30, 32, 112, 149, 152, 153, 154, 156, 159, 160, 161, 168], "alogoithm": 152, "along": [16, 53, 54, 154, 159], "alreadi": [101, 102], "also": [97, 149, 150, 154, 156, 159, 161, 162, 164, 168], "alwai": [63, 64, 149, 150, 153, 159, 164], "am": [34, 119, 126, 129, 161], "amount": 16, "amp_factor": [25, 34, 119, 123, 126, 129], "amp_hahn": [98, 99], "amp_nut": [152, 159], "amp_var": 97, "amplifi": [101, 102, 164], "amplitud": [14, 17, 25, 27, 34, 119, 120, 121, 123, 125, 126, 129, 156, 159], "an": [15, 16, 29, 30, 32, 34, 41, 49, 52, 53, 54, 56, 58, 74, 89, 90, 91, 92, 93, 97, 98, 99, 106, 108, 112, 119, 126, 129, 134, 140, 142, 143, 147, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 164], "analogu": [157, 160], "analys": [154, 156, 159, 162, 166], "analysi": [12, 16, 20, 22, 23, 32, 34, 36, 38, 39, 40, 41, 43, 45, 46, 47, 62, 64, 119, 126, 129, 132, 145, 156, 162], "analyz": [16, 36, 39, 40, 41, 43, 119], "andrin": [34, 98, 99, 100, 119, 126, 129], "angl": [35, 119, 127, 129], "ani": [33, 53, 54, 57, 58, 98, 99, 101, 102, 105, 112, 119, 150, 151, 154, 164], "annot": [4, 10], "anoth": [34, 119, 126, 129, 157, 164], "anyth": [68, 71, 73, 74, 78, 80, 88, 89, 147, 151, 164], "api": [90, 91, 92, 93, 97, 114, 115, 116, 117, 118, 152, 167], "api_doc": 159, "app": [69, 80, 85], "appear": 154, "append": [30, 32], "appli": [16, 53, 54, 93, 149, 156], "applic": [16, 30, 32, 74, 89], "appraoch": 149, "approach": [159, 160, 161, 162], "appropri": [159, 164], "approxim": [16, 115, 116, 117, 118, 149], "aqexprun": [106, 112], "aqexpselect": [110, 111, 112], "aqgetparmaxvalu": [109, 112], "aqgetparminvalu": [109, 112], "aqpgcompil": [110, 111, 112], "aqpgdefload": [110, 111, 112], "aqpgdefsavea": [110, 111, 112], "aqpgload": [110, 111, 112], "aqpgsavea": [110, 111, 112], "aqpgshowprg": [110, 111, 112], "ar": [12, 16, 30, 32, 34, 36, 38, 39, 41, 49, 53, 54, 68, 71, 73, 74, 78, 80, 88, 89, 93, 97, 100, 119, 126, 129, 140, 143, 145, 149, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168], "arang": [33, 57, 58, 119, 161], "arbitari": [14, 17, 25, 27, 34, 119, 120, 121, 123, 125, 126, 129], "arg": [3, 6, 7, 16, 20, 22, 23, 34, 41, 67, 70, 72, 73, 74, 77, 79, 80, 87, 89, 92, 93, 98, 99, 101, 102, 119, 126, 129], "argument": [30, 32, 34, 67, 72, 73, 74, 77, 80, 87, 89, 119, 126, 129, 159], "aris": 164, "around": [98, 99, 147, 152], "arrai": [34, 53, 54, 97, 119, 126, 129], "arthur": [34, 119, 126, 129, 145], "ascii": 164, "asctim": [30, 32], "asp": [62, 64], "associ": [116, 118], "assum": [45, 46, 47, 53, 54, 119], "astronom": [62, 64], "attempt": 151, "attenu": [93, 116, 118, 164], "attribut": [3, 8, 30, 32, 33, 57, 58, 90, 91, 92, 161], "auto": [1, 16, 53, 54, 146, 160], "autoapi": [3, 8, 167], "autoapi_opt": [3, 8], "autod": [0, 70, 77, 78, 79, 90, 92, 98, 103, 105, 146, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 162, 164, 168], "autodeer_4hr": 152, "autodeer_fieldsweep": 152, "autodeer_work": [74, 119, 146], "autodeersign": [71, 73], "autodeerui": [70, 74, 79, 80], "autodeerwork": [72, 73], "autoepr": [29, 56, 58, 103, 104, 119, 147, 153, 159, 160, 161], "autoeprdecod": [119, 145], "autom": [147, 156, 159, 162, 167], "automat": [53, 54, 156, 159, 166], "autosav": [29, 56, 58, 90, 91, 92, 93, 98, 99, 103, 104, 119, 164], "avail": [30, 32, 68, 71, 73, 74, 78, 80, 88, 89, 159], "availi": [16, 167], "avali": [12, 16, 38, 41, 119, 149], "averag": [12, 13, 15, 16, 22, 24, 28, 36, 37, 38, 39, 41, 44, 48, 49, 51, 52, 72, 73, 98, 99, 119, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 159, 161], "awai": [156, 162], "awg": [72, 73, 90, 91, 96, 97, 98, 99, 114, 118, 119, 129, 149, 152, 153, 155, 156, 157, 160, 161, 162, 164, 167], "awg_freq": [98, 99], "ax": [12, 14, 16, 20, 22, 23, 26, 27, 34, 35, 36, 38, 39, 40, 41, 43, 45, 46, 47, 50, 66, 119, 120, 124, 125, 126, 127, 128, 129, 152, 159, 161], "ax_id": [33, 57, 58, 119], "axes_label": [66, 119], "axes_uuid": [49, 119, 140, 143], "axi": [13, 16, 20, 22, 23, 33, 34, 36, 37, 39, 40, 41, 43, 45, 46, 47, 53, 54, 57, 58, 97, 119, 126, 129, 133, 137, 143, 145, 152, 161], "axid": [90, 91, 92, 93, 98, 99], "axis_id": [33, 57, 58, 119, 161], "b": [13, 15, 16, 22, 24, 28, 34, 37, 44, 48, 49, 51, 52, 90, 91, 92, 93, 97, 98, 99, 103, 104, 119, 126, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 159, 161], "b0": [13, 15, 24, 28, 37, 44, 48, 51, 90, 91, 92, 93, 98, 99, 119, 133, 134, 135, 136, 137, 138, 139, 141, 143, 152, 161], "b1": [25, 34, 119, 123, 126, 129], "b_shift": 16, "back": [162, 163, 164], "backend": 147, "background": [16, 90, 91, 92, 93, 98, 99, 152], "background_func": 16, "backup": 151, "bahrenberg": [53, 54], "banana": 155, "band": [149, 156], "bandwidth": [34, 101, 102, 119, 126, 129, 161], "base": [3, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 40, 41, 43, 44, 48, 50, 51, 52, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 103, 104, 105, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 149, 150, 151, 156, 157, 159, 160, 162, 167], "bashrc": 151, "basic": [31, 32, 153, 159, 160, 164], "becaus": [149, 151], "becom": [151, 164], "been": [98, 99, 101, 102, 105, 112, 149, 151, 153, 156, 157, 159, 160, 162, 164], "befor": [29, 30, 32, 56, 58, 119, 149, 151, 152, 153, 157, 159, 160, 164, 166], "begin": [101, 102, 105, 112], "being": [29, 56, 58, 98, 99, 119, 149, 161], "beliv": [101, 102], "below": [153, 154], "best": 16, "beta": [27, 119, 125, 129, 147], "better": [90, 91, 92, 93, 164], "between": [15, 16, 45, 46, 47, 48, 117, 118, 119, 134, 139, 143, 151, 152, 153, 156, 157, 159, 161], "beyond": 152, "bg_data": [90, 91, 92, 93, 98, 99], "bg_thread": [90, 91, 92, 93, 98, 99], "bic": 155, "big": 164, "biolog": 156, "biomolecul": 153, "bit": [53, 54, 155, 157], "blank": [4, 154], "block": [8, 159], "book": 154, "bool": [12, 15, 16, 20, 22, 23, 29, 33, 34, 36, 38, 39, 41, 49, 53, 54, 56, 57, 58, 91, 93, 95, 97, 99, 100, 101, 102, 104, 118, 119, 126, 129, 134, 140, 143], "borbat": 153, "both": [12, 16, 37, 38, 41, 45, 46, 47, 49, 53, 54, 97, 101, 102, 116, 118, 119, 137, 140, 143, 149, 154, 156, 157, 159, 160, 161, 162, 164], "bottom": [119, 132, 154], "bound": [93, 116, 118], "box": [70, 74, 79, 80, 89, 154], "bphasecycl": [94, 97], "branch": 150, "bridg": [101, 102, 103, 104, 155, 157, 160], "bridge12": 155, "bridge_config": [90, 91, 92, 93], "brief": [33, 57, 58, 119], "britt": [34, 119, 126, 129, 145], "bruker": [53, 54, 70, 74, 79, 80, 90, 91, 92, 93, 97, 98, 99, 112, 150, 151, 155, 156, 159, 162, 166, 167], "bruker_awg": [113, 119, 146], "bruker_mpfu": [113, 119, 146], "bruker_tool": [113, 119, 146], "brukerawg": [90, 91, 157, 159], "brukermpfu": [92, 93, 157], "brute": 16, "brxamp": [108, 112], "brxphase": [108, 112], "bryamp": [108, 112], "bryphas": [108, 112], "bspline_extra": 46, "bug": 163, "build": [13, 15, 16, 22, 24, 28, 34, 37, 48, 51, 52, 119, 126, 129, 133, 134, 135, 136, 137, 139, 141, 142, 143, 147, 153, 157, 160, 161, 164], "build__lowpass_butter_filt": 16, "build_default_puls": [119, 129], "build_shap": [34, 119, 126, 129], "build_spectrum": 22, "build_tabl": [34, 119, 126, 129, 145], "build_unique_progt": 97, "built": [0, 147, 152, 156, 159, 160, 161, 162, 164], "butter": 100, "butterworth": 16, "button": [147, 149, 154, 156, 159, 162, 163, 166], "bw": [155, 161], "bwidth": [24, 48, 119, 135, 139, 143, 152], "byte": [131, 132], "bytesio": 132, "c": 97, "c243": [155, 157], "ca": 151, "cach": [90, 91, 98, 99, 159], "caclul": [53, 54], "cal": [155, 157], "calc_correction_factor": 16, "calc_d0": [90, 91, 92, 93, 116, 118], "calc_d0_from_hahn_echo": [90, 91, 92, 93], "calc_deer_set": [16, 167], "calc_gyro": [20, 22, 23, 119, 152], "calc_identifi": 16, "calc_noise_level": [20, 22, 23, 119], "calc_optimal_deer_frq": 152, "calc_optimal_reptim": [40, 41, 43, 119], "calc_overlap": 46, "calc_percieved_freq": 100, "calc_rel_posit": 97, "calcat": 16, "calcuat": [46, 97], "calcul": [12, 16, 20, 22, 23, 36, 38, 39, 40, 41, 43, 45, 46, 47, 49, 53, 54, 101, 102, 119, 140, 143, 149, 152, 154, 164, 167], "calculate_noise_level": [53, 54], "calculate_optim": [53, 54], "calculate_snr_threshold": [53, 54], "calibr": [155, 157, 160], "calibratefreq": 118, "call": [30, 32, 98, 99, 153, 161, 168], "callback": [67, 72, 73, 74, 77, 80, 87, 89], "can": [30, 31, 32, 33, 34, 53, 54, 57, 58, 90, 91, 92, 93, 95, 97, 101, 102, 105, 112, 116, 118, 119, 126, 129, 147, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 166, 168], "cannot": [33, 34, 49, 53, 54, 57, 58, 119, 126, 129, 140, 143], "canva": [42, 119, 130, 132], "carefulli": 164, "cari": 149, "carr": [12, 13, 16, 38, 41, 119, 133, 143, 149, 153], "carri": [30, 32, 149], "carrpurcel": 152, "carrpurcellanalysi": [12, 16, 38, 41, 119, 152, 159], "carrpurcellsequ": [13, 119, 133, 143, 152], "case": [31, 32, 53, 54, 151], "caus": [151, 160, 164], "caution": [34, 119, 126, 129], "caveat": 160, "cd": 151, "ceil": 46, "center": [154, 155], "centerfield": [106, 112], "centr": [18, 119, 122, 129, 156], "central": [49, 52, 90, 91, 98, 99, 119, 140, 142, 143, 152], "certif": 151, "chage": [34, 119, 126, 129], "challeng": [151, 153], "chang": [30, 32, 95, 97, 98, 99, 101, 102, 105, 112, 153, 157, 159, 161, 162, 163, 164], "change_dimens": 97, "change_lo": [70, 74, 79, 80], "change_log_level": 32, "channel": [30, 32, 93, 97, 101, 102, 115, 116, 117, 118, 155, 157, 164], "characteris": 149, "charecteris": 149, "chart": [131, 132], "cheby2": 100, "check": [12, 34, 38, 41, 49, 53, 54, 62, 64, 95, 97, 119, 126, 129, 140, 143, 151, 153, 159, 164], "check_cp": [70, 74, 79, 80], "check_decai": [12, 38, 41, 119], "check_t2": [70, 74, 79, 80], "check_vari": 97, "checkpulsespel": [95, 97], "chem": [34, 119, 126, 129, 145, 153], "children": 8, "chip": 161, "chirp": [149, 153, 162], "chirppuls": [14, 119, 120, 129, 161], "chnannel": [101, 102], "choos": [15, 97, 98, 99, 119, 134, 143, 154], "chose": 149, "chosen": [93, 116, 118, 153, 154], "clarifi": 149, "class": [3, 5, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 60, 61, 62, 63, 65, 67, 68, 70, 71, 72, 75, 77, 78, 79, 81, 82, 84, 87, 88, 90, 92, 94, 95, 96, 98, 101, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 159, 160, 161, 167], "classmethod": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "clean": 0, "clear": [34, 119, 126, 129, 159], "clear_al": [70, 74, 79, 80, 84, 85], "clear_cach": 159, "clear_log": [75, 76], "clearlayout": [84, 85], "click": [154, 163, 166], "clone": 150, "close": 151, "closest": [53, 54], "cmap": [41, 53, 54, 119], "code": [15, 42, 112, 119, 130, 132, 134, 143, 147, 153, 159], "coeffic": [101, 102], "coher": [34, 119, 126, 129, 161], "collect": [116, 118], "color": [41, 119, 146], "colormap": [53, 54], "com": [150, 157, 158], "combin": 159, "combo_figur": [119, 132], "come": [149, 151, 159, 161], "command": [32, 92, 93, 101, 102, 153, 161], "comment": [74, 89], "common": [119, 145, 149, 151, 159], "commonli": [98, 99], "commun": [154, 164], "comp": [119, 145], "compact": [16, 152], "compat": 97, "compens": [149, 162], "compil": 97, "compile_pulsespel_def": [101, 102, 105, 112], "compile_pulsespel_prg": [101, 102, 105, 112], "complet": [53, 54, 147, 149, 151, 154, 155, 157, 159, 166], "complex": 100, "complic": 159, "compon": 160, "comprehens": [34, 119, 126, 129, 145], "compress": 100, "comput": [22, 30, 32, 34, 63, 64, 119, 126, 129, 151, 157], "computefreq2field": 22, "computeintens": 22, "condit": [12, 29, 38, 41, 56, 58, 119], "conduct": 159, "confer": [62, 64], "config": [70, 74, 79, 80, 151, 154, 157, 166], "config_fil": [90, 91, 92, 93, 101, 102, 103, 104], "configur": [90, 91, 92, 93, 101, 102, 166], "conflict": 151, "connect": [29, 56, 58, 70, 74, 79, 80, 90, 91, 92, 93, 98, 99, 101, 102, 103, 104, 119, 152, 160, 164], "connect_spectromet": [70, 74, 79, 80], "consid": [147, 160, 161], "consist": [159, 161], "consol": 151, "constant": [33, 53, 54, 57, 58, 95, 97, 119], "construct": [30, 32], "consum": 153, "conta": 97, "contact": [147, 158, 160], "contain": [1, 33, 34, 45, 46, 47, 49, 57, 58, 97, 119, 126, 129, 131, 132, 140, 143, 146, 153, 154, 159, 161, 166], "content": 8, "continu": [63, 64, 151], "contour": [36, 39, 41, 53, 54, 119], "control": [98, 99, 152, 156, 160, 162], "convers": [101, 102], "convert": [30, 32, 49, 97, 118, 119, 131, 132, 140, 143, 145, 157, 160, 161], "convert_progt": 97, "coordin": [53, 54], "copi": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "core": [32, 45, 46, 47, 70, 74, 79, 80, 84, 85, 119, 155, 164], "core_logg": [75, 76, 164], "corespond": 151, "corner": [53, 54, 154], "corr_phas": 100, "correct": [16, 93, 101, 102, 153, 159], "correction_factor": [70, 74, 79, 80], "correctli": 151, "correctphas": [19, 65, 66, 119], "correctphaseful": [19, 65, 66, 119], "correspond": [34, 106, 108, 112, 119, 126, 129], "could": [164, 166], "count": 4, "counter": [101, 102], "coupl": [30, 32, 160], "cours": 160, "cp": [12, 16, 38, 41, 119, 149], "cp_data": 152, "cp_run": 118, "cpdecai": 16, "cpseq": 152, "creat": [15, 16, 22, 30, 32, 33, 34, 36, 39, 41, 53, 54, 57, 58, 70, 74, 79, 80, 90, 91, 92, 93, 98, 99, 119, 126, 129, 132, 134, 143, 145, 153, 159, 164], "create_bahrenberg_plot": [53, 54], "create_dataset_from_ax": [66, 119], "create_dataset_from_bruk": [66, 119], "create_dataset_from_sequ": [66, 119], "create_fieldsweep_figur": [70, 74, 79, 80], "create_figur": [81, 83, 84, 85], "create_nmodel": 22, "create_relax_figur": [70, 74, 79, 80], "create_report": [70, 74, 79, 80, 132], "create_respro_figur": [70, 74, 79, 80], "create_save_nam": [74, 89], "create_slice_plot": [53, 54], "create_twod_plot": [53, 54], "creation": [30, 32], "criteria": [16, 29, 56, 58, 60, 61, 62, 63, 95, 97, 119, 146, 152, 159, 162], "criterion": [16, 29, 56, 58, 119], "critic": [25, 30, 32, 119, 123, 129, 164], "cross": 16, "csv": [53, 54], "cur_exp": [90, 91, 92, 93, 98, 99, 101, 102, 110, 112], "cur_exp_inst": [101, 102], "current": [30, 32, 36, 39, 40, 41, 43, 49, 97, 98, 99, 101, 102, 105, 106, 108, 112, 119, 140, 143, 150, 153, 154, 157, 160, 162], "current_data": [70, 74, 79, 80, 84, 85], "current_fold": [70, 74, 79, 80, 81, 83, 84, 85], "current_result": [70, 74, 79, 80, 84, 85], "custom": [152, 168], "customis": 154, "cutoff": 16, "cvx": 155, "cycl": [15, 34, 53, 54, 97, 119, 126, 129, 134, 143, 152, 161], "d": [30, 32, 62, 64, 97, 119, 145], "d0": [90, 91, 92, 93, 96, 97, 114, 115, 116, 117, 118, 155, 166], "d1": 97, "d10": 97, "d11": 97, "d12": 97, "d13": 97, "d14": 97, "d15": 97, "d2": 97, "d3": 97, "d4": 97, "d5": 97, "d6": 97, "d61b00": 59, "d7": 97, "d8": 97, "d95b6f": [41, 59, 119], "dai": 164, "daili": 164, "danger": 164, "data": [2, 8, 12, 16, 20, 22, 23, 29, 34, 36, 38, 39, 41, 53, 54, 56, 58, 62, 64, 66, 68, 71, 72, 73, 74, 78, 80, 88, 89, 100, 101, 102, 104, 105, 112, 119, 126, 129, 132, 144, 149, 152, 154, 156, 162, 166, 167], "dataarrai": [20, 22, 23, 41, 119, 144], "datafil": [53, 54], "dataset": [12, 16, 20, 22, 23, 29, 36, 38, 39, 40, 41, 43, 45, 46, 47, 53, 54, 56, 58, 70, 74, 79, 80, 81, 83, 85, 90, 91, 92, 93, 98, 99, 101, 102, 103, 104, 105, 112, 115, 118, 119, 146, 152, 159], "date": [30, 32, 150, 151, 162, 164], "datefmt": [30, 32], "david": [34, 119, 126, 129, 145], "db": [101, 102], "dc": [15, 119, 134, 143, 153, 161], "dct": [34, 49, 119, 126, 129, 140, 143, 145], "deadtim": [15, 114, 118, 119, 134, 143, 153], "debug": [30, 32, 155, 164], "decai": [12, 16, 38, 41, 53, 54, 119, 149], "decid": 159, "decim": 46, "declar": 161, "decoher": [53, 54, 167], "decoupl": [13, 119, 133, 143], "decreas": 161, "deep": [34, 119, 126, 129], "deer": [15, 16, 53, 54, 61, 64, 114, 118, 119, 132, 134, 143, 147, 154, 156, 157, 162, 166, 167], "deer5p_run": 118, "deer_analysi": [119, 146], "deer_input": [72, 73], "deer_set": [70, 72, 73, 74, 79, 80], "deeranalysi": [16, 152], "deeranalysis_plot": [16, 152], "deeranalysis_plot_pub": 16, "deeranalysis_process": 85, "deercriteria": [61, 64, 152], "deerlab": [16, 53, 54, 62, 64, 119, 132, 149, 150, 155, 156], "deerload": [53, 54], "deerplot": [84, 85], "deersequ": [15, 119, 134, 143, 152, 153], "def": [97, 161], "def_file_str": [96, 97], "default": [12, 15, 16, 18, 20, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 61, 62, 63, 64, 93, 97, 98, 99, 100, 101, 102, 115, 116, 117, 118, 119, 122, 124, 126, 127, 128, 129, 132, 134, 136, 138, 139, 140, 141, 143, 144, 151, 152, 155, 159, 164], "defenc": 164, "defin": [31, 32, 60, 61, 62, 63, 64, 68, 71, 73, 74, 78, 80, 88, 89, 152, 161], "definit": [97, 152, 157], "deg": 118, "degre": [118, 164], "delai": [12, 15, 17, 34, 36, 38, 39, 41, 48, 49, 51, 53, 54, 95, 97, 119, 121, 126, 129, 134, 139, 140, 141, 143, 149, 152, 153, 156, 161, 166], "demonstr": 161, "den": 144, "denot": [98, 99], "depend": [16, 30, 32, 49, 119, 140, 143, 150, 151, 153, 160, 161], "dependeci": 151, "deprec": [17, 119, 121, 129], "depth": [104, 153], "dersnr": [62, 64], "describ": [30, 32, 36, 39, 40, 41, 43, 49, 119, 140, 143, 161], "descript": [33, 57, 58, 60, 61, 62, 63, 64, 119, 152, 153], "design": [0, 149, 156, 160, 162], "desir": [16, 31, 32], "desktop": 164, "destin": [31, 32], "det": [155, 157, 161], "det_ev": [152, 153], "det_frq": [20, 22, 23, 114, 118, 119], "det_window": 152, "detail": [53, 54, 117, 118, 149, 159, 168], "detect": [16, 18, 20, 22, 23, 34, 41, 98, 99, 101, 102, 105, 112, 119, 122, 126, 129, 132, 149, 152, 161, 164], "detect_dict": [94, 97], "detect_eseem": [41, 119], "determin": [30, 31, 32, 149, 156], "determine_twt_split": 97, "deuteron": [15, 41, 119, 134, 143], "dev": 150, "devel": 151, "develop": [100, 112, 147, 149, 150, 151, 153, 159, 160, 161, 163, 168], "deviat": [16, 53, 54], "diagnal": [53, 54], "diagram": [3, 131, 132], "dict": [16, 33, 34, 57, 58, 66, 73, 74, 76, 89, 97, 98, 99, 100, 116, 118, 119, 126, 129, 132], "dictat": [53, 54], "dictformat": [30, 32], "dictionari": [30, 32, 34, 97, 98, 99, 116, 118, 119, 126, 129, 132, 145, 159, 161], "didn": 164, "differ": [33, 45, 46, 47, 57, 58, 119, 151, 153, 157, 159, 162, 164], "differenti": 157, "dig_rat": [98, 99], "digit": [157, 160], "digitally_upconvert": 100, "digits": [98, 99], "dim": [13, 33, 37, 44, 51, 57, 58, 93, 96, 97, 119, 133, 137, 138, 141, 143, 152], "dimens": [97, 164], "dimension": [33, 57, 58, 119], "dimesnion": 97, "diod": [118, 157], "dip": 152, "dipolar": [16, 153], "direct": [34, 53, 54, 119, 126, 129], "directli": [33, 53, 54, 57, 58, 60, 61, 62, 63, 64, 119, 157], "directori": [151, 166], "disadvantag": 153, "discontinu": 151, "discuss": [163, 164], "discussion_url": [70, 74, 79, 80], "dispatch": [31, 32], "displai": [3, 4, 6, 7, 8, 10, 154, 166], "distanc": [16, 149, 153, 156, 159], "distribut": [16, 149, 159], "dividor": [119, 145], "dl_param": [70, 74, 79, 80, 84, 85], "dnp": 161, "do": [31, 32, 150, 151, 152, 157, 160, 161], "doc": [42, 119, 130, 132, 150, 167], "docs_url": [70, 74, 79, 80], "docstr": [3, 4, 6, 7, 8, 10], "document": [1, 34, 53, 54, 119, 126, 129, 145, 146, 147, 167], "doe": [33, 34, 49, 57, 58, 98, 99, 119, 126, 129, 140, 143, 154, 160], "doesn": [53, 54], "doll": [34, 98, 99, 100, 119, 126, 129, 153, 155], "dolla": [34, 119, 126, 129], "domain": [16, 34, 119, 126, 129, 149, 159], "don": 154, "done": [16, 53, 54, 81, 83, 97, 101, 102, 105, 112, 151, 153, 154, 157, 159, 160, 161, 162, 166], "doubl": [12, 38, 41, 119, 153, 156], "down": [157, 161, 164], "download": 150, "draw": [131, 132], "dsc": [53, 54], "dsl": 159, "dstribut": 151, "dt": [15, 37, 72, 73, 114, 118, 119, 134, 137, 143, 149, 152, 153, 155, 157], "dta": 100, "due": [53, 54, 160], "dummi": [103, 112, 113, 119, 146], "dummy_api": [105, 112], "dummy_cur_exp": [106, 112], "dummy_dataset": [107, 112], "dummy_hidden": [108, 112], "dummy_param": [106, 108, 109, 112], "dummy_xepr": [110, 113, 119, 146], "dummyinterfac": [103, 104], "durand": [62, 64], "durat": [16, 159], "dure": [63, 64, 156], "dynam": [13, 33, 57, 58, 119, 133, 143, 151, 159], "e": [30, 32, 34, 49, 52, 53, 54, 97, 98, 99, 116, 118, 119, 126, 129, 140, 142, 143, 145, 150, 153, 157, 159, 161, 164], "e1ae38": [59, 119], "e580": [155, 157], "each": [16, 33, 34, 36, 39, 41, 57, 58, 93, 97, 119, 126, 129, 145, 159, 161, 164, 168], "earlier": 164, "easi": [156, 157, 162], "easier": 164, "easiest": 168, "easili": [151, 154, 159], "easyspin": [34, 119, 126, 129, 145], "echo": [15, 16, 28, 36, 37, 39, 41, 44, 48, 51, 53, 54, 93, 116, 117, 118, 119, 132, 134, 136, 137, 138, 139, 141, 143, 149, 151, 152, 153, 159, 161], "edf": [24, 119, 132, 135, 143, 149, 152], "edit": 150, "effect": [16, 101, 102, 105, 112, 153], "effic": 149, "effici": [34, 119, 126, 129, 145], "eith": [33, 57, 58, 119], "either": [12, 13, 16, 20, 22, 23, 24, 28, 30, 32, 36, 37, 38, 39, 41, 48, 49, 51, 93, 98, 99, 116, 118, 119, 133, 135, 136, 137, 139, 140, 141, 143, 147, 149, 159, 162, 164, 166], "eldor": [93, 101, 102, 115, 117, 118], "eldortun": [93, 115, 118], "electron": [34, 119, 126, 129, 153, 156], "element": [33, 36, 39, 41, 57, 58, 98, 99, 119, 157, 159], "elexsi": [90, 91, 92, 93, 156, 160, 162], "elif": 8, "els": [3, 4, 7, 8], "elspin": 22, "email": 164, "emin": 151, "emit": [30, 31, 32], "empti": [31, 32], "enabl": 147, "encod": 164, "encrypt": 151, "end": [63, 64, 101, 102, 105, 112, 117, 118, 162, 164], "end_criteria": [72, 73], "end_sign": [60, 64], "end_tim": [63, 64], "endblock": 8, "endfor": [3, 6, 7, 8, 10], "endif": [3, 4, 6, 7, 8, 10], "endor": 161, "endtimecriteria": [72, 73], "engin": [98, 99], "enough": [53, 54], "enter": 154, "enterpris": 151, "entir": [12, 38, 41, 119, 156], "entri": [75, 76, 154], "enviro": 151, "epoch": [63, 64], "epr": [34, 112, 119, 126, 129, 145, 156, 159, 161, 162], "epraccessor": [19, 65, 66, 119], "eprload": [119, 144], "equal": [159, 160, 164], "equalto": 8, "equip": 164, "equival": [101, 102, 161], "erot": 22, "error": [29, 30, 32, 56, 58, 68, 71, 73, 74, 78, 80, 88, 89, 119, 164], "escap": 11, "eseem": [15, 41, 119, 134, 143], "eseem_avg": [15, 119, 134, 143], "eseem_depth": 104, "espin": [21, 22], "establish": [147, 149], "estim": [16, 49, 62, 64, 90, 91, 92, 93, 119, 140, 143, 152, 166], "estimated_snr": [53, 54], "estr": 100, "et": [62, 64, 153], "etc": [44, 119, 138, 143, 151, 152, 155, 162, 164], "eth": [98, 99, 152, 155], "eth_awg": [113, 119, 146, 152], "eth_awg_interfac": [98, 99, 152], "eth_awg_load": [113, 119, 146], "even": [153, 162, 164], "event": [18, 30, 31, 32, 95, 97, 119, 122, 129, 152, 161], "everi": [34, 119, 126, 129, 157, 159, 160], "everyth": [32, 164], "evo": 149, "evolut": [16, 49, 119, 140, 143, 153], "exampl": [33, 57, 58, 119, 150, 152, 157, 159, 161], "exc": 16, "exc_limit": 152, "exc_puls": [16, 152, 153], "exce": 149, "except": [30, 32, 53, 54, 154, 164], "exciat": [16, 34, 119, 126, 129], "excit": [16, 34, 119, 126, 129, 152, 153, 156, 161], "exciteprofil": [34, 119, 126, 129], "exclud": [45, 46, 47, 119], "exctyp": [68, 71, 73, 74, 78, 80, 88, 89], "excut": 150, "exeperi": [106, 108, 112], "exist": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143, 150, 156, 162], "exp": [53, 54, 97], "exp_file_str": [96, 97], "exp_typ": [16, 104], "expand": [150, 153, 160, 162], "experi": [16, 20, 22, 23, 29, 36, 39, 40, 41, 43, 49, 53, 54, 56, 58, 60, 61, 62, 63, 64, 70, 74, 79, 80, 89, 90, 91, 92, 93, 97, 98, 99, 101, 102, 103, 104, 105, 112, 115, 117, 118, 119, 140, 143, 144, 151, 152, 155, 156, 159, 161, 162, 164], "experienc": 156, "experiment": [12, 14, 16, 17, 25, 27, 34, 38, 41, 49, 50, 52, 119, 120, 121, 123, 125, 126, 128, 129, 140, 142, 143, 159, 162], "explantori": 168, "exponenti": [12, 38, 41, 119], "export": 151, "express": [49, 119, 140, 143], "exptyp": 16, "extend": [2, 5, 9, 153], "extens": 0, "extent": 16, "extern": [30, 32], "extra": [16, 53, 54, 98, 99, 151, 159, 161, 164], "extra_param": [66, 119], "extract": [45, 46, 47, 106, 108, 112, 119, 153], "eyekron": 22, "f": [16, 30, 32, 62, 64], "f243_awg": 155, "f_axi": 16, "f_diff_threshold": [45, 46, 47, 119], "f_lim": [45, 46, 47, 80, 119], "fact": [30, 32], "factor": [16, 25, 34, 119, 123, 126, 129], "fals": [15, 16, 33, 34, 36, 39, 41, 45, 46, 47, 53, 54, 57, 58, 63, 64, 70, 72, 73, 74, 79, 80, 81, 83, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 114, 118, 119, 126, 129, 134, 143, 152, 155, 157, 161], "far": [45, 46, 47, 119, 161], "fashion": 160, "fc": [100, 103, 104], "fc_guess": [45, 46, 47, 119], "featur": [112, 154, 156, 160, 163, 164], "fedora": 151, "feel": [147, 164], "fet": 157, "few": [151, 152, 159, 160], "fft": [19, 45, 46, 47, 65, 66, 119], "field": [13, 15, 16, 20, 22, 23, 24, 28, 37, 44, 48, 49, 51, 52, 90, 91, 92, 93, 98, 99, 101, 102, 118, 119, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 154, 161, 162, 164], "fieldsweep": [16, 20, 23, 45, 46, 47, 49, 80, 119, 140, 143, 146, 152, 155], "fieldsweep_fit": 80, "fieldsweepanalysi": [16, 20, 22, 23, 45, 46, 47, 119, 132, 152], "fieldsweepsequ": [24, 119, 135, 143, 152], "fig": [12, 16, 20, 22, 23, 36, 38, 39, 40, 41, 43, 45, 46, 47, 119], "figur": [12, 16, 20, 22, 23, 36, 38, 39, 41, 42, 45, 46, 47, 53, 54, 119, 130, 132], "file": [30, 32, 33, 34, 49, 53, 54, 57, 58, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 119, 126, 129, 140, 143, 144, 154, 159, 162, 164, 166], "filenam": [19, 30, 32, 33, 34, 49, 57, 58, 65, 66, 70, 74, 79, 80, 83, 119, 126, 129, 140, 143], "filenotfounderror": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "filepath": [42, 66, 96, 97, 119, 130, 132], "fill": [53, 54, 161, 163], "fill_tabl": [74, 89], "filter": [16, 31, 32, 100], "filter_puls": 100, "filter_typ": 100, "filter_width": 100, "final": [119, 132, 152, 161, 162, 166], "final_freq": 161, "find": [16, 53, 54, 101, 102, 152, 164], "find_cur_exp": [101, 102], "find_hidden": [101, 102], "find_longest_puls": 16, "find_max": [20, 22, 23, 119], "find_max_pulse_length": 100, "find_min": [115, 118], "find_optim": [12, 36, 38, 39, 41, 119, 152], "find_xepr": [101, 102, 105, 112], "finish": [29, 56, 58, 63, 64, 68, 71, 73, 74, 78, 80, 88, 89, 101, 102, 105, 112, 119, 154], "finished_sign": [82, 83], "first": [12, 15, 33, 38, 41, 45, 46, 47, 57, 58, 98, 99, 119, 134, 143, 149, 151, 152, 153, 154, 159, 164, 166], "fit": [12, 16, 20, 22, 23, 38, 40, 41, 43, 45, 46, 47, 53, 54, 80, 118, 119, 132, 147, 149, 152, 155, 157, 159], "fit_result": 16, "fitresult": [16, 70, 74, 79, 80, 84, 85, 119, 132], "fitter": 149, "five": [15, 119, 134, 143, 152, 153, 156, 164], "five_puls": [15, 119, 134, 143, 152, 153], "fix": [153, 163], "flaot": [35, 119, 127, 129], "flavour": 160, "flip": [35, 53, 54, 119, 127, 129], "flip_pow": 93, "flipangl": [25, 34, 35, 119, 123, 126, 127, 129, 152, 161], "float": [12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 63, 64, 83, 90, 91, 93, 97, 98, 99, 100, 101, 102, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "floor": 46, "flowabl": [42, 119, 130, 131, 132], "fm": [34, 119, 126, 129, 161], "fmt": [30, 32], "fn": [67, 74, 77, 80, 87, 89], "fob": 152, "focus": [34, 49, 119, 126, 129, 140, 143, 161], "folder": [32, 83, 154, 164, 166], "folder_path": [70, 74, 79, 80], "follow": [0, 34, 119, 126, 129, 149, 155, 164], "foot": 160, "footer": [42, 119, 130, 132], "fork": 163, "form": [152, 153, 156, 159, 161, 162, 163], "format": [30, 31, 32, 154, 155, 164], "format_exc": [68, 71, 73, 74, 78, 80, 88, 89], "formatexcept": [30, 32], "formatt": [30, 31, 32], "formattim": [30, 32], "found": [90, 91, 92, 93, 150, 161, 166], "four": [15, 119, 134, 143, 156, 164], "four_puls": [15, 119, 134, 143, 153], "fpump": 152, "fraction": 16, "frame": [42, 119, 130, 132], "fraquelli": [62, 64], "free": [147, 149, 151, 153, 159], "freed": 153, "freq": [18, 20, 22, 23, 26, 34, 35, 50, 93, 101, 102, 104, 119, 122, 124, 126, 127, 128, 129, 152, 155, 157, 159, 161], "frequenc": [13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 34, 35, 37, 44, 45, 46, 47, 48, 49, 50, 51, 52, 90, 91, 98, 99, 101, 102, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 152, 153, 154, 155, 157, 160, 161], "frequencymon": [106, 112], "frequencysweptpuls": [14, 25, 27, 119, 120, 123, 125, 129], "frequneci": [49, 52, 119, 140, 142, 143], "freudl": [62, 64], "freuenci": [101, 102], "friendli": 147, "from": [0, 12, 16, 29, 33, 34, 36, 38, 39, 41, 42, 49, 53, 54, 56, 57, 58, 67, 68, 71, 72, 73, 74, 77, 78, 80, 87, 88, 89, 97, 101, 102, 103, 104, 106, 108, 112, 118, 119, 126, 129, 130, 132, 140, 143, 145, 149, 152, 153, 154, 156, 157, 159, 161, 162, 164, 167], "front": 112, "fsweep": 152, "fsweep_analysi": [80, 152], "fsweep_result": [71, 73], "fsweep_toolbar": [70, 74, 79, 80], "ftacqmodeslct": [106, 112], "ftol": 155, "ftp": 151, "full": [16, 26, 30, 32, 53, 54, 97, 101, 102, 105, 112, 119, 124, 129, 149, 151, 159, 160, 161, 162], "full_nam": 3, "full_output": 16, "fulli": [147, 149, 156, 162, 166], "fullnam": 11, "fullpath": [101, 102], "func": [14, 26, 27, 34, 35, 50, 101, 102, 119, 120, 124, 125, 126, 127, 128, 129, 161], "func1": 46, "func2": 46, "funcnam": [30, 32], "function": [6, 8, 18, 30, 34, 50, 53, 54, 67, 72, 73, 77, 87, 98, 101, 102, 105, 112, 122, 126, 128, 149, 159, 161, 164, 167, 168], "fundament": [151, 160], "furo": 0, "further": [112, 153, 160], "futur": [16, 154, 162], "fwhm": [26, 119, 124, 129], "fwidth": [48, 119, 139, 143], "g": [20, 21, 22, 23, 30, 32, 34, 116, 117, 118, 119, 126, 129, 153, 159], "gain": [98, 99, 101, 102], "galleri": 0, "gap": 155, "gate": [97, 152], "gauss": [16, 24, 48, 49, 52, 90, 91, 98, 99, 101, 102, 119, 135, 139, 140, 142, 143, 152], "gaussian": [16, 26, 119, 124, 129], "gaussianpuls": [26, 119, 124, 129], "gcc": 151, "gcd": [119, 145], "gener": [1, 14, 15, 16, 17, 18, 20, 22, 23, 25, 27, 32, 33, 34, 42, 50, 53, 54, 57, 58, 62, 64, 90, 91, 97, 98, 99, 100, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 132, 134, 143, 144, 145, 146, 147, 149, 153, 154, 157, 159, 160, 161, 164, 166], "generalis": 162, "georgieva": 153, "get": [30, 32, 98, 99, 101, 102, 161, 163, 164], "get_acquisition_mod": [101, 102], "get_all_ax": [66, 119], "get_all_fixed_param": [66, 119], "get_arang": 97, "get_attenu": [101, 102], "get_axi": [33, 57, 58, 119], "get_config_fil": [101, 102], "get_counterfreq": [101, 102], "get_datawork": [82, 83], "get_eldor_freq": [101, 102], "get_field": [101, 102], "get_freq": [101, 102], "get_hidden_param": [101, 102], "get_mw_amp": [101, 102], "get_nut": 118, "get_param": [101, 102], "get_phas": [101, 102], "get_phasecycl": [101, 102], "get_pulsespel_def_filenam": [101, 102], "get_pulsespel_def_filepath": [101, 102], "get_pulsespel_exp_filenam": [101, 102], "get_pulsespel_exp_filepath": [101, 102], "get_pulsespel_experi": [101, 102], "get_pulsespel_phase_cycl": [101, 102], "get_replacemod": [101, 102], "get_sequence_row": [74, 89], "get_spec_config": [101, 102], "get_specjet_data": [91, 93], "get_sweep_width": [101, 102], "get_vexp": 85, "get_video_bandwidth": [101, 102], "get_video_gain": [101, 102], "getcistr": [74, 89], "getlogg": 164, "getmessag": [30, 32], "getparam": [106, 108, 112], "ghz": [13, 14, 15, 16, 20, 22, 23, 24, 25, 27, 28, 34, 37, 44, 45, 46, 47, 48, 51, 90, 91, 98, 99, 101, 102, 117, 118, 119, 120, 123, 125, 126, 129, 133, 134, 135, 136, 137, 138, 139, 141, 143, 152, 155, 157, 161], "gig": 150, "git": [150, 157], "github": [150, 153, 157, 163], "github_url": [70, 74, 79, 80], "give": [45, 46, 47, 97, 119, 149, 153, 156, 160], "given": [12, 16, 20, 22, 23, 34, 36, 38, 39, 41, 45, 46, 47, 53, 54, 63, 64, 90, 91, 92, 93, 97, 98, 99, 106, 108, 112, 116, 117, 118, 119, 126, 129, 153, 159, 166], "gn": 22, "gnscale": [21, 22], "go": [160, 163], "gone": 164, "graph": [154, 157], "graphic": [131, 132, 147, 149, 167, 168], "greatest": [119, 145], "green": [154, 166], "grid": 16, "gsa": [98, 99, 155], "guass": [13, 15, 24, 28, 37, 44, 48, 51, 119, 133, 134, 135, 136, 137, 138, 139, 141, 143], "guass_broaden": 22, "guess": [90, 91, 92, 93, 152, 154], "gui": [70, 77, 78, 79, 119, 146, 147, 152, 167, 168], "guid": 160, "gunn": [118, 157], "gunnar": [34, 119, 126, 129], "gyro": [48, 70, 72, 73, 74, 79, 80, 81, 83, 98, 99, 117, 118, 119, 139, 143], "gyro_exp": [152, 153], "gyro_n": 152, "gyromagnet": [20, 22, 23, 117, 118, 119, 152], "gz": 151, "h": [149, 153], "h5": 154, "ha": [12, 33, 38, 41, 57, 58, 70, 74, 79, 80, 98, 99, 101, 102, 105, 112, 119, 149, 151, 152, 154, 156, 157, 159, 160, 164], "haas": [62, 64], "hahn": [28, 44, 48, 51, 53, 54, 93, 116, 117, 118, 119, 136, 138, 139, 141, 143, 149, 159, 161], "hahnecho": 161, "hahnechosequ": [24, 28, 44, 51, 119, 135, 136, 138, 141, 143, 159, 161], "half": [26, 119, 124, 129], "ham": 22, "ham_ez": 22, "ham_nz": 22, "hand": [53, 54, 154], "handl": 97, "handler": [31, 32, 67, 72, 73, 74, 77, 80, 87, 89], "happen": 164, "hard": 149, "hard_logg": 164, "hardwar": [32, 105, 119, 146, 150, 152, 156, 157, 159, 162, 164], "hardware_logg": [75, 76], "hardware_meta": 112, "hardware_wait": [93, 115, 116, 117, 118], "harwar": [32, 164], "hat": 151, "have": [45, 46, 47, 112, 119, 149, 151, 152, 153, 157, 159, 161, 162, 164], "hdf5": 154, "header": [42, 74, 89, 97, 119, 130, 132], "height": [42, 119, 130, 131, 132], "hello": 164, "here": [90, 91, 92, 93, 151, 152, 157, 159, 160, 161, 164], "hh": 152, "hidden": [101, 102, 110, 112], "high": [147, 153, 164], "higher": [149, 153, 157], "hold": [101, 102], "holder": 155, "home": [156, 160, 162], "hook": [62, 64], "host": 150, "hour": [12, 16, 36, 38, 39, 41, 63, 64, 119, 149, 155], "how": [16, 29, 30, 32, 53, 54, 56, 58, 63, 64, 93, 98, 99, 119, 149, 151, 152, 160, 161, 164], "howev": [151, 156, 159, 160, 161, 164], "hspuls": [27, 119, 125, 129], "html": [0, 34, 119, 126, 129, 145], "http": [34, 119, 126, 129, 145, 150, 151, 157], "hugo": 112, "human": [30, 32, 157], "hw_log": [93, 97, 102, 104, 112], "hybrid": [114, 118, 155, 157], "hyperboilc": [27, 119, 125, 129], "hyperbol": 149, "i": [0, 4, 6, 7, 8, 12, 15, 16, 21, 22, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 44, 45, 46, 47, 49, 51, 52, 53, 54, 56, 57, 58, 62, 63, 64, 74, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 105, 112, 116, 118, 119, 126, 129, 132, 134, 136, 138, 140, 141, 142, 143, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 166, 168], "id": [8, 30, 32, 95, 96, 97, 98, 99, 152], "ideal": [115, 116, 117, 118], "idenitifi": 93, "ident": 22, "identifi": [16, 101, 102, 105, 112, 149, 164], "identifyroi": 16, "ifgain": [98, 99, 152], "ifgain_opt": [98, 99], "ignor": 16, "ii": [90, 91, 92, 93, 156, 160, 162], "imaginari": [16, 93, 116, 118], "immedi": [29, 56, 58, 90, 91, 92, 93, 103, 104, 119, 159, 164], "implement": [31, 32, 156, 161], "import": [8, 16, 53, 54, 149, 152, 157, 159, 161, 164, 166], "import_data": [53, 54], "import_dataset": [53, 54], "improv": [153, 167], "includ": [16, 22, 53, 54, 97, 149, 153, 155, 156, 161, 166], "incoher": [115, 117, 118], "incompat": 157, "increas": [34, 44, 51, 119, 126, 129, 138, 141, 143, 149, 151, 161], "indent": [3, 4, 6, 7, 8, 10], "independ": [147, 155, 156, 159, 162], "index": 8, "indic": [68, 71, 73, 74, 78, 80, 88, 89, 154], "individu": [161, 164], "info": [30, 32, 155, 164], "infom": [16, 53, 54, 93, 155, 159, 160, 161, 166], "inform": [30, 32, 159, 160, 161], "inherit": [3, 33, 57, 58, 67, 72, 73, 74, 77, 80, 87, 89, 119, 161], "init": 161, "init_d": [119, 132], "init_freq": 161, "initi": [30, 31, 32, 33, 57, 58, 90, 91, 92, 93, 119, 132, 152, 153, 154, 155, 160, 161, 164, 167], "initialis": [29, 56, 58, 67, 72, 73, 74, 77, 80, 87, 89, 90, 91, 92, 93, 98, 99, 103, 104, 119, 152], "initialise_deer_set": [70, 74, 79, 80], "initializt": [131, 132], "input": [16, 53, 54, 97, 154], "insatl": 151, "insid": 152, "instal": 157, "instanc": [30, 31, 32, 106, 108, 112, 161], "instead": [16, 153, 161], "instruct": [0, 151, 168], "int": [12, 13, 15, 16, 22, 24, 28, 29, 33, 34, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 62, 64, 68, 71, 73, 74, 78, 80, 88, 89, 90, 91, 93, 97, 98, 99, 100, 101, 102, 109, 112, 115, 116, 117, 118, 119, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "integ": [63, 64, 95, 97], "integr": [147, 156, 162, 164], "intellig": 162, "intend": [31, 32], "intens": 22, "inter": [12, 17, 36, 38, 39, 41, 119, 121, 129, 149, 153, 156, 166], "interced": 152, "interest": [16, 149, 158], "interfac": [29, 31, 32, 56, 58, 72, 73, 81, 82, 83, 90, 91, 92, 93, 98, 99, 103, 104, 119, 147, 149, 155, 159, 161, 167, 168], "intergr": 16, "intern": [53, 54], "interpret": [30, 32, 98, 99], "interpuls": [15, 48, 51, 119, 134, 139, 141, 143], "interv": 159, "intial": [33, 57, 58, 119], "introduc": [15, 119, 134, 143], "intuit": 147, "invers": 153, "invert": [53, 54], "invert_sign": [53, 54], "investig": 164, "involv": [153, 159], "inward": 153, "io": 132, "ip": [151, 157], "is_exp_run": [101, 102, 105, 112], "is_stat": [33, 34, 57, 58, 119, 126, 129], "isdelayfocus": [34, 49, 119, 126, 129, 140, 143], "iso8601": [30, 32], "ispulsefocus": [34, 49, 119, 126, 129, 140, 143], "isrun": [29, 56, 58, 90, 91, 92, 93, 98, 99, 103, 104, 119, 152], "issu": [30, 32, 98, 99, 151, 160, 163, 164], "issues_url": [70, 74, 79, 80], "iter": [93, 116, 118], "itn": [49, 52, 119, 140, 142, 143], "its": [119, 145, 151, 161], "itself": [33, 57, 58, 119, 162], "j": [34, 62, 64, 119, 126, 129, 145, 153], "jeschk": [34, 119, 126, 129, 153], "jeschkelab": 150, "join": 163, "json": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "jsonstr": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "june": 151, "just": [30, 32, 45, 46, 47, 97, 119, 152, 160, 161], "k": [62, 64], "kamp": [62, 64], "kara": 112, "keep": [153, 159], "keep_run": [29, 56, 58, 119], "kei": [16, 34, 42, 96, 97, 119, 126, 129, 130, 132, 159, 160], "kept": [154, 164], "key1": [103, 104], "keyword": [34, 53, 54, 67, 72, 73, 74, 77, 80, 87, 89, 119, 126, 129], "kimbal": [62, 64], "klass": [3, 8], "knot": 22, "know": [30, 32, 149], "knowledg": [30, 32], "known": [98, 99, 156, 159], "knownledg": 154, "kroneck": 22, "kroney": 22, "kummel": [62, 64], "kwarg": [13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 37, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 57, 58, 61, 62, 63, 64, 67, 72, 73, 74, 77, 80, 87, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "lab": 154, "label": [149, 156], "languag": [157, 159], "larg": [162, 164], "larger": [34, 119, 126, 129], "last": [3, 164], "later": [149, 150, 159, 162, 164], "latest": [150, 157], "launch": [29, 56, 58, 90, 91, 92, 93, 98, 99, 103, 104, 119, 152, 159], "launch_long": [98, 99], "launch_norm": [98, 99], "launch_withifgain": [98, 99], "layout": [84, 85], "ld_library_path": 151, "least": 157, "leav": [33, 57, 58, 119], "left": [119, 132, 154], "length": [3, 8, 12, 13, 14, 15, 17, 25, 26, 27, 34, 35, 37, 38, 41, 45, 46, 47, 50, 90, 91, 95, 97, 98, 99, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 133, 134, 137, 143, 149, 152, 155, 161], "less": [12, 16, 38, 41, 74, 89, 119, 149, 153, 159], "lett": 153, "levai": [62, 64], "level": [12, 29, 30, 31, 32, 38, 41, 53, 54, 56, 58, 72, 73, 119, 161], "levelnam": [30, 32], "levelno": [30, 32], "lib": 151, "lib64": 151, "libdir": 151, "light": [154, 166], "like": [15, 30, 32, 119, 134, 143, 152, 153, 160, 161, 162, 164], "limit": [45, 46, 47, 119, 161], "lin_maxit": 155, "lin_tol": 155, "line": [30, 32], "linear": [14, 119, 120, 129, 160, 161], "linearli": [34, 119, 126, 129], "lineno": [30, 32], "link_obj": 3, "linux": 151, "list": [3, 8, 16, 31, 32, 33, 34, 41, 42, 57, 58, 74, 89, 97, 100, 101, 102, 117, 118, 119, 126, 129, 130, 132, 145, 155, 159, 161], "list_str_to_typ": [74, 89], "live": 166, "lo": [13, 15, 20, 22, 23, 24, 28, 37, 44, 45, 46, 47, 48, 49, 51, 52, 70, 72, 73, 74, 79, 80, 90, 91, 92, 93, 98, 99, 103, 104, 119, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 159, 160, 161], "load": [30, 32, 33, 34, 49, 53, 54, 57, 58, 100, 119, 126, 129, 140, 143, 144, 154, 159, 166], "load_epr_fil": [70, 74, 79, 80, 89], "load_fold": [70, 74, 79, 80], "load_spectrometer_config": [70, 74, 79, 80], "lobe": 161, "loc": 16, "local": [63, 64, 90, 91, 98, 99, 151, 152, 155, 157], "locat": [16, 149], "log": [16, 29, 30, 31, 56, 58, 64, 74, 75, 99, 119, 144, 146, 155], "log_level": [75, 76], "logdialog": [75, 76], "logger": [30, 32], "logo_pixmap": [70, 74, 79, 80], "logrecord": [30, 32], "lombardi": [62, 64], "long": [53, 54, 63, 64, 98, 99, 151, 153], "long_deer": [119, 132], "longdeer": [70, 74, 79, 80], "longdeer_result": [71, 73], "longdeer_upd": [71, 73], "longer": [101, 102, 105, 112, 153, 164, 166], "longest": 16, "look": [159, 161], "loop": [3, 98, 99, 155], "lorentzian": [45, 46, 47, 119], "low": 16, "lower": [115, 116, 117, 118, 161], "lowest": 164, "lowpass": 16, "lt": 151, "m": [22, 62, 64, 150, 157], "m8190a": 157, "maco": 150, "made": 152, "mag_logg": 164, "magent": [101, 102, 164], "magentis": [34, 119, 126, 129], "magn": [34, 119, 126, 129, 145], "magnet": [49, 52, 90, 91, 98, 99, 101, 102, 119, 140, 142, 143, 149, 164], "mai": [53, 54], "main": [53, 54, 74, 119, 146, 150, 159, 160, 161, 163, 164, 168], "major": 167, "make": [0, 30, 32, 151, 153, 161, 163], "manag": 151, "mani": [16, 53, 54, 93, 98, 99, 153, 159, 160, 161], "manufactu": 112, "manufactur": [155, 157], "map": [41, 119], "markup": 157, "mask": [16, 100], "match": [16, 100, 167], "match_filter_dc": 100, "matfil": 100, "math": [117, 118, 149], "matlab": [98, 99, 100, 150, 154, 160], "matplotlib": [16, 20, 22, 23, 41, 45, 46, 47, 53, 54, 119, 152], "matrici": [119, 145], "matrix": [22, 119, 145], "max": [20, 22, 23, 109, 112, 119, 154, 155, 157], "max_nfev": 155, "max_tau": [72, 73], "maxdepth": 8, "maxgat": 97, "maximis": [16, 93, 116, 118], "maximum": [12, 13, 16, 20, 22, 23, 26, 36, 37, 38, 39, 41, 44, 93, 97, 100, 116, 118, 119, 124, 129, 133, 137, 138, 143, 149, 154, 164, 166], "maxit": [93, 116, 118], "mayb": 164, "me": 112, "mean": [160, 164], "meanwhil": 159, "measur": [12, 15, 29, 36, 38, 39, 41, 53, 54, 56, 58, 62, 63, 64, 90, 91, 92, 93, 98, 99, 103, 104, 118, 119, 134, 143, 149, 153, 154, 156, 157, 159, 160, 162, 166, 167], "member": 3, "memori": [34, 119, 126, 129], "mention": [30, 32], "merg": [45, 46, 47, 119], "messag": [30, 31, 32, 70, 74, 79, 80], "met": [12, 29, 38, 41, 56, 58, 119], "meta": [105, 112], "metadata": [53, 54], "method": [3, 7, 34, 53, 54, 90, 91, 98, 99, 106, 108, 112, 119, 126, 129, 159, 160, 161], "mhz": [18, 22, 35, 101, 102, 119, 122, 127, 129], "micol": [62, 64], "microsecond": [16, 97, 119, 145], "microwav": [22, 101, 102], "might": [159, 164], "millisecond": [30, 32], "mimimum": [62, 64], "min": [109, 112, 155, 157], "min_reptim": [44, 119, 138, 143], "min_tp": [70, 74, 79, 80, 155], "minbrxamp": [108, 112], "minbrxphas": [108, 112], "minbryamp": [108, 112], "minbryphas": [108, 112], "minim": 149, "minimis": [93, 116, 118], "minimum": [16, 160], "minor": 154, "minut": [29, 56, 58, 119, 159], "miss": 164, "mm": 152, "mnr": [16, 153], "mnr_estim": 16, "mock": [92, 93], "mode": [61, 64, 90, 91, 98, 99, 101, 102, 103, 104, 150, 152, 156, 159, 167], "model": [12, 16, 22, 38, 41, 61, 64, 112, 119, 149, 155, 157, 162], "moder": 153, "modern": [151, 156, 162], "modetun": [74, 81, 119, 146], "modif": [152, 153], "modifi": [159, 168], "modul": [8, 9, 30, 34, 119, 126, 150, 153, 159, 164], "module_dir": [16, 97, 118], "moment": 149, "mono": [12, 38, 41, 119], "monochromat": [26, 35, 50, 119, 124, 127, 128, 129, 161], "more": [53, 54, 97, 98, 99, 147, 151, 152, 153, 159, 160, 164], "most": [98, 99, 112, 149, 151, 152, 160, 161, 164], "mostli": [100, 153, 168], "motor": [101, 102], "move": [97, 153, 161, 164], "mpfu": [92, 93, 94, 96, 97, 114, 116, 118, 155, 156, 157, 160, 162], "mpfu_overwrit": [90, 91, 92, 93], "mpfutun": [93, 116, 118], "msec": [30, 32], "mt": 22, "mu": 149, "much": [147, 149, 151, 159, 164], "multi": 159, "multi_mod": [45, 46, 47, 119], "multilin": 4, "multipl": [16, 45, 46, 47, 119, 150, 151, 153, 156, 159, 162, 164], "multipli": [22, 161], "must": [16, 22, 45, 46, 47, 119, 149, 152, 154, 157, 159, 164, 166], "mutex": [72, 73], "mutlipl": 159, "mw": 161, "mwfreq": 22, "mx": [34, 119, 126, 129], "my": [34, 119, 126, 129, 155, 159, 160], "myst": 0, "mz": [34, 119, 126, 129], "n": [12, 13, 14, 15, 16, 17, 20, 22, 23, 25, 26, 27, 33, 34, 35, 36, 38, 39, 41, 48, 50, 57, 58, 90, 91, 98, 99, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 133, 134, 139, 143, 149, 152, 155, 157], "n_file": [45, 46, 47, 119], "name": [4, 8, 13, 15, 24, 25, 28, 30, 32, 33, 34, 37, 44, 48, 49, 51, 52, 57, 58, 60, 61, 62, 63, 64, 74, 89, 97, 98, 99, 101, 102, 106, 108, 112, 119, 123, 126, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 152, 153, 154, 155, 157, 159, 161, 164, 166], "nanosecond": [119, 145], "narrow": 153, "nativ": [154, 159, 160], "nbscansdon": [106, 112], "nbscanstodo": [106, 112], "ndarrai": [16, 20, 22, 23, 33, 34, 36, 39, 41, 44, 45, 46, 47, 57, 58, 100, 119, 126, 129, 138, 143, 145], "ndeer": [15, 16, 119, 134, 143, 156], "ndeer_cp": [15, 119, 134, 143, 153], "nearli": [149, 160, 161], "necessari": [151, 152, 154, 155], "need": [30, 32, 53, 54, 90, 91, 92, 93, 97, 98, 99, 106, 108, 112, 149, 150, 151, 153, 154, 155, 157, 159, 160, 161, 162, 164, 166], "nelectron": [21, 22], "nest": 8, "netcdf": [19, 65, 66, 119], "never": [33, 57, 58, 119, 164], "new": [16, 97, 101, 102, 147, 151, 156, 161, 163, 167], "new_data": [72, 73], "new_length": 97, "new_puls": [72, 73, 161], "new_tau": 152, "newer": 157, "newli": 151, "next": [49, 101, 102, 105, 112, 119, 140, 143, 149, 161, 166], "nfft": [45, 46, 47, 119], "night": [63, 64, 155], "night_hour": [63, 64], "nitroxid": [22, 149], "nnlssolver": 155, "nnuclei": [21, 22], "nois": [12, 16, 36, 38, 39, 41, 45, 46, 47, 53, 54, 62, 64, 119, 159], "noise_frac": [53, 54], "noise_level": 104, "noisedens": [45, 46, 47, 119], "nomarlis": [20, 22, 23, 119], "nome": [53, 54], "non": [16, 34, 119, 126, 129, 153, 160, 161], "none": [4, 6, 7, 8, 12, 15, 16, 17, 18, 20, 22, 23, 25, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 66, 70, 72, 73, 74, 76, 79, 80, 81, 83, 84, 85, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 109, 110, 112, 118, 119, 121, 122, 123, 126, 127, 128, 129, 130, 132, 134, 140, 143, 144, 152, 161], "nonetheless": [157, 160], "norm": [12, 20, 22, 23, 36, 38, 39, 41, 53, 54, 119], "normal": [15, 16, 36, 39, 41, 53, 54, 98, 99, 119, 134, 143, 152, 153, 156, 159, 167], "normaldc": [15, 119, 134, 143], "normalis": [12, 19, 22, 36, 38, 39, 41, 53, 54, 62, 64, 65, 66, 119], "normalise_01": 16, "note": [16, 101, 102, 164], "notebook": 152, "noth": [101, 102], "notimplementederror": [31, 32], "notset": [31, 32], "now": [90, 91, 92, 93, 98, 99, 149, 151, 152, 154, 159, 161], "np": [16, 20, 22, 23, 33, 34, 36, 39, 41, 44, 45, 46, 47, 57, 58, 100, 119, 126, 129, 138, 143, 152, 161], "npoint": 22, "nspin": [21, 22], "nstate": [21, 22], "nu": [117, 118], "nu_fin": [117, 118], "nu_init": [117, 118], "nuanc": [53, 54], "nucspin": 22, "num": 144, "num_point": [114, 118, 152], "num_puls": [49, 118, 119, 140, 143], "num_ref_puls": 16, "number": [12, 13, 15, 16, 22, 24, 28, 30, 32, 33, 34, 36, 37, 38, 39, 41, 44, 46, 48, 49, 51, 52, 53, 54, 57, 58, 90, 91, 93, 97, 98, 99, 101, 102, 105, 112, 116, 118, 119, 126, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 152, 153, 159], "numer": [30, 32], "numpi": [16, 22, 100, 119, 145, 152, 157, 161], "numpydoc": 0, "nut": 152, "nutat": [25, 34, 45, 46, 47, 48, 115, 117, 118, 119, 123, 126, 129, 139, 143, 149, 159], "nx": [118, 161], "o": [107, 112, 151], "ob": [15, 119, 134, 143], "obj": [3, 4, 6, 7, 8, 10, 33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "obj_item": 8, "object": [3, 16, 33, 34, 36, 39, 40, 41, 43, 45, 46, 47, 49, 53, 54, 57, 58, 64, 68, 71, 73, 74, 78, 80, 88, 89, 90, 91, 98, 99, 115, 116, 117, 118, 119, 126, 129, 140, 143, 159, 161, 162], "obsdc": [15, 119, 134, 143], "observ": [15, 119, 134, 143], "occur": [153, 164], "oe": 157, "off": [45, 46, 47, 119, 164], "offici": 151, "offset": [49, 52, 119, 140, 142, 143, 161], "offset_freq": 100, "often": [29, 56, 58, 119, 151, 153, 160, 161, 164, 168], "old": 151, "omit": [30, 32], "onc": [101, 102, 105, 112, 151, 154, 162, 166], "one": [30, 32, 45, 46, 47, 98, 99, 119, 153, 159, 161, 162, 164], "ones": [151, 161], "onli": [16, 33, 49, 57, 58, 60, 61, 62, 63, 64, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 119, 140, 143, 149, 150, 153, 157, 159, 161, 162, 164, 167], "onlydet": [94, 97], "open": [98, 99, 154], "openssl": 151, "openssldir": 151, "oper": [30, 32, 98, 99, 119, 145, 151], "operand": [30, 32], "optim": [12, 16, 36, 38, 39, 41, 53, 54, 93, 115, 116, 117, 118, 119, 149], "optimal_slice_plot": [53, 54], "optimal_tau1": [36, 39, 41, 119], "optimis": [16, 93, 116, 118, 119, 132, 147, 152, 153, 156], "optimise_puls": [16, 70, 74, 79, 80], "optimise_pulses_button": [70, 74, 79, 80], "optimise_spectra_posit": [46, 119], "option": [12, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 45, 46, 47, 49, 50, 53, 54, 56, 57, 58, 61, 62, 63, 64, 93, 97, 98, 99, 100, 101, 102, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 140, 143, 144, 145, 161, 166, 167], "order": [50, 119, 128, 129, 157], "order1": [27, 119, 125, 129], "order2": [27, 119, 125, 129], "org": [34, 119, 126, 129, 145, 151], "orient": 22, "origin": [16, 150, 153, 162], "orphan": 8, "oscil": [90, 91, 98, 99, 152], "oss": 151, "other": [33, 57, 58, 119, 153, 161, 162, 166], "otherwis": [15, 16, 34, 119, 126, 129, 134, 143, 149, 159], "our": [151, 152, 161], "out": [30, 32, 53, 54, 70, 74, 79, 80, 149, 151, 161, 163], "output": [16, 53, 54], "outsid": [151, 164], "over": [12, 38, 41, 53, 54, 119, 152, 153], "overlai": [45, 46, 47, 119], "overlap": [16, 46, 119, 132], "overload": [3, 6, 7], "own": [156, 159, 160, 168], "p": [15, 16, 119, 134, 143, 153, 159], "p0": 97, "p1": 97, "p10": 97, "p180": [90, 91, 98, 99, 152], "p2": 97, "p3": [15, 97, 119, 134, 143, 153], "p4": 97, "p5": [62, 64, 97], "p6": 97, "p7": 97, "p8": 97, "p9": 97, "p90": [90, 91, 98, 99, 152], "p90_12_34": 159, "packag": [8, 34, 126, 129, 145, 147, 151, 152, 153, 159, 162], "package_dir": 132, "package_directori": [76, 80, 83, 85], "pad": [34, 45, 46, 47, 119, 126, 129], "page": [1, 146, 163], "pages": [42, 119, 130, 132], "pair": [53, 54, 92, 93, 152], "par": [109, 112], "par1": [33, 57, 58, 119], "par2": [33, 57, 58, 119], "param": [16, 49, 66, 74, 89, 104, 119, 140, 143, 145], "param_in_mhz": [74, 89], "param_in_u": [74, 89], "param_nam": [101, 102], "paramagnet": [34, 119, 126, 129], "paramat": [53, 54, 159, 161], "paramet": [12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 64, 66, 67, 72, 73, 74, 76, 77, 80, 83, 87, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 154, 156, 161, 162, 164, 166, 168], "params_width": [119, 145], "paramt": [33, 57, 58, 106, 108, 112, 119], "paremet": [53, 54, 106, 108, 112], "parent": [25, 75, 76, 84, 85, 119, 123, 129, 161], "parmet": [53, 54], "pars": 8, "parser": 0, "part": [3, 16], "particular": [53, 54], "parvar": [95, 96, 97, 98, 99], "pass": [16, 33, 57, 58, 67, 72, 73, 74, 77, 80, 87, 89, 119, 159, 161, 164], "passag": [34, 119, 126, 129], "passiv": 22, "path": [33, 34, 49, 53, 54, 57, 58, 90, 91, 92, 93, 97, 101, 102, 110, 111, 112, 119, 126, 129, 140, 143, 144, 145, 151, 154, 157], "pathnam": [30, 32], "pathwai": [153, 161], "patient": 147, "paus": [101, 102, 160], "pause_and_wait": [72, 73], "pause_exp": [101, 102], "pcre": 151, "pcyc": [15, 17, 18, 25, 34, 119, 121, 122, 123, 126, 129, 134, 143, 161], "pcyc_str": [96, 97], "pdf": [42, 119, 130, 132, 147, 154, 167], "pe12": [15, 119, 134, 143, 153], "pe12rp": [15, 119, 134, 143, 153], "pe12rpr3": [15, 119, 134, 143, 153], "pe1p0r2r3b": [15, 119, 134, 143, 153], "peak": [16, 45, 46, 47, 119], "peldor": [15, 119, 134, 143, 156], "pent": 155, "pep02r3": [15, 119, 134, 143, 153], "per": [13, 15, 24, 28, 37, 44, 48, 49, 51, 52, 53, 54, 101, 102, 105, 112, 119, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 164], "perfom": [44, 119, 138, 143, 151], "perform": [16, 152, 160], "period": 159, "perl": 151, "phase": [15, 16, 34, 53, 54, 93, 97, 104, 116, 118, 119, 126, 129, 134, 143, 152, 161], "phasecorrect_all_point": 83, "phasecycl": 97, "phy": [34, 119, 126, 129, 145, 153], "physcial": [98, 99], "physic": 161, "pi": [53, 54, 90, 91, 98, 99, 115, 116, 117, 118, 152, 153, 159, 161], "pi2_puls": [152, 159], "pi_puls": [152, 159], "piec": [159, 164], "pip": [0, 150, 157], "place_hash": [96, 97], "placehold": [31, 32], "plan": 150, "platypu": [131, 132], "pleas": [0, 147, 153, 158, 160], "plot": [12, 16, 20, 22, 23, 34, 36, 38, 39, 40, 41, 43, 45, 46, 47, 49, 53, 54, 93, 119, 126, 129, 132, 140, 143, 152, 159], "plot1d": [36, 39, 41, 119], "plot2d": [36, 39, 41, 119], "plot_1drelax": [41, 119], "plot_fft": [34, 119, 126, 129], "plot_optimal_deer_frq": 152, "plot_overlap": 16, "plot_pulse_exc": [49, 119, 140, 143], "plsspelexpslct": [106, 112], "plsspelglbpaf": [106, 112], "plsspellistslct": [106, 112], "plsspelprgpaf": [106, 112], "plt": 152, "plu": 150, "po": [53, 54], "point": [13, 15, 16, 22, 24, 28, 34, 37, 44, 48, 49, 51, 52, 53, 54, 118, 119, 126, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 164], "pol": [101, 102], "polynom": [101, 102, 155], "polynomi": [118, 157], "pool": [90, 91, 92, 93], "pop": [70, 74, 79, 80, 164], "porgram": 154, "port": [34, 119, 126, 129, 145], "portion": [30, 32], "posit": [16, 33, 35, 49, 57, 58, 90, 91, 93, 97, 98, 99, 101, 102, 115, 116, 117, 118, 119, 127, 129, 140, 143, 161], "possibl": [16, 53, 54, 97, 149, 159, 161, 162, 163], "possible_delai": [96, 97], "possible_puls": [96, 97], "possible_var": [96, 97], "possibli": 112, "post": 144, "potenti": 157, "power": [45, 46, 47, 115, 116, 117, 118, 119, 149, 155, 159, 161, 164], "pre": [30, 32, 151, 153, 161], "precis": [16, 74, 89, 101, 102, 152, 156], "predict": 149, "prefer": [53, 54, 154, 155, 157, 166], "prefix": 151, "premis": 153, "preparatori": [30, 32], "present": [151, 153], "press": [149, 154, 162], "pretend": 112, "prevent": 164, "previou": 97, "pribitz": [34, 119, 126, 129], "primari": 153, "primarili": [149, 164], "primary_color": [59, 119], "print": [152, 159, 161, 164], "priorti": [70, 74, 79, 80], "pritn": 159, "privat": [3, 53, 54], "privileg": 151, "problem": [151, 164], "procedur": 162, "process": [30, 32, 53, 54, 68, 71, 73, 74, 78, 80, 88, 89, 147, 154, 156, 159, 162, 168], "process_deeranalysi": [84, 85], "process_nut": [45, 46, 47, 119, 152], "product": 22, "prof_data": [45, 46, 47, 119], "prof_frq": [45, 46, 47, 119], "profil": [16, 34, 45, 46, 47, 48, 52, 72, 73, 117, 118, 119, 126, 129, 132, 139, 142, 143, 159, 160, 162], "prog": [33, 57, 58, 119, 152], "program": [33, 57, 58, 119, 147, 153, 154, 164, 168], "progress": [28, 33, 34, 51, 57, 58, 68, 71, 73, 74, 78, 80, 88, 89, 98, 99, 119, 126, 129, 136, 141, 143, 144, 147, 152, 156, 161, 166], "progress_bar": 144, "progress_bar_frac": 144, "progtabl": [49, 95, 97, 119, 140, 143], "progtable_n": [95, 97], "project": [72, 73, 147, 160, 163], "projectnam": [74, 89], "properti": [3, 6, 7, 10, 14, 19, 25, 27, 33, 34, 49, 57, 58, 65, 66, 98, 99, 109, 112, 119, 120, 123, 125, 126, 129, 140, 143], "propos": 164, "protein": 156, "protocol": 168, "proton": [15, 41, 119, 134, 143, 153], "provid": [16, 45, 46, 47, 106, 108, 112, 119, 149, 150, 152, 160, 168], "ps_file": 97, "ps_length": [115, 116, 117, 118], "psparvar": [95, 97], "psphasecycl": [94, 97], "public": 16, "pull": [150, 153, 163], "puls": [12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 41, 44, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 70, 72, 73, 74, 79, 80, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 149, 152, 155, 156, 157, 159, 160, 162, 164, 166], "pulse0_tp": [45, 46, 47, 119], "pulse_num": [96, 97], "pulseprofil": [117, 118], "pulsespel": [95, 96, 97, 156, 159, 160, 161, 162], "pump": [15, 16, 119, 134, 143, 149, 152, 153], "pump_frq": [114, 118], "pump_puls": [16, 152, 153], "purcel": [12, 13, 16, 38, 41, 119, 133, 143, 149, 153], "push": [147, 156, 159], "py": [3, 4, 6, 7, 10], "pydata": 0, "pyenv": 151, "pypi": [150, 157], "pyplot": 152, "pyqt6": [31, 32, 67, 68, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 87, 88, 89], "pyqt_table_from_dict": [74, 89], "pytest": 150, "python": [0, 2, 5, 9, 53, 54, 100, 147, 150, 154, 156, 157, 159, 160, 161, 162, 164], "python2": 151, "q": [25, 103, 104, 119, 123, 129, 149, 155], "q_deer": [70, 74, 79, 80], "qcrit": [25, 119, 123, 129], "qdialog": [75, 76, 81, 83], "qmainwindow": [70, 74, 79, 80], "qmutex": 73, "qobject": [31, 32, 68, 71, 73, 74, 78, 80, 88, 89], "qrunnabl": [67, 72, 73, 74, 77, 80, 82, 83, 87, 89], "qtcore": [31, 32, 67, 68, 71, 72, 73, 74, 77, 78, 80, 82, 83, 87, 88, 89], "qtloghandl": [31, 32], "qtwidget": [75, 76, 81, 83, 84, 85], "qualiti": [147, 159], "queue": [70, 74, 79, 80], "quick": [53, 54], "quick_deer_st": [72, 73], "quickdeer": [74, 119, 146], "quickdeer_result": [71, 73], "quickdeer_upd": [71, 73], "qunatum": [119, 145], "qwaitcondit": 73, "qwidget": [76, 84, 85], "r": [4, 16, 34, 62, 64, 93, 116, 118, 119, 126, 129, 145, 153], "r_limit": [45, 46, 47, 119], "radian": [35, 119, 127, 129], "rais": [29, 31, 32, 33, 34, 49, 56, 57, 58, 74, 89, 97, 119, 126, 129, 140, 143, 144], "raise_warn": [70, 74, 79, 80], "rang": [22, 90, 91, 98, 99, 149, 154, 156], "rate": [14, 25, 27, 119, 120, 123, 125, 129, 155], "ratio": [12, 16, 20, 22, 23, 36, 38, 39, 41, 62, 64, 117, 118, 119, 152], "raw": [31, 32], "re": [34, 101, 102, 119, 126, 129, 155, 157], "re_dim": [15, 119, 134, 143], "re_step": [15, 119, 134, 143], "reach": [149, 159], "read": [101, 102, 154, 160], "read_tabl": [74, 89], "readabl": 157, "readi": 16, "readili": 162, "real": [16, 93, 116, 118], "reason": [151, 152], "recent": [98, 99, 101, 102, 105, 112], "reciev": 154, "recomend": [98, 99], "recommen": 154, "recommend": [16, 151, 157, 160, 161, 168], "record": [30, 31, 32, 164], "recoveri": [40, 41, 43, 119, 149], "rectangular": [13, 15, 24, 28, 35, 37, 48, 49, 51, 90, 91, 98, 99, 119, 127, 129, 133, 134, 135, 136, 137, 139, 140, 141, 143, 149, 152, 159, 161], "rectpuls": [15, 35, 90, 91, 92, 93, 98, 99, 119, 127, 129, 134, 143, 152, 161], "red": 151, "reduc": [49, 119, 140, 143, 153, 161], "reduce_uuid": [49, 119, 140, 143], "reduced_seq": 93, "ref": [15, 119, 134, 143, 153, 161], "ref_puls": [16, 152, 153], "refer": [62, 64, 154], "refocus": [13, 15, 16, 36, 37, 39, 41, 53, 54, 116, 118, 119, 133, 134, 137, 143, 149, 153], "refocused2d": 16, "refocusedecho2d": [37, 119, 137, 143, 167], "refocusedecho2danalysi": [16, 36, 39, 41, 119, 167], "refocusedecho2dsequ": [37, 119, 137, 143, 167], "reformat": 97, "reforuml": 167, "refoucs": 149, "refous": 152, "refresh_d": [84, 85], "refresh_fieldsweep_after_fit": [70, 74, 79, 80], "refresh_relax": [70, 74, 79, 80], "refresh_relax_figur": [70, 74, 79, 80], "refresh_respro": [70, 74, 79, 80], "refresh_t2": [70, 74, 79, 80], "refresh_tim": 155, "region": [16, 149, 164], "regparam": 155, "regular": 159, "reim_color": 59, "rejectattr": [3, 8], "rejectionratio": 22, "rel": [30, 32, 97], "rel_posit": [96, 97], "relat": [32, 164], "relativecr": [30, 32], "relax": [15, 16, 36, 39, 51, 72, 73, 119, 132, 134, 141, 143, 146, 153, 167], "relax2d_result": [71, 73], "relax_process": 80, "relax_result": [71, 73], "relax_toolbar": [70, 74, 79, 80], "releas": [147, 151], "releat": 32, "reliabl": 167, "relib": 112, "remain": [15, 119, 134, 143, 153, 156], "rememb": 159, "remov": [16, 17, 119, 121, 129, 161], "remove_cross": 16, "remove_dynam": [33, 57, 58, 119], "remove_echo": 16, "render": [3, 8, 131, 132], "repet": [90, 91, 98, 99], "repetit": [13, 15, 24, 28, 37, 44, 48, 49, 51, 52, 53, 54, 119, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 152, 161], "repettit": [12, 38, 41, 119], "replacemod": [97, 106, 112], "report": [42, 119, 130, 146, 147, 154, 163, 164, 167], "reportlab": [42, 119, 130, 131, 132], "repositori": 151, "repres": [13, 14, 15, 17, 18, 24, 26, 27, 28, 29, 33, 34, 35, 37, 44, 49, 50, 51, 52, 56, 57, 58, 90, 91, 92, 93, 98, 99, 103, 104, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 157], "represent": [34, 119, 126, 129], "reptim": [13, 15, 24, 28, 37, 40, 41, 43, 44, 48, 49, 51, 52, 72, 73, 90, 91, 98, 99, 103, 104, 119, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 159, 161], "reptime_max": [44, 119, 138, 143], "reptime_scan_result": [71, 73], "reptimeanalysi": [40, 41, 43, 119], "reptimescan": [44, 119, 138, 143], "request": [153, 163], "requir": [15, 16, 53, 54, 101, 102, 105, 112, 119, 134, 143, 149, 151, 154, 157, 159, 160, 161, 164, 166], "requr": [45, 46, 47, 119], "rerun_exp": [101, 102], "resampl": 16, "resample_and_shift_vector": 16, "reset_bg_data": [90, 91, 92, 93], "reset_cur_exp": [90, 91, 92, 93, 98, 99], "resfield": 22, "reson": [16, 29, 34, 45, 46, 47, 48, 52, 56, 58, 72, 73, 119, 126, 129, 132, 139, 142, 143, 145, 153, 154, 155, 156, 159, 160, 162], "resonator_list": [103, 104], "resonator_profil": [46, 119, 152], "resonatorprofil": [16, 34, 49, 119, 126, 129, 140, 143], "resonatorprofileanalysi": [16, 45, 46, 47, 119, 132, 152], "resonatorprofilesequ": [48, 119, 139, 143, 152], "respect": [92, 93], "respons": [30, 32, 149, 151], "respro": [16, 119, 132, 146, 152], "respro_process": 80, "respro_result": [71, 73], "respro_toolbar": [70, 74, 79, 80], "restart": 164, "result": [16, 30, 32, 68, 71, 72, 73, 74, 78, 80, 88, 89, 132, 166], "result_sign": [82, 83], "retrospect": 164, "return": [12, 20, 22, 23, 30, 32, 33, 34, 36, 38, 39, 41, 45, 46, 47, 49, 53, 54, 57, 58, 61, 63, 64, 68, 71, 73, 74, 78, 80, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 104, 106, 108, 112, 116, 117, 118, 119, 126, 129, 131, 132, 140, 143, 144, 145, 153, 159, 161], "return_annot": [3, 6, 7], "rewrit": 97, "rf": 161, "rfc": [30, 32], "rhel": 151, "right": [53, 54, 119, 132, 154], "risen": 164, "risk": 151, "rml": [131, 132], "rng": 104, "roger": [62, 64], "roi": [16, 149, 152], "root": 151, "rotat": 22, "roughli": 164, "round_step": [119, 145], "row": [36, 39, 41, 74, 89, 119], "rowcount": [74, 89], "rpseq": 152, "rst": [2, 5, 8, 9], "run": [0, 61, 64, 67, 68, 71, 72, 73, 74, 77, 78, 80, 82, 83, 87, 88, 89, 95, 97, 98, 99, 101, 102, 105, 112, 117, 118, 149, 152, 154, 156, 159, 162, 164, 166], "run_2d_relax": [72, 73], "run_4p": [114, 118], "run_5p": [114, 118], "run_cp": [114, 118], "run_cp_relax": [72, 73], "run_deer": [72, 73], "run_exp": [101, 102, 105, 112], "run_fsweep": [72, 73], "run_gener": 97, "run_long_d": [72, 73], "run_quick_d": [72, 73], "run_reptime_opt": [72, 73], "run_respro": [72, 73], "run_t2_relax": [72, 73], "runadvancedautod": [70, 74, 79, 80], "runautod": [70, 74, 79, 80], "runfullyautod": [70, 74, 79, 80], "runner": [67, 72, 73, 74, 77, 80, 87, 89], "runtimeerror": [119, 144], "safe": 164, "safeti": 164, "same": [22, 153], "samepl": [53, 54], "sampl": [149, 153, 154, 155, 159, 166], "sampleconccombobox_opt": 80, "samplenam": [72, 73, 74, 89], "sampling_freq": 100, "sat": 112, "satisfi": 162, "satisifi": [29, 56, 58, 119], "satur": [40, 41, 43, 119], "save": [19, 33, 34, 49, 57, 58, 65, 66, 93, 96, 97, 98, 99, 101, 102, 105, 112, 119, 126, 129, 140, 143, 154, 164, 166], "save_data": [70, 74, 79, 80, 83], "save_fil": [119, 145], "save_log_to_fil": [75, 76], "save_path": 132, "save_pulsespel_def": [101, 102], "save_pulsespel_exp": [101, 102], "savefold": [29, 56, 58, 90, 91, 92, 93, 98, 99, 119], "savenam": [29, 56, 58, 72, 73, 90, 91, 92, 93, 98, 99, 103, 104, 119, 152, 159], "sbin": 151, "scale": [14, 17, 18, 25, 27, 34, 92, 93, 103, 104, 119, 120, 121, 122, 123, 125, 126, 129, 152, 157, 159], "scan": [13, 15, 24, 28, 37, 44, 48, 49, 51, 52, 53, 54, 100, 101, 102, 105, 112, 114, 118, 119, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 159], "scan_num": [101, 102, 105, 112], "scenario": 159, "schweiger": [34, 119, 126, 129, 145], "scientif": 154, "scipi": [93, 116, 118], "scipy_filter_dc": 100, "scope": 8, "screen": 154, "script": [53, 54, 93, 101, 102, 105, 112, 116, 118, 156, 160, 161, 164], "se": [15, 119, 134, 143, 153], "search": [16, 106, 108, 112], "secant": [27, 119, 125, 129, 149], "second": [12, 15, 38, 41, 46, 49, 63, 64, 119, 134, 140, 143, 153], "section": 154, "secur": 151, "see": [15, 119, 134, 143, 159], "seen": 159, "select": [15, 53, 54, 119, 134, 143, 154, 156, 159, 164], "select_pcyc": [15, 119, 134, 143, 152, 153], "select_reson": [70, 74, 79, 80], "selectattr": [3, 8], "self": [161, 168], "sensit": [149, 153], "sent": 164, "separ": [160, 161, 164], "seper": [117, 118, 152], "seq": [40, 41, 43, 91, 93, 97, 99, 119, 152], "seqtable_step": [49, 119, 140, 143], "sequec": 161, "sequenc": [12, 13, 15, 16, 19, 24, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 51, 52, 56, 57, 58, 65, 66, 74, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 119, 126, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 152, 153, 156, 157, 160, 162, 166], "sequr": 16, "seri": [45, 46, 47, 62, 64, 119, 149], "serial": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "seriou": 164, "session": [98, 99, 160], "set": [3, 8, 16, 31, 32, 53, 54, 85, 92, 93, 97, 101, 102, 105, 112, 149, 151, 153, 157, 162, 164, 167], "set_2d_max_tau": [72, 73], "set_acquisition_mod": [101, 102], "set_attenu": [101, 102], "set_config_fil": [101, 102], "set_eldor_freq": [101, 102], "set_field": [101, 102], "set_freq": [101, 102], "set_hidden_param": [101, 102], "set_mw_amp": [101, 102], "set_noise_mod": [72, 73], "set_param": [101, 102], "set_phas": [101, 102], "set_phasecycl": [101, 102], "set_pulsespel_def_filepath": [101, 102], "set_pulsespel_exp_filepath": [101, 102], "set_pulsespel_experi": [101, 102], "set_pulsespel_phase_cycl": [101, 102], "set_pulsespel_var": [101, 102, 105, 112], "set_replacemod": [101, 102], "set_snr_target": [53, 54], "set_snr_threshold": [53, 54], "set_spectrometer_connected_light": [70, 74, 79, 80], "set_sweep_width": [101, 102], "set_time_target": [53, 54], "set_video_bandwidth": [101, 102], "set_video_gain": [101, 102], "setup": [32, 67, 72, 73, 74, 77, 80, 87, 89, 90, 91, 92, 93, 117, 118, 149, 159, 164], "setup_flag": [90, 91, 92, 93], "setup_input": [84, 85], "setup_log": [32, 164], "seven": [15, 119, 134, 143, 156], "seven_puls": [15, 119, 134, 143, 153], "shade_color": 59, "shape": [50, 119, 128, 129, 131, 132, 149, 153, 162], "share": 151, "shell": 150, "shift": [16, 167], "shift_detfreq_to_zero": [49, 119, 140, 143], "shift_pulse_freq": 16, "short": [15, 119, 134, 143, 153, 160], "short_nam": [3, 6, 7, 8, 10], "shortest": 149, "shot": [12, 13, 15, 24, 28, 36, 37, 38, 39, 41, 44, 48, 49, 51, 52, 53, 54, 72, 73, 90, 91, 98, 99, 103, 104, 119, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 152, 153, 159, 161], "shotreptim": [106, 112], "shotsploop": [106, 112], "should": [16, 29, 53, 54, 56, 58, 60, 61, 62, 63, 64, 97, 115, 116, 117, 118, 119, 144, 149, 151, 152, 154, 160, 164, 166], "shouldn": 164, "show": [3, 4, 8, 16, 152], "shrt": [53, 54], "side": [16, 154, 161], "sign": [34, 119, 126, 129, 161], "signal": [12, 16, 31, 32, 36, 38, 39, 41, 53, 54, 62, 64, 67, 68, 71, 72, 73, 74, 77, 78, 80, 82, 83, 87, 88, 89, 119, 149, 153, 159], "signalphas": [108, 112], "signific": [157, 160], "similar": 160, "simpl": [62, 64, 154, 155, 156, 157, 159, 161], "simplest": 161, "simpli": [159, 161], "simplifi": 156, "simplist": 161, "simul": [15, 34, 119, 126, 129, 134, 143, 145], "simultan": 157, "sinc": [50, 63, 64, 119, 128, 129, 157, 161, 164], "sincpuls": [50, 119, 128, 129], "singl": [45, 46, 47, 90, 91, 98, 99, 100, 119, 153, 160, 161, 162, 166], "site": 156, "size": [12, 22, 36, 38, 39, 41, 107, 112, 119, 131, 132, 149], "slack": 164, "sleep": 152, "slice": [53, 54], "slightli": [157, 166], "small": [15, 119, 134, 143, 153], "smallest": [49, 119, 140, 143], "smith": [62, 64], "smooth": [20, 22, 23, 36, 39, 41, 119], "snr": [19, 41, 53, 54, 62, 64, 65, 66, 74, 89, 103, 104, 119, 149, 153, 159], "snr_normal": [53, 54], "snr_target": [12, 20, 22, 23, 36, 38, 39, 41, 53, 54, 62, 64, 119, 152], "snr_threshold": [53, 54], "snrcriteria": [62, 64, 159], "snrpshot": [53, 54], "so": [31, 32, 34, 45, 46, 47, 53, 54, 119, 126, 129, 149, 152, 157, 159, 161, 164], "softwar": [34, 62, 64, 100, 119, 126, 129, 145, 147, 151, 156, 164], "solv": 159, "some": [53, 54, 98, 99, 149, 151, 164], "someth": 164, "somewhat": 154, "soon": [17, 119, 121, 129, 158, 159, 163], "sop": [34, 119, 126, 129, 145], "sourc": [0, 16, 22, 30, 32, 41, 46, 54, 55, 58, 59, 64, 66, 69, 73, 74, 76, 80, 83, 85, 89, 91, 93, 97, 99, 100, 102, 104, 112, 118, 119, 129, 132, 143, 144, 145, 151, 157, 160], "space": [34, 53, 54, 119, 126, 129], "spec_config": [90, 91, 92, 93], "special": [30, 32, 160], "specif": [29, 31, 32, 56, 58, 63, 64, 98, 99, 101, 102, 105, 112, 119, 151, 154, 156, 157, 159, 160, 161, 162, 166], "specifi": [13, 24, 28, 30, 31, 32, 34, 37, 48, 51, 53, 54, 63, 64, 119, 126, 129, 133, 135, 136, 137, 139, 141, 143, 149, 153, 155, 159, 166], "spectra": [34, 119, 126, 129, 145], "spectral": [34, 119, 126, 129, 145], "spectromet": [18, 29, 33, 56, 57, 58, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 112, 115, 118, 119, 122, 129, 147, 151, 152, 155, 156, 157, 159, 160, 161, 162], "spectrometerinfo": 132, "spectrometr": [116, 117, 118], "spectrometrist": 161, "spectromt": 112, "spectromterinterfac": [70, 74, 79, 80], "spectroscop": [62, 64], "spectroscopi": [34, 119, 126, 129, 153], "spectrum": [22, 149], "speed": [61, 64, 98, 99, 152, 153], "speedup": [103, 104], "spel": [97, 101, 102], "spell": [101, 102, 105, 112], "spfu": [119, 129], "spfutun": 93, "sphere": 151, "sphinx": 0, "sphinx_copybutton": 0, "sphinx_toolbox": 0, "spin": [21, 22, 119, 145, 152, 153, 156], "spindler": 153, "spinsystem": [21, 22], "spintyp": [20, 22, 23, 119], "spinx": 0, "spline": [20, 22, 23, 119], "split": 160, "splitlin": 4, "srt": [114, 115, 116, 117, 118], "ss": 152, "ssl": 151, "stabil": 160, "stabl": [53, 54, 101, 102], "stage": [34, 119, 126, 129], "stand": 164, "standard": [53, 54, 93, 116, 118, 159, 161, 164], "standardis": 154, "start": [14, 17, 25, 27, 34, 63, 64, 90, 91, 92, 93, 97, 98, 99, 101, 102, 117, 118, 119, 120, 121, 123, 125, 126, 129, 149, 152, 160], "start_mode_tun": [81, 83], "start_tim": [103, 104], "starttim": [70, 74, 79, 80], "startup": [30, 32], "state": [49, 70, 74, 79, 80, 101, 102, 103, 104, 119, 140, 143, 164], "static": [15, 33, 34, 57, 58, 119, 126, 129, 134, 143, 152, 161], "statment": 161, "statu": [71, 73, 154, 166], "std": [16, 53, 54], "stefan": [34, 119, 126, 129, 145], "step": [12, 15, 30, 32, 36, 38, 39, 41, 44, 51, 53, 54, 95, 97, 101, 102, 105, 112, 117, 118, 119, 134, 138, 141, 143, 145, 151, 152, 153, 156, 161], "step_hash": [96, 97], "step_paramet": 93, "stepper": [101, 102, 118], "still": [101, 102, 105, 112, 147, 154, 156, 159, 160, 162], "stoehr": [62, 64], "stoher": [62, 64], "stoll": [34, 119, 126, 129, 145], "stop": [72, 73, 98, 99, 101, 102, 105, 112, 164], "stop_exp": [101, 102, 105, 112], "stop_flag": [72, 73, 99], "stope": 164, "store": [90, 91, 92, 93, 98, 99], "store_loc": [70, 74, 79, 80, 89], "stori": [42, 119, 130, 132], "str": [12, 15, 16, 20, 22, 23, 29, 30, 32, 33, 34, 36, 38, 39, 41, 49, 52, 53, 54, 56, 57, 58, 61, 62, 63, 64, 74, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 112, 116, 118, 119, 126, 129, 132, 134, 140, 142, 143, 144, 145], "str_to_list_typ": [74, 89], "streasm": [131, 132], "string": [4, 16, 30, 32, 53, 54, 74, 89, 97, 98, 99, 106, 108, 112], "strongli": 160, "structur": 164, "stuck": 151, "style": [30, 32, 98, 99, 100, 132, 159, 167], "sub": 160, "subclass": [31, 32, 60, 61, 62, 63, 64, 160], "sublogg": 164, "submit": 163, "submodul": 8, "subpackag": 8, "subplot": [53, 54], "success": 166, "sudo": 151, "suggest": [151, 164], "suit": 154, "sum": [15, 34, 45, 46, 47, 119, 126, 129, 134, 143], "summari": [8, 119, 132, 154], "superimpos": [41, 119], "suppli": [30, 32, 67, 72, 73, 74, 77, 80, 87, 89, 97], "support": [18, 68, 71, 73, 74, 78, 80, 88, 89, 119, 122, 129, 151, 153, 156, 159, 160, 162, 167], "svd": [36, 39, 41, 119], "svg": [131, 132], "svgflowabl": [131, 132], "sweep": [14, 16, 20, 22, 23, 24, 25, 27, 48, 90, 91, 92, 93, 101, 102, 105, 112, 117, 118, 119, 120, 123, 125, 129, 132, 135, 139, 143, 149, 159, 162], "sweeprat": [14, 25, 27, 119, 120, 123, 125, 129], "sweepspexp": [106, 112], "sweepwidth": [106, 112], "swept": [14, 25, 27, 119, 120, 123, 125, 129, 153], "switch": 164, "symetr": [18, 119, 122, 129], "sypport": 16, "system": [22, 30, 32, 62, 64, 149, 151, 156, 162, 164], "t": [14, 16, 17, 18, 25, 27, 34, 35, 45, 46, 47, 53, 54, 62, 64, 100, 104, 107, 112, 119, 120, 121, 122, 123, 125, 126, 127, 129, 152, 154, 161, 164], "t2": [51, 119, 141, 143], "t2_process": 80, "t2_result": [71, 73], "t2relaxationsequ": [51, 119, 141, 143], "tab": 154, "tabl": [15, 34, 42, 74, 89, 98, 99, 101, 102, 119, 126, 129, 130, 132, 134, 143, 153, 161], "take": [31, 32, 34, 98, 99, 101, 102, 105, 112, 119, 126, 129, 151, 152, 161, 166], "taken": [12, 36, 38, 39, 41, 119], "tar": 151, "target": [12, 16, 36, 38, 39, 41, 53, 54, 93, 115, 116, 118, 119], "target_mnr": 16, "target_shrt": [12, 38, 41, 119, 152], "target_step": [12, 36, 38, 39, 41, 119, 152], "target_tim": [12, 16, 36, 38, 39, 41, 119, 152], "tau": [13, 15, 37, 51, 114, 117, 118, 119, 133, 134, 137, 141, 143, 152, 153], "tau1": [15, 16, 36, 37, 39, 41, 48, 53, 54, 61, 64, 114, 115, 116, 118, 119, 134, 137, 139, 143, 152, 153], "tau1u": [15, 119, 134, 143], "tau2": [15, 16, 36, 37, 39, 41, 48, 53, 54, 61, 64, 114, 115, 116, 118, 119, 134, 137, 139, 143, 152, 153], "tau3": [15, 16, 61, 64, 119, 134, 143, 152, 153], "tau4": [15, 119, 134, 143, 153], "tau_": 149, "tau_1": 149, "tau_2": 149, "tau_init": [37, 119, 137, 143], "tau_valu": 93, "tck_": 46, "tcl": 151, "team": [151, 160], "techniqu": 156, "teleport": 164, "temp_dir": [90, 91, 92, 93], "temperatur": [154, 164], "templat": [30, 32, 42, 119, 130, 132], "term": [151, 161], "termin": [29, 56, 58, 60, 61, 62, 63, 64, 90, 91, 92, 93, 98, 99, 103, 104, 119, 159], "terminate_at": [29, 56, 58, 119, 152, 159], "test": [29, 56, 58, 60, 62, 63, 64, 119, 147, 151, 159], "test_if_mpfu_compat": [91, 93], "test_interv": [29, 56, 58, 72, 73, 119, 159], "test_main": [74, 119, 146], "test_puls": [90, 91, 161], "test_snr": [74, 89], "test_tp": 93, "text": [16, 30, 32, 42, 119, 130, 132, 154], "textual": [30, 32], "than": [12, 16, 38, 41, 74, 89, 97, 98, 99, 115, 116, 117, 118, 119, 149, 153, 159, 164], "thei": [30, 32, 45, 46, 47, 53, 54, 119, 149, 153, 159, 161, 162], "them": [15, 34, 119, 126, 129, 134, 143, 153, 160], "theme": 0, "thi": [1, 16, 17, 18, 28, 29, 31, 32, 33, 34, 44, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 67, 72, 73, 74, 77, 80, 87, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 112, 115, 116, 117, 118, 119, 121, 122, 126, 128, 129, 136, 138, 140, 141, 142, 143, 145, 146, 147, 149, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 166, 168], "think": [152, 161], "third": [153, 157], "thompson": [62, 64], "thre": [71, 72, 73], "thread": [30, 32, 67, 68, 72, 73, 74, 77, 78, 80, 87, 88, 89, 90, 91, 92, 93], "threadnam": [30, 32], "threadpool": [70, 74, 79, 80, 81, 83, 84, 85], "three": [152, 153, 155, 163], "three_puls": [15, 119, 134, 143], "threshold": [22, 41, 45, 46, 47, 53, 54, 119, 152, 159], "through": [53, 54, 67, 72, 73, 74, 77, 80, 87, 89, 97, 101, 102, 153, 156, 160], "thrown": [53, 54], "ti": 151, "time": [12, 13, 14, 15, 16, 17, 18, 24, 25, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 41, 44, 48, 49, 51, 52, 53, 54, 63, 64, 70, 74, 79, 80, 90, 91, 97, 98, 99, 119, 120, 121, 122, 123, 125, 126, 127, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 152, 153, 154, 157, 159, 160, 161, 164, 166], "time_target": [53, 54], "timecriteria": [63, 64], "timei": [53, 54], "timeout": [70, 71, 73, 74, 79, 80], "timestamp": [29, 56, 58, 74, 89, 90, 91, 92, 93, 98, 99, 103, 104, 119], "timex": [53, 54], "titl": [8, 42, 53, 54, 101, 102, 110, 111, 112, 119, 130, 132], "titlesonli": 8, "tk": 151, "tmin": 85, "tmp": 164, "toctre": 8, "todai": 164, "togeth": [153, 159], "tol": [93, 116, 118], "toler": [93, 116, 118], "too": [98, 99, 164], "tool": [70, 74, 77, 78, 79, 80, 98, 99, 119, 146, 155], "toolbar": [84, 85], "toolbox": [156, 162], "top": [53, 54, 119, 132, 154], "total": [12, 13, 15, 16, 18, 36, 37, 38, 39, 41, 53, 54, 119, 122, 129, 133, 134, 137, 143, 152, 153], "total_shot": [53, 54], "tp": [14, 15, 17, 18, 25, 26, 27, 34, 35, 50, 90, 91, 92, 93, 98, 99, 103, 104, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 143, 152, 159, 161], "trace": [15, 45, 46, 47, 119, 134, 143], "trace_length": [53, 54], "traceback": [68, 71, 73, 74, 78, 80, 88, 89], "tradit": [156, 162], "train": 161, "transfer": [34, 119, 126, 129, 162], "transient": [101, 102], "transpose_dict_of_list": [119, 145], "transpose_list_of_dict": [119, 145], "trival": 159, "trivial": 159, "true": [4, 12, 16, 20, 22, 23, 29, 30, 32, 34, 36, 38, 39, 41, 49, 56, 58, 72, 73, 74, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 114, 118, 119, 126, 129, 140, 143, 145, 152, 155, 157], "truli": 159, "truncat": 4, "try": [101, 102, 163], "tun": [90, 91, 98, 99, 116, 118, 162], "tune": [44, 90, 91, 92, 93, 98, 99, 115, 116, 117, 118, 119, 138, 143, 152, 156], "tune_nut": [90, 91], "tune_phas": [93, 116, 118], "tune_pow": [93, 116, 118], "tune_puls": [72, 73, 90, 91, 92, 93, 98, 99, 103, 104, 152, 159], "tune_rect": 159, "tune_rectpuls": [90, 91, 92, 93, 98, 99, 103, 104, 152], "tupl": [16, 45, 46, 47, 53, 54, 63, 64, 68, 71, 73, 74, 78, 80, 88, 89, 97, 119], "turn": [119, 145, 151, 166], "two": [16, 32, 33, 34, 45, 46, 47, 57, 58, 63, 64, 97, 119, 126, 129, 153, 157, 160, 161, 164, 168], "twod_experi": [119, 146], "twodexperimentanalysi": [53, 54], "twt": [52, 97, 119, 142, 143, 160, 162], "twtprofilesequ": [52, 119, 142, 143], "txt": [53, 54], "type": [3, 4, 8, 10, 12, 15, 16, 19, 22, 36, 38, 39, 41, 58, 65, 66, 74, 89, 91, 93, 97, 99, 100, 102, 104, 106, 108, 109, 112, 116, 118, 119, 132, 134, 143, 144, 145, 151, 152, 155, 157, 160, 161, 166], "typeerror": [33, 34, 49, 57, 58, 119, 126, 129, 140, 143], "typic": [30, 32], "u": [12, 13, 15, 16, 24, 28, 33, 36, 37, 38, 39, 41, 44, 48, 49, 51, 52, 53, 54, 57, 58, 90, 91, 97, 98, 99, 119, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 158], "ui": [81, 83], "uncert": [74, 89], "uncertainti": 164, "unchang": [92, 93], "unclear": 147, "underlin": 11, "uniqu": 93, "unique_parvar": [96, 97], "unit": [33, 57, 58, 119, 152, 156, 162], "unitless": [33, 57, 58, 119, 155], "unix": 164, "unknown": 149, "unless": [149, 164], "unlik": 161, "unnecessari": 164, "until": [101, 102, 149, 151], "unwant": 161, "up": [67, 70, 72, 73, 74, 77, 79, 80, 87, 89, 153, 161, 162, 164, 167], "updat": [53, 54, 151, 166, 167], "update_analysis_t": [84, 85], "update_deer_set": [70, 74, 79, 80], "update_deerset": [72, 73], "update_dip": [81, 83], "update_fieldsweep": [70, 74, 79, 80], "update_figur": [81, 83, 84, 85], "update_fit_result": [84, 85], "update_func": [61, 64, 84, 85], "update_gyro": [72, 73], "update_inputs_from_dataset": [84, 85], "update_lo": [72, 73], "update_log_text": [75, 76], "update_longd": [70, 74, 79, 80], "update_optimise_pulses_figur": [70, 74, 79, 80], "update_pulsespel": [90, 91, 92, 93], "update_quickd": [70, 74, 79, 80], "update_relax": [70, 74, 79, 80], "update_relax2d": [70, 74, 79, 80], "update_reptim": [70, 72, 73, 74, 79, 80], "update_respro": [70, 74, 79, 80], "update_t2": [70, 74, 79, 80], "updater": [72, 73], "upgrad": [0, 157], "upon": [16, 29, 34, 56, 58, 100, 119, 126, 129, 160], "uprog": 97, "us": [0, 13, 15, 16, 20, 22, 23, 24, 28, 30, 31, 32, 33, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 53, 54, 57, 58, 60, 61, 62, 63, 64, 90, 91, 93, 98, 99, 100, 101, 102, 105, 112, 115, 116, 117, 118, 119, 133, 134, 135, 136, 137, 138, 139, 141, 143, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 166, 168], "useful": [53, 54], "user": [30, 32, 53, 54, 147, 152, 154, 155, 156, 159, 162, 164, 166, 167, 168], "user_input": [72, 73], "userinput": [70, 74, 79, 80, 132], "usestim": [30, 32], "usr": 151, "usual": [30, 32], "utf": 164, "util": [119, 146], "uuid": [34, 119, 126, 129], "uwb_ev": 100, "uwb_eval_match": 100, "uwb_load": 100, "v": [107, 112], "val": [101, 102, 109, 112], "val_in_n": [104, 119, 145], "val_in_u": [16, 104, 119, 145], "valid": [30, 32], "valu": [4, 15, 16, 29, 30, 32, 33, 34, 53, 54, 56, 57, 58, 62, 64, 68, 71, 73, 74, 78, 80, 88, 89, 90, 91, 92, 93, 98, 99, 101, 102, 103, 104, 105, 109, 112, 116, 118, 119, 126, 129, 134, 143, 145, 152, 159], "value_at_po": [53, 54], "value_at_tim": [53, 54], "valueerror": [97, 119, 144], "var": 97, "var_hash": [96, 97], "vari": [33, 53, 54, 57, 58, 119, 149], "variabl": [34, 53, 54, 93, 97, 101, 102, 105, 112, 119, 126, 129, 161], "variant": 156, "varieti": [156, 162], "vector": 16, "verbos": [16, 29, 46, 56, 58, 61, 62, 64, 98, 99, 100, 119, 152], "veri": [53, 54, 147, 157], "version": [20, 22, 23, 30, 31, 32, 100, 119, 144, 150, 151, 152, 157], "vertic": 16, "vexp": 16, "via": 147, "video": [101, 102, 155], "view": 161, "vim": 16, "virtual": [33, 57, 58, 119], "visible_attribut": [3, 8], "visible_children": 8, "visible_class": [3, 8], "visible_funct": 8, "visible_method": 3, "visible_properti": 3, "visible_submodul": 8, "visible_subpackag": 8, "vol": [62, 64], "voltag": 157, "vpsave": [110, 111, 112], "vre": 16, "w": [62, 64, 155], "wa": [30, 32, 53, 54, 151, 153, 162, 164], "wai": [150, 151, 154, 157, 159, 161, 163, 168], "wait": [72, 73, 101, 102], "wait_condit": [84, 85], "waitcondit": [70, 74, 79, 80], "walk": [156, 162], "want": [30, 32, 151, 152, 159, 161], "warn": [17, 30, 32, 53, 54, 119, 121, 129, 164], "waveform": 16, "waveform_precis": 16, "we": [149, 150, 151, 152, 157, 159, 160, 161, 163, 164, 166], "wee": [53, 54], "week": 164, "weekli": 164, "well": [16, 147, 152, 154, 161], "wget": 151, "what": [16, 149, 150, 152, 160, 164], "whatev": [31, 32], "when": [30, 32, 149, 150, 152, 156, 157, 159, 160, 161, 164], "where": [30, 32, 51, 119, 141, 143, 149, 153, 159], "which": [15, 16, 30, 31, 32, 45, 46, 47, 49, 52, 53, 54, 62, 64, 119, 134, 140, 142, 143, 149, 151, 153, 154, 159, 160, 161], "while": 152, "whilst": [32, 101, 102, 105, 112, 153, 156, 157, 159, 162], "white": [62, 64], "whole": 159, "whose": 16, "wide": [32, 154, 156], "wideband": 161, "wider": 161, "width": [4, 24, 26, 48, 100, 101, 102, 119, 124, 129, 131, 132, 135, 139, 143, 152], "win": 100, "window": [50, 69, 119, 128, 129], "wish": 154, "within": [152, 154], "without": [16, 112, 161], "work": [15, 62, 64, 98, 99, 101, 102, 105, 112, 119, 134, 143, 147, 149, 159, 160, 162, 166], "worker": [67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 80, 87, 88, 89], "workersign": [68, 74, 78, 80, 88, 89], "world": 112, "would": [15, 119, 134, 143, 153, 159], "wrap": [67, 72, 73, 74, 77, 80, 87, 89, 131, 132], "write": [97, 156, 157, 159, 160, 161, 162], "write_pulsespel_fil": 97, "writen": 157, "written": [156, 162, 164], "wrong": [97, 164], "x": [13, 15, 34, 37, 46, 53, 54, 93, 103, 104, 116, 118, 119, 126, 129, 133, 134, 137, 143, 145, 152, 153, 155, 157], "xarrai": [20, 22, 23, 45, 46, 47, 119, 144], "xarray_obj": [19, 65, 66, 119], "xaxi": 22, "xepr": [97, 101, 102, 112, 118, 157, 160], "xepr_experi": [113, 119, 146], "xepr_inst": [101, 102], "xepr_path": 102, "xepr_sav": [101, 102], "xeprapi": [151, 156, 157, 160, 162], "xeprapi_link": [105, 112, 113, 119, 146], "xeprapilink": [101, 102, 105, 112, 115, 117, 118], "xeprcmd": [101, 102, 110, 111, 112], "xeprdataset": [110, 112], "xeprexperi": [110, 112], "xp": [15, 119, 134, 143, 153], "xr": [41, 45, 46, 47, 119], "xspecr": [106, 112], "xthe": 164, "xtol": 155, "xvf": 151, "xvii": [62, 64], "y": [15, 22, 34, 37, 53, 54, 93, 116, 118, 119, 126, 129, 134, 137, 143, 145, 151, 152, 153, 155, 157], "yaml": [90, 91, 92, 93, 155, 157, 166], "year": 153, "yet": [147, 157], "yield": [30, 32], "you": [15, 30, 32, 119, 134, 143, 150, 151, 153, 154, 157, 158, 159, 160, 161, 163, 164, 166], "your": [30, 32, 152, 154, 157, 160, 163], "yum": 151, "z": [34, 119, 126, 129, 145], "zero": [34, 45, 46, 47, 49, 52, 119, 126, 129, 140, 142, 143, 161], "zlib": 151, "zsh": 150, "z\u00fcrich": [98, 99], "\u03c0": 152}, "titles": ["Building the documentation", "API Reference", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.DEER_analysis</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.FieldSweep</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.Logging</span></code>", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.Relaxation</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.ResPro</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.TwoD_Experiment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer._version</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.colors</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.criteria</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.dataset</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.__main__</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.autoDEER_worker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.log</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.main</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.modetune</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.quickdeer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.test_main</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.tools</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_AWG</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_MPFU</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_tools</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.ETH_awg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.ETH_awg_load</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.XeprAPI_link</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.dummy</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.dummy_xepr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.xepr_experiments</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.pulses</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.reporter</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.sequences</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.tools</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.utils</span></code>", "API Reference", "Welcome to autoDEER!", "API doc", "The Automated Algorithum", "Installation", "Installing Python", "Jupyter Interface", "DEER Variants", "GUI Interface", "Configuration File", "autoDEER", "Bruker Interface", "Creating a custom interface", "Getting Started", "Interfaces", "Creating a Custom Sequence", "autoEPR", "Contributing Guide", "Logging:", "Developing", "autoDEER GUI", "Release Notes", "Tutorial"], "titleterms": {"": 147, "0": 167, "01": 167, "04": 167, "1": [149, 159, 166], "2": [149, 159, 166], "2024": 167, "3": [149, 159, 166], "4": [149, 153, 159, 166], "5": [149, 153, 159], "6": 149, "7": [149, 151, 153, 167], "8": [149, 167], "The": [149, 151], "__main__": 69, "_version": 55, "advanc": [154, 166], "after": 154, "algorithum": 149, "an": [154, 166], "analysi": [148, 159, 166], "api": [1, 146, 148], "attribut": [16, 41, 64, 76, 80, 83, 85, 93, 97, 99, 102, 104, 112, 118, 119, 132, 144], "autod": [16, 22, 32, 41, 46, 54, 55, 58, 59, 64, 66, 69, 73, 74, 76, 80, 83, 85, 86, 89, 91, 93, 97, 99, 100, 102, 104, 112, 113, 118, 119, 129, 132, 143, 144, 145, 147, 156, 166], "autodeer_work": 73, "autoepr": 162, "autom": 149, "automat": 154, "bruker": [157, 160], "bruker_awg": 91, "bruker_mpfu": 93, "bruker_tool": 97, "brukermpfu": 155, "build": 0, "call": 164, "cento": 151, "chirp": 161, "class": [22, 32, 41, 46, 54, 58, 64, 66, 73, 74, 76, 80, 83, 85, 89, 91, 93, 97, 99, 102, 104, 112, 118, 119, 129, 132, 143, 148], "color": 59, "configur": [155, 157], "connect": [154, 166], "content": [16, 22, 32, 41, 46, 54, 55, 58, 59, 64, 66, 69, 73, 74, 76, 80, 83, 85, 89, 91, 93, 97, 99, 100, 102, 104, 112, 118, 119, 129, 132, 143, 144, 145], "contribut": 163, "creat": [158, 161], "criteria": [64, 148], "current": 161, "custom": [158, 160, 161], "cycl": 153, "data": 159, "dataset": 66, "deer": [149, 152, 153], "deer_analysi": 16, "defin": 159, "develop": 165, "doc": [0, 148], "document": 0, "dummi": 104, "dummy_xepr": 112, "dure": 154, "eth_awg": 99, "eth_awg_load": 100, "ethawg": 155, "exampl": 155, "experi": [149, 154, 166], "explain": 149, "faq": 151, "featur": [147, 162], "field": 152, "fieldsweep": [22, 149], "file": [155, 157], "final": 149, "first": 161, "from": 150, "fulli": 154, "function": [16, 22, 32, 41, 46, 66, 74, 80, 83, 85, 89, 91, 93, 97, 99, 100, 104, 118, 119, 129, 132, 144, 145, 148], "get": [157, 159], "gui": [69, 73, 74, 76, 80, 83, 85, 86, 89, 154, 166], "guid": 163, "hardwar": [91, 93, 97, 99, 100, 102, 104, 112, 113, 118], "i": [148, 161], "includ": 162, "initi": 149, "input": 149, "instal": [0, 150, 151], "interfac": [148, 152, 154, 157, 158, 160], "jupyt": 152, "kei": 147, "lab": 166, "level": 164, "limit": 149, "log": [32, 76, 164], "logger": 164, "main": [80, 148], "messag": 164, "method": 16, "mode": [154, 166], "modetun": 83, "modul": [16, 22, 32, 41, 46, 54, 55, 58, 59, 64, 66, 69, 73, 76, 80, 83, 85, 89, 91, 93, 97, 99, 100, 102, 104, 112, 118, 129, 132, 143, 144, 145, 148], "ndeer": 153, "next": 159, "note": 167, "o": 148, "optimis": [148, 149], "overview": 155, "packag": [0, 74, 119], "paramet": 149, "pdf": 166, "phase": 153, "plot": 148, "post": 164, "print": 166, "profil": [149, 152], "puls": [129, 148, 153, 161], "python": 151, "quickdeer": 85, "recommend": 154, "refer": [1, 34, 119, 126, 129, 145, 146, 153], "relax": [41, 149], "releas": 167, "report": [132, 166], "reson": [149, 152], "respro": 46, "return": 16, "rollov": 164, "scan": 149, "script": 159, "select": 153, "sequenc": [143, 148, 149, 159, 161], "set": 159, "setup": 152, "shape": 161, "solut": 151, "sourc": 150, "spectromet": [154, 166], "srt": 149, "start": [154, 157, 159, 164, 166], "step": [149, 159], "stop": 159, "studi": 149, "submodul": [74, 113, 119], "subpackag": 119, "support": 161, "sweep": 152, "tba": 167, "termin": 148, "test_main": 86, "tool": [89, 144], "tune": 159, "tutori": 168, "twod_experi": 54, "up": 159, "us": 161, "user": 149, "util": [145, 148], "variant": 153, "version": [153, 167], "view": 166, "welcom": 147, "what": 161, "window": 151, "xepr_experi": 118, "xeprapi_link": 102, "your": [159, 161]}})