Search.setIndex({"alltitles": {"1. Connecting to the spectrometer": [[253, "connecting-to-the-spectrometer"]], "1. Defining the sequence": [[246, "defining-the-sequence"]], "1. User Inputs": [[236, "user-inputs"]], "2. Fieldsweep": [[236, "fieldsweep"]], "2. Starting an autoDEER Experiment": [[253, "starting-an-autodeer-experiment"]], "2. Tuning for the sequence": [[246, "tuning-for-the-sequence"]], "3. SRT Scan": [[236, "srt-scan"]], "3. Starting the sequence": [[246, "starting-the-sequence"]], "3. Viewing the analysis": [[253, "viewing-the-analysis"]], "4-pulse DEER": [[240, "pulse-deer"]], "4. Printing a PDF lab-report": [[253, "printing-a-pdf-lab-report"]], "4. Resonator Profile": [[236, "resonator-profile"]], "4. Stopping the sequence": [[246, "stopping-the-sequence"]], "5-pulse DEER": [[240, "id1"]], "5. Data analysis": [[246, "data-analysis"]], "5. Relaxation Studies": [[236, "relaxation-studies"]], "6. Optimising DEER Sequence Parameters": [[236, "optimising-deer-sequence-parameters"]], "7-pulse DEER": [[240, "id2"]], "7. Initial DEER Experiment": [[236, "initial-deer-experiment"]], "8. Final DEER Experiment": [[236, "final-deer-experiment"]], "API Reference": [[1, "api-reference"], [233, "api-reference"]], "API doc": [[235, "api-doc"]], "Advanced Mode": [[241, "advanced-mode"], [253, "advanced-mode"]], "After an Experiment": [[241, "after-an-experiment"]], "Analysis Modules": [[235, "analysis-modules"]], "Attributes": [[18, "attributes"], [44, "attributes"], [69, "attributes"], [106, "attributes"], [113, "attributes"], [117, "attributes"], [139, "attributes"], [147, "attributes"], [160, "attributes"], [165, "attributes"], [185, "attributes"], [194, "attributes"], [200, "attributes"], [201, "attributes"], [214, "attributes"], [231, "attributes"]], "Bruker Interface": [[244, "bruker-interface"], [247, "bruker-interface"]], "BrukerMPFU": [[242, "brukermpfu"]], "Building docs": [[0, "building-docs"]], "Building the documentation": [[0, "building-the-documentation"]], "Calling a Logger": [[251, "calling-a-logger"]], "Chirped pulses": [[248, "chirped-pulses"]], "Classes": [[25, "classes"], [34, "classes"], [44, "classes"], [49, "classes"], [59, "classes"], [63, "classes"], [69, "classes"], [76, "classes"], [103, "classes"], [104, "classes"], [106, "classes"], [113, "classes"], [117, "classes"], [121, "classes"], [126, "classes"], [139, "classes"], [147, "classes"], [160, "classes"], [165, "classes"], [185, "classes"], [194, "classes"], [200, "classes"], [201, "classes"], [211, "classes"], [214, "classes"], [230, "classes"], [235, "classes"]], "Configuration File": [[242, "configuration-file"]], "Configuration file": [[244, "configuration-file"]], "Connecting to a spectrometer": [[241, "connecting-to-a-spectrometer"]], "Contributing Guide": [[250, "contributing-guide"]], "Creating a Custom Sequence": [[248, "creating-a-custom-sequence"]], "Creating a custom interface": [[245, "creating-a-custom-interface"]], "Creating your first sequence": [[248, "creating-your-first-sequence"]], "Custom Interface": [[247, "custom-interface"]], "Custom pulses": [[248, "custom-pulses"]], "DEER": [[239, "deer"]], "DEER Variants": [[240, "deer-variants"]], "DEER versions": [[240, "deer-versions"]], "Developing": [[252, "developing"]], "During an Experiment": [[241, "during-an-experiment"]], "ETHAWG": [[242, "ethawg"]], "Examples": [[242, "examples"]], "FAQs": [[238, "faqs"]], "Features included in autoEPR:": [[249, "features-included-in-autoepr"]], "Field Sweep": [[239, "field-sweep"]], "Fully automatic experiment (recommended)": [[241, "fully-automatic-experiment-recommended"]], "Functions": [[18, "functions"], [25, "functions"], [34, "functions"], [44, "functions"], [49, "functions"], [76, "functions"], [104, "functions"], [113, "functions"], [117, "functions"], [121, "functions"], [126, "functions"], [139, "functions"], [147, "functions"], [160, "functions"], [163, "functions"], [185, "functions"], [200, "functions"], [201, "functions"], [211, "functions"], [214, "functions"], [231, "functions"], [232, "functions"], [235, "functions"]], "GUI Interface": [[241, "gui-interface"]], "Getting Started": [[246, "getting-started"]], "Getting started": [[244, "getting-started"]], "I/O": [[235, "i-o"]], "Installation": [[237, "installation"]], "Installing Python": [[238, "installing-python"]], "Installing Python CentOS 7": [[238, "installing-python-centos-7"]], "Installing Python Windows": [[238, "installing-python-windows"]], "Installing from source": [[237, "installing-from-source"]], "Installing packages": [[0, "installing-packages"]], "Interfaces": [[235, "interfaces"], [247, "interfaces"]], "Jupyter Interface": [[239, "jupyter-interface"]], "Limitations": [[236, "limitations"]], "Logging Levels": [[251, "logging-levels"]], "Logging:": [[251, "logging"]], "Logs": [[251, "logs"]], "Main Classes": [[235, "main-classes"]], "Methods": [[18, "methods"], [201, "methods"]], "Module Contents": [[18, "module-contents"], [25, "module-contents"], [34, "module-contents"], [44, "module-contents"], [49, "module-contents"], [59, "module-contents"], [60, "module-contents"], [63, "module-contents"], [64, "module-contents"], [69, "module-contents"], [76, "module-contents"], [79, "module-contents"], [103, "module-contents"], [106, "module-contents"], [113, "module-contents"], [117, "module-contents"], [121, "module-contents"], [126, "module-contents"], [139, "module-contents"], [147, "module-contents"], [160, "module-contents"], [163, "module-contents"], [165, "module-contents"], [185, "module-contents"], [194, "module-contents"], [200, "module-contents"], [211, "module-contents"], [214, "module-contents"], [230, "module-contents"], [231, "module-contents"], [232, "module-contents"]], "Next Steps": [[246, "next-steps"]], "Optimisation": [[235, "optimisation"]], "Overview": [[242, "overview"]], "Package Contents": [[104, "package-contents"], [201, "package-contents"]], "Parameter": [[236, "parameter"]], "Plotting": [[235, "plotting"]], "Posting a log message": [[251, "posting-a-log-message"]], "Pulses": [[235, "pulses"]], "References": [[240, "references"]], "References:": [[36, "references"], [74, "references"], [91, "references"], [157, "references"], [162, "references"], [176, "references"], [201, "references"], [201, "id34"], [201, "id88"], [201, "id101"], [201, "id129"], [208, "references"], [211, "references"], [222, "references"], [232, "references"]], "Release Notes": [[254, "release-notes"]], "Resonator Profile": [[239, "resonator-profile"]], "Returns": [[18, "returns"], [201, "returns"]], "Rollover": [[251, "rollover"]], "Selecting a phase cycle": [[240, "selecting-a-phase-cycle"]], "Selecting a version": [[240, "selecting-a-version"]], "Sequences": [[235, "sequences"]], "Setting up your script": [[246, "setting-up-your-script"]], "Setup": [[239, "setup"]], "Starting an experiment": [[241, "starting-an-experiment"]], "Starting the logger": [[251, "starting-the-logger"]], "Steps Explained": [[236, "steps-explained"]], "Submodules": [[104, "submodules"], [195, "submodules"], [201, "submodules"]], "Subpackages": [[201, "subpackages"]], "Termination Criteria": [[235, "termination-criteria"]], "The Automated Algorithum": [[236, "the-automated-algorithum"]], "The solution": [[238, "the-solution"]], "Tutorial": [[255, "tutorial"]], "Using Shaped and Chirped pulses": [[248, "using-shaped-and-chirped-pulses"]], "Utilities": [[235, "utilities"], [235, "id4"]], "Version 0.7.0 (2024-04-01):": [[254, "version-0-7-0-2024-04-01"]], "Version 0.8.0 (TBA):": [[254, "version-0-8-0-tba"]], "Welcome to autoDEER!": [[234, "welcome-to-autodeer"]], "What is not currently supported?": [[248, "what-is-not-currently-supported"]], "autoDEER": [[243, "autodeer"]], "autoDEER GUI": [[253, "autodeer-gui"]], "autoDEER\u2019s Key Features": [[234, "autodeer-s-key-features"]], "autoEPR": [[249, "autoepr"]], "autodeer": [[201, "module-autodeer"]], "autodeer.DEER_analysis": [[18, "module-autodeer.DEER_analysis"]], "autodeer.FieldSweep": [[25, "module-autodeer.FieldSweep"]], "autodeer.Logging": [[34, "module-autodeer.Logging"]], "autodeer.Relaxation": [[44, "module-autodeer.Relaxation"]], "autodeer.ResPro": [[49, "module-autodeer.ResPro"]], "autodeer.TwoD_Experiment": [[59, "module-autodeer.TwoD_Experiment"]], "autodeer._version": [[60, "module-autodeer._version"]], "autodeer.classes": [[63, "module-autodeer.classes"]], "autodeer.colors": [[64, "module-autodeer.colors"]], "autodeer.criteria": [[69, "module-autodeer.criteria"]], "autodeer.dataset": [[76, "module-autodeer.dataset"]], "autodeer.gui": [[104, "module-autodeer.gui"]], "autodeer.gui.__main__": [[79, "module-autodeer.gui.__main__"]], "autodeer.gui.autoDEER_worker": [[103, "module-autodeer.gui.autoDEER_worker"]], "autodeer.gui.log": [[106, "module-autodeer.gui.log"]], "autodeer.gui.main": [[113, "module-autodeer.gui.main"]], "autodeer.gui.quickdeer": [[117, "module-autodeer.gui.quickdeer"]], "autodeer.gui.test_main": [[118, "module-autodeer.gui.test_main"]], "autodeer.gui.tools": [[121, "module-autodeer.gui.tools"]], "autodeer.hardware": [[195, "module-autodeer.hardware"]], "autodeer.hardware.Bruker_AWG": [[126, "module-autodeer.hardware.Bruker_AWG"]], "autodeer.hardware.Bruker_MPFU": [[139, "module-autodeer.hardware.Bruker_MPFU"]], "autodeer.hardware.Bruker_tools": [[147, "module-autodeer.hardware.Bruker_tools"]], "autodeer.hardware.ETH_awg": [[160, "module-autodeer.hardware.ETH_awg"]], "autodeer.hardware.ETH_awg_load": [[163, "module-autodeer.hardware.ETH_awg_load"]], "autodeer.hardware.XeprAPI_link": [[165, "module-autodeer.hardware.XeprAPI_link"]], "autodeer.hardware.dummy": [[185, "module-autodeer.hardware.dummy"]], "autodeer.hardware.dummy_xepr": [[194, "module-autodeer.hardware.dummy_xepr"]], "autodeer.hardware.xepr_experiments": [[200, "module-autodeer.hardware.xepr_experiments"]], "autodeer.pulses": [[211, "module-autodeer.pulses"]], "autodeer.reporter": [[214, "module-autodeer.reporter"]], "autodeer.sequences": [[230, "module-autodeer.sequences"]], "autodeer.tools": [[231, "module-autodeer.tools"]], "autodeer.utils": [[232, "module-autodeer.utils"]], "nDEER": [[240, "ndeer"]]}, "docnames": ["README", "_templates/autoapi/index", "_templates/autoapi/python/attribute", "_templates/autoapi/python/class", "_templates/autoapi/python/data", "_templates/autoapi/python/exception", "_templates/autoapi/python/function", "_templates/autoapi/python/method", "_templates/autoapi/python/module", "_templates/autoapi/python/package", "_templates/autoapi/python/property", "_templates/custom_class_template", "autoapi/autodeer/CarrPurcellAnalysis", "autoapi/autodeer/CarrPurcellSequence", "autoapi/autodeer/ChirpPulse", "autoapi/autodeer/Criteria", "autoapi/autodeer/DEERCriteria", "autoapi/autodeer/DEERSequence", "autoapi/autodeer/DEER_analysis/index", "autoapi/autodeer/Delay", "autoapi/autodeer/Detection", "autoapi/autodeer/EPRAccessor", "autoapi/autodeer/FieldSweep/FieldSweepAnalysis", "autoapi/autodeer/FieldSweep/Parameter", "autoapi/autodeer/FieldSweep/SpinSystem", "autoapi/autodeer/FieldSweep/index", "autoapi/autodeer/FieldSweepAnalysis", "autoapi/autodeer/FieldSweepSequence", "autoapi/autodeer/GaussianPulse", "autoapi/autodeer/HSPulse", "autoapi/autodeer/HahnEchoSequence", "autoapi/autodeer/Interface", "autoapi/autodeer/Logging/DictFormater", "autoapi/autodeer/Logging/QtLogHandler", "autoapi/autodeer/Logging/index", "autoapi/autodeer/Parameter", "autoapi/autodeer/Pulse", "autoapi/autodeer/RectPulse", "autoapi/autodeer/RefocusedEcho2DAnalysis", "autoapi/autodeer/RefocusedEcho2DSequence", "autoapi/autodeer/Relaxation/CarrPurcellAnalysis", "autoapi/autodeer/Relaxation/RefocusedEcho2DAnalysis", "autoapi/autodeer/Relaxation/ReptimeAnalysis", "autoapi/autodeer/Relaxation/Sequence", "autoapi/autodeer/Relaxation/index", "autoapi/autodeer/Reporter", "autoapi/autodeer/ReptimeAnalysis", "autoapi/autodeer/ReptimeScan", "autoapi/autodeer/ResPro/ResonatorProfileAnalysis", "autoapi/autodeer/ResPro/index", "autoapi/autodeer/ResonatorProfileAnalysis", "autoapi/autodeer/ResonatorProfileSequence", "autoapi/autodeer/SNRCriteria", "autoapi/autodeer/Sequence", "autoapi/autodeer/SincPulse", "autoapi/autodeer/T2RelaxationSequence", "autoapi/autodeer/TWTProfileSequence", "autoapi/autodeer/TimeCriteria", "autoapi/autodeer/TwoD_Experiment/TwoDExperimentAnalysis", "autoapi/autodeer/TwoD_Experiment/index", "autoapi/autodeer/_version/index", "autoapi/autodeer/classes/Interface", "autoapi/autodeer/classes/Parameter", "autoapi/autodeer/classes/index", "autoapi/autodeer/colors/index", "autoapi/autodeer/criteria/Criteria", "autoapi/autodeer/criteria/DEERCriteria", "autoapi/autodeer/criteria/SNRCriteria", "autoapi/autodeer/criteria/TimeCriteria", "autoapi/autodeer/criteria/index", "autoapi/autodeer/dataset/Detection", "autoapi/autodeer/dataset/EPRAccessor", "autoapi/autodeer/dataset/Interface", "autoapi/autodeer/dataset/Parameter", "autoapi/autodeer/dataset/Pulse", "autoapi/autodeer/dataset/Sequence", "autoapi/autodeer/dataset/index", "autoapi/autodeer/gui/Worker", "autoapi/autodeer/gui/WorkerSignals", "autoapi/autodeer/gui/__main__/index", "autoapi/autodeer/gui/autoDEERUI", "autoapi/autodeer/gui/autoDEER_worker/CarrPurcellSequence", "autoapi/autodeer/gui/autoDEER_worker/ChirpPulse", "autoapi/autodeer/gui/autoDEER_worker/DEERCriteria", "autoapi/autodeer/gui/autoDEER_worker/DEERSequence", "autoapi/autodeer/gui/autoDEER_worker/Delay", "autoapi/autodeer/gui/autoDEER_worker/Detection", "autoapi/autodeer/gui/autoDEER_worker/FieldSweepSequence", "autoapi/autodeer/gui/autoDEER_worker/HSPulse", "autoapi/autodeer/gui/autoDEER_worker/HahnEchoSequence", "autoapi/autodeer/gui/autoDEER_worker/Parameter", "autoapi/autodeer/gui/autoDEER_worker/Pulse", "autoapi/autodeer/gui/autoDEER_worker/RectPulse", "autoapi/autodeer/gui/autoDEER_worker/RefocusedEcho2DSequence", "autoapi/autodeer/gui/autoDEER_worker/ReptimeScan", "autoapi/autodeer/gui/autoDEER_worker/ResonatorProfileSequence", "autoapi/autodeer/gui/autoDEER_worker/SNRCriteria", "autoapi/autodeer/gui/autoDEER_worker/Sequence", "autoapi/autodeer/gui/autoDEER_worker/T2RelaxationSequence", "autoapi/autodeer/gui/autoDEER_worker/TWTProfileSequence", "autoapi/autodeer/gui/autoDEER_worker/TimeCriteria", "autoapi/autodeer/gui/autoDEER_worker/autoDEERSignals", "autoapi/autodeer/gui/autoDEER_worker/autoDEERWorker", "autoapi/autodeer/gui/autoDEER_worker/index", "autoapi/autodeer/gui/index", "autoapi/autodeer/gui/log/LogDialog", "autoapi/autodeer/gui/log/index", "autoapi/autodeer/gui/main/DEERplot", "autoapi/autodeer/gui/main/LogDialog", "autoapi/autodeer/gui/main/Worker", "autoapi/autodeer/gui/main/WorkerSignals", "autoapi/autodeer/gui/main/autoDEERUI", "autoapi/autodeer/gui/main/autoDEERWorker", "autoapi/autodeer/gui/main/index", "autoapi/autodeer/gui/quickdeer/DEERplot", "autoapi/autodeer/gui/quickdeer/Worker", "autoapi/autodeer/gui/quickdeer/WorkerSignals", "autoapi/autodeer/gui/quickdeer/index", "autoapi/autodeer/gui/test_main/index", "autoapi/autodeer/gui/tools/Worker", "autoapi/autodeer/gui/tools/WorkerSignals", "autoapi/autodeer/gui/tools/index", "autoapi/autodeer/hardware/Bruker_AWG/BrukerAWG", "autoapi/autodeer/hardware/Bruker_AWG/Interface", "autoapi/autodeer/hardware/Bruker_AWG/PulseSpel", "autoapi/autodeer/hardware/Bruker_AWG/XeprAPILink", "autoapi/autodeer/hardware/Bruker_AWG/index", "autoapi/autodeer/hardware/Bruker_MPFU/BrukerMPFU", "autoapi/autodeer/hardware/Bruker_MPFU/Delay", "autoapi/autodeer/hardware/Bruker_MPFU/Detection", "autoapi/autodeer/hardware/Bruker_MPFU/HahnEchoSequence", "autoapi/autodeer/hardware/Bruker_MPFU/Interface", "autoapi/autodeer/hardware/Bruker_MPFU/PSPhaseCycle", "autoapi/autodeer/hardware/Bruker_MPFU/Parameter", "autoapi/autodeer/hardware/Bruker_MPFU/PulseSpel", "autoapi/autodeer/hardware/Bruker_MPFU/RectPulse", "autoapi/autodeer/hardware/Bruker_MPFU/Sequence", "autoapi/autodeer/hardware/Bruker_MPFU/Worker", "autoapi/autodeer/hardware/Bruker_MPFU/XeprAPILink", "autoapi/autodeer/hardware/Bruker_MPFU/index", "autoapi/autodeer/hardware/Bruker_tools/Delay", "autoapi/autodeer/hardware/Bruker_tools/Detection", "autoapi/autodeer/hardware/Bruker_tools/PSPhaseCycle", "autoapi/autodeer/hardware/Bruker_tools/PSparvar", "autoapi/autodeer/hardware/Bruker_tools/PulseSpel", "autoapi/autodeer/hardware/Bruker_tools/RectPulse", "autoapi/autodeer/hardware/Bruker_tools/Sequence", "autoapi/autodeer/hardware/Bruker_tools/index", "autoapi/autodeer/hardware/ETH_awg/ChirpPulse", "autoapi/autodeer/hardware/ETH_awg/Delay", "autoapi/autodeer/hardware/ETH_awg/Detection", "autoapi/autodeer/hardware/ETH_awg/ETH_awg_interface", "autoapi/autodeer/hardware/ETH_awg/FieldSweepSequence", "autoapi/autodeer/hardware/ETH_awg/HSPulse", "autoapi/autodeer/hardware/ETH_awg/HahnEchoSequence", "autoapi/autodeer/hardware/ETH_awg/Interface", "autoapi/autodeer/hardware/ETH_awg/Parameter", "autoapi/autodeer/hardware/ETH_awg/Pulse", "autoapi/autodeer/hardware/ETH_awg/RectPulse", "autoapi/autodeer/hardware/ETH_awg/Sequence", "autoapi/autodeer/hardware/ETH_awg/index", "autoapi/autodeer/hardware/ETH_awg_load/Parameter", "autoapi/autodeer/hardware/ETH_awg_load/Pulse", "autoapi/autodeer/hardware/ETH_awg_load/index", "autoapi/autodeer/hardware/XeprAPI_link/XeprAPILink", "autoapi/autodeer/hardware/XeprAPI_link/index", "autoapi/autodeer/hardware/dummy/CarrPurcellSequence", "autoapi/autodeer/hardware/dummy/ChirpPulse", "autoapi/autodeer/hardware/dummy/DEERSequence", "autoapi/autodeer/hardware/dummy/Delay", "autoapi/autodeer/hardware/dummy/Detection", "autoapi/autodeer/hardware/dummy/FieldSweepSequence", "autoapi/autodeer/hardware/dummy/HSPulse", "autoapi/autodeer/hardware/dummy/HahnEchoSequence", "autoapi/autodeer/hardware/dummy/Interface", "autoapi/autodeer/hardware/dummy/Parameter", "autoapi/autodeer/hardware/dummy/Pulse", "autoapi/autodeer/hardware/dummy/RectPulse", "autoapi/autodeer/hardware/dummy/RefocusedEcho2DSequence", "autoapi/autodeer/hardware/dummy/ReptimeScan", "autoapi/autodeer/hardware/dummy/ResonatorProfileSequence", "autoapi/autodeer/hardware/dummy/Sequence", "autoapi/autodeer/hardware/dummy/T2RelaxationSequence", "autoapi/autodeer/hardware/dummy/TWTProfileSequence", "autoapi/autodeer/hardware/dummy/dummyInterface", "autoapi/autodeer/hardware/dummy/index", "autoapi/autodeer/hardware/dummy_xepr/XeprAPILink", "autoapi/autodeer/hardware/dummy_xepr/dummy_api", "autoapi/autodeer/hardware/dummy_xepr/dummy_cur_exp", "autoapi/autodeer/hardware/dummy_xepr/dummy_dataset", "autoapi/autodeer/hardware/dummy_xepr/dummy_hidden", "autoapi/autodeer/hardware/dummy_xepr/dummy_param", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.XeprCmds", "autoapi/autodeer/hardware/dummy_xepr/index", "autoapi/autodeer/hardware/index", "autoapi/autodeer/hardware/xepr_experiments/DEER", "autoapi/autodeer/hardware/xepr_experiments/ELDORtune", "autoapi/autodeer/hardware/xepr_experiments/MPFUtune", "autoapi/autodeer/hardware/xepr_experiments/PulseProfile", "autoapi/autodeer/hardware/xepr_experiments/index", "autoapi/autodeer/index", "autoapi/autodeer/pulses/ChirpPulse", "autoapi/autodeer/pulses/Delay", "autoapi/autodeer/pulses/Detection", "autoapi/autodeer/pulses/GaussianPulse", "autoapi/autodeer/pulses/HSPulse", "autoapi/autodeer/pulses/Parameter", "autoapi/autodeer/pulses/Pulse", "autoapi/autodeer/pulses/RectPulse", "autoapi/autodeer/pulses/SincPulse", "autoapi/autodeer/pulses/index", "autoapi/autodeer/reporter/Reporter", "autoapi/autodeer/reporter/SvgFlowable", "autoapi/autodeer/reporter/index", "autoapi/autodeer/sequences/CarrPurcellSequence", "autoapi/autodeer/sequences/DEERSequence", "autoapi/autodeer/sequences/Delay", "autoapi/autodeer/sequences/Detection", "autoapi/autodeer/sequences/FieldSweepSequence", "autoapi/autodeer/sequences/HahnEchoSequence", "autoapi/autodeer/sequences/Parameter", "autoapi/autodeer/sequences/Pulse", "autoapi/autodeer/sequences/RectPulse", "autoapi/autodeer/sequences/RefocusedEcho2DSequence", "autoapi/autodeer/sequences/ReptimeScan", "autoapi/autodeer/sequences/ResonatorProfileSequence", "autoapi/autodeer/sequences/Sequence", "autoapi/autodeer/sequences/T2RelaxationSequence", "autoapi/autodeer/sequences/TWTProfileSequence", "autoapi/autodeer/sequences/index", "autoapi/autodeer/tools/index", "autoapi/autodeer/utils/index", "autoapi/index", "index", "source/API_docs", "source/Algorithum", "source/Install", "source/Install_python", "source/Jupyter_interface", "source/autoDEER/DEER_variants", "source/autoDEER/GUI_interface", "source/autoDEER/config_file", "source/autoDEER/index", "source/autoEPR/Bruker_interface", "source/autoEPR/Custom_interface", "source/autoEPR/Getting_Started", "source/autoEPR/Interface", "source/autoEPR/Sequencer", "source/autoEPR/index", "source/contributing", "source/dev_guide/Logging", "source/dev_guide/index", "source/gui_guide", "source/releasenotes", "source/tutorial"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["README.md", "_templates/autoapi/index.rst", "_templates/autoapi/python/attribute.rst", "_templates/autoapi/python/class.rst", "_templates/autoapi/python/data.rst", "_templates/autoapi/python/exception.rst", "_templates/autoapi/python/function.rst", "_templates/autoapi/python/method.rst", "_templates/autoapi/python/module.rst", "_templates/autoapi/python/package.rst", "_templates/autoapi/python/property.rst", "_templates/custom_class_template.rst", "autoapi/autodeer/CarrPurcellAnalysis.rst", "autoapi/autodeer/CarrPurcellSequence.rst", "autoapi/autodeer/ChirpPulse.rst", "autoapi/autodeer/Criteria.rst", "autoapi/autodeer/DEERCriteria.rst", "autoapi/autodeer/DEERSequence.rst", "autoapi/autodeer/DEER_analysis/index.rst", "autoapi/autodeer/Delay.rst", "autoapi/autodeer/Detection.rst", "autoapi/autodeer/EPRAccessor.rst", "autoapi/autodeer/FieldSweep/FieldSweepAnalysis.rst", "autoapi/autodeer/FieldSweep/Parameter.rst", "autoapi/autodeer/FieldSweep/SpinSystem.rst", "autoapi/autodeer/FieldSweep/index.rst", "autoapi/autodeer/FieldSweepAnalysis.rst", "autoapi/autodeer/FieldSweepSequence.rst", "autoapi/autodeer/GaussianPulse.rst", "autoapi/autodeer/HSPulse.rst", "autoapi/autodeer/HahnEchoSequence.rst", "autoapi/autodeer/Interface.rst", "autoapi/autodeer/Logging/DictFormater.rst", "autoapi/autodeer/Logging/QtLogHandler.rst", "autoapi/autodeer/Logging/index.rst", "autoapi/autodeer/Parameter.rst", "autoapi/autodeer/Pulse.rst", "autoapi/autodeer/RectPulse.rst", "autoapi/autodeer/RefocusedEcho2DAnalysis.rst", "autoapi/autodeer/RefocusedEcho2DSequence.rst", "autoapi/autodeer/Relaxation/CarrPurcellAnalysis.rst", "autoapi/autodeer/Relaxation/RefocusedEcho2DAnalysis.rst", "autoapi/autodeer/Relaxation/ReptimeAnalysis.rst", "autoapi/autodeer/Relaxation/Sequence.rst", "autoapi/autodeer/Relaxation/index.rst", "autoapi/autodeer/Reporter.rst", "autoapi/autodeer/ReptimeAnalysis.rst", "autoapi/autodeer/ReptimeScan.rst", "autoapi/autodeer/ResPro/ResonatorProfileAnalysis.rst", "autoapi/autodeer/ResPro/index.rst", "autoapi/autodeer/ResonatorProfileAnalysis.rst", "autoapi/autodeer/ResonatorProfileSequence.rst", "autoapi/autodeer/SNRCriteria.rst", "autoapi/autodeer/Sequence.rst", "autoapi/autodeer/SincPulse.rst", "autoapi/autodeer/T2RelaxationSequence.rst", "autoapi/autodeer/TWTProfileSequence.rst", "autoapi/autodeer/TimeCriteria.rst", "autoapi/autodeer/TwoD_Experiment/TwoDExperimentAnalysis.rst", "autoapi/autodeer/TwoD_Experiment/index.rst", "autoapi/autodeer/_version/index.rst", "autoapi/autodeer/classes/Interface.rst", "autoapi/autodeer/classes/Parameter.rst", "autoapi/autodeer/classes/index.rst", "autoapi/autodeer/colors/index.rst", "autoapi/autodeer/criteria/Criteria.rst", "autoapi/autodeer/criteria/DEERCriteria.rst", "autoapi/autodeer/criteria/SNRCriteria.rst", "autoapi/autodeer/criteria/TimeCriteria.rst", "autoapi/autodeer/criteria/index.rst", "autoapi/autodeer/dataset/Detection.rst", "autoapi/autodeer/dataset/EPRAccessor.rst", "autoapi/autodeer/dataset/Interface.rst", "autoapi/autodeer/dataset/Parameter.rst", "autoapi/autodeer/dataset/Pulse.rst", "autoapi/autodeer/dataset/Sequence.rst", "autoapi/autodeer/dataset/index.rst", "autoapi/autodeer/gui/Worker.rst", "autoapi/autodeer/gui/WorkerSignals.rst", "autoapi/autodeer/gui/__main__/index.rst", "autoapi/autodeer/gui/autoDEERUI.rst", "autoapi/autodeer/gui/autoDEER_worker/CarrPurcellSequence.rst", "autoapi/autodeer/gui/autoDEER_worker/ChirpPulse.rst", "autoapi/autodeer/gui/autoDEER_worker/DEERCriteria.rst", "autoapi/autodeer/gui/autoDEER_worker/DEERSequence.rst", "autoapi/autodeer/gui/autoDEER_worker/Delay.rst", "autoapi/autodeer/gui/autoDEER_worker/Detection.rst", "autoapi/autodeer/gui/autoDEER_worker/FieldSweepSequence.rst", "autoapi/autodeer/gui/autoDEER_worker/HSPulse.rst", "autoapi/autodeer/gui/autoDEER_worker/HahnEchoSequence.rst", "autoapi/autodeer/gui/autoDEER_worker/Parameter.rst", "autoapi/autodeer/gui/autoDEER_worker/Pulse.rst", "autoapi/autodeer/gui/autoDEER_worker/RectPulse.rst", "autoapi/autodeer/gui/autoDEER_worker/RefocusedEcho2DSequence.rst", "autoapi/autodeer/gui/autoDEER_worker/ReptimeScan.rst", "autoapi/autodeer/gui/autoDEER_worker/ResonatorProfileSequence.rst", "autoapi/autodeer/gui/autoDEER_worker/SNRCriteria.rst", "autoapi/autodeer/gui/autoDEER_worker/Sequence.rst", "autoapi/autodeer/gui/autoDEER_worker/T2RelaxationSequence.rst", "autoapi/autodeer/gui/autoDEER_worker/TWTProfileSequence.rst", "autoapi/autodeer/gui/autoDEER_worker/TimeCriteria.rst", "autoapi/autodeer/gui/autoDEER_worker/autoDEERSignals.rst", "autoapi/autodeer/gui/autoDEER_worker/autoDEERWorker.rst", "autoapi/autodeer/gui/autoDEER_worker/index.rst", "autoapi/autodeer/gui/index.rst", "autoapi/autodeer/gui/log/LogDialog.rst", "autoapi/autodeer/gui/log/index.rst", "autoapi/autodeer/gui/main/DEERplot.rst", "autoapi/autodeer/gui/main/LogDialog.rst", "autoapi/autodeer/gui/main/Worker.rst", "autoapi/autodeer/gui/main/WorkerSignals.rst", "autoapi/autodeer/gui/main/autoDEERUI.rst", "autoapi/autodeer/gui/main/autoDEERWorker.rst", "autoapi/autodeer/gui/main/index.rst", "autoapi/autodeer/gui/quickdeer/DEERplot.rst", "autoapi/autodeer/gui/quickdeer/Worker.rst", "autoapi/autodeer/gui/quickdeer/WorkerSignals.rst", "autoapi/autodeer/gui/quickdeer/index.rst", "autoapi/autodeer/gui/test_main/index.rst", "autoapi/autodeer/gui/tools/Worker.rst", "autoapi/autodeer/gui/tools/WorkerSignals.rst", "autoapi/autodeer/gui/tools/index.rst", "autoapi/autodeer/hardware/Bruker_AWG/BrukerAWG.rst", "autoapi/autodeer/hardware/Bruker_AWG/Interface.rst", "autoapi/autodeer/hardware/Bruker_AWG/PulseSpel.rst", "autoapi/autodeer/hardware/Bruker_AWG/XeprAPILink.rst", "autoapi/autodeer/hardware/Bruker_AWG/index.rst", "autoapi/autodeer/hardware/Bruker_MPFU/BrukerMPFU.rst", "autoapi/autodeer/hardware/Bruker_MPFU/Delay.rst", "autoapi/autodeer/hardware/Bruker_MPFU/Detection.rst", "autoapi/autodeer/hardware/Bruker_MPFU/HahnEchoSequence.rst", "autoapi/autodeer/hardware/Bruker_MPFU/Interface.rst", "autoapi/autodeer/hardware/Bruker_MPFU/PSPhaseCycle.rst", "autoapi/autodeer/hardware/Bruker_MPFU/Parameter.rst", "autoapi/autodeer/hardware/Bruker_MPFU/PulseSpel.rst", "autoapi/autodeer/hardware/Bruker_MPFU/RectPulse.rst", "autoapi/autodeer/hardware/Bruker_MPFU/Sequence.rst", "autoapi/autodeer/hardware/Bruker_MPFU/Worker.rst", "autoapi/autodeer/hardware/Bruker_MPFU/XeprAPILink.rst", "autoapi/autodeer/hardware/Bruker_MPFU/index.rst", "autoapi/autodeer/hardware/Bruker_tools/Delay.rst", "autoapi/autodeer/hardware/Bruker_tools/Detection.rst", "autoapi/autodeer/hardware/Bruker_tools/PSPhaseCycle.rst", "autoapi/autodeer/hardware/Bruker_tools/PSparvar.rst", "autoapi/autodeer/hardware/Bruker_tools/PulseSpel.rst", "autoapi/autodeer/hardware/Bruker_tools/RectPulse.rst", "autoapi/autodeer/hardware/Bruker_tools/Sequence.rst", "autoapi/autodeer/hardware/Bruker_tools/index.rst", "autoapi/autodeer/hardware/ETH_awg/ChirpPulse.rst", "autoapi/autodeer/hardware/ETH_awg/Delay.rst", "autoapi/autodeer/hardware/ETH_awg/Detection.rst", "autoapi/autodeer/hardware/ETH_awg/ETH_awg_interface.rst", "autoapi/autodeer/hardware/ETH_awg/FieldSweepSequence.rst", "autoapi/autodeer/hardware/ETH_awg/HSPulse.rst", "autoapi/autodeer/hardware/ETH_awg/HahnEchoSequence.rst", "autoapi/autodeer/hardware/ETH_awg/Interface.rst", "autoapi/autodeer/hardware/ETH_awg/Parameter.rst", "autoapi/autodeer/hardware/ETH_awg/Pulse.rst", "autoapi/autodeer/hardware/ETH_awg/RectPulse.rst", "autoapi/autodeer/hardware/ETH_awg/Sequence.rst", "autoapi/autodeer/hardware/ETH_awg/index.rst", "autoapi/autodeer/hardware/ETH_awg_load/Parameter.rst", "autoapi/autodeer/hardware/ETH_awg_load/Pulse.rst", "autoapi/autodeer/hardware/ETH_awg_load/index.rst", "autoapi/autodeer/hardware/XeprAPI_link/XeprAPILink.rst", "autoapi/autodeer/hardware/XeprAPI_link/index.rst", "autoapi/autodeer/hardware/dummy/CarrPurcellSequence.rst", "autoapi/autodeer/hardware/dummy/ChirpPulse.rst", "autoapi/autodeer/hardware/dummy/DEERSequence.rst", "autoapi/autodeer/hardware/dummy/Delay.rst", "autoapi/autodeer/hardware/dummy/Detection.rst", "autoapi/autodeer/hardware/dummy/FieldSweepSequence.rst", "autoapi/autodeer/hardware/dummy/HSPulse.rst", "autoapi/autodeer/hardware/dummy/HahnEchoSequence.rst", "autoapi/autodeer/hardware/dummy/Interface.rst", "autoapi/autodeer/hardware/dummy/Parameter.rst", "autoapi/autodeer/hardware/dummy/Pulse.rst", "autoapi/autodeer/hardware/dummy/RectPulse.rst", "autoapi/autodeer/hardware/dummy/RefocusedEcho2DSequence.rst", "autoapi/autodeer/hardware/dummy/ReptimeScan.rst", "autoapi/autodeer/hardware/dummy/ResonatorProfileSequence.rst", "autoapi/autodeer/hardware/dummy/Sequence.rst", "autoapi/autodeer/hardware/dummy/T2RelaxationSequence.rst", "autoapi/autodeer/hardware/dummy/TWTProfileSequence.rst", "autoapi/autodeer/hardware/dummy/dummyInterface.rst", "autoapi/autodeer/hardware/dummy/index.rst", "autoapi/autodeer/hardware/dummy_xepr/XeprAPILink.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_api.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_cur_exp.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_dataset.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_hidden.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_param.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.rst", "autoapi/autodeer/hardware/dummy_xepr/dummy_xepr.XeprCmds.rst", "autoapi/autodeer/hardware/dummy_xepr/index.rst", "autoapi/autodeer/hardware/index.rst", "autoapi/autodeer/hardware/xepr_experiments/DEER.rst", "autoapi/autodeer/hardware/xepr_experiments/ELDORtune.rst", "autoapi/autodeer/hardware/xepr_experiments/MPFUtune.rst", "autoapi/autodeer/hardware/xepr_experiments/PulseProfile.rst", "autoapi/autodeer/hardware/xepr_experiments/index.rst", "autoapi/autodeer/index.rst", "autoapi/autodeer/pulses/ChirpPulse.rst", "autoapi/autodeer/pulses/Delay.rst", "autoapi/autodeer/pulses/Detection.rst", "autoapi/autodeer/pulses/GaussianPulse.rst", "autoapi/autodeer/pulses/HSPulse.rst", "autoapi/autodeer/pulses/Parameter.rst", "autoapi/autodeer/pulses/Pulse.rst", "autoapi/autodeer/pulses/RectPulse.rst", "autoapi/autodeer/pulses/SincPulse.rst", "autoapi/autodeer/pulses/index.rst", "autoapi/autodeer/reporter/Reporter.rst", "autoapi/autodeer/reporter/SvgFlowable.rst", "autoapi/autodeer/reporter/index.rst", "autoapi/autodeer/sequences/CarrPurcellSequence.rst", "autoapi/autodeer/sequences/DEERSequence.rst", "autoapi/autodeer/sequences/Delay.rst", "autoapi/autodeer/sequences/Detection.rst", "autoapi/autodeer/sequences/FieldSweepSequence.rst", "autoapi/autodeer/sequences/HahnEchoSequence.rst", "autoapi/autodeer/sequences/Parameter.rst", "autoapi/autodeer/sequences/Pulse.rst", "autoapi/autodeer/sequences/RectPulse.rst", "autoapi/autodeer/sequences/RefocusedEcho2DSequence.rst", "autoapi/autodeer/sequences/ReptimeScan.rst", "autoapi/autodeer/sequences/ResonatorProfileSequence.rst", "autoapi/autodeer/sequences/Sequence.rst", "autoapi/autodeer/sequences/T2RelaxationSequence.rst", "autoapi/autodeer/sequences/TWTProfileSequence.rst", "autoapi/autodeer/sequences/index.rst", "autoapi/autodeer/tools/index.rst", "autoapi/autodeer/utils/index.rst", "autoapi/index.rst", "index.rst", "source/API_docs.rst", "source/Algorithum.rst", "source/Install.rst", "source/Install_python.rst", "source/Jupyter_interface.rst", "source/autoDEER/DEER_variants.rst", "source/autoDEER/GUI_interface.rst", "source/autoDEER/config_file.rst", "source/autoDEER/index.rst", "source/autoEPR/Bruker_interface.rst", "source/autoEPR/Custom_interface.rst", "source/autoEPR/Getting_Started.rst", "source/autoEPR/Interface.rst", "source/autoEPR/Sequencer.rst", "source/autoEPR/index.rst", "source/contributing.rst", "source/dev_guide/Logging.md", "source/dev_guide/index.rst", "source/gui_guide.rst", "source/releasenotes.rst", "source/tutorial.rst"], "indexentries": {"__add__() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter.__add__", false]], "__add__() (autodeer.criteria method)": [[201, "autodeer.Criteria.__add__", false]], "__add__() (autodeer.criteria.criteria method)": [[69, "autodeer.criteria.Criteria.__add__", false]], "__add__() (autodeer.parameter method)": [[201, "autodeer.Parameter.__add__", false], [201, "id156", false], [201, "id23", false], [201, "id75", false]], "__add__() (criteria method)": [[15, "Criteria.__add__", false], [65, "Criteria.__add__", false]], "__add__() (parameter method)": [[23, "Parameter.__add__", false], [35, "Parameter.__add__", false], [62, "Parameter.__add__", false], [73, "Parameter.__add__", false], [90, "Parameter.__add__", false], [133, "Parameter.__add__", false], [156, "Parameter.__add__", false], [161, "Parameter.__add__", false], [175, "Parameter.__add__", false], [207, "Parameter.__add__", false], [221, "Parameter.__add__", false]], "__eq__() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter.__eq__", false]], "__eq__() (autodeer.parameter method)": [[201, "autodeer.Parameter.__eq__", false], [201, "id155", false], [201, "id22", false], [201, "id74", false]], "__eq__() (parameter method)": [[23, "Parameter.__eq__", false], [35, "Parameter.__eq__", false], [62, "Parameter.__eq__", false], [73, "Parameter.__eq__", false], [90, "Parameter.__eq__", false], [133, "Parameter.__eq__", false], [156, "Parameter.__eq__", false], [161, "Parameter.__eq__", false], [175, "Parameter.__eq__", false], [207, "Parameter.__eq__", false], [221, "Parameter.__eq__", false]], "__getitem__() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[194, "autodeer.hardware.dummy_xepr.dummy_cur_exp.__getitem__", false]], "__getitem__() (autodeer.hardware.dummy_xepr.dummy_hidden method)": [[194, "autodeer.hardware.dummy_xepr.dummy_hidden.__getitem__", false]], "__getitem__() (dummy_cur_exp method)": [[188, "dummy_cur_exp.__getitem__", false]], "__getitem__() (dummy_hidden method)": [[190, "dummy_hidden.__getitem__", false]], "__mul__() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter.__mul__", false]], "__mul__() (autodeer.parameter method)": [[201, "autodeer.Parameter.__mul__", false], [201, "id158", false], [201, "id25", false], [201, "id77", false]], "__mul__() (parameter method)": [[23, "Parameter.__mul__", false], [35, "Parameter.__mul__", false], [62, "Parameter.__mul__", false], [73, "Parameter.__mul__", false], [90, "Parameter.__mul__", false], [133, "Parameter.__mul__", false], [156, "Parameter.__mul__", false], [161, "Parameter.__mul__", false], [175, "Parameter.__mul__", false], [207, "Parameter.__mul__", false], [221, "Parameter.__mul__", false]], "__rmul__() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter.__rmul__", false]], "__rmul__() (autodeer.parameter method)": [[201, "autodeer.Parameter.__rmul__", false], [201, "id159", false], [201, "id26", false], [201, "id78", false]], "__rmul__() (parameter method)": [[23, "Parameter.__rmul__", false], [35, "Parameter.__rmul__", false], [62, "Parameter.__rmul__", false], [73, "Parameter.__rmul__", false], [90, "Parameter.__rmul__", false], [133, "Parameter.__rmul__", false], [156, "Parameter.__rmul__", false], [161, "Parameter.__rmul__", false], [175, "Parameter.__rmul__", false], [207, "Parameter.__rmul__", false], [221, "Parameter.__rmul__", false]], "__str__() (autodeer.hardware.bruker_tools.psphasecycle method)": [[147, "autodeer.hardware.Bruker_tools.PSPhaseCycle.__str__", false]], "__str__() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel.__str__", false]], "__str__() (autodeer.pulse method)": [[201, "autodeer.Pulse.__str__", false], [201, "id104", false], [201, "id132", false]], "__str__() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse.__str__", false]], "__str__() (autodeer.sequence method)": [[201, "autodeer.Sequence.__str__", false], [201, "id189", false], [201, "id52", false]], "__str__() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence.__str__", false]], "__str__() (psphasecycle method)": [[132, "PSPhaseCycle.__str__", false], [142, "PSPhaseCycle.__str__", false]], "__str__() (pulse method)": [[36, "Pulse.__str__", false], [74, "Pulse.__str__", false], [91, "Pulse.__str__", false], [157, "Pulse.__str__", false], [162, "Pulse.__str__", false], [176, "Pulse.__str__", false], [208, "Pulse.__str__", false], [222, "Pulse.__str__", false]], "__str__() (pulsespel method)": [[124, "PulseSpel.__str__", false], [134, "PulseSpel.__str__", false], [144, "PulseSpel.__str__", false]], "__str__() (sequence method)": [[43, "Sequence.__str__", false], [53, "Sequence.__str__", false], [75, "Sequence.__str__", false], [97, "Sequence.__str__", false], [136, "Sequence.__str__", false], [146, "Sequence.__str__", false], [159, "Sequence.__str__", false], [181, "Sequence.__str__", false], [227, "Sequence.__str__", false]], "__sub__() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter.__sub__", false]], "__sub__() (autodeer.parameter method)": [[201, "autodeer.Parameter.__sub__", false], [201, "id157", false], [201, "id24", false], [201, "id76", false]], "__sub__() (parameter method)": [[23, "Parameter.__sub__", false], [35, "Parameter.__sub__", false], [62, "Parameter.__sub__", false], [73, "Parameter.__sub__", false], [90, "Parameter.__sub__", false], [133, "Parameter.__sub__", false], [156, "Parameter.__sub__", false], [161, "Parameter.__sub__", false], [175, "Parameter.__sub__", false], [207, "Parameter.__sub__", false], [221, "Parameter.__sub__", false]], "__version__ (in module autodeer)": [[201, "autodeer.__version__", false]], "__version__ (in module autodeer._version)": [[60, "autodeer._version.__version__", false]], "_addawgpulse() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._addAWGPulse", false]], "_addawgpulse() (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools._addAWGPulse", false]], "_addawgpulse() (pulsespel method)": [[124, "PulseSpel._addAWGPulse", false], [134, "PulseSpel._addAWGPulse", false], [144, "PulseSpel._addAWGPulse", false]], "_adddef() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._addDef", false]], "_adddef() (pulsespel method)": [[124, "PulseSpel._addDef", false], [134, "PulseSpel._addDef", false], [144, "PulseSpel._addDef", false]], "_addexp() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._addExp", false]], "_addexp() (pulsespel method)": [[124, "PulseSpel._addExp", false], [134, "PulseSpel._addExp", false], [144, "PulseSpel._addExp", false]], "_addphasecycle() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._addPhaseCycle", false]], "_addphasecycle() (autodeer.pulse method)": [[201, "autodeer.Pulse._addPhaseCycle", false], [201, "id119", false], [201, "id91", false]], "_addphasecycle() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse._addPhaseCycle", false]], "_addphasecycle() (pulse method)": [[36, "Pulse._addPhaseCycle", false], [74, "Pulse._addPhaseCycle", false], [91, "Pulse._addPhaseCycle", false], [157, "Pulse._addPhaseCycle", false], [162, "Pulse._addPhaseCycle", false], [176, "Pulse._addPhaseCycle", false], [208, "Pulse._addPhaseCycle", false], [222, "Pulse._addPhaseCycle", false]], "_addphasecycle() (pulsespel method)": [[124, "PulseSpel._addPhaseCycle", false], [134, "PulseSpel._addPhaseCycle", false], [144, "PulseSpel._addPhaseCycle", false]], "_addscanloop() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._addScanLoop", false]], "_addscanloop() (pulsespel method)": [[124, "PulseSpel._addScanLoop", false], [134, "PulseSpel._addScanLoop", false], [144, "PulseSpel._addScanLoop", false]], "_build() (autodeer.reporter method)": [[201, "autodeer.Reporter._build", false]], "_build() (autodeer.reporter.reporter method)": [[214, "autodeer.reporter.Reporter._build", false]], "_build() (reporter method)": [[45, "Reporter._build", false], [212, "Reporter._build", false]], "_build_exp_struct() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_exp_struct", false]], "_build_exp_struct() (eth_awg_interface method)": [[151, "ETH_awg_interface._build_exp_struct", false]], "_build_methods() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker._build_methods", false]], "_build_methods() (autodeerworker method)": [[102, "autoDEERWorker._build_methods", false], [112, "autoDEERWorker._build_methods", false]], "_build_parvar() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_parvar", false]], "_build_parvar() (eth_awg_interface method)": [[151, "ETH_awg_interface._build_parvar", false]], "_build_phase_cycle() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_phase_cycle", false]], "_build_phase_cycle() (eth_awg_interface method)": [[151, "ETH_awg_interface._build_phase_cycle", false]], "_build_pulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface._build_pulse", false]], "_build_pulse() (eth_awg_interface method)": [[151, "ETH_awg_interface._build_pulse", false]], "_build_sequence() (autodeer.carrpurcellsequence method)": [[201, "autodeer.CarrPurcellSequence._build_sequence", false]], "_build_sequence() (autodeer.refocusedecho2dsequence method)": [[201, "autodeer.RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (autodeer.resonatorprofilesequence method)": [[201, "autodeer.ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.carrpurcellsequence method)": [[230, "autodeer.sequences.CarrPurcellSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.refocusedecho2dsequence method)": [[230, "autodeer.sequences.RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.resonatorprofilesequence method)": [[230, "autodeer.sequences.ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.sequences.twtprofilesequence method)": [[230, "autodeer.sequences.TWTProfileSequence._build_sequence", false]], "_build_sequence() (autodeer.twtprofilesequence method)": [[201, "autodeer.TWTProfileSequence._build_sequence", false]], "_build_sequence() (carrpurcellsequence method)": [[13, "CarrPurcellSequence._build_sequence", false], [81, "CarrPurcellSequence._build_sequence", false], [166, "CarrPurcellSequence._build_sequence", false], [215, "CarrPurcellSequence._build_sequence", false]], "_build_sequence() (refocusedecho2dsequence method)": [[39, "RefocusedEcho2DSequence._build_sequence", false], [93, "RefocusedEcho2DSequence._build_sequence", false], [178, "RefocusedEcho2DSequence._build_sequence", false], [224, "RefocusedEcho2DSequence._build_sequence", false]], "_build_sequence() (resonatorprofilesequence method)": [[51, "ResonatorProfileSequence._build_sequence", false], [95, "ResonatorProfileSequence._build_sequence", false], [180, "ResonatorProfileSequence._build_sequence", false], [226, "ResonatorProfileSequence._build_sequence", false]], "_build_sequence() (twtprofilesequence method)": [[56, "TWTProfileSequence._build_sequence", false], [99, "TWTProfileSequence._build_sequence", false], [183, "TWTProfileSequence._build_sequence", false], [229, "TWTProfileSequence._build_sequence", false]], "_buildfmam() (autodeer.pulse method)": [[201, "autodeer.Pulse._buildFMAM", false], [201, "id120", false], [201, "id92", false]], "_buildfmam() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse._buildFMAM", false]], "_buildfmam() (pulse method)": [[36, "Pulse._buildFMAM", false], [74, "Pulse._buildFMAM", false], [91, "Pulse._buildFMAM", false], [157, "Pulse._buildFMAM", false], [162, "Pulse._buildFMAM", false], [176, "Pulse._buildFMAM", false], [208, "Pulse._buildFMAM", false], [222, "Pulse._buildFMAM", false]], "_buildphasecycle() (autodeer.sequence method)": [[201, "autodeer.Sequence._buildPhaseCycle", false], [201, "id180", false], [201, "id43", false]], "_buildphasecycle() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence._buildPhaseCycle", false]], "_buildphasecycle() (sequence method)": [[43, "Sequence._buildPhaseCycle", false], [53, "Sequence._buildPhaseCycle", false], [75, "Sequence._buildPhaseCycle", false], [97, "Sequence._buildPhaseCycle", false], [136, "Sequence._buildPhaseCycle", false], [146, "Sequence._buildPhaseCycle", false], [159, "Sequence._buildPhaseCycle", false], [181, "Sequence._buildPhaseCycle", false], [227, "Sequence._buildPhaseCycle", false]], "_calc_fft() (autodeer.pulse method)": [[201, "autodeer.Pulse._calc_fft", false], [201, "id127", false], [201, "id99", false]], "_calc_fft() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse._calc_fft", false]], "_calc_fft() (pulse method)": [[36, "Pulse._calc_fft", false], [74, "Pulse._calc_fft", false], [91, "Pulse._calc_fft", false], [157, "Pulse._calc_fft", false], [162, "Pulse._calc_fft", false], [176, "Pulse._calc_fft", false], [208, "Pulse._calc_fft", false], [222, "Pulse._calc_fft", false]], "_check_sequence() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._check_sequence", false]], "_check_sequence() (pulsespel method)": [[124, "PulseSpel._check_sequence", false], [134, "PulseSpel._check_sequence", false], [144, "PulseSpel._check_sequence", false]], "_checkrect() (autodeer.sequence method)": [[201, "autodeer.Sequence._checkRect", false], [201, "id188", false], [201, "id51", false]], "_checkrect() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence._checkRect", false]], "_checkrect() (sequence method)": [[43, "Sequence._checkRect", false], [53, "Sequence._checkRect", false], [75, "Sequence._checkRect", false], [97, "Sequence._checkRect", false], [136, "Sequence._checkRect", false], [146, "Sequence._checkRect", false], [159, "Sequence._checkRect", false], [181, "Sequence._checkRect", false], [227, "Sequence._checkRect", false]], "_cmpl_def() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._cmpl_def", false]], "_cmpl_def() (pulsespel method)": [[124, "PulseSpel._cmpl_def", false], [134, "PulseSpel._cmpl_def", false], [144, "PulseSpel._cmpl_def", false]], "_cmpl_exp() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._cmpl_Exp", false]], "_cmpl_exp() (pulsespel method)": [[124, "PulseSpel._cmpl_Exp", false], [134, "PulseSpel._cmpl_Exp", false], [144, "PulseSpel._cmpl_Exp", false]], "_convert_to_delay() (autodeer.sequence method)": [[201, "autodeer.Sequence._convert_to_delay", false], [201, "id186", false], [201, "id49", false]], "_convert_to_delay() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence._convert_to_delay", false]], "_convert_to_delay() (sequence method)": [[43, "Sequence._convert_to_delay", false], [53, "Sequence._convert_to_delay", false], [75, "Sequence._convert_to_delay", false], [97, "Sequence._convert_to_delay", false], [136, "Sequence._convert_to_delay", false], [146, "Sequence._convert_to_delay", false], [159, "Sequence._convert_to_delay", false], [181, "Sequence._convert_to_delay", false], [227, "Sequence._convert_to_delay", false]], "_convert_to_pulses() (autodeer.sequence method)": [[201, "autodeer.Sequence._convert_to_pulses", false], [201, "id187", false], [201, "id50", false]], "_convert_to_pulses() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence._convert_to_pulses", false]], "_convert_to_pulses() (sequence method)": [[43, "Sequence._convert_to_pulses", false], [53, "Sequence._convert_to_pulses", false], [75, "Sequence._convert_to_pulses", false], [97, "Sequence._convert_to_pulses", false], [136, "Sequence._convert_to_pulses", false], [146, "Sequence._convert_to_pulses", false], [159, "Sequence._convert_to_pulses", false], [181, "Sequence._convert_to_pulses", false], [227, "Sequence._convert_to_pulses", false]], "_data_transpose() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis._data_transpose", false]], "_data_transpose() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis._data_transpose", false]], "_detect() (autodeer.hardware.bruker_tools.psphasecycle method)": [[147, "autodeer.hardware.Bruker_tools.PSPhaseCycle._detect", false]], "_detect() (psphasecycle method)": [[132, "PSPhaseCycle._detect", false], [142, "PSPhaseCycle._detect", false]], "_estimate_time() (autodeer.sequence method)": [[201, "autodeer.Sequence._estimate_time", false], [201, "id179", false], [201, "id42", false]], "_estimate_time() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence._estimate_time", false]], "_estimate_time() (sequence method)": [[43, "Sequence._estimate_time", false], [53, "Sequence._estimate_time", false], [75, "Sequence._estimate_time", false], [97, "Sequence._estimate_time", false], [136, "Sequence._estimate_time", false], [146, "Sequence._estimate_time", false], [159, "Sequence._estimate_time", false], [181, "Sequence._estimate_time", false], [227, "Sequence._estimate_time", false]], "_expdefs() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._ExpDefs", false]], "_expdefs() (pulsespel method)": [[124, "PulseSpel._ExpDefs", false], [134, "PulseSpel._ExpDefs", false], [144, "PulseSpel._ExpDefs", false]], "_freq_sweep() (autodeer.hardware.xepr_experiments.pulseprofile method)": [[200, "autodeer.hardware.xepr_experiments.PulseProfile._freq_sweep", false]], "_freq_sweep() (pulseprofile method)": [[199, "PulseProfile._freq_sweep", false]], "_from_dict() (autodeer.classes.parameter static method)": [[63, "autodeer.classes.Parameter._from_dict", false]], "_from_dict() (autodeer.parameter static method)": [[201, "autodeer.Parameter._from_dict", false], [201, "id164", false], [201, "id31", false], [201, "id83", false]], "_from_dict() (autodeer.pulse class method)": [[201, "autodeer.Pulse._from_dict", false], [201, "id109", false], [201, "id137", false]], "_from_dict() (autodeer.pulses.pulse class method)": [[211, "autodeer.pulses.Pulse._from_dict", false]], "_from_dict() (autodeer.sequence class method)": [[201, "autodeer.Sequence._from_dict", false], [201, "id194", false], [201, "id57", false]], "_from_dict() (autodeer.sequences.sequence class method)": [[230, "autodeer.sequences.Sequence._from_dict", false]], "_from_dict() (parameter static method)": [[23, "Parameter._from_dict", false], [35, "Parameter._from_dict", false], [62, "Parameter._from_dict", false], [73, "Parameter._from_dict", false], [90, "Parameter._from_dict", false], [133, "Parameter._from_dict", false], [156, "Parameter._from_dict", false], [161, "Parameter._from_dict", false], [175, "Parameter._from_dict", false], [207, "Parameter._from_dict", false], [221, "Parameter._from_dict", false]], "_from_dict() (pulse class method)": [[36, "Pulse._from_dict", false], [74, "Pulse._from_dict", false], [91, "Pulse._from_dict", false], [157, "Pulse._from_dict", false], [162, "Pulse._from_dict", false], [176, "Pulse._from_dict", false], [208, "Pulse._from_dict", false], [222, "Pulse._from_dict", false]], "_from_dict() (sequence class method)": [[43, "Sequence._from_dict", false], [53, "Sequence._from_dict", false], [75, "Sequence._from_dict", false], [97, "Sequence._from_dict", false], [136, "Sequence._from_dict", false], [146, "Sequence._from_dict", false], [159, "Sequence._from_dict", false], [181, "Sequence._from_dict", false], [227, "Sequence._from_dict", false]], "_from_json() (autodeer.classes.parameter class method)": [[63, "autodeer.classes.Parameter._from_json", false]], "_from_json() (autodeer.parameter class method)": [[201, "autodeer.Parameter._from_json", false], [201, "id165", false], [201, "id32", false], [201, "id84", false]], "_from_json() (autodeer.pulse class method)": [[201, "autodeer.Pulse._from_json", false], [201, "id110", false], [201, "id138", false]], "_from_json() (autodeer.pulses.pulse class method)": [[211, "autodeer.pulses.Pulse._from_json", false]], "_from_json() (autodeer.sequence class method)": [[201, "autodeer.Sequence._from_json", false], [201, "id195", false], [201, "id58", false]], "_from_json() (autodeer.sequences.sequence class method)": [[230, "autodeer.sequences.Sequence._from_json", false]], "_from_json() (parameter class method)": [[23, "Parameter._from_json", false], [35, "Parameter._from_json", false], [62, "Parameter._from_json", false], [73, "Parameter._from_json", false], [90, "Parameter._from_json", false], [133, "Parameter._from_json", false], [156, "Parameter._from_json", false], [161, "Parameter._from_json", false], [175, "Parameter._from_json", false], [207, "Parameter._from_json", false], [221, "Parameter._from_json", false]], "_from_json() (pulse class method)": [[36, "Pulse._from_json", false], [74, "Pulse._from_json", false], [91, "Pulse._from_json", false], [157, "Pulse._from_json", false], [162, "Pulse._from_json", false], [176, "Pulse._from_json", false], [208, "Pulse._from_json", false], [222, "Pulse._from_json", false]], "_from_json() (sequence class method)": [[43, "Sequence._from_json", false], [53, "Sequence._from_json", false], [75, "Sequence._from_json", false], [97, "Sequence._from_json", false], [136, "Sequence._from_json", false], [146, "Sequence._from_json", false], [159, "Sequence._from_json", false], [181, "Sequence._from_json", false], [227, "Sequence._from_json", false]], "_gen_eseem() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy._gen_ESEEM", false]], "_get_cur_exp_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink._get_cur_exp_global", false]], "_get_cur_exp_global() (xeprapilink method)": [[125, "XeprAPILink._get_cur_exp_global", false], [138, "XeprAPILink._get_cur_exp_global", false], [164, "XeprAPILink._get_cur_exp_global", false], [186, "XeprAPILink._get_cur_exp_global", false]], "_get_exp() (autodeer.hardware.xepr_experiments.eldortune method)": [[200, "autodeer.hardware.xepr_experiments.ELDORtune._get_exp", false]], "_get_exp() (eldortune method)": [[197, "ELDORtune._get_exp", false]], "_get_xepr_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink._get_Xepr_global", false]], "_get_xepr_global() (xeprapilink method)": [[125, "XeprAPILink._get_Xepr_global", false], [138, "XeprAPILink._get_Xepr_global", false], [164, "XeprAPILink._get_Xepr_global", false], [186, "XeprAPILink._get_Xepr_global", false]], "_launch_complex_thread() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG._launch_complex_thread", false]], "_launch_complex_thread() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU._launch_complex_thread", false]], "_launch_complex_thread() (brukerawg method)": [[122, "BrukerAWG._launch_complex_thread", false]], "_launch_complex_thread() (brukermpfu method)": [[127, "BrukerMPFU._launch_complex_thread", false]], "_main() (autodeer.hardware.bruker_tools.psphasecycle method)": [[147, "autodeer.hardware.Bruker_tools.PSPhaseCycle._main", false]], "_main() (psphasecycle method)": [[132, "PSPhaseCycle._main", false], [142, "PSPhaseCycle._main", false]], "_mpfu() (autodeer.hardware.bruker_tools.psphasecycle method)": [[147, "autodeer.hardware.Bruker_tools.PSPhaseCycle._MPFU", false]], "_mpfu() (psphasecycle method)": [[132, "PSPhaseCycle._MPFU", false], [142, "PSPhaseCycle._MPFU", false]], "_mpfu_channels() (in module autodeer.hardware.bruker_mpfu)": [[139, "autodeer.hardware.Bruker_MPFU._MPFU_channels", false]], "_new_delay() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._new_delay", false]], "_new_delay() (pulsespel method)": [[124, "PulseSpel._new_delay", false], [134, "PulseSpel._new_delay", false], [144, "PulseSpel._new_delay", false]], "_new_pulse() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._new_pulse", false]], "_new_pulse() (pulsespel method)": [[124, "PulseSpel._new_pulse", false], [134, "PulseSpel._new_pulse", false], [144, "PulseSpel._new_pulse", false]], "_new_var() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel._new_var", false]], "_new_var() (pulsespel method)": [[124, "PulseSpel._new_var", false], [134, "PulseSpel._new_var", false], [144, "PulseSpel._new_var", false]], "_pcyc_str() (autodeer.pulse method)": [[201, "autodeer.Pulse._pcyc_str", false], [201, "id103", false], [201, "id131", false]], "_pcyc_str() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse._pcyc_str", false]], "_pcyc_str() (pulse method)": [[36, "Pulse._pcyc_str", false], [74, "Pulse._pcyc_str", false], [91, "Pulse._pcyc_str", false], [157, "Pulse._pcyc_str", false], [162, "Pulse._pcyc_str", false], [176, "Pulse._pcyc_str", false], [208, "Pulse._pcyc_str", false], [222, "Pulse._pcyc_str", false]], "_process_fit() (autodeer.resonatorprofileanalysis method)": [[201, "autodeer.ResonatorProfileAnalysis._process_fit", false]], "_process_fit() (autodeer.respro.resonatorprofileanalysis method)": [[49, "autodeer.ResPro.ResonatorProfileAnalysis._process_fit", false]], "_process_fit() (resonatorprofileanalysis method)": [[48, "ResonatorProfileAnalysis._process_fit", false], [50, "ResonatorProfileAnalysis._process_fit", false]], "_set_cur_exp_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_cur_exp_global", false]], "_set_cur_exp_global() (xeprapilink method)": [[125, "XeprAPILink._set_cur_exp_global", false], [138, "XeprAPILink._set_cur_exp_global", false], [164, "XeprAPILink._set_cur_exp_global", false], [186, "XeprAPILink._set_cur_exp_global", false]], "_set_cur_exp_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_cur_exp_param", false]], "_set_cur_exp_param() (xeprapilink method)": [[125, "XeprAPILink._set_cur_exp_param", false], [138, "XeprAPILink._set_cur_exp_param", false], [164, "XeprAPILink._set_cur_exp_param", false], [186, "XeprAPILink._set_cur_exp_param", false]], "_set_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_hidden_param", false]], "_set_hidden_param() (xeprapilink method)": [[125, "XeprAPILink._set_hidden_param", false], [138, "XeprAPILink._set_hidden_param", false], [164, "XeprAPILink._set_hidden_param", false], [186, "XeprAPILink._set_hidden_param", false]], "_set_xepr_global() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink._set_Xepr_global", false]], "_set_xepr_global() (xeprapilink method)": [[125, "XeprAPILink._set_Xepr_global", false], [138, "XeprAPILink._set_Xepr_global", false], [164, "XeprAPILink._set_Xepr_global", false], [186, "XeprAPILink._set_Xepr_global", false]], "_setup_echo() (autodeer.hardware.xepr_experiments.mpfutune method)": [[200, "autodeer.hardware.xepr_experiments.MPFUtune._setup_echo", false]], "_setup_echo() (mpfutune method)": [[198, "MPFUtune._setup_echo", false]], "_setup_exp() (autodeer.hardware.xepr_experiments.eldortune method)": [[200, "autodeer.hardware.xepr_experiments.ELDORtune._setup_exp", false]], "_setup_exp() (autodeer.hardware.xepr_experiments.pulseprofile method)": [[200, "autodeer.hardware.xepr_experiments.PulseProfile._setup_exp", false]], "_setup_exp() (eldortune method)": [[197, "ELDORtune._setup_exp", false]], "_setup_exp() (pulseprofile method)": [[199, "PulseProfile._setup_exp", false]], "_similate_respro() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy._similate_respro", false]], "_simulate_2d_relax() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy._simulate_2D_relax", false]], "_simulate_cp() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy._simulate_CP", false]], "_simulate_deer() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy._simulate_deer", false]], "_simulate_field_sweep() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy._simulate_field_sweep", false]], "_simulate_reptimescan() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy._simulate_reptimescan", false]], "_simulate_t2() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy._simulate_T2", false]], "_smooth() (autodeer.refocusedecho2danalysis method)": [[201, "autodeer.RefocusedEcho2DAnalysis._smooth", false]], "_smooth() (autodeer.relaxation.refocusedecho2danalysis method)": [[44, "autodeer.Relaxation.RefocusedEcho2DAnalysis._smooth", false]], "_smooth() (refocusedecho2danalysis method)": [[38, "RefocusedEcho2DAnalysis._smooth", false], [41, "RefocusedEcho2DAnalysis._smooth", false]], "_stability_check() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis._stability_check", false]], "_stability_check() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis._stability_check", false]], "_to_dict() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter._to_dict", false]], "_to_dict() (autodeer.parameter method)": [[201, "autodeer.Parameter._to_dict", false], [201, "id161", false], [201, "id28", false], [201, "id80", false]], "_to_dict() (autodeer.pulse method)": [[201, "autodeer.Pulse._to_dict", false], [201, "id106", false], [201, "id134", false]], "_to_dict() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse._to_dict", false]], "_to_dict() (autodeer.sequence method)": [[201, "autodeer.Sequence._to_dict", false], [201, "id191", false], [201, "id54", false]], "_to_dict() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence._to_dict", false]], "_to_dict() (parameter method)": [[23, "Parameter._to_dict", false], [35, "Parameter._to_dict", false], [62, "Parameter._to_dict", false], [73, "Parameter._to_dict", false], [90, "Parameter._to_dict", false], [133, "Parameter._to_dict", false], [156, "Parameter._to_dict", false], [161, "Parameter._to_dict", false], [175, "Parameter._to_dict", false], [207, "Parameter._to_dict", false], [221, "Parameter._to_dict", false]], "_to_dict() (pulse method)": [[36, "Pulse._to_dict", false], [74, "Pulse._to_dict", false], [91, "Pulse._to_dict", false], [157, "Pulse._to_dict", false], [162, "Pulse._to_dict", false], [176, "Pulse._to_dict", false], [208, "Pulse._to_dict", false], [222, "Pulse._to_dict", false]], "_to_dict() (sequence method)": [[43, "Sequence._to_dict", false], [53, "Sequence._to_dict", false], [75, "Sequence._to_dict", false], [97, "Sequence._to_dict", false], [136, "Sequence._to_dict", false], [146, "Sequence._to_dict", false], [159, "Sequence._to_dict", false], [181, "Sequence._to_dict", false], [227, "Sequence._to_dict", false]], "_to_json() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter._to_json", false]], "_to_json() (autodeer.parameter method)": [[201, "autodeer.Parameter._to_json", false], [201, "id162", false], [201, "id29", false], [201, "id81", false]], "_to_json() (autodeer.pulse method)": [[201, "autodeer.Pulse._to_json", false], [201, "id107", false], [201, "id135", false]], "_to_json() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse._to_json", false]], "_to_json() (autodeer.sequence method)": [[201, "autodeer.Sequence._to_json", false], [201, "id192", false], [201, "id55", false]], "_to_json() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence._to_json", false]], "_to_json() (parameter method)": [[23, "Parameter._to_json", false], [35, "Parameter._to_json", false], [62, "Parameter._to_json", false], [73, "Parameter._to_json", false], [90, "Parameter._to_json", false], [133, "Parameter._to_json", false], [156, "Parameter._to_json", false], [161, "Parameter._to_json", false], [175, "Parameter._to_json", false], [207, "Parameter._to_json", false], [221, "Parameter._to_json", false]], "_to_json() (pulse method)": [[36, "Pulse._to_json", false], [74, "Pulse._to_json", false], [91, "Pulse._to_json", false], [157, "Pulse._to_json", false], [162, "Pulse._to_json", false], [176, "Pulse._to_json", false], [208, "Pulse._to_json", false], [222, "Pulse._to_json", false]], "_to_json() (sequence method)": [[43, "Sequence._to_json", false], [53, "Sequence._to_json", false], [75, "Sequence._to_json", false], [97, "Sequence._to_json", false], [136, "Sequence._to_json", false], [146, "Sequence._to_json", false], [159, "Sequence._to_json", false], [181, "Sequence._to_json", false], [227, "Sequence._to_json", false]], "_xepr_retry() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink._xepr_retry", false]], "_xepr_retry() (xeprapilink method)": [[125, "XeprAPILink._xepr_retry", false], [138, "XeprAPILink._xepr_retry", false], [164, "XeprAPILink._xepr_retry", false], [186, "XeprAPILink._xepr_retry", false]], "abort_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[194, "autodeer.hardware.dummy_xepr.dummy_api.abort_exp", false]], "abort_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.abort_exp", false]], "abort_exp() (dummy_api method)": [[187, "dummy_api.abort_exp", false]], "abort_exp() (xeprapilink method)": [[125, "XeprAPILink.abort_exp", false], [138, "XeprAPILink.abort_exp", false], [164, "XeprAPILink.abort_exp", false], [186, "XeprAPILink.abort_exp", false]], "acquire_dataset() (autodeer.classes.interface method)": [[63, "autodeer.classes.Interface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.dummy.dummyinterface method)": [[185, "autodeer.hardware.dummy.dummyInterface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.acquire_dataset", false]], "acquire_dataset() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_dataset", false]], "acquire_dataset() (autodeer.interface method)": [[201, "autodeer.Interface.acquire_dataset", false], [201, "id169", false]], "acquire_dataset() (brukerawg method)": [[122, "BrukerAWG.acquire_dataset", false]], "acquire_dataset() (brukermpfu method)": [[127, "BrukerMPFU.acquire_dataset", false]], "acquire_dataset() (dummyinterface method)": [[184, "dummyInterface.acquire_dataset", false]], "acquire_dataset() (eth_awg_interface method)": [[151, "ETH_awg_interface.acquire_dataset", false]], "acquire_dataset() (interface method)": [[31, "Interface.acquire_dataset", false], [61, "Interface.acquire_dataset", false], [72, "Interface.acquire_dataset", false], [123, "Interface.acquire_dataset", false], [131, "Interface.acquire_dataset", false], [155, "Interface.acquire_dataset", false], [174, "Interface.acquire_dataset", false]], "acquire_dataset() (xeprapilink method)": [[125, "XeprAPILink.acquire_dataset", false], [138, "XeprAPILink.acquire_dataset", false], [164, "XeprAPILink.acquire_dataset", false], [186, "XeprAPILink.acquire_dataset", false]], "acquire_dataset_from_matlab() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.acquire_dataset_from_matlab", false]], "acquire_dataset_from_matlab() (eth_awg_interface method)": [[151, "ETH_awg_interface.acquire_dataset_from_matlab", false]], "acquire_scan() (autodeer.hardware.dummy_xepr.dummy_api method)": [[194, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan", false]], "acquire_scan() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan", false]], "acquire_scan() (dummy_api method)": [[187, "dummy_api.acquire_scan", false]], "acquire_scan() (xeprapilink method)": [[125, "XeprAPILink.acquire_scan", false], [138, "XeprAPILink.acquire_scan", false], [164, "XeprAPILink.acquire_scan", false], [186, "XeprAPILink.acquire_scan", false]], "acquire_scan_2d() (autodeer.hardware.dummy_xepr.dummy_api method)": [[194, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan_2d", false]], "acquire_scan_2d() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan_2d", false]], "acquire_scan_2d() (dummy_api method)": [[187, "dummy_api.acquire_scan_2d", false]], "acquire_scan_2d() (xeprapilink method)": [[125, "XeprAPILink.acquire_scan_2d", false], [138, "XeprAPILink.acquire_scan_2d", false], [164, "XeprAPILink.acquire_scan_2d", false], [186, "XeprAPILink.acquire_scan_2d", false]], "acquire_scan_at() (autodeer.hardware.dummy_xepr.dummy_api method)": [[194, "autodeer.hardware.dummy_xepr.dummy_api.acquire_scan_at", false]], "acquire_scan_at() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.acquire_scan_at", false]], "acquire_scan_at() (dummy_api method)": [[187, "dummy_api.acquire_scan_at", false]], "acquire_scan_at() (xeprapilink method)": [[125, "XeprAPILink.acquire_scan_at", false], [138, "XeprAPILink.acquire_scan_at", false], [164, "XeprAPILink.acquire_scan_at", false], [186, "XeprAPILink.acquire_scan_at", false]], "add_axis() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter.add_axis", false]], "add_axis() (autodeer.parameter method)": [[201, "autodeer.Parameter.add_axis", false], [201, "id151", false], [201, "id18", false], [201, "id70", false]], "add_axis() (parameter method)": [[23, "Parameter.add_axis", false], [35, "Parameter.add_axis", false], [62, "Parameter.add_axis", false], [73, "Parameter.add_axis", false], [90, "Parameter.add_axis", false], [133, "Parameter.add_axis", false], [156, "Parameter.add_axis", false], [161, "Parameter.add_axis", false], [175, "Parameter.add_axis", false], [207, "Parameter.add_axis", false], [221, "Parameter.add_axis", false]], "add_code_block() (autodeer.reporter method)": [[201, "autodeer.Reporter.add_code_block", false]], "add_code_block() (autodeer.reporter.reporter method)": [[214, "autodeer.reporter.Reporter.add_code_block", false]], "add_code_block() (reporter method)": [[45, "Reporter.add_code_block", false], [212, "Reporter.add_code_block", false]], "add_eseem_avg() (autodeer.deersequence method)": [[201, "autodeer.DEERSequence.add_ESEEM_avg", false]], "add_eseem_avg() (autodeer.sequences.deersequence method)": [[230, "autodeer.sequences.DEERSequence.add_ESEEM_avg", false]], "add_eseem_avg() (deersequence method)": [[17, "DEERSequence.add_ESEEM_avg", false], [84, "DEERSequence.add_ESEEM_avg", false], [168, "DEERSequence.add_ESEEM_avg", false], [216, "DEERSequence.add_ESEEM_avg", false]], "add_figure() (autodeer.reporter method)": [[201, "autodeer.Reporter.add_figure", false]], "add_figure() (autodeer.reporter.reporter method)": [[214, "autodeer.reporter.Reporter.add_figure", false]], "add_figure() (reporter method)": [[45, "Reporter.add_figure", false], [212, "Reporter.add_figure", false]], "add_new_entry() (autodeer.gui.log.logdialog method)": [[106, "autodeer.gui.log.LogDialog.add_new_entry", false]], "add_new_entry() (logdialog method)": [[105, "LogDialog.add_new_entry", false], [108, "LogDialog.add_new_entry", false]], "add_new_section() (autodeer.reporter method)": [[201, "autodeer.Reporter.add_new_section", false]], "add_new_section() (autodeer.reporter.reporter method)": [[214, "autodeer.reporter.Reporter.add_new_section", false]], "add_new_section() (reporter method)": [[45, "Reporter.add_new_section", false], [212, "Reporter.add_new_section", false]], "add_noise() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy.add_noise", false]], "add_page_break() (autodeer.reporter method)": [[201, "autodeer.Reporter.add_page_break", false]], "add_page_break() (autodeer.reporter.reporter method)": [[214, "autodeer.reporter.Reporter.add_page_break", false]], "add_page_break() (reporter method)": [[45, "Reporter.add_page_break", false], [212, "Reporter.add_page_break", false]], "add_phaseshift() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy.add_phaseshift", false]], "add_space() (autodeer.reporter method)": [[201, "autodeer.Reporter.add_space", false]], "add_space() (autodeer.reporter.reporter method)": [[214, "autodeer.reporter.Reporter.add_space", false]], "add_space() (reporter method)": [[45, "Reporter.add_space", false], [212, "Reporter.add_space", false]], "add_table() (autodeer.reporter method)": [[201, "autodeer.Reporter.add_table", false]], "add_table() (autodeer.reporter.reporter method)": [[214, "autodeer.reporter.Reporter.add_table", false]], "add_table() (reporter method)": [[45, "Reporter.add_table", false], [212, "Reporter.add_table", false]], "add_text() (autodeer.reporter method)": [[201, "autodeer.Reporter.add_text", false]], "add_text() (autodeer.reporter.reporter method)": [[214, "autodeer.reporter.Reporter.add_text", false]], "add_text() (reporter method)": [[45, "Reporter.add_text", false], [212, "Reporter.add_text", false]], "add_title() (autodeer.reporter method)": [[201, "autodeer.Reporter.add_title", false]], "add_title() (autodeer.reporter.reporter method)": [[214, "autodeer.reporter.Reporter.add_title", false]], "add_title() (reporter method)": [[45, "Reporter.add_title", false], [212, "Reporter.add_title", false]], "addpulse() (autodeer.sequence method)": [[201, "autodeer.Sequence.addPulse", false], [201, "id178", false], [201, "id41", false]], "addpulse() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence.addPulse", false]], "addpulse() (sequence method)": [[43, "Sequence.addPulse", false], [53, "Sequence.addPulse", false], [75, "Sequence.addPulse", false], [97, "Sequence.addPulse", false], [136, "Sequence.addPulse", false], [146, "Sequence.addPulse", false], [159, "Sequence.addPulse", false], [181, "Sequence.addPulse", false], [227, "Sequence.addPulse", false]], "advanced_mode_inputs() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.advanced_mode_inputs", false]], "advanced_mode_inputs() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.advanced_mode_inputs", false]], "advanced_mode_inputs() (autodeerui method)": [[80, "autoDEERUI.advanced_mode_inputs", false], [111, "autoDEERUI.advanced_mode_inputs", false]], "app (in module autodeer.gui.__main__)": [[79, "autodeer.gui.__main__.app", false]], "app (in module autodeer.gui.main)": [[113, "autodeer.gui.main.app", false]], "app (in module autodeer.gui.quickdeer)": [[117, "autodeer.gui.quickdeer.app", false]], "aqexprun() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[194, "autodeer.hardware.dummy_xepr.dummy_cur_exp.aqExpRun", false]], "aqexprun() (dummy_cur_exp method)": [[188, "dummy_cur_exp.aqExpRun", false]], "aqexpselect() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqExpSelect", false]], "aqexpselect() (dummy_xepr.xeprcmds method)": [[192, "dummy_xepr.XeprCmds.aqExpSelect", false]], "aqexpselect() (xeprcmds method)": [[193, "XeprCmds.aqExpSelect", false]], "aqpgcompile() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgCompile", false]], "aqpgcompile() (dummy_xepr.xeprcmds method)": [[192, "dummy_xepr.XeprCmds.aqPgCompile", false]], "aqpgcompile() (xeprcmds method)": [[193, "XeprCmds.aqPgCompile", false]], "aqpgdefload() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgDefLoad", false]], "aqpgdefload() (dummy_xepr.xeprcmds method)": [[192, "dummy_xepr.XeprCmds.aqPgDefLoad", false]], "aqpgdefload() (xeprcmds method)": [[193, "XeprCmds.aqPgDefLoad", false]], "aqpgdefsaveas() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgDefSaveAs", false]], "aqpgdefsaveas() (dummy_xepr.xeprcmds method)": [[192, "dummy_xepr.XeprCmds.aqPgDefSaveAs", false]], "aqpgdefsaveas() (xeprcmds method)": [[193, "XeprCmds.aqPgDefSaveAs", false]], "aqpgload() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgLoad", false]], "aqpgload() (dummy_xepr.xeprcmds method)": [[192, "dummy_xepr.XeprCmds.aqPgLoad", false]], "aqpgload() (xeprcmds method)": [[193, "XeprCmds.aqPgLoad", false]], "aqpgsaveas() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgSaveAs", false]], "aqpgsaveas() (dummy_xepr.xeprcmds method)": [[192, "dummy_xepr.XeprCmds.aqPgSaveAs", false]], "aqpgsaveas() (xeprcmds method)": [[193, "XeprCmds.aqPgSaveAs", false]], "aqpgshowprg() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.aqPgShowPrg", false]], "aqpgshowprg() (dummy_xepr.xeprcmds method)": [[192, "dummy_xepr.XeprCmds.aqPgShowPrg", false]], "aqpgshowprg() (xeprcmds method)": [[193, "XeprCmds.aqPgShowPrg", false]], "autodeer": [[201, "module-autodeer", false]], "autodeer._version": [[60, "module-autodeer._version", false]], "autodeer.classes": [[63, "module-autodeer.classes", false]], "autodeer.colors": [[64, "module-autodeer.colors", false]], "autodeer.criteria": [[69, "module-autodeer.criteria", false]], "autodeer.dataset": [[76, "module-autodeer.dataset", false]], "autodeer.deer_analysis": [[18, "module-autodeer.DEER_analysis", false]], "autodeer.fieldsweep": [[25, "module-autodeer.FieldSweep", false]], "autodeer.gui": [[104, "module-autodeer.gui", false]], "autodeer.gui.__main__": [[79, "module-autodeer.gui.__main__", false]], "autodeer.gui.autodeer_worker": [[103, "module-autodeer.gui.autoDEER_worker", false]], "autodeer.gui.log": [[106, "module-autodeer.gui.log", false]], "autodeer.gui.main": [[113, "module-autodeer.gui.main", false]], "autodeer.gui.quickdeer": [[117, "module-autodeer.gui.quickdeer", false]], "autodeer.gui.test_main": [[118, "module-autodeer.gui.test_main", false]], "autodeer.gui.tools": [[121, "module-autodeer.gui.tools", false]], "autodeer.hardware": [[195, "module-autodeer.hardware", false]], "autodeer.hardware.bruker_awg": [[126, "module-autodeer.hardware.Bruker_AWG", false]], "autodeer.hardware.bruker_mpfu": [[139, "module-autodeer.hardware.Bruker_MPFU", false]], "autodeer.hardware.bruker_tools": [[147, "module-autodeer.hardware.Bruker_tools", false]], "autodeer.hardware.dummy": [[185, "module-autodeer.hardware.dummy", false]], "autodeer.hardware.dummy_xepr": [[194, "module-autodeer.hardware.dummy_xepr", false]], "autodeer.hardware.eth_awg": [[160, "module-autodeer.hardware.ETH_awg", false]], "autodeer.hardware.eth_awg_load": [[163, "module-autodeer.hardware.ETH_awg_load", false]], "autodeer.hardware.xepr_experiments": [[200, "module-autodeer.hardware.xepr_experiments", false]], "autodeer.hardware.xeprapi_link": [[165, "module-autodeer.hardware.XeprAPI_link", false]], "autodeer.logging": [[34, "module-autodeer.Logging", false]], "autodeer.pulses": [[211, "module-autodeer.pulses", false]], "autodeer.relaxation": [[44, "module-autodeer.Relaxation", false]], "autodeer.reporter": [[214, "module-autodeer.reporter", false]], "autodeer.respro": [[49, "module-autodeer.ResPro", false]], "autodeer.sequences": [[230, "module-autodeer.sequences", false]], "autodeer.tools": [[231, "module-autodeer.tools", false]], "autodeer.twod_experiment": [[59, "module-autodeer.TwoD_Experiment", false]], "autodeer.utils": [[232, "module-autodeer.utils", false]], "autodeersignals (built-in class)": [[101, "autoDEERSignals", false]], "autodeersignals (class in autodeer.gui.autodeer_worker)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals", false]], "autodeerui (built-in class)": [[80, "autoDEERUI", false], [111, "autoDEERUI", false]], "autodeerui (class in autodeer.gui)": [[104, "autodeer.gui.autoDEERUI", false]], "autodeerui (class in autodeer.gui.main)": [[113, "autodeer.gui.main.autoDEERUI", false]], "autodeerworker (built-in class)": [[102, "autoDEERWorker", false], [112, "autoDEERWorker", false]], "autodeerworker (class in autodeer.gui.autodeer_worker)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker", false]], "autoeprdecoder() (in module autodeer)": [[201, "autodeer.autoEPRDecoder", false], [201, "id117", false], [201, "id36", false], [201, "id89", false]], "autoeprdecoder() (in module autodeer.utils)": [[232, "autodeer.utils.autoEPRDecoder", false]], "background_func() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.background_func", false]], "bg_thread() (in module autodeer.hardware.eth_awg)": [[160, "autodeer.hardware.ETH_awg.bg_thread", false]], "brukerawg (built-in class)": [[122, "BrukerAWG", false]], "brukerawg (class in autodeer.hardware.bruker_awg)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG", false]], "brukermpfu (built-in class)": [[127, "BrukerMPFU", false]], "brukermpfu (class in autodeer.hardware.bruker_mpfu)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU", false]], "bspline_extra() (in module autodeer.respro)": [[49, "autodeer.ResPro.BSpline_extra", false]], "build__lowpass_butter_filter() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.build__lowpass_butter_filter", false]], "build_default_pulses() (in module autodeer)": [[201, "autodeer.build_default_pulses", false]], "build_default_pulses() (in module autodeer.pulses)": [[211, "autodeer.pulses.build_default_pulses", false]], "build_shape() (autodeer.pulse method)": [[201, "autodeer.Pulse.build_shape", false], [201, "id121", false], [201, "id93", false]], "build_shape() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse.build_shape", false]], "build_shape() (pulse method)": [[36, "Pulse.build_shape", false], [74, "Pulse.build_shape", false], [91, "Pulse.build_shape", false], [157, "Pulse.build_shape", false], [162, "Pulse.build_shape", false], [176, "Pulse.build_shape", false], [208, "Pulse.build_shape", false], [222, "Pulse.build_shape", false]], "build_spectrum() (in module autodeer.fieldsweep)": [[25, "autodeer.FieldSweep.build_spectrum", false]], "build_table() (autodeer.pulse method)": [[201, "autodeer.Pulse.build_table", false], [201, "id122", false], [201, "id94", false]], "build_table() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse.build_table", false]], "build_table() (in module autodeer)": [[201, "autodeer.build_table", false], [201, "id35", false], [201, "id86", false]], "build_table() (in module autodeer.utils)": [[232, "autodeer.utils.build_table", false]], "build_table() (pulse method)": [[36, "Pulse.build_table", false], [74, "Pulse.build_table", false], [91, "Pulse.build_table", false], [157, "Pulse.build_table", false], [162, "Pulse.build_table", false], [176, "Pulse.build_table", false], [208, "Pulse.build_table", false], [222, "Pulse.build_table", false]], "build_unique_progtable() (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.build_unique_progtable", false]], "calc_correction_factor() (in module autodeer)": [[201, "autodeer.calc_correction_factor", false]], "calc_correction_factor() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.calc_correction_factor", false]], "calc_d0() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG.calc_d0", false]], "calc_d0() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.calc_d0", false]], "calc_d0() (autodeer.hardware.xepr_experiments.mpfutune method)": [[200, "autodeer.hardware.xepr_experiments.MPFUtune.calc_d0", false]], "calc_d0() (brukerawg method)": [[122, "BrukerAWG.calc_d0", false]], "calc_d0() (brukermpfu method)": [[127, "BrukerMPFU.calc_d0", false]], "calc_d0() (mpfutune method)": [[198, "MPFUtune.calc_d0", false]], "calc_d0_from_hahn_echo() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (brukerawg method)": [[122, "BrukerAWG.calc_d0_from_Hahn_Echo", false]], "calc_d0_from_hahn_echo() (brukermpfu method)": [[127, "BrukerMPFU.calc_d0_from_Hahn_Echo", false]], "calc_deer_settings() (in module autodeer)": [[201, "autodeer.calc_deer_settings", false]], "calc_deer_settings() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.calc_deer_settings", false]], "calc_gyro() (autodeer.fieldsweep.fieldsweepanalysis method)": [[25, "autodeer.FieldSweep.FieldSweepAnalysis.calc_gyro", false]], "calc_gyro() (autodeer.fieldsweepanalysis method)": [[201, "autodeer.FieldSweepAnalysis.calc_gyro", false]], "calc_gyro() (fieldsweepanalysis method)": [[22, "FieldSweepAnalysis.calc_gyro", false], [26, "FieldSweepAnalysis.calc_gyro", false]], "calc_identifiability() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.calc_identifiability", false]], "calc_noise_level() (autodeer.fieldsweep.fieldsweepanalysis method)": [[25, "autodeer.FieldSweep.FieldSweepAnalysis.calc_noise_level", false]], "calc_noise_level() (autodeer.fieldsweepanalysis method)": [[201, "autodeer.FieldSweepAnalysis.calc_noise_level", false]], "calc_noise_level() (fieldsweepanalysis method)": [[22, "FieldSweepAnalysis.calc_noise_level", false], [26, "FieldSweepAnalysis.calc_noise_level", false]], "calc_optimal_reptime() (autodeer.relaxation.reptimeanalysis method)": [[44, "autodeer.Relaxation.ReptimeAnalysis.calc_optimal_reptime", false]], "calc_optimal_reptime() (autodeer.reptimeanalysis method)": [[201, "autodeer.ReptimeAnalysis.calc_optimal_reptime", false]], "calc_optimal_reptime() (reptimeanalysis method)": [[42, "ReptimeAnalysis.calc_optimal_reptime", false], [46, "ReptimeAnalysis.calc_optimal_reptime", false]], "calc_overlap() (in module autodeer.respro)": [[49, "autodeer.ResPro.calc_overlap", false]], "calc_percieved_freq() (in module autodeer.hardware.eth_awg_load)": [[163, "autodeer.hardware.ETH_awg_load.calc_percieved_freq", false]], "calc_rel_positions() (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.calc_rel_positions", false]], "calculate_noise_level() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_noise_level", false]], "calculate_noise_level() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.calculate_noise_level", false]], "calculate_optimal() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_optimal", false]], "calculate_optimal() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.calculate_optimal", false]], "calculate_snr_threshold() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.calculate_snr_threshold", false]], "calculate_snr_threshold() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.calculate_snr_threshold", false]], "calibratefreq() (in module autodeer.hardware.xepr_experiments)": [[200, "autodeer.hardware.xepr_experiments.CalibrateFreq", false]], "carrpurcellanalysis (built-in class)": [[12, "CarrPurcellAnalysis", false], [40, "CarrPurcellAnalysis", false]], "carrpurcellanalysis (class in autodeer)": [[201, "autodeer.CarrPurcellAnalysis", false]], "carrpurcellanalysis (class in autodeer.relaxation)": [[44, "autodeer.Relaxation.CarrPurcellAnalysis", false]], "carrpurcellsequence (built-in class)": [[13, "CarrPurcellSequence", false], [81, "CarrPurcellSequence", false], [166, "CarrPurcellSequence", false], [215, "CarrPurcellSequence", false]], "carrpurcellsequence (class in autodeer)": [[201, "autodeer.CarrPurcellSequence", false]], "carrpurcellsequence (class in autodeer.sequences)": [[230, "autodeer.sequences.CarrPurcellSequence", false]], "ceil() (in module autodeer.respro)": [[49, "autodeer.ResPro.ceil", false]], "change_dimensions() (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.change_dimensions", false]], "change_lo() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.change_LO", false]], "change_lo() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.change_LO", false]], "change_lo() (autodeerui method)": [[80, "autoDEERUI.change_LO", false], [111, "autoDEERUI.change_LO", false]], "change_log_level() (in module autodeer.logging)": [[34, "autodeer.Logging.change_log_level", false]], "check_cp() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.check_CP", false]], "check_cp() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.check_CP", false]], "check_cp() (autodeerui method)": [[80, "autoDEERUI.check_CP", false], [111, "autoDEERUI.check_CP", false]], "check_decay() (autodeer.carrpurcellanalysis method)": [[201, "autodeer.CarrPurcellAnalysis.check_decay", false]], "check_decay() (autodeer.relaxation.carrpurcellanalysis method)": [[44, "autodeer.Relaxation.CarrPurcellAnalysis.check_decay", false]], "check_decay() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.check_decay", false], [40, "CarrPurcellAnalysis.check_decay", false]], "check_t2() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.check_T2", false]], "check_t2() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.check_T2", false]], "check_t2() (autodeerui method)": [[80, "autoDEERUI.check_T2", false], [111, "autoDEERUI.check_T2", false]], "check_variable() (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.check_variable", false]], "checkpulsespel() (autodeer.hardware.bruker_tools.psparvar method)": [[147, "autodeer.hardware.Bruker_tools.PSparvar.checkPulseSpel", false]], "checkpulsespel() (psparvar method)": [[143, "PSparvar.checkPulseSpel", false]], "chirppulse (built-in class)": [[14, "ChirpPulse", false], [82, "ChirpPulse", false], [148, "ChirpPulse", false], [167, "ChirpPulse", false], [202, "ChirpPulse", false]], "chirppulse (class in autodeer)": [[201, "autodeer.ChirpPulse", false]], "chirppulse (class in autodeer.pulses)": [[211, "autodeer.pulses.ChirpPulse", false]], "clear_log() (autodeer.gui.log.logdialog method)": [[106, "autodeer.gui.log.LogDialog.clear_log", false]], "clear_log() (logdialog method)": [[105, "LogDialog.clear_log", false], [108, "LogDialog.clear_log", false]], "clearlayout() (autodeer.gui.quickdeer.deerplot method)": [[117, "autodeer.gui.quickdeer.DEERplot.clearLayout", false]], "clearlayout() (deerplot method)": [[107, "DEERplot.clearLayout", false], [114, "DEERplot.clearLayout", false]], "cmap (in module autodeer)": [[201, "autodeer.cmap", false]], "cmap (in module autodeer.relaxation)": [[44, "autodeer.Relaxation.cmap", false]], "combo_figure() (in module autodeer)": [[201, "autodeer.combo_figure", false]], "combo_figure() (in module autodeer.reporter)": [[214, "autodeer.reporter.combo_figure", false]], "compile_pulsespel_def() (autodeer.hardware.dummy_xepr.dummy_api method)": [[194, "autodeer.hardware.dummy_xepr.dummy_api.compile_PulseSpel_def", false]], "compile_pulsespel_def() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.compile_PulseSpel_def", false]], "compile_pulsespel_def() (dummy_api method)": [[187, "dummy_api.compile_PulseSpel_def", false]], "compile_pulsespel_def() (xeprapilink method)": [[125, "XeprAPILink.compile_PulseSpel_def", false], [138, "XeprAPILink.compile_PulseSpel_def", false], [164, "XeprAPILink.compile_PulseSpel_def", false], [186, "XeprAPILink.compile_PulseSpel_def", false]], "compile_pulsespel_prg() (autodeer.hardware.dummy_xepr.dummy_api method)": [[194, "autodeer.hardware.dummy_xepr.dummy_api.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (dummy_api method)": [[187, "dummy_api.compile_PulseSpel_prg", false]], "compile_pulsespel_prg() (xeprapilink method)": [[125, "XeprAPILink.compile_PulseSpel_prg", false], [138, "XeprAPILink.compile_PulseSpel_prg", false], [164, "XeprAPILink.compile_PulseSpel_prg", false], [186, "XeprAPILink.compile_PulseSpel_prg", false]], "connect() (autodeer.classes.interface method)": [[63, "autodeer.classes.Interface.connect", false]], "connect() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG.connect", false]], "connect() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.connect", false]], "connect() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.connect", false]], "connect() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.connect", false]], "connect() (autodeer.interface method)": [[201, "autodeer.Interface.connect", false], [201, "id168", false]], "connect() (brukerawg method)": [[122, "BrukerAWG.connect", false]], "connect() (brukermpfu method)": [[127, "BrukerMPFU.connect", false]], "connect() (eth_awg_interface method)": [[151, "ETH_awg_interface.connect", false]], "connect() (interface method)": [[31, "Interface.connect", false], [61, "Interface.connect", false], [72, "Interface.connect", false], [123, "Interface.connect", false], [131, "Interface.connect", false], [155, "Interface.connect", false], [174, "Interface.connect", false]], "connect() (xeprapilink method)": [[125, "XeprAPILink.connect", false], [138, "XeprAPILink.connect", false], [164, "XeprAPILink.connect", false], [186, "XeprAPILink.connect", false]], "connect_spectrometer() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.connect_spectrometer", false]], "connect_spectrometer() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.connect_spectrometer", false]], "connect_spectrometer() (autodeerui method)": [[80, "autoDEERUI.connect_spectrometer", false], [111, "autoDEERUI.connect_spectrometer", false]], "convert() (autodeer.sequence method)": [[201, "autodeer.Sequence.convert", false], [201, "id185", false], [201, "id48", false]], "convert() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence.convert", false]], "convert() (sequence method)": [[43, "Sequence.convert", false], [53, "Sequence.convert", false], [75, "Sequence.convert", false], [97, "Sequence.convert", false], [136, "Sequence.convert", false], [146, "Sequence.convert", false], [159, "Sequence.convert", false], [181, "Sequence.convert", false], [227, "Sequence.convert", false]], "convert_progtable() (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.convert_progtable", false]], "copy() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter.copy", false]], "copy() (autodeer.parameter method)": [[201, "autodeer.Parameter.copy", false], [201, "id160", false], [201, "id27", false], [201, "id79", false]], "copy() (autodeer.pulse method)": [[201, "autodeer.Pulse.copy", false], [201, "id105", false], [201, "id133", false]], "copy() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse.copy", false]], "copy() (autodeer.sequence method)": [[201, "autodeer.Sequence.copy", false], [201, "id190", false], [201, "id53", false]], "copy() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence.copy", false]], "copy() (parameter method)": [[23, "Parameter.copy", false], [35, "Parameter.copy", false], [62, "Parameter.copy", false], [73, "Parameter.copy", false], [90, "Parameter.copy", false], [133, "Parameter.copy", false], [156, "Parameter.copy", false], [161, "Parameter.copy", false], [175, "Parameter.copy", false], [207, "Parameter.copy", false], [221, "Parameter.copy", false]], "copy() (pulse method)": [[36, "Pulse.copy", false], [74, "Pulse.copy", false], [91, "Pulse.copy", false], [157, "Pulse.copy", false], [162, "Pulse.copy", false], [176, "Pulse.copy", false], [208, "Pulse.copy", false], [222, "Pulse.copy", false]], "copy() (sequence method)": [[43, "Sequence.copy", false], [53, "Sequence.copy", false], [75, "Sequence.copy", false], [97, "Sequence.copy", false], [136, "Sequence.copy", false], [146, "Sequence.copy", false], [159, "Sequence.copy", false], [181, "Sequence.copy", false], [227, "Sequence.copy", false]], "correctphase (autodeer.dataset.epraccessor property)": [[76, "autodeer.dataset.EPRAccessor.correctphase", false]], "correctphase (autodeer.epraccessor property)": [[201, "autodeer.EPRAccessor.correctphase", false]], "correctphase (epraccessor property)": [[21, "EPRAccessor.correctphase", false], [71, "EPRAccessor.correctphase", false]], "correctphasefull (autodeer.dataset.epraccessor property)": [[76, "autodeer.dataset.EPRAccessor.correctphasefull", false]], "correctphasefull (autodeer.epraccessor property)": [[201, "autodeer.EPRAccessor.correctphasefull", false]], "correctphasefull (epraccessor property)": [[21, "EPRAccessor.correctphasefull", false], [71, "EPRAccessor.correctphasefull", false]], "cp_run() (in module autodeer.hardware.xepr_experiments)": [[200, "autodeer.hardware.xepr_experiments.CP_run", false]], "create_bahrenberg_plots() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_bahrenberg_plots", false]], "create_bahrenberg_plots() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.create_bahrenberg_plots", false]], "create_dataset_from_axes() (in module autodeer)": [[201, "autodeer.create_dataset_from_axes", false]], "create_dataset_from_axes() (in module autodeer.dataset)": [[76, "autodeer.dataset.create_dataset_from_axes", false]], "create_dataset_from_bruker() (in module autodeer)": [[201, "autodeer.create_dataset_from_bruker", false]], "create_dataset_from_bruker() (in module autodeer.dataset)": [[76, "autodeer.dataset.create_dataset_from_bruker", false]], "create_dataset_from_sequence() (in module autodeer)": [[201, "autodeer.create_dataset_from_sequence", false]], "create_dataset_from_sequence() (in module autodeer.dataset)": [[76, "autodeer.dataset.create_dataset_from_sequence", false]], "create_fieldsweep_figure() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.create_fieldsweep_figure", false]], "create_fieldsweep_figure() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.create_fieldsweep_figure", false]], "create_fieldsweep_figure() (autodeerui method)": [[80, "autoDEERUI.create_fieldsweep_figure", false], [111, "autoDEERUI.create_fieldsweep_figure", false]], "create_figure() (autodeer.gui.quickdeer.deerplot method)": [[117, "autodeer.gui.quickdeer.DEERplot.create_figure", false]], "create_figure() (deerplot method)": [[107, "DEERplot.create_figure", false], [114, "DEERplot.create_figure", false]], "create_nmodel() (in module autodeer.fieldsweep)": [[25, "autodeer.FieldSweep.create_Nmodel", false]], "create_relax_figure() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.create_relax_figure", false]], "create_relax_figure() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.create_relax_figure", false]], "create_relax_figure() (autodeerui method)": [[80, "autoDEERUI.create_relax_figure", false], [111, "autoDEERUI.create_relax_figure", false]], "create_report() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.create_report", false]], "create_report() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.create_report", false]], "create_report() (autodeerui method)": [[80, "autoDEERUI.create_report", false], [111, "autoDEERUI.create_report", false]], "create_report() (in module autodeer.reporter)": [[214, "autodeer.reporter.create_report", false]], "create_respro_figure() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.create_respro_figure", false]], "create_respro_figure() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.create_respro_figure", false]], "create_respro_figure() (autodeerui method)": [[80, "autoDEERUI.create_respro_figure", false], [111, "autoDEERUI.create_respro_figure", false]], "create_slice_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_slice_plot", false]], "create_slice_plot() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.create_slice_plot", false]], "create_twod_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.create_twoD_plot", false]], "create_twod_plot() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.create_twoD_plot", false]], "criteria (built-in class)": [[15, "Criteria", false], [65, "Criteria", false]], "criteria (class in autodeer)": [[201, "autodeer.Criteria", false]], "criteria (class in autodeer.criteria)": [[69, "autodeer.criteria.Criteria", false]], "deer (built-in class)": [[196, "DEER", false]], "deer (class in autodeer.hardware.xepr_experiments)": [[200, "autodeer.hardware.xepr_experiments.DEER", false]], "deer5p_run() (in module autodeer.hardware.xepr_experiments)": [[200, "autodeer.hardware.xepr_experiments.DEER5p_run", false]], "deeranalysis() (in module autodeer)": [[201, "autodeer.DEERanalysis", false], [201, "id116", false]], "deeranalysis() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.DEERanalysis", false]], "deeranalysis_plot() (in module autodeer)": [[201, "autodeer.DEERanalysis_plot", false]], "deeranalysis_plot() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.DEERanalysis_plot", false]], "deeranalysis_plot_pub() (in module autodeer)": [[201, "autodeer.DEERanalysis_plot_pub", false]], "deeranalysis_plot_pub() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.DEERanalysis_plot_pub", false]], "deeranalysis_process() (in module autodeer.gui.quickdeer)": [[117, "autodeer.gui.quickdeer.deeranalysis_process", false]], "deercriteria (built-in class)": [[16, "DEERCriteria", false], [66, "DEERCriteria", false], [83, "DEERCriteria", false]], "deercriteria (class in autodeer)": [[201, "autodeer.DEERCriteria", false]], "deercriteria (class in autodeer.criteria)": [[69, "autodeer.criteria.DEERCriteria", false]], "deerplot (built-in class)": [[107, "DEERplot", false], [114, "DEERplot", false]], "deerplot (class in autodeer.gui.quickdeer)": [[117, "autodeer.gui.quickdeer.DEERplot", false]], "deersequence (built-in class)": [[17, "DEERSequence", false], [84, "DEERSequence", false], [168, "DEERSequence", false], [216, "DEERSequence", false]], "deersequence (class in autodeer)": [[201, "autodeer.DEERSequence", false]], "deersequence (class in autodeer.sequences)": [[230, "autodeer.sequences.DEERSequence", false]], "delay (built-in class)": [[19, "Delay", false], [85, "Delay", false], [128, "Delay", false], [140, "Delay", false], [149, "Delay", false], [169, "Delay", false], [203, "Delay", false], [217, "Delay", false]], "delay (class in autodeer)": [[201, "autodeer.Delay", false], [201, "id113", false]], "delay (class in autodeer.pulses)": [[211, "autodeer.pulses.Delay", false]], "detect_eseem() (in module autodeer)": [[201, "autodeer.detect_ESEEM", false]], "detect_eseem() (in module autodeer.relaxation)": [[44, "autodeer.Relaxation.detect_ESEEM", false]], "detection (built-in class)": [[20, "Detection", false], [70, "Detection", false], [86, "Detection", false], [129, "Detection", false], [141, "Detection", false], [150, "Detection", false], [170, "Detection", false], [204, "Detection", false], [218, "Detection", false]], "detection (class in autodeer)": [[201, "autodeer.Detection", false], [201, "id112", false], [201, "id140", false]], "detection (class in autodeer.pulses)": [[211, "autodeer.pulses.Detection", false]], "dictformater (built-in class)": [[32, "DictFormater", false]], "dictformater (class in autodeer.logging)": [[34, "autodeer.Logging.DictFormater", false]], "digitally_upconvert() (in module autodeer.hardware.eth_awg_load)": [[163, "autodeer.hardware.ETH_awg_load.digitally_upconvert", false]], "dim (autodeer.classes.parameter property)": [[63, "autodeer.classes.Parameter.dim", false]], "dim (autodeer.parameter property)": [[201, "autodeer.Parameter.dim", false], [201, "id150", false], [201, "id17", false], [201, "id69", false]], "dim (parameter property)": [[23, "Parameter.dim", false], [35, "Parameter.dim", false], [62, "Parameter.dim", false], [73, "Parameter.dim", false], [90, "Parameter.dim", false], [133, "Parameter.dim", false], [156, "Parameter.dim", false], [161, "Parameter.dim", false], [175, "Parameter.dim", false], [207, "Parameter.dim", false], [221, "Parameter.dim", false]], "draw() (autodeer.reporter.svgflowable method)": [[214, "autodeer.reporter.SvgFlowable.draw", false]], "draw() (svgflowable method)": [[213, "SvgFlowable.draw", false]], "dummy_api (built-in class)": [[187, "dummy_api", false]], "dummy_api (class in autodeer.hardware.dummy_xepr)": [[194, "autodeer.hardware.dummy_xepr.dummy_api", false]], "dummy_cur_exp (built-in class)": [[188, "dummy_cur_exp", false]], "dummy_cur_exp (class in autodeer.hardware.dummy_xepr)": [[194, "autodeer.hardware.dummy_xepr.dummy_cur_exp", false]], "dummy_dataset (built-in class)": [[189, "dummy_dataset", false]], "dummy_dataset (class in autodeer.hardware.dummy_xepr)": [[194, "autodeer.hardware.dummy_xepr.dummy_dataset", false]], "dummy_hidden (built-in class)": [[190, "dummy_hidden", false]], "dummy_hidden (class in autodeer.hardware.dummy_xepr)": [[194, "autodeer.hardware.dummy_xepr.dummy_hidden", false]], "dummy_param (built-in class)": [[191, "dummy_param", false]], "dummy_param (class in autodeer.hardware.dummy_xepr)": [[194, "autodeer.hardware.dummy_xepr.dummy_param", false]], "dummy_xepr (built-in class)": [[192, "dummy_xepr", false]], "dummy_xepr (class in autodeer.hardware.dummy_xepr)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr", false]], "dummy_xepr.xeprcmds (built-in class)": [[192, "dummy_xepr.XeprCmds", false]], "dummy_xepr.xeprcmds (class in autodeer.hardware.dummy_xepr)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds", false]], "dummyinterface (built-in class)": [[184, "dummyInterface", false]], "dummyinterface (class in autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy.dummyInterface", false]], "eldortune (built-in class)": [[197, "ELDORtune", false]], "eldortune (class in autodeer.hardware.xepr_experiments)": [[200, "autodeer.hardware.xepr_experiments.ELDORtune", false]], "eldortune() (in module autodeer.hardware.bruker_mpfu)": [[139, "autodeer.hardware.Bruker_MPFU.ELDORtune", false]], "emit() (autodeer.logging.qtloghandler method)": [[34, "autodeer.Logging.QtLogHandler.emit", false]], "emit() (qtloghandler method)": [[33, "QtLogHandler.emit", false]], "epraccessor (built-in class)": [[21, "EPRAccessor", false], [71, "EPRAccessor", false]], "epraccessor (class in autodeer)": [[201, "autodeer.EPRAccessor", false]], "epraccessor (class in autodeer.dataset)": [[76, "autodeer.dataset.EPRAccessor", false]], "eprload() (in module autodeer)": [[201, "autodeer.eprload", false]], "eprload() (in module autodeer.tools)": [[231, "autodeer.tools.eprload", false]], "erot() (in module autodeer.fieldsweep)": [[25, "autodeer.FieldSweep.erot", false]], "error (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.error", false]], "error (autodeer.gui.main.workersignals attribute)": [[113, "autodeer.gui.main.WorkerSignals.error", false]], "error (autodeer.gui.tools.workersignals attribute)": [[121, "autodeer.gui.tools.WorkerSignals.error", false]], "error (autodeer.gui.workersignals attribute)": [[104, "autodeer.gui.WorkerSignals.error", false]], "error (autodeersignals attribute)": [[101, "autoDEERSignals.error", false]], "error (workersignals attribute)": [[78, "WorkerSignals.error", false], [110, "WorkerSignals.error", false], [116, "WorkerSignals.error", false], [120, "WorkerSignals.error", false]], "estimated_snr() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.estimated_snr", false]], "estimated_snr() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.estimated_snr", false]], "eth_awg_interface (built-in class)": [[151, "ETH_awg_interface", false]], "eth_awg_interface (class in autodeer.hardware.eth_awg)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface", false]], "evolution() (autodeer.sequence method)": [[201, "autodeer.Sequence.evolution", false], [201, "id181", false], [201, "id44", false]], "evolution() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence.evolution", false]], "evolution() (sequence method)": [[43, "Sequence.evolution", false], [53, "Sequence.evolution", false], [75, "Sequence.evolution", false], [97, "Sequence.evolution", false], [136, "Sequence.evolution", false], [146, "Sequence.evolution", false], [159, "Sequence.evolution", false], [181, "Sequence.evolution", false], [227, "Sequence.evolution", false]], "exciteprofile() (autodeer.pulse method)": [[201, "autodeer.Pulse.exciteprofile", false], [201, "id100", false], [201, "id128", false]], "exciteprofile() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse.exciteprofile", false]], "exciteprofile() (pulse method)": [[36, "Pulse.exciteprofile", false], [74, "Pulse.exciteprofile", false], [91, "Pulse.exciteprofile", false], [157, "Pulse.exciteprofile", false], [162, "Pulse.exciteprofile", false], [176, "Pulse.exciteprofile", false], [208, "Pulse.exciteprofile", false], [222, "Pulse.exciteprofile", false]], "eyekron() (in module autodeer.fieldsweep)": [[25, "autodeer.FieldSweep.eyekron", false]], "fft (autodeer.dataset.epraccessor property)": [[76, "autodeer.dataset.EPRAccessor.fft", false]], "fft (autodeer.epraccessor property)": [[201, "autodeer.EPRAccessor.fft", false]], "fft (epraccessor property)": [[21, "EPRAccessor.fft", false], [71, "EPRAccessor.fft", false]], "fieldsweep_fit() (in module autodeer.gui.main)": [[113, "autodeer.gui.main.fieldsweep_fit", false]], "fieldsweepanalysis (built-in class)": [[22, "FieldSweepAnalysis", false], [26, "FieldSweepAnalysis", false]], "fieldsweepanalysis (class in autodeer)": [[201, "autodeer.FieldSweepAnalysis", false]], "fieldsweepanalysis (class in autodeer.fieldsweep)": [[25, "autodeer.FieldSweep.FieldSweepAnalysis", false]], "fieldsweepsequence (built-in class)": [[27, "FieldSweepSequence", false], [87, "FieldSweepSequence", false], [152, "FieldSweepSequence", false], [171, "FieldSweepSequence", false], [219, "FieldSweepSequence", false]], "fieldsweepsequence (class in autodeer)": [[201, "autodeer.FieldSweepSequence", false]], "fieldsweepsequence (class in autodeer.sequences)": [[230, "autodeer.sequences.FieldSweepSequence", false]], "fill_table() (in module autodeer.gui)": [[104, "autodeer.gui.fill_table", false]], "fill_table() (in module autodeer.gui.tools)": [[121, "autodeer.gui.tools.fill_table", false]], "find_cur_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_cur_exp", false]], "find_cur_exp() (xeprapilink method)": [[125, "XeprAPILink.find_cur_exp", false], [138, "XeprAPILink.find_cur_exp", false], [164, "XeprAPILink.find_cur_exp", false], [186, "XeprAPILink.find_cur_exp", false]], "find_hidden() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_hidden", false]], "find_hidden() (xeprapilink method)": [[125, "XeprAPILink.find_hidden", false], [138, "XeprAPILink.find_hidden", false], [164, "XeprAPILink.find_hidden", false], [186, "XeprAPILink.find_hidden", false]], "find_longest_pulse() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.find_longest_pulse", false]], "find_max() (autodeer.fieldsweep.fieldsweepanalysis method)": [[25, "autodeer.FieldSweep.FieldSweepAnalysis.find_max", false]], "find_max() (autodeer.fieldsweepanalysis method)": [[201, "autodeer.FieldSweepAnalysis.find_max", false]], "find_max() (fieldsweepanalysis method)": [[22, "FieldSweepAnalysis.find_max", false], [26, "FieldSweepAnalysis.find_max", false]], "find_max_pulse_length() (in module autodeer.hardware.eth_awg_load)": [[163, "autodeer.hardware.ETH_awg_load.find_max_pulse_length", false]], "find_min() (autodeer.hardware.xepr_experiments.eldortune method)": [[200, "autodeer.hardware.xepr_experiments.ELDORtune.find_min", false]], "find_min() (eldortune method)": [[197, "ELDORtune.find_min", false]], "find_optimal() (autodeer.carrpurcellanalysis method)": [[201, "autodeer.CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (autodeer.refocusedecho2danalysis method)": [[201, "autodeer.RefocusedEcho2DAnalysis.find_optimal", false]], "find_optimal() (autodeer.relaxation.carrpurcellanalysis method)": [[44, "autodeer.Relaxation.CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (autodeer.relaxation.refocusedecho2danalysis method)": [[44, "autodeer.Relaxation.RefocusedEcho2DAnalysis.find_optimal", false]], "find_optimal() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.find_optimal", false], [40, "CarrPurcellAnalysis.find_optimal", false]], "find_optimal() (refocusedecho2danalysis method)": [[38, "RefocusedEcho2DAnalysis.find_optimal", false], [41, "RefocusedEcho2DAnalysis.find_optimal", false]], "find_xepr() (autodeer.hardware.dummy_xepr.dummy_api method)": [[194, "autodeer.hardware.dummy_xepr.dummy_api.find_Xepr", false]], "find_xepr() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.find_Xepr", false]], "find_xepr() (dummy_api method)": [[187, "dummy_api.find_Xepr", false]], "find_xepr() (xeprapilink method)": [[125, "XeprAPILink.find_Xepr", false], [138, "XeprAPILink.find_Xepr", false], [164, "XeprAPILink.find_Xepr", false], [186, "XeprAPILink.find_Xepr", false]], "finished (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.finished", false]], "finished (autodeer.gui.main.workersignals attribute)": [[113, "autodeer.gui.main.WorkerSignals.finished", false]], "finished (autodeer.gui.tools.workersignals attribute)": [[121, "autodeer.gui.tools.WorkerSignals.finished", false]], "finished (autodeer.gui.workersignals attribute)": [[104, "autodeer.gui.WorkerSignals.finished", false]], "finished (autodeersignals attribute)": [[101, "autoDEERSignals.finished", false]], "finished (workersignals attribute)": [[78, "WorkerSignals.finished", false], [110, "WorkerSignals.finished", false], [116, "WorkerSignals.finished", false], [120, "WorkerSignals.finished", false]], "fit() (autodeer.carrpurcellanalysis method)": [[201, "autodeer.CarrPurcellAnalysis.fit", false]], "fit() (autodeer.fieldsweep.fieldsweepanalysis method)": [[25, "autodeer.FieldSweep.FieldSweepAnalysis.fit", false]], "fit() (autodeer.fieldsweepanalysis method)": [[201, "autodeer.FieldSweepAnalysis.fit", false]], "fit() (autodeer.relaxation.carrpurcellanalysis method)": [[44, "autodeer.Relaxation.CarrPurcellAnalysis.fit", false]], "fit() (autodeer.relaxation.reptimeanalysis method)": [[44, "autodeer.Relaxation.ReptimeAnalysis.fit", false]], "fit() (autodeer.reptimeanalysis method)": [[201, "autodeer.ReptimeAnalysis.fit", false]], "fit() (autodeer.resonatorprofileanalysis method)": [[201, "autodeer.ResonatorProfileAnalysis.fit", false]], "fit() (autodeer.respro.resonatorprofileanalysis method)": [[49, "autodeer.ResPro.ResonatorProfileAnalysis.fit", false]], "fit() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.fit", false], [40, "CarrPurcellAnalysis.fit", false]], "fit() (fieldsweepanalysis method)": [[22, "FieldSweepAnalysis.fit", false], [26, "FieldSweepAnalysis.fit", false]], "fit() (reptimeanalysis method)": [[42, "ReptimeAnalysis.fit", false], [46, "ReptimeAnalysis.fit", false]], "fit() (resonatorprofileanalysis method)": [[48, "ResonatorProfileAnalysis.fit", false], [50, "ResonatorProfileAnalysis.fit", false]], "five_pulse() (autodeer.deersequence method)": [[201, "autodeer.DEERSequence.five_pulse", false]], "five_pulse() (autodeer.sequences.deersequence method)": [[230, "autodeer.sequences.DEERSequence.five_pulse", false]], "five_pulse() (deersequence method)": [[17, "DEERSequence.five_pulse", false], [84, "DEERSequence.five_pulse", false], [168, "DEERSequence.five_pulse", false], [216, "DEERSequence.five_pulse", false]], "floor() (in module autodeer.respro)": [[49, "autodeer.ResPro.floor", false]], "footer() (autodeer.reporter method)": [[201, "autodeer.Reporter.footer", false]], "footer() (autodeer.reporter.reporter method)": [[214, "autodeer.reporter.Reporter.footer", false]], "footer() (reporter method)": [[45, "Reporter.footer", false], [212, "Reporter.footer", false]], "format() (autodeer.logging.dictformater method)": [[34, "autodeer.Logging.DictFormater.format", false]], "format() (dictformater method)": [[32, "DictFormater.format", false]], "four_pulse() (autodeer.deersequence method)": [[201, "autodeer.DEERSequence.four_pulse", false]], "four_pulse() (autodeer.sequences.deersequence method)": [[230, "autodeer.sequences.DEERSequence.four_pulse", false]], "four_pulse() (deersequence method)": [[17, "DEERSequence.four_pulse", false], [84, "DEERSequence.four_pulse", false], [168, "DEERSequence.four_pulse", false], [216, "DEERSequence.four_pulse", false]], "fsweep_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.fsweep_result", false]], "fsweep_result (autodeersignals attribute)": [[101, "autoDEERSignals.fsweep_result", false]], "fsweep_toolbar() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.fsweep_toolbar", false]], "fsweep_toolbar() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.fsweep_toolbar", false]], "fsweep_toolbar() (autodeerui method)": [[80, "autoDEERUI.fsweep_toolbar", false], [111, "autoDEERUI.fsweep_toolbar", false]], "func() (autodeer.chirppulse method)": [[201, "autodeer.ChirpPulse.func", false]], "func() (autodeer.gaussianpulse method)": [[201, "autodeer.GaussianPulse.func", false]], "func() (autodeer.hspulse method)": [[201, "autodeer.HSPulse.func", false]], "func() (autodeer.pulses.chirppulse method)": [[211, "autodeer.pulses.ChirpPulse.func", false]], "func() (autodeer.pulses.gaussianpulse method)": [[211, "autodeer.pulses.GaussianPulse.func", false]], "func() (autodeer.pulses.hspulse method)": [[211, "autodeer.pulses.HSPulse.func", false]], "func() (autodeer.pulses.rectpulse method)": [[211, "autodeer.pulses.RectPulse.func", false]], "func() (autodeer.pulses.sincpulse method)": [[211, "autodeer.pulses.SincPulse.func", false]], "func() (autodeer.rectpulse method)": [[201, "autodeer.RectPulse.func", false], [201, "id115", false]], "func() (autodeer.sincpulse method)": [[201, "autodeer.SincPulse.func", false]], "func() (chirppulse method)": [[14, "ChirpPulse.func", false], [82, "ChirpPulse.func", false], [148, "ChirpPulse.func", false], [167, "ChirpPulse.func", false], [202, "ChirpPulse.func", false]], "func() (gaussianpulse method)": [[28, "GaussianPulse.func", false], [205, "GaussianPulse.func", false]], "func() (hspulse method)": [[29, "HSPulse.func", false], [88, "HSPulse.func", false], [153, "HSPulse.func", false], [172, "HSPulse.func", false], [206, "HSPulse.func", false]], "func() (rectpulse method)": [[37, "RectPulse.func", false], [92, "RectPulse.func", false], [135, "RectPulse.func", false], [145, "RectPulse.func", false], [158, "RectPulse.func", false], [177, "RectPulse.func", false], [209, "RectPulse.func", false], [223, "RectPulse.func", false]], "func() (sincpulse method)": [[54, "SincPulse.func", false], [210, "SincPulse.func", false]], "functional() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.functional", false]], "gaussianpulse (built-in class)": [[28, "GaussianPulse", false], [205, "GaussianPulse", false]], "gaussianpulse (class in autodeer)": [[201, "autodeer.GaussianPulse", false]], "gaussianpulse (class in autodeer.pulses)": [[211, "autodeer.pulses.GaussianPulse", false]], "gcd() (in module autodeer)": [[201, "autodeer.gcd", false]], "gcd() (in module autodeer.utils)": [[232, "autodeer.utils.gcd", false]], "get_acquisition_mode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_Acquisition_mode", false]], "get_acquisition_mode() (xeprapilink method)": [[125, "XeprAPILink.get_Acquisition_mode", false], [138, "XeprAPILink.get_Acquisition_mode", false], [164, "XeprAPILink.get_Acquisition_mode", false], [186, "XeprAPILink.get_Acquisition_mode", false]], "get_all_axes() (in module autodeer)": [[201, "autodeer.get_all_axes", false]], "get_all_axes() (in module autodeer.dataset)": [[76, "autodeer.dataset.get_all_axes", false]], "get_all_fixed_param() (in module autodeer)": [[201, "autodeer.get_all_fixed_param", false]], "get_all_fixed_param() (in module autodeer.dataset)": [[76, "autodeer.dataset.get_all_fixed_param", false]], "get_arange() (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.get_arange", false]], "get_attenuator() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_attenuator", false]], "get_attenuator() (xeprapilink method)": [[125, "XeprAPILink.get_attenuator", false], [138, "XeprAPILink.get_attenuator", false], [164, "XeprAPILink.get_attenuator", false], [186, "XeprAPILink.get_attenuator", false]], "get_axis() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter.get_axis", false]], "get_axis() (autodeer.parameter method)": [[201, "autodeer.Parameter.get_axis", false], [201, "id152", false], [201, "id19", false], [201, "id71", false]], "get_axis() (parameter method)": [[23, "Parameter.get_axis", false], [35, "Parameter.get_axis", false], [62, "Parameter.get_axis", false], [73, "Parameter.get_axis", false], [90, "Parameter.get_axis", false], [133, "Parameter.get_axis", false], [156, "Parameter.get_axis", false], [161, "Parameter.get_axis", false], [175, "Parameter.get_axis", false], [207, "Parameter.get_axis", false], [221, "Parameter.get_axis", false]], "get_config_file() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_config_file", false]], "get_config_file() (xeprapilink method)": [[125, "XeprAPILink.get_config_file", false], [138, "XeprAPILink.get_config_file", false], [164, "XeprAPILink.get_config_file", false], [186, "XeprAPILink.get_config_file", false]], "get_counterfreq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_counterfreq", false]], "get_counterfreq() (xeprapilink method)": [[125, "XeprAPILink.get_counterfreq", false], [138, "XeprAPILink.get_counterfreq", false], [164, "XeprAPILink.get_counterfreq", false], [186, "XeprAPILink.get_counterfreq", false]], "get_eldor_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_ELDOR_freq", false]], "get_eldor_freq() (xeprapilink method)": [[125, "XeprAPILink.get_ELDOR_freq", false], [138, "XeprAPILink.get_ELDOR_freq", false], [164, "XeprAPILink.get_ELDOR_freq", false], [186, "XeprAPILink.get_ELDOR_freq", false]], "get_field() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_field", false]], "get_field() (xeprapilink method)": [[125, "XeprAPILink.get_field", false], [138, "XeprAPILink.get_field", false], [164, "XeprAPILink.get_field", false], [186, "XeprAPILink.get_field", false]], "get_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_freq", false]], "get_freq() (xeprapilink method)": [[125, "XeprAPILink.get_freq", false], [138, "XeprAPILink.get_freq", false], [164, "XeprAPILink.get_freq", false], [186, "XeprAPILink.get_freq", false]], "get_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_hidden_param", false]], "get_hidden_param() (xeprapilink method)": [[125, "XeprAPILink.get_hidden_param", false], [138, "XeprAPILink.get_hidden_param", false], [164, "XeprAPILink.get_hidden_param", false], [186, "XeprAPILink.get_hidden_param", false]], "get_mw_amp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_MW_amp", false]], "get_mw_amp() (xeprapilink method)": [[125, "XeprAPILink.get_MW_amp", false], [138, "XeprAPILink.get_MW_amp", false], [164, "XeprAPILink.get_MW_amp", false], [186, "XeprAPILink.get_MW_amp", false]], "get_nutations() (in module autodeer.hardware.xepr_experiments)": [[200, "autodeer.hardware.xepr_experiments.get_nutations", false]], "get_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_param", false]], "get_param() (xeprapilink method)": [[125, "XeprAPILink.get_param", false], [138, "XeprAPILink.get_param", false], [164, "XeprAPILink.get_param", false], [186, "XeprAPILink.get_param", false]], "get_phase() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_phase", false]], "get_phase() (xeprapilink method)": [[125, "XeprAPILink.get_phase", false], [138, "XeprAPILink.get_phase", false], [164, "XeprAPILink.get_phase", false], [186, "XeprAPILink.get_phase", false]], "get_phasecycle() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PhaseCycle", false]], "get_phasecycle() (xeprapilink method)": [[125, "XeprAPILink.get_PhaseCycle", false], [138, "XeprAPILink.get_PhaseCycle", false], [164, "XeprAPILink.get_PhaseCycle", false], [186, "XeprAPILink.get_PhaseCycle", false]], "get_pulsespel_def_filename() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_def_filename", false]], "get_pulsespel_def_filename() (xeprapilink method)": [[125, "XeprAPILink.get_PulseSpel_def_filename", false], [138, "XeprAPILink.get_PulseSpel_def_filename", false], [164, "XeprAPILink.get_PulseSpel_def_filename", false], [186, "XeprAPILink.get_PulseSpel_def_filename", false]], "get_pulsespel_def_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_def_filepath", false]], "get_pulsespel_def_filepath() (xeprapilink method)": [[125, "XeprAPILink.get_PulseSpel_def_filepath", false], [138, "XeprAPILink.get_PulseSpel_def_filepath", false], [164, "XeprAPILink.get_PulseSpel_def_filepath", false], [186, "XeprAPILink.get_PulseSpel_def_filepath", false]], "get_pulsespel_exp_filename() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_exp_filename", false]], "get_pulsespel_exp_filename() (xeprapilink method)": [[125, "XeprAPILink.get_PulseSpel_exp_filename", false], [138, "XeprAPILink.get_PulseSpel_exp_filename", false], [164, "XeprAPILink.get_PulseSpel_exp_filename", false], [186, "XeprAPILink.get_PulseSpel_exp_filename", false]], "get_pulsespel_exp_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_exp_filepath", false]], "get_pulsespel_exp_filepath() (xeprapilink method)": [[125, "XeprAPILink.get_PulseSpel_exp_filepath", false], [138, "XeprAPILink.get_PulseSpel_exp_filepath", false], [164, "XeprAPILink.get_PulseSpel_exp_filepath", false], [186, "XeprAPILink.get_PulseSpel_exp_filepath", false]], "get_pulsespel_experiment() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_experiment", false]], "get_pulsespel_experiment() (xeprapilink method)": [[125, "XeprAPILink.get_PulseSpel_experiment", false], [138, "XeprAPILink.get_PulseSpel_experiment", false], [164, "XeprAPILink.get_PulseSpel_experiment", false], [186, "XeprAPILink.get_PulseSpel_experiment", false]], "get_pulsespel_phase_cycling() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_PulseSpel_phase_cycling", false]], "get_pulsespel_phase_cycling() (xeprapilink method)": [[125, "XeprAPILink.get_PulseSpel_phase_cycling", false], [138, "XeprAPILink.get_PulseSpel_phase_cycling", false], [164, "XeprAPILink.get_PulseSpel_phase_cycling", false], [186, "XeprAPILink.get_PulseSpel_phase_cycling", false]], "get_replacemode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_ReplaceMode", false]], "get_replacemode() (xeprapilink method)": [[125, "XeprAPILink.get_ReplaceMode", false], [138, "XeprAPILink.get_ReplaceMode", false], [164, "XeprAPILink.get_ReplaceMode", false], [186, "XeprAPILink.get_ReplaceMode", false]], "get_sequence_rows() (in module autodeer.gui)": [[104, "autodeer.gui.get_sequence_rows", false]], "get_sequence_rows() (in module autodeer.gui.tools)": [[121, "autodeer.gui.tools.get_sequence_rows", false]], "get_spec_config() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_spec_config", false]], "get_spec_config() (xeprapilink method)": [[125, "XeprAPILink.get_spec_config", false], [138, "XeprAPILink.get_spec_config", false], [164, "XeprAPILink.get_spec_config", false], [186, "XeprAPILink.get_spec_config", false]], "get_specjet_data() (in module autodeer.hardware.bruker_awg)": [[126, "autodeer.hardware.Bruker_AWG.get_specjet_data", false]], "get_specjet_data() (in module autodeer.hardware.bruker_mpfu)": [[139, "autodeer.hardware.Bruker_MPFU.get_specjet_data", false]], "get_sweep_width() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_sweep_width", false]], "get_sweep_width() (xeprapilink method)": [[125, "XeprAPILink.get_sweep_width", false], [138, "XeprAPILink.get_sweep_width", false], [164, "XeprAPILink.get_sweep_width", false], [186, "XeprAPILink.get_sweep_width", false]], "get_vexp() (in module autodeer.gui.quickdeer)": [[117, "autodeer.gui.quickdeer.get_Vexp", false]], "get_video_bandwidth() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_video_bandwidth", false]], "get_video_bandwidth() (xeprapilink method)": [[125, "XeprAPILink.get_video_bandwidth", false], [138, "XeprAPILink.get_video_bandwidth", false], [164, "XeprAPILink.get_video_bandwidth", false], [186, "XeprAPILink.get_video_bandwidth", false]], "get_video_gain() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.get_video_gain", false]], "get_video_gain() (xeprapilink method)": [[125, "XeprAPILink.get_video_gain", false], [138, "XeprAPILink.get_video_gain", false], [164, "XeprAPILink.get_video_gain", false], [186, "XeprAPILink.get_video_gain", false]], "getcistring() (in module autodeer.gui)": [[104, "autodeer.gui.getCIstring", false]], "getcistring() (in module autodeer.gui.tools)": [[121, "autodeer.gui.tools.getCIstring", false]], "getparam() (autodeer.hardware.dummy_xepr.dummy_cur_exp method)": [[194, "autodeer.hardware.dummy_xepr.dummy_cur_exp.getParam", false]], "getparam() (autodeer.hardware.dummy_xepr.dummy_hidden method)": [[194, "autodeer.hardware.dummy_xepr.dummy_hidden.getParam", false]], "getparam() (dummy_cur_exp method)": [[188, "dummy_cur_exp.getParam", false]], "getparam() (dummy_hidden method)": [[190, "dummy_hidden.getParam", false]], "hahnechosequence (built-in class)": [[30, "HahnEchoSequence", false], [89, "HahnEchoSequence", false], [130, "HahnEchoSequence", false], [154, "HahnEchoSequence", false], [173, "HahnEchoSequence", false], [220, "HahnEchoSequence", false]], "hahnechosequence (class in autodeer)": [[201, "autodeer.HahnEchoSequence", false]], "hahnechosequence (class in autodeer.sequences)": [[230, "autodeer.sequences.HahnEchoSequence", false]], "ham() (in module autodeer.fieldsweep)": [[25, "autodeer.FieldSweep.ham", false]], "ham_ez() (in module autodeer.fieldsweep)": [[25, "autodeer.FieldSweep.ham_ez", false]], "ham_nz() (in module autodeer.fieldsweep)": [[25, "autodeer.FieldSweep.ham_nz", false]], "hardware_meta (in module autodeer.hardware.dummy_xepr)": [[194, "autodeer.hardware.dummy_xepr.hardware_meta", false]], "header (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.header", false]], "header() (autodeer.reporter method)": [[201, "autodeer.Reporter.header", false]], "header() (autodeer.reporter.reporter method)": [[214, "autodeer.reporter.Reporter.header", false]], "header() (reporter method)": [[45, "Reporter.header", false], [212, "Reporter.header", false]], "hspulse (built-in class)": [[29, "HSPulse", false], [88, "HSPulse", false], [153, "HSPulse", false], [172, "HSPulse", false], [206, "HSPulse", false]], "hspulse (class in autodeer)": [[201, "autodeer.HSPulse", false]], "hspulse (class in autodeer.pulses)": [[211, "autodeer.pulses.HSPulse", false]], "hw_log (in module autodeer.hardware.bruker_mpfu)": [[139, "autodeer.hardware.Bruker_MPFU.hw_log", false]], "hw_log (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy.hw_log", false]], "hw_log (in module autodeer.hardware.dummy_xepr)": [[194, "autodeer.hardware.dummy_xepr.hw_log", false]], "hw_log (in module autodeer.hardware.xeprapi_link)": [[165, "autodeer.hardware.XeprAPI_link.hw_log", false]], "identifyroi() (in module autodeer)": [[201, "autodeer.IdentifyROI", false]], "identifyroi() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.IdentifyROI", false]], "import_data() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.import_data", false]], "import_data() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.import_data", false]], "import_dataset() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.import_dataset", false]], "import_dataset() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.import_dataset", false]], "interface (built-in class)": [[31, "Interface", false], [61, "Interface", false], [72, "Interface", false], [123, "Interface", false], [131, "Interface", false], [155, "Interface", false], [174, "Interface", false]], "interface (class in autodeer)": [[201, "autodeer.Interface", false], [201, "id167", false]], "interface (class in autodeer.classes)": [[63, "autodeer.classes.Interface", false]], "invert_signal() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.invert_signal", false]], "invert_signal() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.invert_signal", false]], "is_exp_running() (autodeer.hardware.dummy_xepr.dummy_api method)": [[194, "autodeer.hardware.dummy_xepr.dummy_api.is_exp_running", false]], "is_exp_running() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.is_exp_running", false]], "is_exp_running() (dummy_api method)": [[187, "dummy_api.is_exp_running", false]], "is_exp_running() (xeprapilink method)": [[125, "XeprAPILink.is_exp_running", false], [138, "XeprAPILink.is_exp_running", false], [164, "XeprAPILink.is_exp_running", false], [186, "XeprAPILink.is_exp_running", false]], "is_static() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter.is_static", false]], "is_static() (autodeer.parameter method)": [[201, "autodeer.Parameter.is_static", false], [201, "id154", false], [201, "id21", false], [201, "id73", false]], "is_static() (autodeer.pulse method)": [[201, "autodeer.Pulse.is_static", false], [201, "id123", false], [201, "id95", false]], "is_static() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse.is_static", false]], "is_static() (parameter method)": [[23, "Parameter.is_static", false], [35, "Parameter.is_static", false], [62, "Parameter.is_static", false], [73, "Parameter.is_static", false], [90, "Parameter.is_static", false], [133, "Parameter.is_static", false], [156, "Parameter.is_static", false], [161, "Parameter.is_static", false], [175, "Parameter.is_static", false], [207, "Parameter.is_static", false], [221, "Parameter.is_static", false]], "is_static() (pulse method)": [[36, "Pulse.is_static", false], [74, "Pulse.is_static", false], [91, "Pulse.is_static", false], [157, "Pulse.is_static", false], [162, "Pulse.is_static", false], [176, "Pulse.is_static", false], [208, "Pulse.is_static", false], [222, "Pulse.is_static", false]], "isdelayfocused() (autodeer.pulse method)": [[201, "autodeer.Pulse.isDelayFocused", false], [201, "id124", false], [201, "id96", false]], "isdelayfocused() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse.isDelayFocused", false]], "isdelayfocused() (autodeer.sequence method)": [[201, "autodeer.Sequence.isDelayFocused", false], [201, "id184", false], [201, "id47", false]], "isdelayfocused() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence.isDelayFocused", false]], "isdelayfocused() (pulse method)": [[36, "Pulse.isDelayFocused", false], [74, "Pulse.isDelayFocused", false], [91, "Pulse.isDelayFocused", false], [157, "Pulse.isDelayFocused", false], [162, "Pulse.isDelayFocused", false], [176, "Pulse.isDelayFocused", false], [208, "Pulse.isDelayFocused", false], [222, "Pulse.isDelayFocused", false]], "isdelayfocused() (sequence method)": [[43, "Sequence.isDelayFocused", false], [53, "Sequence.isDelayFocused", false], [75, "Sequence.isDelayFocused", false], [97, "Sequence.isDelayFocused", false], [136, "Sequence.isDelayFocused", false], [146, "Sequence.isDelayFocused", false], [159, "Sequence.isDelayFocused", false], [181, "Sequence.isDelayFocused", false], [227, "Sequence.isDelayFocused", false]], "ispulsefocused() (autodeer.pulse method)": [[201, "autodeer.Pulse.isPulseFocused", false], [201, "id125", false], [201, "id97", false]], "ispulsefocused() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse.isPulseFocused", false]], "ispulsefocused() (autodeer.sequence method)": [[201, "autodeer.Sequence.isPulseFocused", false], [201, "id183", false], [201, "id46", false]], "ispulsefocused() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence.isPulseFocused", false]], "ispulsefocused() (pulse method)": [[36, "Pulse.isPulseFocused", false], [74, "Pulse.isPulseFocused", false], [91, "Pulse.isPulseFocused", false], [157, "Pulse.isPulseFocused", false], [162, "Pulse.isPulseFocused", false], [176, "Pulse.isPulseFocused", false], [208, "Pulse.isPulseFocused", false], [222, "Pulse.isPulseFocused", false]], "ispulsefocused() (sequence method)": [[43, "Sequence.isPulseFocused", false], [53, "Sequence.isPulseFocused", false], [75, "Sequence.isPulseFocused", false], [97, "Sequence.isPulseFocused", false], [136, "Sequence.isPulseFocused", false], [146, "Sequence.isPulseFocused", false], [159, "Sequence.isPulseFocused", false], [181, "Sequence.isPulseFocused", false], [227, "Sequence.isPulseFocused", false]], "isrunning() (autodeer.classes.interface method)": [[63, "autodeer.classes.Interface.isrunning", false]], "isrunning() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG.isrunning", false]], "isrunning() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.isrunning", false]], "isrunning() (autodeer.hardware.dummy.dummyinterface method)": [[185, "autodeer.hardware.dummy.dummyInterface.isrunning", false]], "isrunning() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.isrunning", false]], "isrunning() (autodeer.interface method)": [[201, "autodeer.Interface.isrunning", false], [201, "id171", false]], "isrunning() (brukerawg method)": [[122, "BrukerAWG.isrunning", false]], "isrunning() (brukermpfu method)": [[127, "BrukerMPFU.isrunning", false]], "isrunning() (dummyinterface method)": [[184, "dummyInterface.isrunning", false]], "isrunning() (eth_awg_interface method)": [[151, "ETH_awg_interface.isrunning", false]], "isrunning() (interface method)": [[31, "Interface.isrunning", false], [61, "Interface.isrunning", false], [72, "Interface.isrunning", false], [123, "Interface.isrunning", false], [131, "Interface.isrunning", false], [155, "Interface.isrunning", false], [174, "Interface.isrunning", false]], "kroneye() (in module autodeer.fieldsweep)": [[25, "autodeer.FieldSweep.kroneye", false]], "launch() (autodeer.classes.interface method)": [[63, "autodeer.classes.Interface.launch", false]], "launch() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG.launch", false]], "launch() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.launch", false]], "launch() (autodeer.hardware.dummy.dummyinterface method)": [[185, "autodeer.hardware.dummy.dummyInterface.launch", false]], "launch() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch", false]], "launch() (autodeer.interface method)": [[201, "autodeer.Interface.launch", false], [201, "id170", false]], "launch() (brukerawg method)": [[122, "BrukerAWG.launch", false]], "launch() (brukermpfu method)": [[127, "BrukerMPFU.launch", false]], "launch() (dummyinterface method)": [[184, "dummyInterface.launch", false]], "launch() (eth_awg_interface method)": [[151, "ETH_awg_interface.launch", false]], "launch() (interface method)": [[31, "Interface.launch", false], [61, "Interface.launch", false], [72, "Interface.launch", false], [123, "Interface.launch", false], [131, "Interface.launch", false], [155, "Interface.launch", false], [174, "Interface.launch", false]], "launch_long() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_long", false]], "launch_long() (eth_awg_interface method)": [[151, "ETH_awg_interface.launch_long", false]], "launch_normal() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.launch_normal", false]], "launch_normal() (eth_awg_interface method)": [[151, "ETH_awg_interface.launch_normal", false]], "list_str_to_type() (in module autodeer.gui)": [[104, "autodeer.gui.list_str_to_type", false]], "list_str_to_type() (in module autodeer.gui.tools)": [[121, "autodeer.gui.tools.list_str_to_type", false]], "load() (autodeer.classes.parameter class method)": [[63, "autodeer.classes.Parameter.load", false]], "load() (autodeer.parameter class method)": [[201, "autodeer.Parameter.load", false], [201, "id166", false], [201, "id33", false], [201, "id85", false]], "load() (autodeer.pulse class method)": [[201, "autodeer.Pulse.load", false], [201, "id111", false], [201, "id139", false]], "load() (autodeer.pulses.pulse class method)": [[211, "autodeer.pulses.Pulse.load", false]], "load() (autodeer.sequence class method)": [[201, "autodeer.Sequence.load", false], [201, "id196", false], [201, "id59", false]], "load() (autodeer.sequences.sequence class method)": [[230, "autodeer.sequences.Sequence.load", false]], "load() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.load", false]], "load() (parameter class method)": [[23, "Parameter.load", false], [35, "Parameter.load", false], [62, "Parameter.load", false], [73, "Parameter.load", false], [90, "Parameter.load", false], [133, "Parameter.load", false], [156, "Parameter.load", false], [161, "Parameter.load", false], [175, "Parameter.load", false], [207, "Parameter.load", false], [221, "Parameter.load", false]], "load() (pulse class method)": [[36, "Pulse.load", false], [74, "Pulse.load", false], [91, "Pulse.load", false], [157, "Pulse.load", false], [162, "Pulse.load", false], [176, "Pulse.load", false], [208, "Pulse.load", false], [222, "Pulse.load", false]], "load() (sequence class method)": [[43, "Sequence.load", false], [53, "Sequence.load", false], [75, "Sequence.load", false], [97, "Sequence.load", false], [136, "Sequence.load", false], [146, "Sequence.load", false], [159, "Sequence.load", false], [181, "Sequence.load", false], [227, "Sequence.load", false]], "load() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.load", false]], "load_epr_file() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.load_epr_file", false]], "load_epr_file() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.load_epr_file", false]], "load_epr_file() (autodeerui method)": [[80, "autoDEERUI.load_epr_file", false], [111, "autoDEERUI.load_epr_file", false]], "load_epr_file() (in module autodeer.gui)": [[104, "autodeer.gui.load_epr_file", false]], "load_epr_file() (in module autodeer.gui.tools)": [[121, "autodeer.gui.tools.load_epr_file", false]], "load_folder() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.load_folder", false]], "load_folder() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.load_folder", false]], "load_folder() (autodeerui method)": [[80, "autoDEERUI.load_folder", false], [111, "autoDEERUI.load_folder", false]], "load_spectrometer_config() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.load_spectrometer_config", false]], "load_spectrometer_config() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.load_spectrometer_config", false]], "load_spectrometer_config() (autodeerui method)": [[80, "autoDEERUI.load_spectrometer_config", false], [111, "autoDEERUI.load_spectrometer_config", false]], "log (in module autodeer)": [[201, "autodeer.log", false]], "log (in module autodeer.criteria)": [[69, "autodeer.criteria.log", false]], "log (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.log", false]], "log (in module autodeer.hardware.eth_awg)": [[160, "autodeer.hardware.ETH_awg.log", false]], "log (in module autodeer.tools)": [[231, "autodeer.tools.log", false]], "logdialog (built-in class)": [[105, "LogDialog", false], [108, "LogDialog", false]], "logdialog (class in autodeer.gui.log)": [[106, "autodeer.gui.log.LogDialog", false]], "longdeer_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.longdeer_result", false]], "longdeer_result (autodeersignals attribute)": [[101, "autoDEERSignals.longdeer_result", false]], "longdeer_update (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.longdeer_update", false]], "longdeer_update (autodeersignals attribute)": [[101, "autoDEERSignals.longdeer_update", false]], "match_filter_dc() (in module autodeer.hardware.eth_awg_load)": [[163, "autodeer.hardware.ETH_awg_load.match_filter_dc", false]], "module": [[18, "module-autodeer.DEER_analysis", false], [25, "module-autodeer.FieldSweep", false], [34, "module-autodeer.Logging", false], [44, "module-autodeer.Relaxation", false], [49, "module-autodeer.ResPro", false], [59, "module-autodeer.TwoD_Experiment", false], [60, "module-autodeer._version", false], [63, "module-autodeer.classes", false], [64, "module-autodeer.colors", false], [69, "module-autodeer.criteria", false], [76, "module-autodeer.dataset", false], [79, "module-autodeer.gui.__main__", false], [103, "module-autodeer.gui.autoDEER_worker", false], [104, "module-autodeer.gui", false], [106, "module-autodeer.gui.log", false], [113, "module-autodeer.gui.main", false], [117, "module-autodeer.gui.quickdeer", false], [118, "module-autodeer.gui.test_main", false], [121, "module-autodeer.gui.tools", false], [126, "module-autodeer.hardware.Bruker_AWG", false], [139, "module-autodeer.hardware.Bruker_MPFU", false], [147, "module-autodeer.hardware.Bruker_tools", false], [160, "module-autodeer.hardware.ETH_awg", false], [163, "module-autodeer.hardware.ETH_awg_load", false], [165, "module-autodeer.hardware.XeprAPI_link", false], [185, "module-autodeer.hardware.dummy", false], [194, "module-autodeer.hardware.dummy_xepr", false], [195, "module-autodeer.hardware", false], [200, "module-autodeer.hardware.xepr_experiments", false], [201, "module-autodeer", false], [211, "module-autodeer.pulses", false], [214, "module-autodeer.reporter", false], [230, "module-autodeer.sequences", false], [231, "module-autodeer.tools", false], [232, "module-autodeer.utils", false]], "module_dir (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.MODULE_DIR", false]], "module_dir (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.MODULE_DIR", false]], "module_dir (in module autodeer.hardware.xepr_experiments)": [[200, "autodeer.hardware.xepr_experiments.MODULE_DIR", false]], "mpfutune (built-in class)": [[198, "MPFUtune", false]], "mpfutune (class in autodeer.hardware.xepr_experiments)": [[200, "autodeer.hardware.xepr_experiments.MPFUtune", false]], "mpfutune() (in module autodeer.hardware.bruker_mpfu)": [[139, "autodeer.hardware.Bruker_MPFU.MPFUtune", false]], "ndeer_cp() (autodeer.deersequence method)": [[201, "autodeer.DEERSequence.nDEER_CP", false]], "ndeer_cp() (autodeer.sequences.deersequence method)": [[230, "autodeer.sequences.DEERSequence.nDEER_CP", false]], "ndeer_cp() (deersequence method)": [[17, "DEERSequence.nDEER_CP", false], [84, "DEERSequence.nDEER_CP", false], [168, "DEERSequence.nDEER_CP", false], [216, "DEERSequence.nDEER_CP", false]], "new_data() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.new_data", false]], "new_data() (autodeerworker method)": [[102, "autoDEERWorker.new_data", false], [112, "autoDEERWorker.new_data", false]], "new_pulses() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.new_pulses", false]], "new_pulses() (autodeerworker method)": [[102, "autoDEERWorker.new_pulses", false], [112, "autoDEERWorker.new_pulses", false]], "normalise (autodeer.dataset.epraccessor property)": [[76, "autodeer.dataset.EPRAccessor.normalise", false]], "normalise (autodeer.epraccessor property)": [[201, "autodeer.EPRAccessor.normalise", false]], "normalise (epraccessor property)": [[21, "EPRAccessor.normalise", false], [71, "EPRAccessor.normalise", false]], "normalise_01() (in module autodeer)": [[201, "autodeer.normalise_01", false]], "normalise_01() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.normalise_01", false]], "optimal_slice_plot() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.optimal_slice_plot", false]], "optimal_slice_plot() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.optimal_slice_plot", false]], "optimal_tau1() (autodeer.refocusedecho2danalysis method)": [[201, "autodeer.RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimal_tau1() (autodeer.relaxation.refocusedecho2danalysis method)": [[44, "autodeer.Relaxation.RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimal_tau1() (refocusedecho2danalysis method)": [[38, "RefocusedEcho2DAnalysis.optimal_tau1", false], [41, "RefocusedEcho2DAnalysis.optimal_tau1", false]], "optimise_pulses() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.optimise_pulses", false]], "optimise_pulses() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.optimise_pulses", false]], "optimise_pulses() (autodeerui method)": [[80, "autoDEERUI.optimise_pulses", false], [111, "autoDEERUI.optimise_pulses", false]], "optimise_pulses() (in module autodeer)": [[201, "autodeer.optimise_pulses", false]], "optimise_pulses() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.optimise_pulses", false]], "optimise_pulses_button() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.optimise_pulses_button", false]], "optimise_pulses_button() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.optimise_pulses_button", false]], "optimise_pulses_button() (autodeerui method)": [[80, "autoDEERUI.optimise_pulses_button", false], [111, "autoDEERUI.optimise_pulses_button", false]], "optimise_spectra_position() (in module autodeer)": [[201, "autodeer.optimise_spectra_position", false]], "optimise_spectra_position() (in module autodeer.respro)": [[49, "autodeer.ResPro.optimise_spectra_position", false]], "package_dir (in module autodeer.reporter)": [[214, "autodeer.reporter.package_dir", false]], "package_directory (in module autodeer.gui.log)": [[106, "autodeer.gui.log.package_directory", false]], "package_directory (in module autodeer.gui.main)": [[113, "autodeer.gui.main.package_directory", false]], "package_directory (in module autodeer.gui.quickdeer)": [[117, "autodeer.gui.quickdeer.package_directory", false]], "param_in_mhz() (in module autodeer.gui)": [[104, "autodeer.gui.param_in_MHz", false]], "param_in_mhz() (in module autodeer.gui.tools)": [[121, "autodeer.gui.tools.param_in_MHz", false]], "param_in_us() (in module autodeer.gui)": [[104, "autodeer.gui.param_in_us", false]], "param_in_us() (in module autodeer.gui.tools)": [[121, "autodeer.gui.tools.param_in_us", false]], "parameter (built-in class)": [[23, "Parameter", false], [35, "Parameter", false], [62, "Parameter", false], [73, "Parameter", false], [90, "Parameter", false], [133, "Parameter", false], [156, "Parameter", false], [161, "Parameter", false], [175, "Parameter", false], [207, "Parameter", false], [221, "Parameter", false]], "parameter (class in autodeer)": [[201, "autodeer.Parameter", false], [201, "id0", false], [201, "id141", false], [201, "id60", false]], "parameter (class in autodeer.classes)": [[63, "autodeer.classes.Parameter", false]], "pause_and_wait() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.pause_and_wait", false]], "pause_and_wait() (autodeerworker method)": [[102, "autoDEERWorker.pause_and_wait", false], [112, "autoDEERWorker.pause_and_wait", false]], "pause_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.pause_exp", false]], "pause_exp() (xeprapilink method)": [[125, "XeprAPILink.pause_exp", false], [138, "XeprAPILink.pause_exp", false], [164, "XeprAPILink.pause_exp", false], [186, "XeprAPILink.pause_exp", false]], "plot() (autodeer.carrpurcellanalysis method)": [[201, "autodeer.CarrPurcellAnalysis.plot", false]], "plot() (autodeer.fieldsweep.fieldsweepanalysis method)": [[25, "autodeer.FieldSweep.FieldSweepAnalysis.plot", false]], "plot() (autodeer.fieldsweepanalysis method)": [[201, "autodeer.FieldSweepAnalysis.plot", false]], "plot() (autodeer.pulse method)": [[201, "autodeer.Pulse.plot", false], [201, "id126", false], [201, "id98", false]], "plot() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse.plot", false]], "plot() (autodeer.relaxation.carrpurcellanalysis method)": [[44, "autodeer.Relaxation.CarrPurcellAnalysis.plot", false]], "plot() (autodeer.relaxation.reptimeanalysis method)": [[44, "autodeer.Relaxation.ReptimeAnalysis.plot", false]], "plot() (autodeer.reptimeanalysis method)": [[201, "autodeer.ReptimeAnalysis.plot", false]], "plot() (autodeer.resonatorprofileanalysis method)": [[201, "autodeer.ResonatorProfileAnalysis.plot", false]], "plot() (autodeer.respro.resonatorprofileanalysis method)": [[49, "autodeer.ResPro.ResonatorProfileAnalysis.plot", false]], "plot() (autodeer.sequence method)": [[201, "autodeer.Sequence.plot", false], [201, "id176", false], [201, "id39", false]], "plot() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence.plot", false]], "plot() (carrpurcellanalysis method)": [[12, "CarrPurcellAnalysis.plot", false], [40, "CarrPurcellAnalysis.plot", false]], "plot() (fieldsweepanalysis method)": [[22, "FieldSweepAnalysis.plot", false], [26, "FieldSweepAnalysis.plot", false]], "plot() (pulse method)": [[36, "Pulse.plot", false], [74, "Pulse.plot", false], [91, "Pulse.plot", false], [157, "Pulse.plot", false], [162, "Pulse.plot", false], [176, "Pulse.plot", false], [208, "Pulse.plot", false], [222, "Pulse.plot", false]], "plot() (reptimeanalysis method)": [[42, "ReptimeAnalysis.plot", false], [46, "ReptimeAnalysis.plot", false]], "plot() (resonatorprofileanalysis method)": [[48, "ResonatorProfileAnalysis.plot", false], [50, "ResonatorProfileAnalysis.plot", false]], "plot() (sequence method)": [[43, "Sequence.plot", false], [53, "Sequence.plot", false], [75, "Sequence.plot", false], [97, "Sequence.plot", false], [136, "Sequence.plot", false], [146, "Sequence.plot", false], [159, "Sequence.plot", false], [181, "Sequence.plot", false], [227, "Sequence.plot", false]], "plot1d() (autodeer.refocusedecho2danalysis method)": [[201, "autodeer.RefocusedEcho2DAnalysis.plot1D", false]], "plot1d() (autodeer.relaxation.refocusedecho2danalysis method)": [[44, "autodeer.Relaxation.RefocusedEcho2DAnalysis.plot1D", false]], "plot1d() (refocusedecho2danalysis method)": [[38, "RefocusedEcho2DAnalysis.plot1D", false], [41, "RefocusedEcho2DAnalysis.plot1D", false]], "plot2d() (autodeer.refocusedecho2danalysis method)": [[201, "autodeer.RefocusedEcho2DAnalysis.plot2D", false]], "plot2d() (autodeer.relaxation.refocusedecho2danalysis method)": [[44, "autodeer.Relaxation.RefocusedEcho2DAnalysis.plot2D", false]], "plot2d() (refocusedecho2danalysis method)": [[38, "RefocusedEcho2DAnalysis.plot2D", false], [41, "RefocusedEcho2DAnalysis.plot2D", false]], "plot_1drelax() (in module autodeer)": [[201, "autodeer.plot_1Drelax", false]], "plot_1drelax() (in module autodeer.relaxation)": [[44, "autodeer.Relaxation.plot_1Drelax", false]], "plot_fft() (autodeer.pulse method)": [[201, "autodeer.Pulse.plot_fft", false], [201, "id102", false], [201, "id130", false]], "plot_fft() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse.plot_fft", false]], "plot_fft() (pulse method)": [[36, "Pulse.plot_fft", false], [74, "Pulse.plot_fft", false], [91, "Pulse.plot_fft", false], [157, "Pulse.plot_fft", false], [162, "Pulse.plot_fft", false], [176, "Pulse.plot_fft", false], [208, "Pulse.plot_fft", false], [222, "Pulse.plot_fft", false]], "plot_overlap() (in module autodeer)": [[201, "autodeer.plot_overlap", false]], "plot_overlap() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.plot_overlap", false]], "plot_pulse_exc() (autodeer.sequence method)": [[201, "autodeer.Sequence.plot_pulse_exc", false], [201, "id177", false], [201, "id40", false]], "plot_pulse_exc() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence.plot_pulse_exc", false]], "plot_pulse_exc() (sequence method)": [[43, "Sequence.plot_pulse_exc", false], [53, "Sequence.plot_pulse_exc", false], [75, "Sequence.plot_pulse_exc", false], [97, "Sequence.plot_pulse_exc", false], [136, "Sequence.plot_pulse_exc", false], [146, "Sequence.plot_pulse_exc", false], [159, "Sequence.plot_pulse_exc", false], [181, "Sequence.plot_pulse_exc", false], [227, "Sequence.plot_pulse_exc", false]], "possible_delays (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.possible_delays", false]], "possible_pulses (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.possible_pulses", false]], "possible_vars (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.possible_vars", false]], "primary_colors (in module autodeer)": [[201, "autodeer.primary_colors", false]], "primary_colors (in module autodeer.colors)": [[64, "autodeer.colors.primary_colors", false]], "process_deeranalysis() (autodeer.gui.quickdeer.deerplot method)": [[117, "autodeer.gui.quickdeer.DEERplot.process_deeranalysis", false]], "process_deeranalysis() (deerplot method)": [[107, "DEERplot.process_deeranalysis", false], [114, "DEERplot.process_deeranalysis", false]], "process_nutations() (autodeer.resonatorprofileanalysis method)": [[201, "autodeer.ResonatorProfileAnalysis.process_nutations", false]], "process_nutations() (autodeer.respro.resonatorprofileanalysis method)": [[49, "autodeer.ResPro.ResonatorProfileAnalysis.process_nutations", false]], "process_nutations() (resonatorprofileanalysis method)": [[48, "ResonatorProfileAnalysis.process_nutations", false], [50, "ResonatorProfileAnalysis.process_nutations", false]], "progress (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.progress", false]], "progress (autodeer.gui.main.workersignals attribute)": [[113, "autodeer.gui.main.WorkerSignals.progress", false]], "progress (autodeersignals attribute)": [[101, "autoDEERSignals.progress", false]], "progress (workersignals attribute)": [[110, "WorkerSignals.progress", false]], "progress_bar() (in module autodeer.tools)": [[231, "autodeer.tools.progress_bar", false]], "progress_bar_frac() (in module autodeer.tools)": [[231, "autodeer.tools.progress_bar_frac", false]], "psparvar (built-in class)": [[143, "PSparvar", false]], "psparvar (class in autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.PSparvar", false]], "psphasecycle (built-in class)": [[132, "PSPhaseCycle", false], [142, "PSPhaseCycle", false]], "psphasecycle (class in autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.PSPhaseCycle", false]], "pulse (built-in class)": [[36, "Pulse", false], [74, "Pulse", false], [91, "Pulse", false], [157, "Pulse", false], [162, "Pulse", false], [176, "Pulse", false], [208, "Pulse", false], [222, "Pulse", false]], "pulse (class in autodeer)": [[201, "autodeer.Pulse", false], [201, "id118", false], [201, "id90", false]], "pulse (class in autodeer.pulses)": [[211, "autodeer.pulses.Pulse", false]], "pulseprofile (built-in class)": [[199, "PulseProfile", false]], "pulseprofile (class in autodeer.hardware.xepr_experiments)": [[200, "autodeer.hardware.xepr_experiments.PulseProfile", false]], "pulsespel (built-in class)": [[124, "PulseSpel", false], [134, "PulseSpel", false], [144, "PulseSpel", false]], "pulsespel (class in autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel", false]], "pyqt_table_from_dict() (in module autodeer.gui)": [[104, "autodeer.gui.pyqt_table_from_dict", false]], "pyqt_table_from_dict() (in module autodeer.gui.tools)": [[121, "autodeer.gui.tools.pyqt_table_from_dict", false]], "qtloghandler (built-in class)": [[33, "QtLogHandler", false]], "qtloghandler (class in autodeer.logging)": [[34, "autodeer.Logging.QtLogHandler", false]], "quickdeer_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.quickdeer_result", false]], "quickdeer_result (autodeersignals attribute)": [[101, "autoDEERSignals.quickdeer_result", false]], "quickdeer_update (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.quickdeer_update", false]], "quickdeer_update (autodeersignals attribute)": [[101, "autoDEERSignals.quickdeer_update", false]], "raise_warning() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.raise_warning", false]], "raise_warning() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.raise_warning", false]], "raise_warning() (autodeerui method)": [[80, "autoDEERUI.raise_warning", false], [111, "autoDEERUI.raise_warning", false]], "read_table() (in module autodeer.gui)": [[104, "autodeer.gui.read_table", false]], "read_table() (in module autodeer.gui.tools)": [[121, "autodeer.gui.tools.read_table", false]], "rectpulse (built-in class)": [[37, "RectPulse", false], [92, "RectPulse", false], [135, "RectPulse", false], [145, "RectPulse", false], [158, "RectPulse", false], [177, "RectPulse", false], [209, "RectPulse", false], [223, "RectPulse", false]], "rectpulse (class in autodeer)": [[201, "autodeer.RectPulse", false], [201, "id114", false]], "rectpulse (class in autodeer.pulses)": [[211, "autodeer.pulses.RectPulse", false]], "refocusedecho2danalysis (built-in class)": [[38, "RefocusedEcho2DAnalysis", false], [41, "RefocusedEcho2DAnalysis", false]], "refocusedecho2danalysis (class in autodeer)": [[201, "autodeer.RefocusedEcho2DAnalysis", false]], "refocusedecho2danalysis (class in autodeer.relaxation)": [[44, "autodeer.Relaxation.RefocusedEcho2DAnalysis", false]], "refocusedecho2dsequence (built-in class)": [[39, "RefocusedEcho2DSequence", false], [93, "RefocusedEcho2DSequence", false], [178, "RefocusedEcho2DSequence", false], [224, "RefocusedEcho2DSequence", false]], "refocusedecho2dsequence (class in autodeer)": [[201, "autodeer.RefocusedEcho2DSequence", false]], "refocusedecho2dsequence (class in autodeer.sequences)": [[230, "autodeer.sequences.RefocusedEcho2DSequence", false]], "refresh_deer() (autodeer.gui.quickdeer.deerplot method)": [[117, "autodeer.gui.quickdeer.DEERplot.refresh_deer", false]], "refresh_deer() (deerplot method)": [[107, "DEERplot.refresh_deer", false], [114, "DEERplot.refresh_deer", false]], "refresh_fieldsweep_after_fit() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_fieldsweep_after_fit() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_fieldsweep_after_fit() (autodeerui method)": [[80, "autoDEERUI.refresh_fieldsweep_after_fit", false], [111, "autoDEERUI.refresh_fieldsweep_after_fit", false]], "refresh_relax() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.refresh_relax", false]], "refresh_relax() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.refresh_relax", false]], "refresh_relax() (autodeerui method)": [[80, "autoDEERUI.refresh_relax", false], [111, "autoDEERUI.refresh_relax", false]], "refresh_relax_figure() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.refresh_relax_figure", false]], "refresh_relax_figure() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.refresh_relax_figure", false]], "refresh_relax_figure() (autodeerui method)": [[80, "autoDEERUI.refresh_relax_figure", false], [111, "autoDEERUI.refresh_relax_figure", false]], "refresh_respro() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.refresh_respro", false]], "refresh_respro() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.refresh_respro", false]], "refresh_respro() (autodeerui method)": [[80, "autoDEERUI.refresh_respro", false], [111, "autoDEERUI.refresh_respro", false]], "refresh_t2() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.refresh_T2", false]], "refresh_t2() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.refresh_T2", false]], "refresh_t2() (autodeerui method)": [[80, "autoDEERUI.refresh_T2", false], [111, "autoDEERUI.refresh_T2", false]], "reim_colors (in module autodeer.colors)": [[64, "autodeer.colors.ReIm_colors", false]], "relax2d_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.Relax2D_result", false]], "relax2d_result (autodeersignals attribute)": [[101, "autoDEERSignals.Relax2D_result", false]], "relax_process() (in module autodeer.gui.main)": [[113, "autodeer.gui.main.relax_process", false]], "relax_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.relax_result", false]], "relax_result (autodeersignals attribute)": [[101, "autoDEERSignals.relax_result", false]], "relax_toolbar() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.relax_toolbar", false]], "relax_toolbar() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.relax_toolbar", false]], "relax_toolbar() (autodeerui method)": [[80, "autoDEERUI.relax_toolbar", false], [111, "autoDEERUI.relax_toolbar", false]], "remove_dynamic() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter.remove_dynamic", false]], "remove_dynamic() (autodeer.parameter method)": [[201, "autodeer.Parameter.remove_dynamic", false], [201, "id153", false], [201, "id20", false], [201, "id72", false]], "remove_dynamic() (parameter method)": [[23, "Parameter.remove_dynamic", false], [35, "Parameter.remove_dynamic", false], [62, "Parameter.remove_dynamic", false], [73, "Parameter.remove_dynamic", false], [90, "Parameter.remove_dynamic", false], [133, "Parameter.remove_dynamic", false], [156, "Parameter.remove_dynamic", false], [161, "Parameter.remove_dynamic", false], [175, "Parameter.remove_dynamic", false], [207, "Parameter.remove_dynamic", false], [221, "Parameter.remove_dynamic", false]], "remove_echo() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.remove_echo", false]], "reporter (built-in class)": [[45, "Reporter", false], [212, "Reporter", false]], "reporter (class in autodeer)": [[201, "autodeer.Reporter", false]], "reporter (class in autodeer.reporter)": [[214, "autodeer.reporter.Reporter", false]], "reptime_scan_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.reptime_scan_result", false]], "reptime_scan_result (autodeersignals attribute)": [[101, "autoDEERSignals.reptime_scan_result", false]], "reptimeanalysis (built-in class)": [[42, "ReptimeAnalysis", false], [46, "ReptimeAnalysis", false]], "reptimeanalysis (class in autodeer)": [[201, "autodeer.ReptimeAnalysis", false]], "reptimeanalysis (class in autodeer.relaxation)": [[44, "autodeer.Relaxation.ReptimeAnalysis", false]], "reptimescan (built-in class)": [[47, "ReptimeScan", false], [94, "ReptimeScan", false], [179, "ReptimeScan", false], [225, "ReptimeScan", false]], "reptimescan (class in autodeer)": [[201, "autodeer.ReptimeScan", false]], "reptimescan (class in autodeer.sequences)": [[230, "autodeer.sequences.ReptimeScan", false]], "rerun_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.rerun_exp", false]], "rerun_exp() (xeprapilink method)": [[125, "XeprAPILink.rerun_exp", false], [138, "XeprAPILink.rerun_exp", false], [164, "XeprAPILink.rerun_exp", false], [186, "XeprAPILink.rerun_exp", false]], "resample_and_shift_vector() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.resample_and_shift_vector", false]], "resfields() (in module autodeer.fieldsweep)": [[25, "autodeer.FieldSweep.resfields", false]], "resonatorprofileanalysis (built-in class)": [[48, "ResonatorProfileAnalysis", false], [50, "ResonatorProfileAnalysis", false]], "resonatorprofileanalysis (class in autodeer)": [[201, "autodeer.ResonatorProfileAnalysis", false]], "resonatorprofileanalysis (class in autodeer.respro)": [[49, "autodeer.ResPro.ResonatorProfileAnalysis", false]], "resonatorprofilesequence (built-in class)": [[51, "ResonatorProfileSequence", false], [95, "ResonatorProfileSequence", false], [180, "ResonatorProfileSequence", false], [226, "ResonatorProfileSequence", false]], "resonatorprofilesequence (class in autodeer)": [[201, "autodeer.ResonatorProfileSequence", false]], "resonatorprofilesequence (class in autodeer.sequences)": [[230, "autodeer.sequences.ResonatorProfileSequence", false]], "respro_process() (in module autodeer.gui.main)": [[113, "autodeer.gui.main.respro_process", false]], "respro_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.respro_result", false]], "respro_result (autodeersignals attribute)": [[101, "autoDEERSignals.respro_result", false]], "respro_toolbar() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.respro_toolbar", false]], "respro_toolbar() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.respro_toolbar", false]], "respro_toolbar() (autodeerui method)": [[80, "autoDEERUI.respro_toolbar", false], [111, "autoDEERUI.respro_toolbar", false]], "result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.result", false]], "result (autodeer.gui.main.workersignals attribute)": [[113, "autodeer.gui.main.WorkerSignals.result", false]], "result (autodeer.gui.tools.workersignals attribute)": [[121, "autodeer.gui.tools.WorkerSignals.result", false]], "result (autodeer.gui.workersignals attribute)": [[104, "autodeer.gui.WorkerSignals.result", false]], "result (autodeersignals attribute)": [[101, "autoDEERSignals.result", false]], "result (workersignals attribute)": [[78, "WorkerSignals.result", false], [110, "WorkerSignals.result", false], [116, "WorkerSignals.result", false], [120, "WorkerSignals.result", false]], "rng (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy.rng", false]], "round_step() (in module autodeer)": [[201, "autodeer.round_step", false]], "round_step() (in module autodeer.utils)": [[232, "autodeer.utils.round_step", false]], "run() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.run", false]], "run() (autodeer.gui.main.worker method)": [[113, "autodeer.gui.main.Worker.run", false]], "run() (autodeer.gui.tools.worker method)": [[121, "autodeer.gui.tools.Worker.run", false]], "run() (autodeer.gui.worker method)": [[104, "autodeer.gui.Worker.run", false]], "run() (autodeerworker method)": [[102, "autoDEERWorker.run", false], [112, "autoDEERWorker.run", false]], "run() (worker method)": [[77, "Worker.run", false], [109, "Worker.run", false], [115, "Worker.run", false], [119, "Worker.run", false], [137, "Worker.run", false]], "run_2d_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_2D_relax", false]], "run_2d_relax() (autodeerworker method)": [[102, "autoDEERWorker.run_2D_relax", false], [112, "autoDEERWorker.run_2D_relax", false]], "run_4p() (autodeer.hardware.xepr_experiments.deer method)": [[200, "autodeer.hardware.xepr_experiments.DEER.run_4p", false]], "run_4p() (deer method)": [[196, "DEER.run_4p", false]], "run_5p() (autodeer.hardware.xepr_experiments.deer method)": [[200, "autodeer.hardware.xepr_experiments.DEER.run_5p", false]], "run_5p() (deer method)": [[196, "DEER.run_5p", false]], "run_cp() (autodeer.hardware.xepr_experiments.deer method)": [[200, "autodeer.hardware.xepr_experiments.DEER.run_CP", false]], "run_cp() (deer method)": [[196, "DEER.run_CP", false]], "run_cp_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_CP_relax", false]], "run_cp_relax() (autodeerworker method)": [[102, "autoDEERWorker.run_CP_relax", false], [112, "autoDEERWorker.run_CP_relax", false]], "run_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_deer", false]], "run_deer() (autodeerworker method)": [[102, "autoDEERWorker.run_deer", false], [112, "autoDEERWorker.run_deer", false]], "run_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[194, "autodeer.hardware.dummy_xepr.dummy_api.run_exp", false]], "run_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.run_exp", false]], "run_exp() (dummy_api method)": [[187, "dummy_api.run_exp", false]], "run_exp() (xeprapilink method)": [[125, "XeprAPILink.run_exp", false], [138, "XeprAPILink.run_exp", false], [164, "XeprAPILink.run_exp", false], [186, "XeprAPILink.run_exp", false]], "run_fsweep() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_fsweep", false]], "run_fsweep() (autodeerworker method)": [[102, "autoDEERWorker.run_fsweep", false], [112, "autoDEERWorker.run_fsweep", false]], "run_general() (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.run_general", false]], "run_long_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_long_deer", false]], "run_long_deer() (autodeerworker method)": [[102, "autoDEERWorker.run_long_deer", false], [112, "autoDEERWorker.run_long_deer", false]], "run_quick_deer() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_quick_deer", false]], "run_quick_deer() (autodeerworker method)": [[102, "autoDEERWorker.run_quick_deer", false], [112, "autoDEERWorker.run_quick_deer", false]], "run_reptime_opt() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_reptime_opt", false]], "run_reptime_opt() (autodeerworker method)": [[102, "autoDEERWorker.run_reptime_opt", false], [112, "autoDEERWorker.run_reptime_opt", false]], "run_respro() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_respro", false]], "run_respro() (autodeerworker method)": [[102, "autoDEERWorker.run_respro", false], [112, "autoDEERWorker.run_respro", false]], "run_t2_relax() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.run_T2_relax", false]], "run_t2_relax() (autodeerworker method)": [[102, "autoDEERWorker.run_T2_relax", false], [112, "autoDEERWorker.run_T2_relax", false]], "runadvancedautodeer() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.RunAdvancedAutoDEER", false]], "runadvancedautodeer() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.RunAdvancedAutoDEER", false]], "runadvancedautodeer() (autodeerui method)": [[80, "autoDEERUI.RunAdvancedAutoDEER", false], [111, "autoDEERUI.RunAdvancedAutoDEER", false]], "runautodeer() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.RunAutoDEER", false]], "runautodeer() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.RunAutoDEER", false]], "runautodeer() (autodeerui method)": [[80, "autoDEERUI.RunAutoDEER", false], [111, "autoDEERUI.RunAutoDEER", false]], "runfullyautodeer() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.RunFullyAutoDEER", false]], "runfullyautodeer() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.RunFullyAutoDEER", false]], "runfullyautodeer() (autodeerui method)": [[80, "autoDEERUI.RunFullyAutoDEER", false], [111, "autoDEERUI.RunFullyAutoDEER", false]], "sampleconccombobox_opts (in module autodeer.gui.main)": [[113, "autodeer.gui.main.SampleConcComboBox_opts", false]], "save() (autodeer.classes.parameter method)": [[63, "autodeer.classes.Parameter.save", false]], "save() (autodeer.dataset.epraccessor method)": [[76, "autodeer.dataset.EPRAccessor.save", false]], "save() (autodeer.epraccessor method)": [[201, "autodeer.EPRAccessor.save", false]], "save() (autodeer.hardware.bruker_tools.pulsespel method)": [[147, "autodeer.hardware.Bruker_tools.PulseSpel.save", false]], "save() (autodeer.parameter method)": [[201, "autodeer.Parameter.save", false], [201, "id163", false], [201, "id30", false], [201, "id82", false]], "save() (autodeer.pulse method)": [[201, "autodeer.Pulse.save", false], [201, "id108", false], [201, "id136", false]], "save() (autodeer.pulses.pulse method)": [[211, "autodeer.pulses.Pulse.save", false]], "save() (autodeer.sequence method)": [[201, "autodeer.Sequence.save", false], [201, "id193", false], [201, "id56", false]], "save() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence.save", false]], "save() (epraccessor method)": [[21, "EPRAccessor.save", false], [71, "EPRAccessor.save", false]], "save() (parameter method)": [[23, "Parameter.save", false], [35, "Parameter.save", false], [62, "Parameter.save", false], [73, "Parameter.save", false], [90, "Parameter.save", false], [133, "Parameter.save", false], [156, "Parameter.save", false], [161, "Parameter.save", false], [175, "Parameter.save", false], [207, "Parameter.save", false], [221, "Parameter.save", false]], "save() (pulse method)": [[36, "Pulse.save", false], [74, "Pulse.save", false], [91, "Pulse.save", false], [157, "Pulse.save", false], [162, "Pulse.save", false], [176, "Pulse.save", false], [208, "Pulse.save", false], [222, "Pulse.save", false]], "save() (pulsespel method)": [[124, "PulseSpel.save", false], [134, "PulseSpel.save", false], [144, "PulseSpel.save", false]], "save() (sequence method)": [[43, "Sequence.save", false], [53, "Sequence.save", false], [75, "Sequence.save", false], [97, "Sequence.save", false], [136, "Sequence.save", false], [146, "Sequence.save", false], [159, "Sequence.save", false], [181, "Sequence.save", false], [227, "Sequence.save", false]], "save_data() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.save_data", false]], "save_data() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.save_data", false]], "save_data() (autodeerui method)": [[80, "autoDEERUI.save_data", false], [111, "autoDEERUI.save_data", false]], "save_file() (in module autodeer)": [[201, "autodeer.save_file", false]], "save_file() (in module autodeer.utils)": [[232, "autodeer.utils.save_file", false]], "save_log_to_file() (autodeer.gui.log.logdialog method)": [[106, "autodeer.gui.log.LogDialog.save_log_to_file", false]], "save_log_to_file() (logdialog method)": [[105, "LogDialog.save_log_to_file", false], [108, "LogDialog.save_log_to_file", false]], "save_pulsespel_def() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.save_PulseSpel_def", false]], "save_pulsespel_def() (xeprapilink method)": [[125, "XeprAPILink.save_PulseSpel_def", false], [138, "XeprAPILink.save_PulseSpel_def", false], [164, "XeprAPILink.save_PulseSpel_def", false], [186, "XeprAPILink.save_PulseSpel_def", false]], "save_pulsespel_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.save_PulseSpel_exp", false]], "save_pulsespel_exp() (xeprapilink method)": [[125, "XeprAPILink.save_PulseSpel_exp", false], [138, "XeprAPILink.save_PulseSpel_exp", false], [164, "XeprAPILink.save_PulseSpel_exp", false], [186, "XeprAPILink.save_PulseSpel_exp", false]], "savefolder (autodeer.hardware.eth_awg.eth_awg_interface property)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.savefolder", false]], "savefolder (eth_awg_interface property)": [[151, "ETH_awg_interface.savefolder", false]], "scipy_filter_dc() (in module autodeer.hardware.eth_awg_load)": [[163, "autodeer.hardware.ETH_awg_load.scipy_filter_dc", false]], "select_pcyc() (autodeer.deersequence method)": [[201, "autodeer.DEERSequence.select_pcyc", false]], "select_pcyc() (autodeer.sequences.deersequence method)": [[230, "autodeer.sequences.DEERSequence.select_pcyc", false]], "select_pcyc() (deersequence method)": [[17, "DEERSequence.select_pcyc", false], [84, "DEERSequence.select_pcyc", false], [168, "DEERSequence.select_pcyc", false], [216, "DEERSequence.select_pcyc", false]], "select_resonator() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.select_resonator", false]], "select_resonator() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.select_resonator", false]], "select_resonator() (autodeerui method)": [[80, "autoDEERUI.select_resonator", false], [111, "autoDEERUI.select_resonator", false]], "seqtable_steps (autodeer.sequence property)": [[201, "autodeer.Sequence.seqtable_steps", false], [201, "id175", false], [201, "id38", false]], "seqtable_steps (autodeer.sequences.sequence property)": [[230, "autodeer.sequences.Sequence.seqtable_steps", false]], "seqtable_steps (sequence property)": [[43, "Sequence.seqtable_steps", false], [53, "Sequence.seqtable_steps", false], [75, "Sequence.seqtable_steps", false], [97, "Sequence.seqtable_steps", false], [136, "Sequence.seqtable_steps", false], [146, "Sequence.seqtable_steps", false], [159, "Sequence.seqtable_steps", false], [181, "Sequence.seqtable_steps", false], [227, "Sequence.seqtable_steps", false]], "sequence (autodeer.dataset.epraccessor property)": [[76, "autodeer.dataset.EPRAccessor.sequence", false]], "sequence (autodeer.epraccessor property)": [[201, "autodeer.EPRAccessor.sequence", false]], "sequence (built-in class)": [[43, "Sequence", false], [53, "Sequence", false], [75, "Sequence", false], [97, "Sequence", false], [136, "Sequence", false], [146, "Sequence", false], [159, "Sequence", false], [181, "Sequence", false], [227, "Sequence", false]], "sequence (class in autodeer)": [[201, "autodeer.Sequence", false], [201, "id174", false], [201, "id37", false]], "sequence (class in autodeer.sequences)": [[230, "autodeer.sequences.Sequence", false]], "sequence (epraccessor property)": [[21, "EPRAccessor.sequence", false], [71, "EPRAccessor.sequence", false]], "set_2d_max_tau() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.set_2D_max_tau", false]], "set_2d_max_tau() (autodeerworker method)": [[102, "autoDEERWorker.set_2D_max_tau", false], [112, "autoDEERWorker.set_2D_max_tau", false]], "set_acquisition_mode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_Acquisition_mode", false]], "set_acquisition_mode() (xeprapilink method)": [[125, "XeprAPILink.set_Acquisition_mode", false], [138, "XeprAPILink.set_Acquisition_mode", false], [164, "XeprAPILink.set_Acquisition_mode", false], [186, "XeprAPILink.set_Acquisition_mode", false]], "set_attenuator() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_attenuator", false]], "set_attenuator() (xeprapilink method)": [[125, "XeprAPILink.set_attenuator", false], [138, "XeprAPILink.set_attenuator", false], [164, "XeprAPILink.set_attenuator", false], [186, "XeprAPILink.set_attenuator", false]], "set_config_file() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_config_file", false]], "set_config_file() (xeprapilink method)": [[125, "XeprAPILink.set_config_file", false], [138, "XeprAPILink.set_config_file", false], [164, "XeprAPILink.set_config_file", false], [186, "XeprAPILink.set_config_file", false]], "set_eldor_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_ELDOR_freq", false]], "set_eldor_freq() (xeprapilink method)": [[125, "XeprAPILink.set_ELDOR_freq", false], [138, "XeprAPILink.set_ELDOR_freq", false], [164, "XeprAPILink.set_ELDOR_freq", false], [186, "XeprAPILink.set_ELDOR_freq", false]], "set_field() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_field", false]], "set_field() (xeprapilink method)": [[125, "XeprAPILink.set_field", false], [138, "XeprAPILink.set_field", false], [164, "XeprAPILink.set_field", false], [186, "XeprAPILink.set_field", false]], "set_freq() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_freq", false]], "set_freq() (xeprapilink method)": [[125, "XeprAPILink.set_freq", false], [138, "XeprAPILink.set_freq", false], [164, "XeprAPILink.set_freq", false], [186, "XeprAPILink.set_freq", false]], "set_hidden_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_hidden_param", false]], "set_hidden_param() (xeprapilink method)": [[125, "XeprAPILink.set_hidden_param", false], [138, "XeprAPILink.set_hidden_param", false], [164, "XeprAPILink.set_hidden_param", false], [186, "XeprAPILink.set_hidden_param", false]], "set_mw_amp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_MW_amp", false]], "set_mw_amp() (xeprapilink method)": [[125, "XeprAPILink.set_MW_amp", false], [138, "XeprAPILink.set_MW_amp", false], [164, "XeprAPILink.set_MW_amp", false], [186, "XeprAPILink.set_MW_amp", false]], "set_noise_mode() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.set_noise_mode", false]], "set_noise_mode() (autodeerworker method)": [[102, "autoDEERWorker.set_noise_mode", false], [112, "autoDEERWorker.set_noise_mode", false]], "set_param() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_param", false]], "set_param() (xeprapilink method)": [[125, "XeprAPILink.set_param", false], [138, "XeprAPILink.set_param", false], [164, "XeprAPILink.set_param", false], [186, "XeprAPILink.set_param", false]], "set_phase() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_phase", false]], "set_phase() (xeprapilink method)": [[125, "XeprAPILink.set_phase", false], [138, "XeprAPILink.set_phase", false], [164, "XeprAPILink.set_phase", false], [186, "XeprAPILink.set_phase", false]], "set_phasecycle() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PhaseCycle", false]], "set_phasecycle() (xeprapilink method)": [[125, "XeprAPILink.set_PhaseCycle", false], [138, "XeprAPILink.set_PhaseCycle", false], [164, "XeprAPILink.set_PhaseCycle", false], [186, "XeprAPILink.set_PhaseCycle", false]], "set_pulsespel_def_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_def_filepath", false]], "set_pulsespel_def_filepath() (xeprapilink method)": [[125, "XeprAPILink.set_PulseSpel_def_filepath", false], [138, "XeprAPILink.set_PulseSpel_def_filepath", false], [164, "XeprAPILink.set_PulseSpel_def_filepath", false], [186, "XeprAPILink.set_PulseSpel_def_filepath", false]], "set_pulsespel_exp_filepath() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_exp_filepath", false]], "set_pulsespel_exp_filepath() (xeprapilink method)": [[125, "XeprAPILink.set_PulseSpel_exp_filepath", false], [138, "XeprAPILink.set_PulseSpel_exp_filepath", false], [164, "XeprAPILink.set_PulseSpel_exp_filepath", false], [186, "XeprAPILink.set_PulseSpel_exp_filepath", false]], "set_pulsespel_experiment() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_experiment", false]], "set_pulsespel_experiment() (xeprapilink method)": [[125, "XeprAPILink.set_PulseSpel_experiment", false], [138, "XeprAPILink.set_PulseSpel_experiment", false], [164, "XeprAPILink.set_PulseSpel_experiment", false], [186, "XeprAPILink.set_PulseSpel_experiment", false]], "set_pulsespel_phase_cycling() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_phase_cycling", false]], "set_pulsespel_phase_cycling() (xeprapilink method)": [[125, "XeprAPILink.set_PulseSpel_phase_cycling", false], [138, "XeprAPILink.set_PulseSpel_phase_cycling", false], [164, "XeprAPILink.set_PulseSpel_phase_cycling", false], [186, "XeprAPILink.set_PulseSpel_phase_cycling", false]], "set_pulsespel_var() (autodeer.hardware.dummy_xepr.dummy_api method)": [[194, "autodeer.hardware.dummy_xepr.dummy_api.set_PulseSpel_var", false]], "set_pulsespel_var() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_PulseSpel_var", false]], "set_pulsespel_var() (dummy_api method)": [[187, "dummy_api.set_PulseSpel_var", false]], "set_pulsespel_var() (xeprapilink method)": [[125, "XeprAPILink.set_PulseSpel_var", false], [138, "XeprAPILink.set_PulseSpel_var", false], [164, "XeprAPILink.set_PulseSpel_var", false], [186, "XeprAPILink.set_PulseSpel_var", false]], "set_replacemode() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_ReplaceMode", false]], "set_replacemode() (xeprapilink method)": [[125, "XeprAPILink.set_ReplaceMode", false], [138, "XeprAPILink.set_ReplaceMode", false], [164, "XeprAPILink.set_ReplaceMode", false], [186, "XeprAPILink.set_ReplaceMode", false]], "set_snr_target() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_snr_target", false]], "set_snr_target() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.set_snr_target", false]], "set_snr_threshold() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_snr_threshold", false]], "set_snr_threshold() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.set_snr_threshold", false]], "set_spectrometer_connected_light() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.set_spectrometer_connected_light", false]], "set_spectrometer_connected_light() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.set_spectrometer_connected_light", false]], "set_spectrometer_connected_light() (autodeerui method)": [[80, "autoDEERUI.set_spectrometer_connected_light", false], [111, "autoDEERUI.set_spectrometer_connected_light", false]], "set_sweep_width() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_sweep_width", false]], "set_sweep_width() (xeprapilink method)": [[125, "XeprAPILink.set_sweep_width", false], [138, "XeprAPILink.set_sweep_width", false], [164, "XeprAPILink.set_sweep_width", false], [186, "XeprAPILink.set_sweep_width", false]], "set_time_target() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.set_time_target", false]], "set_time_target() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.set_time_target", false]], "set_video_bandwidth() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_video_bandwidth", false]], "set_video_bandwidth() (xeprapilink method)": [[125, "XeprAPILink.set_video_bandwidth", false], [138, "XeprAPILink.set_video_bandwidth", false], [164, "XeprAPILink.set_video_bandwidth", false], [186, "XeprAPILink.set_video_bandwidth", false]], "set_video_gain() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.set_video_gain", false]], "set_video_gain() (xeprapilink method)": [[125, "XeprAPILink.set_video_gain", false], [138, "XeprAPILink.set_video_gain", false], [164, "XeprAPILink.set_video_gain", false], [186, "XeprAPILink.set_video_gain", false]], "setup() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG.setup", false]], "setup() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.setup", false]], "setup() (brukerawg method)": [[122, "BrukerAWG.setup", false]], "setup() (brukermpfu method)": [[127, "BrukerMPFU.setup", false]], "setup_inputs() (autodeer.gui.quickdeer.deerplot method)": [[117, "autodeer.gui.quickdeer.DEERplot.setup_inputs", false]], "setup_inputs() (deerplot method)": [[107, "DEERplot.setup_inputs", false], [114, "DEERplot.setup_inputs", false]], "setup_logs() (in module autodeer.logging)": [[34, "autodeer.Logging.setup_logs", false]], "seven_pulse() (autodeer.deersequence method)": [[201, "autodeer.DEERSequence.seven_pulse", false]], "seven_pulse() (autodeer.sequences.deersequence method)": [[230, "autodeer.sequences.DEERSequence.seven_pulse", false]], "seven_pulse() (deersequence method)": [[17, "DEERSequence.seven_pulse", false], [84, "DEERSequence.seven_pulse", false], [168, "DEERSequence.seven_pulse", false], [216, "DEERSequence.seven_pulse", false]], "shade_colors (in module autodeer.colors)": [[64, "autodeer.colors.shade_colors", false]], "shift_detfreq_to_zero() (autodeer.sequence method)": [[201, "autodeer.Sequence.shift_detfreq_to_zero", false], [201, "id182", false], [201, "id45", false]], "shift_detfreq_to_zero() (autodeer.sequences.sequence method)": [[230, "autodeer.sequences.Sequence.shift_detfreq_to_zero", false]], "shift_detfreq_to_zero() (sequence method)": [[43, "Sequence.shift_detfreq_to_zero", false], [53, "Sequence.shift_detfreq_to_zero", false], [75, "Sequence.shift_detfreq_to_zero", false], [97, "Sequence.shift_detfreq_to_zero", false], [136, "Sequence.shift_detfreq_to_zero", false], [146, "Sequence.shift_detfreq_to_zero", false], [159, "Sequence.shift_detfreq_to_zero", false], [181, "Sequence.shift_detfreq_to_zero", false], [227, "Sequence.shift_detfreq_to_zero", false]], "shift_pulse_freq() (in module autodeer.deer_analysis)": [[18, "autodeer.DEER_analysis.shift_pulse_freq", false]], "signal (autodeer.logging.qtloghandler attribute)": [[34, "autodeer.Logging.QtLogHandler.signal", false]], "signal (qtloghandler attribute)": [[33, "QtLogHandler.signal", false]], "simulate() (autodeer.deersequence method)": [[201, "autodeer.DEERSequence.simulate", false]], "simulate() (autodeer.sequences.deersequence method)": [[230, "autodeer.sequences.DEERSequence.simulate", false]], "simulate() (deersequence method)": [[17, "DEERSequence.simulate", false], [84, "DEERSequence.simulate", false], [168, "DEERSequence.simulate", false], [216, "DEERSequence.simulate", false]], "sincpulse (built-in class)": [[54, "SincPulse", false], [210, "SincPulse", false]], "sincpulse (class in autodeer)": [[201, "autodeer.SincPulse", false]], "sincpulse (class in autodeer.pulses)": [[211, "autodeer.pulses.SincPulse", false]], "smooth() (autodeer.fieldsweep.fieldsweepanalysis method)": [[25, "autodeer.FieldSweep.FieldSweepAnalysis.smooth", false]], "smooth() (autodeer.fieldsweepanalysis method)": [[201, "autodeer.FieldSweepAnalysis.smooth", false]], "smooth() (fieldsweepanalysis method)": [[22, "FieldSweepAnalysis.smooth", false], [26, "FieldSweepAnalysis.smooth", false]], "snr (autodeer.dataset.epraccessor property)": [[76, "autodeer.dataset.EPRAccessor.SNR", false]], "snr (autodeer.epraccessor property)": [[201, "autodeer.EPRAccessor.SNR", false]], "snr (epraccessor property)": [[21, "EPRAccessor.SNR", false], [71, "EPRAccessor.SNR", false]], "snr_normalize() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.snr_normalize", false]], "snr_normalize() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.snr_normalize", false]], "snrcriteria (built-in class)": [[52, "SNRCriteria", false], [67, "SNRCriteria", false], [96, "SNRCriteria", false]], "snrcriteria (class in autodeer)": [[201, "autodeer.SNRCriteria", false]], "snrcriteria (class in autodeer.criteria)": [[69, "autodeer.criteria.SNRCriteria", false]], "sop() (in module autodeer)": [[201, "autodeer.sop", false], [201, "id87", false]], "sop() (in module autodeer.utils)": [[232, "autodeer.utils.sop", false]], "spinsystem (built-in class)": [[24, "SpinSystem", false]], "spinsystem (class in autodeer.fieldsweep)": [[25, "autodeer.FieldSweep.SpinSystem", false]], "status (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.status", false]], "status (autodeersignals attribute)": [[101, "autoDEERSignals.status", false]], "step_parameters() (in module autodeer.hardware.bruker_mpfu)": [[139, "autodeer.hardware.Bruker_MPFU.step_parameters", false]], "stop() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.stop", false]], "stop() (autodeerworker method)": [[102, "autoDEERWorker.stop", false], [112, "autoDEERWorker.stop", false]], "stop_exp() (autodeer.hardware.dummy_xepr.dummy_api method)": [[194, "autodeer.hardware.dummy_xepr.dummy_api.stop_exp", false]], "stop_exp() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.stop_exp", false]], "stop_exp() (dummy_api method)": [[187, "dummy_api.stop_exp", false]], "stop_exp() (xeprapilink method)": [[125, "XeprAPILink.stop_exp", false], [138, "XeprAPILink.stop_exp", false], [164, "XeprAPILink.stop_exp", false], [186, "XeprAPILink.stop_exp", false]], "str_to_list_type() (in module autodeer.gui)": [[104, "autodeer.gui.str_to_list_type", false]], "str_to_list_type() (in module autodeer.gui.tools)": [[121, "autodeer.gui.tools.str_to_list_type", false]], "styles (in module autodeer.reporter)": [[214, "autodeer.reporter.styles", false]], "svgflowable (built-in class)": [[213, "SvgFlowable", false]], "svgflowable (class in autodeer.reporter)": [[214, "autodeer.reporter.SvgFlowable", false]], "t2_process() (in module autodeer.gui.main)": [[113, "autodeer.gui.main.T2_process", false]], "t2_result (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.T2_result", false]], "t2_result (autodeersignals attribute)": [[101, "autoDEERSignals.T2_result", false]], "t2relaxationsequence (built-in class)": [[55, "T2RelaxationSequence", false], [98, "T2RelaxationSequence", false], [182, "T2RelaxationSequence", false], [228, "T2RelaxationSequence", false]], "t2relaxationsequence (class in autodeer)": [[201, "autodeer.T2RelaxationSequence", false]], "t2relaxationsequence (class in autodeer.sequences)": [[230, "autodeer.sequences.T2RelaxationSequence", false]], "terminate() (autodeer.classes.interface method)": [[63, "autodeer.classes.Interface.terminate", false]], "terminate() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG.terminate", false]], "terminate() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.terminate", false]], "terminate() (autodeer.hardware.dummy.dummyinterface method)": [[185, "autodeer.hardware.dummy.dummyInterface.terminate", false]], "terminate() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.terminate", false]], "terminate() (autodeer.interface method)": [[201, "autodeer.Interface.terminate", false], [201, "id172", false]], "terminate() (brukerawg method)": [[122, "BrukerAWG.terminate", false]], "terminate() (brukermpfu method)": [[127, "BrukerMPFU.terminate", false]], "terminate() (dummyinterface method)": [[184, "dummyInterface.terminate", false]], "terminate() (eth_awg_interface method)": [[151, "ETH_awg_interface.terminate", false]], "terminate() (interface method)": [[31, "Interface.terminate", false], [61, "Interface.terminate", false], [72, "Interface.terminate", false], [123, "Interface.terminate", false], [131, "Interface.terminate", false], [155, "Interface.terminate", false], [174, "Interface.terminate", false]], "terminate_at() (autodeer.classes.interface method)": [[63, "autodeer.classes.Interface.terminate_at", false]], "terminate_at() (autodeer.interface method)": [[201, "autodeer.Interface.terminate_at", false], [201, "id173", false]], "terminate_at() (interface method)": [[31, "Interface.terminate_at", false], [61, "Interface.terminate_at", false], [72, "Interface.terminate_at", false], [123, "Interface.terminate_at", false], [131, "Interface.terminate_at", false], [155, "Interface.terminate_at", false], [174, "Interface.terminate_at", false]], "test_if_mpfu_compatability() (in module autodeer.hardware.bruker_awg)": [[126, "autodeer.hardware.Bruker_AWG.test_if_MPFU_compatability", false]], "test_if_mpfu_compatability() (in module autodeer.hardware.bruker_mpfu)": [[139, "autodeer.hardware.Bruker_MPFU.test_if_MPFU_compatability", false]], "test_snr() (in module autodeer.gui)": [[104, "autodeer.gui.test_SNR", false]], "test_snr() (in module autodeer.gui.tools)": [[121, "autodeer.gui.tools.test_SNR", false]], "three_pulse() (autodeer.deersequence method)": [[201, "autodeer.DEERSequence.three_pulse", false]], "three_pulse() (autodeer.sequences.deersequence method)": [[230, "autodeer.sequences.DEERSequence.three_pulse", false]], "three_pulse() (deersequence method)": [[17, "DEERSequence.three_pulse", false], [84, "DEERSequence.three_pulse", false], [168, "DEERSequence.three_pulse", false], [216, "DEERSequence.three_pulse", false]], "timecriteria (built-in class)": [[57, "TimeCriteria", false], [68, "TimeCriteria", false], [100, "TimeCriteria", false]], "timecriteria (class in autodeer)": [[201, "autodeer.TimeCriteria", false]], "timecriteria (class in autodeer.criteria)": [[69, "autodeer.criteria.TimeCriteria", false]], "timeout (autodeer.gui.autodeer_worker.autodeersignals attribute)": [[103, "autodeer.gui.autoDEER_worker.autoDEERSignals.timeout", false]], "timeout (autodeersignals attribute)": [[101, "autoDEERSignals.timeout", false]], "timeout() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.timeout", false]], "timeout() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.timeout", false]], "timeout() (autodeerui method)": [[80, "autoDEERUI.timeout", false], [111, "autoDEERUI.timeout", false]], "toolbar() (autodeer.gui.quickdeer.deerplot method)": [[117, "autodeer.gui.quickdeer.DEERplot.toolbar", false]], "toolbar() (deerplot method)": [[107, "DEERplot.toolbar", false], [114, "DEERplot.toolbar", false]], "transpose_dict_of_list() (in module autodeer)": [[201, "autodeer.transpose_dict_of_list", false]], "transpose_dict_of_list() (in module autodeer.utils)": [[232, "autodeer.utils.transpose_dict_of_list", false]], "transpose_list_of_dicts() (in module autodeer)": [[201, "autodeer.transpose_list_of_dicts", false]], "transpose_list_of_dicts() (in module autodeer.utils)": [[232, "autodeer.utils.transpose_list_of_dicts", false]], "tune() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune", false]], "tune() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune", false]], "tune() (autodeer.hardware.xepr_experiments.eldortune method)": [[200, "autodeer.hardware.xepr_experiments.ELDORtune.tune", false]], "tune() (autodeer.hardware.xepr_experiments.mpfutune method)": [[200, "autodeer.hardware.xepr_experiments.MPFUtune.tune", false]], "tune() (brukermpfu method)": [[127, "BrukerMPFU.tune", false]], "tune() (eldortune method)": [[197, "ELDORtune.tune", false]], "tune() (eth_awg_interface method)": [[151, "ETH_awg_interface.tune", false]], "tune() (mpfutune method)": [[198, "MPFUtune.tune", false]], "tune_nutation() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_nutation", false]], "tune_nutation() (brukerawg method)": [[122, "BrukerAWG.tune_nutation", false]], "tune_phase() (autodeer.hardware.xepr_experiments.mpfutune method)": [[200, "autodeer.hardware.xepr_experiments.MPFUtune.tune_phase", false]], "tune_phase() (in module autodeer.hardware.bruker_mpfu)": [[139, "autodeer.hardware.Bruker_MPFU.tune_phase", false]], "tune_phase() (mpfutune method)": [[198, "MPFUtune.tune_phase", false]], "tune_power() (autodeer.hardware.xepr_experiments.mpfutune method)": [[200, "autodeer.hardware.xepr_experiments.MPFUtune.tune_power", false]], "tune_power() (in module autodeer.hardware.bruker_mpfu)": [[139, "autodeer.hardware.Bruker_MPFU.tune_power", false]], "tune_power() (mpfutune method)": [[198, "MPFUtune.tune_power", false]], "tune_pulse() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_pulse", false]], "tune_pulse() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune_pulse", false]], "tune_pulse() (autodeer.hardware.dummy.dummyinterface method)": [[185, "autodeer.hardware.dummy.dummyInterface.tune_pulse", false]], "tune_pulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune_pulse", false]], "tune_pulse() (brukerawg method)": [[122, "BrukerAWG.tune_pulse", false]], "tune_pulse() (brukermpfu method)": [[127, "BrukerMPFU.tune_pulse", false]], "tune_pulse() (dummyinterface method)": [[184, "dummyInterface.tune_pulse", false]], "tune_pulse() (eth_awg_interface method)": [[151, "ETH_awg_interface.tune_pulse", false]], "tune_pulses() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.tune_pulses", false]], "tune_pulses() (autodeerworker method)": [[102, "autoDEERWorker.tune_pulses", false], [112, "autoDEERWorker.tune_pulses", false]], "tune_rectpulse() (autodeer.hardware.bruker_awg.brukerawg method)": [[126, "autodeer.hardware.Bruker_AWG.BrukerAWG.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.bruker_mpfu.brukermpfu method)": [[139, "autodeer.hardware.Bruker_MPFU.BrukerMPFU.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.dummy.dummyinterface method)": [[185, "autodeer.hardware.dummy.dummyInterface.tune_rectpulse", false]], "tune_rectpulse() (autodeer.hardware.eth_awg.eth_awg_interface method)": [[160, "autodeer.hardware.ETH_awg.ETH_awg_interface.tune_rectpulse", false]], "tune_rectpulse() (brukerawg method)": [[122, "BrukerAWG.tune_rectpulse", false]], "tune_rectpulse() (brukermpfu method)": [[127, "BrukerMPFU.tune_rectpulse", false]], "tune_rectpulse() (dummyinterface method)": [[184, "dummyInterface.tune_rectpulse", false]], "tune_rectpulse() (eth_awg_interface method)": [[151, "ETH_awg_interface.tune_rectpulse", false]], "twodexperimentanalysis (built-in class)": [[58, "TwoDExperimentAnalysis", false]], "twodexperimentanalysis (class in autodeer.twod_experiment)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis", false]], "twtprofilesequence (built-in class)": [[56, "TWTProfileSequence", false], [99, "TWTProfileSequence", false], [183, "TWTProfileSequence", false], [229, "TWTProfileSequence", false]], "twtprofilesequence (class in autodeer)": [[201, "autodeer.TWTProfileSequence", false]], "twtprofilesequence (class in autodeer.sequences)": [[230, "autodeer.sequences.TWTProfileSequence", false]], "update_analysis_table() (autodeer.gui.quickdeer.deerplot method)": [[117, "autodeer.gui.quickdeer.DEERplot.update_analysis_table", false]], "update_analysis_table() (deerplot method)": [[107, "DEERplot.update_analysis_table", false], [114, "DEERplot.update_analysis_table", false]], "update_deersettings() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_deersettings", false]], "update_deersettings() (autodeerworker method)": [[102, "autoDEERWorker.update_deersettings", false], [112, "autoDEERWorker.update_deersettings", false]], "update_fieldsweep() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.update_fieldsweep", false]], "update_fieldsweep() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.update_fieldsweep", false]], "update_fieldsweep() (autodeerui method)": [[80, "autoDEERUI.update_fieldsweep", false], [111, "autoDEERUI.update_fieldsweep", false]], "update_figure() (autodeer.gui.quickdeer.deerplot method)": [[117, "autodeer.gui.quickdeer.DEERplot.update_figure", false]], "update_figure() (deerplot method)": [[107, "DEERplot.update_figure", false], [114, "DEERplot.update_figure", false]], "update_fit_result() (autodeer.gui.quickdeer.deerplot method)": [[117, "autodeer.gui.quickdeer.DEERplot.update_fit_result", false]], "update_fit_result() (deerplot method)": [[107, "DEERplot.update_fit_result", false], [114, "DEERplot.update_fit_result", false]], "update_gyro() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_gyro", false]], "update_gyro() (autodeerworker method)": [[102, "autoDEERWorker.update_gyro", false], [112, "autoDEERWorker.update_gyro", false]], "update_inputs_from_dataset() (autodeer.gui.quickdeer.deerplot method)": [[117, "autodeer.gui.quickdeer.DEERplot.update_inputs_from_dataset", false]], "update_inputs_from_dataset() (deerplot method)": [[107, "DEERplot.update_inputs_from_dataset", false], [114, "DEERplot.update_inputs_from_dataset", false]], "update_lo() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_LO", false]], "update_lo() (autodeerworker method)": [[102, "autoDEERWorker.update_LO", false], [112, "autoDEERWorker.update_LO", false]], "update_log_text() (autodeer.gui.log.logdialog method)": [[106, "autodeer.gui.log.LogDialog.update_log_text", false]], "update_log_text() (logdialog method)": [[105, "LogDialog.update_log_text", false], [108, "LogDialog.update_log_text", false]], "update_longdeer() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.update_longdeer", false]], "update_longdeer() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.update_longdeer", false]], "update_longdeer() (autodeerui method)": [[80, "autoDEERUI.update_longdeer", false], [111, "autoDEERUI.update_longdeer", false]], "update_optimise_pulses_figure() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.update_optimise_pulses_figure", false]], "update_optimise_pulses_figure() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.update_optimise_pulses_figure", false]], "update_optimise_pulses_figure() (autodeerui method)": [[80, "autoDEERUI.update_optimise_pulses_figure", false], [111, "autoDEERUI.update_optimise_pulses_figure", false]], "update_quickdeer() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.update_quickdeer", false]], "update_quickdeer() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.update_quickdeer", false]], "update_quickdeer() (autodeerui method)": [[80, "autoDEERUI.update_quickdeer", false], [111, "autoDEERUI.update_quickdeer", false]], "update_relax() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.update_relax", false]], "update_relax() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.update_relax", false]], "update_relax() (autodeerui method)": [[80, "autoDEERUI.update_relax", false], [111, "autoDEERUI.update_relax", false]], "update_relax2d() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.update_relax2D", false]], "update_relax2d() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.update_relax2D", false]], "update_relax2d() (autodeerui method)": [[80, "autoDEERUI.update_relax2D", false], [111, "autoDEERUI.update_relax2D", false]], "update_reptime() (autodeer.gui.autodeer_worker.autodeerworker method)": [[103, "autodeer.gui.autoDEER_worker.autoDEERWorker.update_reptime", false]], "update_reptime() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.update_reptime", false]], "update_reptime() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.update_reptime", false]], "update_reptime() (autodeerui method)": [[80, "autoDEERUI.update_reptime", false], [111, "autoDEERUI.update_reptime", false]], "update_reptime() (autodeerworker method)": [[102, "autoDEERWorker.update_reptime", false], [112, "autoDEERWorker.update_reptime", false]], "update_respro() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.update_respro", false]], "update_respro() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.update_respro", false]], "update_respro() (autodeerui method)": [[80, "autoDEERUI.update_respro", false], [111, "autoDEERUI.update_respro", false]], "update_t2() (autodeer.gui.autodeerui method)": [[104, "autodeer.gui.autoDEERUI.update_T2", false]], "update_t2() (autodeer.gui.main.autodeerui method)": [[113, "autodeer.gui.main.autoDEERUI.update_T2", false]], "update_t2() (autodeerui method)": [[80, "autoDEERUI.update_T2", false], [111, "autoDEERUI.update_T2", false]], "uwb_eval_match() (in module autodeer.hardware.eth_awg_load)": [[163, "autodeer.hardware.ETH_awg_load.uwb_eval_match", false]], "uwb_load() (in module autodeer.hardware.eth_awg_load)": [[163, "autodeer.hardware.ETH_awg_load.uwb_load", false]], "val_in_ns() (in module autodeer)": [[201, "autodeer.val_in_ns", false]], "val_in_ns() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy.val_in_ns", false]], "val_in_ns() (in module autodeer.utils)": [[232, "autodeer.utils.val_in_ns", false]], "val_in_us() (in module autodeer)": [[201, "autodeer.val_in_us", false]], "val_in_us() (in module autodeer.hardware.dummy)": [[185, "autodeer.hardware.dummy.val_in_us", false]], "val_in_us() (in module autodeer.utils)": [[232, "autodeer.utils.val_in_us", false]], "value (autodeer.hardware.dummy_xepr.dummy_param property)": [[194, "autodeer.hardware.dummy_xepr.dummy_param.value", false]], "value (dummy_param property)": [[191, "dummy_param.value", false]], "value_at_pos() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.value_at_pos", false]], "value_at_pos() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.value_at_pos", false]], "value_at_time() (autodeer.twod_experiment.twodexperimentanalysis method)": [[59, "autodeer.TwoD_Experiment.TwoDExperimentAnalysis.value_at_time", false]], "value_at_time() (twodexperimentanalysis method)": [[58, "TwoDExperimentAnalysis.value_at_time", false]], "vpsave() (autodeer.hardware.dummy_xepr.dummy_xepr.xeprcmds method)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds.vpSave", false]], "vpsave() (dummy_xepr.xeprcmds method)": [[192, "dummy_xepr.XeprCmds.vpSave", false]], "vpsave() (xeprcmds method)": [[193, "XeprCmds.vpSave", false]], "window (in module autodeer.gui.__main__)": [[79, "autodeer.gui.__main__.window", false]], "worker (built-in class)": [[77, "Worker", false], [109, "Worker", false], [115, "Worker", false], [119, "Worker", false], [137, "Worker", false]], "worker (class in autodeer.gui)": [[104, "autodeer.gui.Worker", false]], "worker (class in autodeer.gui.main)": [[113, "autodeer.gui.main.Worker", false]], "worker (class in autodeer.gui.tools)": [[121, "autodeer.gui.tools.Worker", false]], "workersignals (built-in class)": [[78, "WorkerSignals", false], [110, "WorkerSignals", false], [116, "WorkerSignals", false], [120, "WorkerSignals", false]], "workersignals (class in autodeer.gui)": [[104, "autodeer.gui.WorkerSignals", false]], "workersignals (class in autodeer.gui.main)": [[113, "autodeer.gui.main.WorkerSignals", false]], "workersignals (class in autodeer.gui.tools)": [[121, "autodeer.gui.tools.WorkerSignals", false]], "wrap() (autodeer.reporter.svgflowable method)": [[214, "autodeer.reporter.SvgFlowable.wrap", false]], "wrap() (svgflowable method)": [[213, "SvgFlowable.wrap", false]], "write_pulsespel_file() (in module autodeer.hardware.bruker_tools)": [[147, "autodeer.hardware.Bruker_tools.write_pulsespel_file", false]], "xepr_path (in module autodeer.hardware.xeprapi_link)": [[165, "autodeer.hardware.XeprAPI_link.xepr_path", false]], "xepr_save() (autodeer.hardware.xeprapi_link.xeprapilink method)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink.xepr_save", false]], "xepr_save() (xeprapilink method)": [[125, "XeprAPILink.xepr_save", false], [138, "XeprAPILink.xepr_save", false], [164, "XeprAPILink.xepr_save", false], [186, "XeprAPILink.xepr_save", false]], "xeprapilink (built-in class)": [[125, "XeprAPILink", false], [138, "XeprAPILink", false], [164, "XeprAPILink", false], [186, "XeprAPILink", false]], "xeprapilink (class in autodeer.hardware.xeprapi_link)": [[165, "autodeer.hardware.XeprAPI_link.XeprAPILink", false]], "xeprcmds (built-in class)": [[193, "XeprCmds", false]], "xeprdataset() (autodeer.hardware.dummy_xepr.dummy_xepr method)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprDataset", false]], "xeprdataset() (dummy_xepr method)": [[192, "dummy_xepr.XeprDataset", false]], "xeprexperiment() (autodeer.hardware.dummy_xepr.dummy_xepr method)": [[194, "autodeer.hardware.dummy_xepr.dummy_xepr.XeprExperiment", false]], "xeprexperiment() (dummy_xepr method)": [[192, "dummy_xepr.XeprExperiment", false]]}, "objects": {"": [[122, 0, 1, "", "BrukerAWG"], [127, 0, 1, "", "BrukerMPFU"], [40, 0, 1, "", "CarrPurcellAnalysis"], [215, 0, 1, "", "CarrPurcellSequence"], [202, 0, 1, "", "ChirpPulse"], [65, 0, 1, "", "Criteria"], [196, 0, 1, "", "DEER"], [83, 0, 1, "", "DEERCriteria"], [216, 0, 1, "", "DEERSequence"], [114, 0, 1, "", "DEERplot"], [217, 0, 1, "", "Delay"], [218, 0, 1, "", "Detection"], [32, 0, 1, "", "DictFormater"], [197, 0, 1, "", "ELDORtune"], [71, 0, 1, "", "EPRAccessor"], [151, 0, 1, "", "ETH_awg_interface"], [26, 0, 1, "", "FieldSweepAnalysis"], [219, 0, 1, "", "FieldSweepSequence"], [205, 0, 1, "", "GaussianPulse"], [206, 0, 1, "", "HSPulse"], [220, 0, 1, "", "HahnEchoSequence"], [174, 0, 1, "", "Interface"], [108, 0, 1, "", "LogDialog"], [198, 0, 1, "", "MPFUtune"], [142, 0, 1, "", "PSPhaseCycle"], [143, 0, 1, "", "PSparvar"], [221, 0, 1, "", "Parameter"], [222, 0, 1, "", "Pulse"], [199, 0, 1, "", "PulseProfile"], [144, 0, 1, "", "PulseSpel"], [33, 0, 1, "", "QtLogHandler"], [223, 0, 1, "", "RectPulse"], [41, 0, 1, "", "RefocusedEcho2DAnalysis"], [224, 0, 1, "", "RefocusedEcho2DSequence"], [212, 0, 1, "", "Reporter"], [46, 0, 1, "", "ReptimeAnalysis"], [225, 0, 1, "", "ReptimeScan"], [50, 0, 1, "", "ResonatorProfileAnalysis"], [226, 0, 1, "", "ResonatorProfileSequence"], [96, 0, 1, "", "SNRCriteria"], [227, 0, 1, "", "Sequence"], [210, 0, 1, "", "SincPulse"], [24, 0, 1, "", "SpinSystem"], [213, 0, 1, "", "SvgFlowable"], [228, 0, 1, "", "T2RelaxationSequence"], [229, 0, 1, "", "TWTProfileSequence"], [100, 0, 1, "", "TimeCriteria"], [58, 0, 1, "", "TwoDExperimentAnalysis"], [137, 0, 1, "", "Worker"], [120, 0, 1, "", "WorkerSignals"], [186, 0, 1, "", "XeprAPILink"], [193, 0, 1, "", "XeprCmds"], [101, 0, 1, "", "autoDEERSignals"], [111, 0, 1, "", "autoDEERUI"], [112, 0, 1, "", "autoDEERWorker"], [201, 4, 0, "-", "autodeer"], [184, 0, 1, "", "dummyInterface"], [187, 0, 1, "", "dummy_api"], [188, 0, 1, "", "dummy_cur_exp"], [189, 0, 1, "", "dummy_dataset"], [190, 0, 1, "", "dummy_hidden"], [191, 0, 1, "", "dummy_param"], [192, 0, 1, "", "dummy_xepr"]], "BrukerAWG": [[122, 1, 1, "", "_launch_complex_thread"], [122, 1, 1, "", "acquire_dataset"], [122, 1, 1, "", "calc_d0"], [122, 1, 1, "", "calc_d0_from_Hahn_Echo"], [122, 1, 1, "", "connect"], [122, 1, 1, "", "isrunning"], [122, 1, 1, "", "launch"], [122, 1, 1, "", "setup"], [122, 1, 1, "", "terminate"], [122, 1, 1, "", "tune_nutation"], [122, 1, 1, "", "tune_pulse"], [122, 1, 1, "", "tune_rectpulse"]], "BrukerMPFU": [[127, 1, 1, "", "_launch_complex_thread"], [127, 1, 1, "", "acquire_dataset"], [127, 1, 1, "", "calc_d0"], [127, 1, 1, "", "calc_d0_from_Hahn_Echo"], [127, 1, 1, "", "connect"], [127, 1, 1, "", "isrunning"], [127, 1, 1, "", "launch"], [127, 1, 1, "", "setup"], [127, 1, 1, "", "terminate"], [127, 1, 1, "", "tune"], [127, 1, 1, "", "tune_pulse"], [127, 1, 1, "", "tune_rectpulse"]], "CarrPurcellAnalysis": [[40, 1, 1, "", "check_decay"], [40, 1, 1, "", "find_optimal"], [40, 1, 1, "", "fit"], [40, 1, 1, "", "plot"]], "CarrPurcellSequence": [[215, 1, 1, "", "_build_sequence"]], "ChirpPulse": [[202, 1, 1, "", "func"]], "Criteria": [[65, 1, 1, "", "__add__"]], "DEER": [[196, 1, 1, "", "run_4p"], [196, 1, 1, "", "run_5p"], [196, 1, 1, "", "run_CP"]], "DEERSequence": [[216, 1, 1, "", "add_ESEEM_avg"], [216, 1, 1, "", "five_pulse"], [216, 1, 1, "", "four_pulse"], [216, 1, 1, "", "nDEER_CP"], [216, 1, 1, "", "select_pcyc"], [216, 1, 1, "", "seven_pulse"], [216, 1, 1, "", "simulate"], [216, 1, 1, "", "three_pulse"]], "DEERplot": [[114, 1, 1, "", "clearLayout"], [114, 1, 1, "", "create_figure"], [114, 1, 1, "", "process_deeranalysis"], [114, 1, 1, "", "refresh_deer"], [114, 1, 1, "", "setup_inputs"], [114, 1, 1, "", "toolbar"], [114, 1, 1, "", "update_analysis_table"], [114, 1, 1, "", "update_figure"], [114, 1, 1, "", "update_fit_result"], [114, 1, 1, "", "update_inputs_from_dataset"]], "DictFormater": [[32, 1, 1, "", "format"]], "ELDORtune": [[197, 1, 1, "", "_get_exp"], [197, 1, 1, "", "_setup_exp"], [197, 1, 1, "", "find_min"], [197, 1, 1, "", "tune"]], "EPRAccessor": [[71, 2, 1, "", "SNR"], [71, 2, 1, "", "correctphase"], [71, 2, 1, "", "correctphasefull"], [71, 2, 1, "", "fft"], [71, 2, 1, "", "normalise"], [71, 1, 1, "", "save"], [71, 2, 1, "", "sequence"]], "ETH_awg_interface": [[151, 1, 1, "", "_build_exp_struct"], [151, 1, 1, "", "_build_parvar"], [151, 1, 1, "", "_build_phase_cycle"], [151, 1, 1, "", "_build_pulse"], [151, 1, 1, "", "acquire_dataset"], [151, 1, 1, "", "acquire_dataset_from_matlab"], [151, 1, 1, "", "connect"], [151, 1, 1, "", "isrunning"], [151, 1, 1, "", "launch"], [151, 1, 1, "", "launch_long"], [151, 1, 1, "", "launch_normal"], [151, 2, 1, "", "savefolder"], [151, 1, 1, "", "terminate"], [151, 1, 1, "", "tune"], [151, 1, 1, "", "tune_pulse"], [151, 1, 1, "", "tune_rectpulse"]], "FieldSweepAnalysis": [[26, 1, 1, "", "calc_gyro"], [26, 1, 1, "", "calc_noise_level"], [26, 1, 1, "", "find_max"], [26, 1, 1, "", "fit"], [26, 1, 1, "", "plot"], [26, 1, 1, "", "smooth"]], "GaussianPulse": [[205, 1, 1, "", "func"]], "HSPulse": [[206, 1, 1, "", "func"]], "Interface": [[174, 1, 1, "", "acquire_dataset"], [174, 1, 1, "", "connect"], [174, 1, 1, "", "isrunning"], [174, 1, 1, "", "launch"], [174, 1, 1, "", "terminate"], [174, 1, 1, "", "terminate_at"]], "LogDialog": [[108, 1, 1, "", "add_new_entry"], [108, 1, 1, "", "clear_log"], [108, 1, 1, "", "save_log_to_file"], [108, 1, 1, "", "update_log_text"]], "MPFUtune": [[198, 1, 1, "", "_setup_echo"], [198, 1, 1, "", "calc_d0"], [198, 1, 1, "", "tune"], [198, 1, 1, "", "tune_phase"], [198, 1, 1, "", "tune_power"]], "PSPhaseCycle": [[142, 1, 1, "", "_MPFU"], [142, 1, 1, "", "__str__"], [142, 1, 1, "", "_detect"], [142, 1, 1, "", "_main"]], "PSparvar": [[143, 1, 1, "", "checkPulseSpel"]], "Parameter": [[221, 1, 1, "", "__add__"], [221, 1, 1, "", "__eq__"], [221, 1, 1, "", "__mul__"], [221, 1, 1, "", "__rmul__"], [221, 1, 1, "", "__sub__"], [221, 1, 1, "", "_from_dict"], [221, 1, 1, "", "_from_json"], [221, 1, 1, "", "_to_dict"], [221, 1, 1, "", "_to_json"], [221, 1, 1, "", "add_axis"], [221, 1, 1, "", "copy"], [221, 2, 1, "", "dim"], [221, 1, 1, "", "get_axis"], [221, 1, 1, "", "is_static"], [221, 1, 1, "", "load"], [221, 1, 1, "", "remove_dynamic"], [221, 1, 1, "", "save"]], "Pulse": [[222, 1, 1, "", "__str__"], [222, 1, 1, "", "_addPhaseCycle"], [222, 1, 1, "", "_buildFMAM"], [222, 1, 1, "", "_calc_fft"], [222, 1, 1, "", "_from_dict"], [222, 1, 1, "", "_from_json"], [222, 1, 1, "", "_pcyc_str"], [222, 1, 1, "", "_to_dict"], [222, 1, 1, "", "_to_json"], [222, 1, 1, "", "build_shape"], [222, 1, 1, "", "build_table"], [222, 1, 1, "", "copy"], [222, 1, 1, "", "exciteprofile"], [222, 1, 1, "", "isDelayFocused"], [222, 1, 1, "", "isPulseFocused"], [222, 1, 1, "", "is_static"], [222, 1, 1, "", "load"], [222, 1, 1, "", "plot"], [222, 1, 1, "", "plot_fft"], [222, 1, 1, "", "save"]], "PulseProfile": [[199, 1, 1, "", "_freq_sweep"], [199, 1, 1, "", "_setup_exp"]], "PulseSpel": [[144, 1, 1, "", "_ExpDefs"], [144, 1, 1, "", "__str__"], [144, 1, 1, "", "_addAWGPulse"], [144, 1, 1, "", "_addDef"], [144, 1, 1, "", "_addExp"], [144, 1, 1, "", "_addPhaseCycle"], [144, 1, 1, "", "_addScanLoop"], [144, 1, 1, "", "_check_sequence"], [144, 1, 1, "", "_cmpl_Exp"], [144, 1, 1, "", "_cmpl_def"], [144, 1, 1, "", "_new_delay"], [144, 1, 1, "", "_new_pulse"], [144, 1, 1, "", "_new_var"], [144, 1, 1, "", "save"]], "QtLogHandler": [[33, 1, 1, "", "emit"], [33, 3, 1, "", "signal"]], "RectPulse": [[223, 1, 1, "", "func"]], "RefocusedEcho2DAnalysis": [[41, 1, 1, "", "_smooth"], [41, 1, 1, "", "find_optimal"], [41, 1, 1, "", "optimal_tau1"], [41, 1, 1, "", "plot1D"], [41, 1, 1, "", "plot2D"]], "RefocusedEcho2DSequence": [[224, 1, 1, "", "_build_sequence"]], "Reporter": [[212, 1, 1, "", "_build"], [212, 1, 1, "", "add_code_block"], [212, 1, 1, "", "add_figure"], [212, 1, 1, "", "add_new_section"], [212, 1, 1, "", "add_page_break"], [212, 1, 1, "", "add_space"], [212, 1, 1, "", "add_table"], [212, 1, 1, "", "add_text"], [212, 1, 1, "", "add_title"], [212, 1, 1, "", "footer"], [212, 1, 1, "", "header"]], "ReptimeAnalysis": [[46, 1, 1, "", "calc_optimal_reptime"], [46, 1, 1, "", "fit"], [46, 1, 1, "", "plot"]], "ResonatorProfileAnalysis": [[50, 1, 1, "", "_process_fit"], [50, 1, 1, "", "fit"], [50, 1, 1, "", "plot"], [50, 1, 1, "", "process_nutations"]], "ResonatorProfileSequence": [[226, 1, 1, "", "_build_sequence"]], "Sequence": [[227, 1, 1, "", "__str__"], [227, 1, 1, "", "_buildPhaseCycle"], [227, 1, 1, "", "_checkRect"], [227, 1, 1, "", "_convert_to_delay"], [227, 1, 1, "", "_convert_to_pulses"], [227, 1, 1, "", "_estimate_time"], [227, 1, 1, "", "_from_dict"], [227, 1, 1, "", "_from_json"], [227, 1, 1, "", "_to_dict"], [227, 1, 1, "", "_to_json"], [227, 1, 1, "", "addPulse"], [227, 1, 1, "", "convert"], [227, 1, 1, "", "copy"], [227, 1, 1, "", "evolution"], [227, 1, 1, "", "isDelayFocused"], [227, 1, 1, "", "isPulseFocused"], [227, 1, 1, "", "load"], [227, 1, 1, "", "plot"], [227, 1, 1, "", "plot_pulse_exc"], [227, 1, 1, "", "save"], [227, 2, 1, "", "seqtable_steps"], [227, 1, 1, "", "shift_detfreq_to_zero"]], "SincPulse": [[210, 1, 1, "", "func"]], "SvgFlowable": [[213, 1, 1, "", "draw"], [213, 1, 1, "", "wrap"]], "TWTProfileSequence": [[229, 1, 1, "", "_build_sequence"]], "TwoDExperimentAnalysis": [[58, 1, 1, "", "_data_transpose"], [58, 1, 1, "", "_stability_check"], [58, 1, 1, "", "calculate_noise_level"], [58, 1, 1, "", "calculate_optimal"], [58, 1, 1, "", "calculate_snr_threshold"], [58, 1, 1, "", "create_bahrenberg_plots"], [58, 1, 1, "", "create_slice_plot"], [58, 1, 1, "", "create_twoD_plot"], [58, 1, 1, "", "estimated_snr"], [58, 1, 1, "", "import_data"], [58, 1, 1, "", "import_dataset"], [58, 1, 1, "", "invert_signal"], [58, 1, 1, "", "load"], [58, 1, 1, "", "optimal_slice_plot"], [58, 1, 1, "", "set_snr_target"], [58, 1, 1, "", "set_snr_threshold"], [58, 1, 1, "", "set_time_target"], [58, 1, 1, "", "snr_normalize"], [58, 1, 1, "", "value_at_pos"], [58, 1, 1, "", "value_at_time"]], "Worker": [[137, 1, 1, "", "run"]], "WorkerSignals": [[120, 3, 1, "", "error"], [120, 3, 1, "", "finished"], [110, 3, 1, "", "progress"], [120, 3, 1, "", "result"]], "XeprAPILink": [[186, 1, 1, "", "_get_Xepr_global"], [186, 1, 1, "", "_get_cur_exp_global"], [186, 1, 1, "", "_set_Xepr_global"], [186, 1, 1, "", "_set_cur_exp_global"], [186, 1, 1, "", "_set_cur_exp_param"], [186, 1, 1, "", "_set_hidden_param"], [186, 1, 1, "", "_xepr_retry"], [186, 1, 1, "", "abort_exp"], [186, 1, 1, "", "acquire_dataset"], [186, 1, 1, "", "acquire_scan"], [186, 1, 1, "", "acquire_scan_2d"], [186, 1, 1, "", "acquire_scan_at"], [186, 1, 1, "", "compile_PulseSpel_def"], [186, 1, 1, "", "compile_PulseSpel_prg"], [186, 1, 1, "", "connect"], [186, 1, 1, "", "find_Xepr"], [186, 1, 1, "", "find_cur_exp"], [186, 1, 1, "", "find_hidden"], [186, 1, 1, "", "get_Acquisition_mode"], [186, 1, 1, "", "get_ELDOR_freq"], [186, 1, 1, "", "get_MW_amp"], [186, 1, 1, "", "get_PhaseCycle"], [186, 1, 1, "", "get_PulseSpel_def_filename"], [186, 1, 1, "", "get_PulseSpel_def_filepath"], [186, 1, 1, "", "get_PulseSpel_exp_filename"], [186, 1, 1, "", "get_PulseSpel_exp_filepath"], [186, 1, 1, "", "get_PulseSpel_experiment"], [186, 1, 1, "", "get_PulseSpel_phase_cycling"], [186, 1, 1, "", "get_ReplaceMode"], [186, 1, 1, "", "get_attenuator"], [186, 1, 1, "", "get_config_file"], [186, 1, 1, "", "get_counterfreq"], [186, 1, 1, "", "get_field"], [186, 1, 1, "", "get_freq"], [186, 1, 1, "", "get_hidden_param"], [186, 1, 1, "", "get_param"], [186, 1, 1, "", "get_phase"], [186, 1, 1, "", "get_spec_config"], [186, 1, 1, "", "get_sweep_width"], [186, 1, 1, "", "get_video_bandwidth"], [186, 1, 1, "", "get_video_gain"], [186, 1, 1, "", "is_exp_running"], [186, 1, 1, "", "pause_exp"], [186, 1, 1, "", "rerun_exp"], [186, 1, 1, "", "run_exp"], [186, 1, 1, "", "save_PulseSpel_def"], [186, 1, 1, "", "save_PulseSpel_exp"], [186, 1, 1, "", "set_Acquisition_mode"], [186, 1, 1, "", "set_ELDOR_freq"], [186, 1, 1, "", "set_MW_amp"], [186, 1, 1, "", "set_PhaseCycle"], [186, 1, 1, "", "set_PulseSpel_def_filepath"], [186, 1, 1, "", "set_PulseSpel_exp_filepath"], [186, 1, 1, "", "set_PulseSpel_experiment"], [186, 1, 1, "", "set_PulseSpel_phase_cycling"], [186, 1, 1, "", "set_PulseSpel_var"], [186, 1, 1, "", "set_ReplaceMode"], [186, 1, 1, "", "set_attenuator"], [186, 1, 1, "", "set_config_file"], [186, 1, 1, "", "set_field"], [186, 1, 1, "", "set_freq"], [186, 1, 1, "", "set_hidden_param"], [186, 1, 1, "", "set_param"], [186, 1, 1, "", "set_phase"], [186, 1, 1, "", "set_sweep_width"], [186, 1, 1, "", "set_video_bandwidth"], [186, 1, 1, "", "set_video_gain"], [186, 1, 1, "", "stop_exp"], [186, 1, 1, "", "xepr_save"]], "XeprCmds": [[193, 1, 1, "", "aqExpSelect"], [193, 1, 1, "", "aqPgCompile"], [193, 1, 1, "", "aqPgDefLoad"], [193, 1, 1, "", "aqPgDefSaveAs"], [193, 1, 1, "", "aqPgLoad"], [193, 1, 1, "", "aqPgSaveAs"], [193, 1, 1, "", "aqPgShowPrg"], [193, 1, 1, "", "vpSave"]], "autoDEERSignals": [[101, 3, 1, "", "Relax2D_result"], [101, 3, 1, "", "T2_result"], [101, 3, 1, "", "error"], [101, 3, 1, "", "finished"], [101, 3, 1, "", "fsweep_result"], [101, 3, 1, "", "longdeer_result"], [101, 3, 1, "", "longdeer_update"], [101, 3, 1, "", "progress"], [101, 3, 1, "", "quickdeer_result"], [101, 3, 1, "", "quickdeer_update"], [101, 3, 1, "", "relax_result"], [101, 3, 1, "", "reptime_scan_result"], [101, 3, 1, "", "respro_result"], [101, 3, 1, "", "result"], [101, 3, 1, "", "status"], [101, 3, 1, "", "timeout"]], "autoDEERUI": [[111, 1, 1, "", "RunAdvancedAutoDEER"], [111, 1, 1, "", "RunAutoDEER"], [111, 1, 1, "", "RunFullyAutoDEER"], [111, 1, 1, "", "advanced_mode_inputs"], [111, 1, 1, "", "change_LO"], [111, 1, 1, "", "check_CP"], [111, 1, 1, "", "check_T2"], [111, 1, 1, "", "connect_spectrometer"], [111, 1, 1, "", "create_fieldsweep_figure"], [111, 1, 1, "", "create_relax_figure"], [111, 1, 1, "", "create_report"], [111, 1, 1, "", "create_respro_figure"], [111, 1, 1, "", "fsweep_toolbar"], [111, 1, 1, "", "load_epr_file"], [111, 1, 1, "", "load_folder"], [111, 1, 1, "", "load_spectrometer_config"], [111, 1, 1, "", "optimise_pulses"], [111, 1, 1, "", "optimise_pulses_button"], [111, 1, 1, "", "raise_warning"], [111, 1, 1, "", "refresh_T2"], [111, 1, 1, "", "refresh_fieldsweep_after_fit"], [111, 1, 1, "", "refresh_relax"], [111, 1, 1, "", "refresh_relax_figure"], [111, 1, 1, "", "refresh_respro"], [111, 1, 1, "", "relax_toolbar"], [111, 1, 1, "", "respro_toolbar"], [111, 1, 1, "", "save_data"], [111, 1, 1, "", "select_resonator"], [111, 1, 1, "", "set_spectrometer_connected_light"], [111, 1, 1, "", "timeout"], [111, 1, 1, "", "update_T2"], [111, 1, 1, "", "update_fieldsweep"], [111, 1, 1, "", "update_longdeer"], [111, 1, 1, "", "update_optimise_pulses_figure"], [111, 1, 1, "", "update_quickdeer"], [111, 1, 1, "", "update_relax"], [111, 1, 1, "", "update_relax2D"], [111, 1, 1, "", "update_reptime"], [111, 1, 1, "", "update_respro"]], "autoDEERWorker": [[112, 1, 1, "", "_build_methods"], [112, 1, 1, "", "new_data"], [112, 1, 1, "", "new_pulses"], [112, 1, 1, "", "pause_and_wait"], [112, 1, 1, "", "run"], [112, 1, 1, "", "run_2D_relax"], [112, 1, 1, "", "run_CP_relax"], [112, 1, 1, "", "run_T2_relax"], [112, 1, 1, "", "run_deer"], [112, 1, 1, "", "run_fsweep"], [112, 1, 1, "", "run_long_deer"], [112, 1, 1, "", "run_quick_deer"], [112, 1, 1, "", "run_reptime_opt"], [112, 1, 1, "", "run_respro"], [112, 1, 1, "", "set_2D_max_tau"], [112, 1, 1, "", "set_noise_mode"], [112, 1, 1, "", "stop"], [112, 1, 1, "", "tune_pulses"], [112, 1, 1, "", "update_LO"], [112, 1, 1, "", "update_deersettings"], [112, 1, 1, "", "update_gyro"], [112, 1, 1, "", "update_reptime"]], "autodeer": [[201, 0, 1, "", "CarrPurcellAnalysis"], [201, 0, 1, "", "CarrPurcellSequence"], [201, 0, 1, "", "ChirpPulse"], [201, 0, 1, "", "Criteria"], [201, 0, 1, "", "DEERCriteria"], [201, 0, 1, "", "DEERSequence"], [18, 4, 0, "-", "DEER_analysis"], [201, 5, 1, "id116", "DEERanalysis"], [201, 5, 1, "", "DEERanalysis_plot"], [201, 5, 1, "", "DEERanalysis_plot_pub"], [201, 0, 1, "id113", "Delay"], [201, 0, 1, "id140", "Detection"], [201, 0, 1, "", "EPRAccessor"], [25, 4, 0, "-", "FieldSweep"], [201, 0, 1, "", "FieldSweepAnalysis"], [201, 0, 1, "", "FieldSweepSequence"], [201, 0, 1, "", "GaussianPulse"], [201, 0, 1, "", "HSPulse"], [201, 0, 1, "", "HahnEchoSequence"], [201, 5, 1, "", "IdentifyROI"], [201, 0, 1, "id167", "Interface"], [34, 4, 0, "-", "Logging"], [201, 0, 1, "id141", "Parameter"], [201, 0, 1, "id118", "Pulse"], [201, 0, 1, "id114", "RectPulse"], [201, 0, 1, "", "RefocusedEcho2DAnalysis"], [201, 0, 1, "", "RefocusedEcho2DSequence"], [44, 4, 0, "-", "Relaxation"], [201, 0, 1, "", "Reporter"], [201, 0, 1, "", "ReptimeAnalysis"], [201, 0, 1, "", "ReptimeScan"], [49, 4, 0, "-", "ResPro"], [201, 0, 1, "", "ResonatorProfileAnalysis"], [201, 0, 1, "", "ResonatorProfileSequence"], [201, 0, 1, "", "SNRCriteria"], [201, 0, 1, "id174", "Sequence"], [201, 0, 1, "", "SincPulse"], [201, 0, 1, "", "T2RelaxationSequence"], [201, 0, 1, "", "TWTProfileSequence"], [201, 0, 1, "", "TimeCriteria"], [59, 4, 0, "-", "TwoD_Experiment"], [201, 6, 1, "", "__version__"], [60, 4, 0, "-", "_version"], [201, 5, 1, "id117", "autoEPRDecoder"], [201, 5, 1, "", "build_default_pulses"], [201, 5, 1, "id86", "build_table"], [201, 5, 1, "", "calc_correction_factor"], [201, 5, 1, "", "calc_deer_settings"], [63, 4, 0, "-", "classes"], [201, 6, 1, "", "cmap"], [64, 4, 0, "-", "colors"], [201, 5, 1, "", "combo_figure"], [201, 5, 1, "", "create_dataset_from_axes"], [201, 5, 1, "", "create_dataset_from_bruker"], [201, 5, 1, "", "create_dataset_from_sequence"], [69, 4, 0, "-", "criteria"], [76, 4, 0, "-", "dataset"], [201, 5, 1, "", "detect_ESEEM"], [201, 5, 1, "", "eprload"], [201, 5, 1, "", "gcd"], [201, 5, 1, "", "get_all_axes"], [201, 5, 1, "", "get_all_fixed_param"], [104, 4, 0, "-", "gui"], [195, 4, 0, "-", "hardware"], [201, 6, 1, "", "log"], [201, 5, 1, "", "normalise_01"], [201, 5, 1, "", "optimise_pulses"], [201, 5, 1, "", "optimise_spectra_position"], [201, 5, 1, "", "plot_1Drelax"], [201, 5, 1, "", "plot_overlap"], [201, 6, 1, "", "primary_colors"], [211, 4, 0, "-", "pulses"], [214, 4, 0, "-", "reporter"], [201, 5, 1, "", "round_step"], [201, 5, 1, "", "save_file"], [230, 4, 0, "-", "sequences"], [201, 5, 1, "id87", "sop"], [231, 4, 0, "-", "tools"], [201, 5, 1, "", "transpose_dict_of_list"], [201, 5, 1, "", "transpose_list_of_dicts"], [232, 4, 0, "-", "utils"], [201, 5, 1, "", "val_in_ns"], [201, 5, 1, "", "val_in_us"]], "autodeer.CarrPurcellAnalysis": [[201, 1, 1, "", "check_decay"], [201, 1, 1, "", "find_optimal"], [201, 1, 1, "", "fit"], [201, 1, 1, "", "plot"]], "autodeer.CarrPurcellSequence": [[201, 1, 1, "", "_build_sequence"]], "autodeer.ChirpPulse": [[201, 1, 1, "", "func"]], "autodeer.Criteria": [[201, 1, 1, "", "__add__"]], "autodeer.DEERSequence": [[201, 1, 1, "", "add_ESEEM_avg"], [201, 1, 1, "", "five_pulse"], [201, 1, 1, "", "four_pulse"], [201, 1, 1, "", "nDEER_CP"], [201, 1, 1, "", "select_pcyc"], [201, 1, 1, "", "seven_pulse"], [201, 1, 1, "", "simulate"], [201, 1, 1, "", "three_pulse"]], "autodeer.DEER_analysis": [[18, 5, 1, "", "DEERanalysis"], [18, 5, 1, "", "DEERanalysis_plot"], [18, 5, 1, "", "DEERanalysis_plot_pub"], [18, 5, 1, "", "IdentifyROI"], [18, 6, 1, "", "MODULE_DIR"], [18, 5, 1, "", "background_func"], [18, 5, 1, "", "build__lowpass_butter_filter"], [18, 5, 1, "", "calc_correction_factor"], [18, 5, 1, "", "calc_deer_settings"], [18, 5, 1, "", "calc_identifiability"], [18, 5, 1, "", "find_longest_pulse"], [18, 5, 1, "", "functional"], [18, 6, 1, "", "log"], [18, 5, 1, "", "normalise_01"], [18, 5, 1, "", "optimise_pulses"], [18, 5, 1, "", "plot_overlap"], [18, 5, 1, "", "remove_echo"], [18, 5, 1, "", "resample_and_shift_vector"], [18, 5, 1, "", "shift_pulse_freq"]], "autodeer.EPRAccessor": [[201, 2, 1, "", "SNR"], [201, 2, 1, "", "correctphase"], [201, 2, 1, "", "correctphasefull"], [201, 2, 1, "", "fft"], [201, 2, 1, "", "normalise"], [201, 1, 1, "", "save"], [201, 2, 1, "", "sequence"]], "autodeer.FieldSweep": [[25, 0, 1, "", "FieldSweepAnalysis"], [25, 0, 1, "", "SpinSystem"], [25, 5, 1, "", "build_spectrum"], [25, 5, 1, "", "create_Nmodel"], [25, 5, 1, "", "erot"], [25, 5, 1, "", "eyekron"], [25, 5, 1, "", "ham"], [25, 5, 1, "", "ham_ez"], [25, 5, 1, "", "ham_nz"], [25, 5, 1, "", "kroneye"], [25, 5, 1, "", "resfields"]], "autodeer.FieldSweep.FieldSweepAnalysis": [[25, 1, 1, "", "calc_gyro"], [25, 1, 1, "", "calc_noise_level"], [25, 1, 1, "", "find_max"], [25, 1, 1, "", "fit"], [25, 1, 1, "", "plot"], [25, 1, 1, "", "smooth"]], "autodeer.FieldSweepAnalysis": [[201, 1, 1, "", "calc_gyro"], [201, 1, 1, "", "calc_noise_level"], [201, 1, 1, "", "find_max"], [201, 1, 1, "", "fit"], [201, 1, 1, "", "plot"], [201, 1, 1, "", "smooth"]], "autodeer.GaussianPulse": [[201, 1, 1, "", "func"]], "autodeer.HSPulse": [[201, 1, 1, "", "func"]], "autodeer.Interface": [[201, 1, 1, "id169", "acquire_dataset"], [201, 1, 1, "id168", "connect"], [201, 1, 1, "id171", "isrunning"], [201, 1, 1, "id170", "launch"], [201, 1, 1, "id172", "terminate"], [201, 1, 1, "id173", "terminate_at"]], "autodeer.Logging": [[34, 0, 1, "", "DictFormater"], [34, 0, 1, "", "QtLogHandler"], [34, 5, 1, "", "change_log_level"], [34, 5, 1, "", "setup_logs"]], "autodeer.Logging.DictFormater": [[34, 1, 1, "", "format"]], "autodeer.Logging.QtLogHandler": [[34, 1, 1, "", "emit"], [34, 3, 1, "", "signal"]], "autodeer.Parameter": [[201, 1, 1, "id156", "__add__"], [201, 1, 1, "id155", "__eq__"], [201, 1, 1, "id158", "__mul__"], [201, 1, 1, "id159", "__rmul__"], [201, 1, 1, "id157", "__sub__"], [201, 1, 1, "id164", "_from_dict"], [201, 1, 1, "id165", "_from_json"], [201, 1, 1, "id161", "_to_dict"], [201, 1, 1, "id162", "_to_json"], [201, 1, 1, "id151", "add_axis"], [201, 1, 1, "id160", "copy"], [201, 2, 1, "id150", "dim"], [201, 1, 1, "id152", "get_axis"], [201, 1, 1, "id154", "is_static"], [201, 1, 1, "id166", "load"], [201, 1, 1, "id153", "remove_dynamic"], [201, 1, 1, "id163", "save"]], "autodeer.Pulse": [[201, 1, 1, "id132", "__str__"], [201, 1, 1, "id119", "_addPhaseCycle"], [201, 1, 1, "id120", "_buildFMAM"], [201, 1, 1, "id127", "_calc_fft"], [201, 1, 1, "id137", "_from_dict"], [201, 1, 1, "id138", "_from_json"], [201, 1, 1, "id131", "_pcyc_str"], [201, 1, 1, "id134", "_to_dict"], [201, 1, 1, "id135", "_to_json"], [201, 1, 1, "id121", "build_shape"], [201, 1, 1, "id122", "build_table"], [201, 1, 1, "id133", "copy"], [201, 1, 1, "id128", "exciteprofile"], [201, 1, 1, "id124", "isDelayFocused"], [201, 1, 1, "id125", "isPulseFocused"], [201, 1, 1, "id123", "is_static"], [201, 1, 1, "id139", "load"], [201, 1, 1, "id126", "plot"], [201, 1, 1, "id130", "plot_fft"], [201, 1, 1, "id136", "save"]], "autodeer.RectPulse": [[201, 1, 1, "id115", "func"]], "autodeer.RefocusedEcho2DAnalysis": [[201, 1, 1, "", "_smooth"], [201, 1, 1, "", "find_optimal"], [201, 1, 1, "", "optimal_tau1"], [201, 1, 1, "", "plot1D"], [201, 1, 1, "", "plot2D"]], "autodeer.RefocusedEcho2DSequence": [[201, 1, 1, "", "_build_sequence"]], "autodeer.Relaxation": [[44, 0, 1, "", "CarrPurcellAnalysis"], [44, 0, 1, "", "RefocusedEcho2DAnalysis"], [44, 0, 1, "", "ReptimeAnalysis"], [44, 6, 1, "", "cmap"], [44, 5, 1, "", "detect_ESEEM"], [44, 5, 1, "", "plot_1Drelax"]], "autodeer.Relaxation.CarrPurcellAnalysis": [[44, 1, 1, "", "check_decay"], [44, 1, 1, "", "find_optimal"], [44, 1, 1, "", "fit"], [44, 1, 1, "", "plot"]], "autodeer.Relaxation.RefocusedEcho2DAnalysis": [[44, 1, 1, "", "_smooth"], [44, 1, 1, "", "find_optimal"], [44, 1, 1, "", "optimal_tau1"], [44, 1, 1, "", "plot1D"], [44, 1, 1, "", "plot2D"]], "autodeer.Relaxation.ReptimeAnalysis": [[44, 1, 1, "", "calc_optimal_reptime"], [44, 1, 1, "", "fit"], [44, 1, 1, "", "plot"]], "autodeer.Reporter": [[201, 1, 1, "", "_build"], [201, 1, 1, "", "add_code_block"], [201, 1, 1, "", "add_figure"], [201, 1, 1, "", "add_new_section"], [201, 1, 1, "", "add_page_break"], [201, 1, 1, "", "add_space"], [201, 1, 1, "", "add_table"], [201, 1, 1, "", "add_text"], [201, 1, 1, "", "add_title"], [201, 1, 1, "", "footer"], [201, 1, 1, "", "header"]], "autodeer.ReptimeAnalysis": [[201, 1, 1, "", "calc_optimal_reptime"], [201, 1, 1, "", "fit"], [201, 1, 1, "", "plot"]], "autodeer.ResPro": [[49, 5, 1, "", "BSpline_extra"], [49, 0, 1, "", "ResonatorProfileAnalysis"], [49, 5, 1, "", "calc_overlap"], [49, 5, 1, "", "ceil"], [49, 5, 1, "", "floor"], [49, 5, 1, "", "optimise_spectra_position"]], "autodeer.ResPro.ResonatorProfileAnalysis": [[49, 1, 1, "", "_process_fit"], [49, 1, 1, "", "fit"], [49, 1, 1, "", "plot"], [49, 1, 1, "", "process_nutations"]], "autodeer.ResonatorProfileAnalysis": [[201, 1, 1, "", "_process_fit"], [201, 1, 1, "", "fit"], [201, 1, 1, "", "plot"], [201, 1, 1, "", "process_nutations"]], "autodeer.ResonatorProfileSequence": [[201, 1, 1, "", "_build_sequence"]], "autodeer.Sequence": [[201, 1, 1, "id189", "__str__"], [201, 1, 1, "id180", "_buildPhaseCycle"], [201, 1, 1, "id188", "_checkRect"], [201, 1, 1, "id186", "_convert_to_delay"], [201, 1, 1, "id187", "_convert_to_pulses"], [201, 1, 1, "id179", "_estimate_time"], [201, 1, 1, "id194", "_from_dict"], [201, 1, 1, "id195", "_from_json"], [201, 1, 1, "id191", "_to_dict"], [201, 1, 1, "id192", "_to_json"], [201, 1, 1, "id178", "addPulse"], [201, 1, 1, "id185", "convert"], [201, 1, 1, "id190", "copy"], [201, 1, 1, "id181", "evolution"], [201, 1, 1, "id184", "isDelayFocused"], [201, 1, 1, "id183", "isPulseFocused"], [201, 1, 1, "id196", "load"], [201, 1, 1, "id176", "plot"], [201, 1, 1, "id177", "plot_pulse_exc"], [201, 1, 1, "id193", "save"], [201, 2, 1, "id175", "seqtable_steps"], [201, 1, 1, "id182", "shift_detfreq_to_zero"]], "autodeer.SincPulse": [[201, 1, 1, "", "func"]], "autodeer.TWTProfileSequence": [[201, 1, 1, "", "_build_sequence"]], "autodeer.TwoD_Experiment": [[59, 0, 1, "", "TwoDExperimentAnalysis"]], "autodeer.TwoD_Experiment.TwoDExperimentAnalysis": [[59, 1, 1, "", "_data_transpose"], [59, 1, 1, "", "_stability_check"], [59, 1, 1, "", "calculate_noise_level"], [59, 1, 1, "", "calculate_optimal"], [59, 1, 1, "", "calculate_snr_threshold"], [59, 1, 1, "", "create_bahrenberg_plots"], [59, 1, 1, "", "create_slice_plot"], [59, 1, 1, "", "create_twoD_plot"], [59, 1, 1, "", "estimated_snr"], [59, 1, 1, "", "import_data"], [59, 1, 1, "", "import_dataset"], [59, 1, 1, "", "invert_signal"], [59, 1, 1, "", "load"], [59, 1, 1, "", "optimal_slice_plot"], [59, 1, 1, "", "set_snr_target"], [59, 1, 1, "", "set_snr_threshold"], [59, 1, 1, "", "set_time_target"], [59, 1, 1, "", "snr_normalize"], [59, 1, 1, "", "value_at_pos"], [59, 1, 1, "", "value_at_time"]], "autodeer._version": [[60, 6, 1, "", "__version__"]], "autodeer.classes": [[63, 0, 1, "", "Interface"], [63, 0, 1, "", "Parameter"]], "autodeer.classes.Interface": [[63, 1, 1, "", "acquire_dataset"], [63, 1, 1, "", "connect"], [63, 1, 1, "", "isrunning"], [63, 1, 1, "", "launch"], [63, 1, 1, "", "terminate"], [63, 1, 1, "", "terminate_at"]], "autodeer.classes.Parameter": [[63, 1, 1, "", "__add__"], [63, 1, 1, "", "__eq__"], [63, 1, 1, "", "__mul__"], [63, 1, 1, "", "__rmul__"], [63, 1, 1, "", "__sub__"], [63, 1, 1, "", "_from_dict"], [63, 1, 1, "", "_from_json"], [63, 1, 1, "", "_to_dict"], [63, 1, 1, "", "_to_json"], [63, 1, 1, "", "add_axis"], [63, 1, 1, "", "copy"], [63, 2, 1, "", "dim"], [63, 1, 1, "", "get_axis"], [63, 1, 1, "", "is_static"], [63, 1, 1, "", "load"], [63, 1, 1, "", "remove_dynamic"], [63, 1, 1, "", "save"]], "autodeer.colors": [[64, 6, 1, "", "ReIm_colors"], [64, 6, 1, "", "primary_colors"], [64, 6, 1, "", "shade_colors"]], "autodeer.criteria": [[69, 0, 1, "", "Criteria"], [69, 0, 1, "", "DEERCriteria"], [69, 0, 1, "", "SNRCriteria"], [69, 0, 1, "", "TimeCriteria"], [69, 6, 1, "", "log"]], "autodeer.criteria.Criteria": [[69, 1, 1, "", "__add__"]], "autodeer.dataset": [[76, 0, 1, "", "EPRAccessor"], [76, 5, 1, "", "create_dataset_from_axes"], [76, 5, 1, "", "create_dataset_from_bruker"], [76, 5, 1, "", "create_dataset_from_sequence"], [76, 5, 1, "", "get_all_axes"], [76, 5, 1, "", "get_all_fixed_param"]], "autodeer.dataset.EPRAccessor": [[76, 2, 1, "", "SNR"], [76, 2, 1, "", "correctphase"], [76, 2, 1, "", "correctphasefull"], [76, 2, 1, "", "fft"], [76, 2, 1, "", "normalise"], [76, 1, 1, "", "save"], [76, 2, 1, "", "sequence"]], "autodeer.gui": [[104, 0, 1, "", "Worker"], [104, 0, 1, "", "WorkerSignals"], [79, 4, 0, "-", "__main__"], [104, 0, 1, "", "autoDEERUI"], [103, 4, 0, "-", "autoDEER_worker"], [104, 5, 1, "", "fill_table"], [104, 5, 1, "", "getCIstring"], [104, 5, 1, "", "get_sequence_rows"], [104, 5, 1, "", "list_str_to_type"], [104, 5, 1, "", "load_epr_file"], [106, 4, 0, "-", "log"], [113, 4, 0, "-", "main"], [104, 5, 1, "", "param_in_MHz"], [104, 5, 1, "", "param_in_us"], [104, 5, 1, "", "pyqt_table_from_dict"], [117, 4, 0, "-", "quickdeer"], [104, 5, 1, "", "read_table"], [104, 5, 1, "", "str_to_list_type"], [104, 5, 1, "", "test_SNR"], [118, 4, 0, "-", "test_main"], [121, 4, 0, "-", "tools"]], "autodeer.gui.Worker": [[104, 1, 1, "", "run"]], "autodeer.gui.WorkerSignals": [[104, 3, 1, "", "error"], [104, 3, 1, "", "finished"], [104, 3, 1, "", "result"]], "autodeer.gui.__main__": [[79, 6, 1, "", "app"], [79, 6, 1, "", "window"]], "autodeer.gui.autoDEERUI": [[104, 1, 1, "", "RunAdvancedAutoDEER"], [104, 1, 1, "", "RunAutoDEER"], [104, 1, 1, "", "RunFullyAutoDEER"], [104, 1, 1, "", "advanced_mode_inputs"], [104, 1, 1, "", "change_LO"], [104, 1, 1, "", "check_CP"], [104, 1, 1, "", "check_T2"], [104, 1, 1, "", "connect_spectrometer"], [104, 1, 1, "", "create_fieldsweep_figure"], [104, 1, 1, "", "create_relax_figure"], [104, 1, 1, "", "create_report"], [104, 1, 1, "", "create_respro_figure"], [104, 1, 1, "", "fsweep_toolbar"], [104, 1, 1, "", "load_epr_file"], [104, 1, 1, "", "load_folder"], [104, 1, 1, "", "load_spectrometer_config"], [104, 1, 1, "", "optimise_pulses"], [104, 1, 1, "", "optimise_pulses_button"], [104, 1, 1, "", "raise_warning"], [104, 1, 1, "", "refresh_T2"], [104, 1, 1, "", "refresh_fieldsweep_after_fit"], [104, 1, 1, "", "refresh_relax"], [104, 1, 1, "", "refresh_relax_figure"], [104, 1, 1, "", "refresh_respro"], [104, 1, 1, "", "relax_toolbar"], [104, 1, 1, "", "respro_toolbar"], [104, 1, 1, "", "save_data"], [104, 1, 1, "", "select_resonator"], [104, 1, 1, "", "set_spectrometer_connected_light"], [104, 1, 1, "", "timeout"], [104, 1, 1, "", "update_T2"], [104, 1, 1, "", "update_fieldsweep"], [104, 1, 1, "", "update_longdeer"], [104, 1, 1, "", "update_optimise_pulses_figure"], [104, 1, 1, "", "update_quickdeer"], [104, 1, 1, "", "update_relax"], [104, 1, 1, "", "update_relax2D"], [104, 1, 1, "", "update_reptime"], [104, 1, 1, "", "update_respro"]], "autodeer.gui.autoDEER_worker": [[103, 0, 1, "", "autoDEERSignals"], [103, 0, 1, "", "autoDEERWorker"]], "autodeer.gui.autoDEER_worker.autoDEERSignals": [[103, 3, 1, "", "Relax2D_result"], [103, 3, 1, "", "T2_result"], [103, 3, 1, "", "error"], [103, 3, 1, "", "finished"], [103, 3, 1, "", "fsweep_result"], [103, 3, 1, "", "longdeer_result"], [103, 3, 1, "", "longdeer_update"], [103, 3, 1, "", "progress"], [103, 3, 1, "", "quickdeer_result"], [103, 3, 1, "", "quickdeer_update"], [103, 3, 1, "", "relax_result"], [103, 3, 1, "", "reptime_scan_result"], [103, 3, 1, "", "respro_result"], [103, 3, 1, "", "result"], [103, 3, 1, "", "status"], [103, 3, 1, "", "timeout"]], "autodeer.gui.autoDEER_worker.autoDEERWorker": [[103, 1, 1, "", "_build_methods"], [103, 1, 1, "", "new_data"], [103, 1, 1, "", "new_pulses"], [103, 1, 1, "", "pause_and_wait"], [103, 1, 1, "", "run"], [103, 1, 1, "", "run_2D_relax"], [103, 1, 1, "", "run_CP_relax"], [103, 1, 1, "", "run_T2_relax"], [103, 1, 1, "", "run_deer"], [103, 1, 1, "", "run_fsweep"], [103, 1, 1, "", "run_long_deer"], [103, 1, 1, "", "run_quick_deer"], [103, 1, 1, "", "run_reptime_opt"], [103, 1, 1, "", "run_respro"], [103, 1, 1, "", "set_2D_max_tau"], [103, 1, 1, "", "set_noise_mode"], [103, 1, 1, "", "stop"], [103, 1, 1, "", "tune_pulses"], [103, 1, 1, "", "update_LO"], [103, 1, 1, "", "update_deersettings"], [103, 1, 1, "", "update_gyro"], [103, 1, 1, "", "update_reptime"]], "autodeer.gui.log": [[106, 0, 1, "", "LogDialog"], [106, 6, 1, "", "package_directory"]], "autodeer.gui.log.LogDialog": [[106, 1, 1, "", "add_new_entry"], [106, 1, 1, "", "clear_log"], [106, 1, 1, "", "save_log_to_file"], [106, 1, 1, "", "update_log_text"]], "autodeer.gui.main": [[113, 6, 1, "", "SampleConcComboBox_opts"], [113, 5, 1, "", "T2_process"], [113, 0, 1, "", "Worker"], [113, 0, 1, "", "WorkerSignals"], [113, 6, 1, "", "app"], [113, 0, 1, "", "autoDEERUI"], [113, 5, 1, "", "fieldsweep_fit"], [113, 6, 1, "", "package_directory"], [113, 5, 1, "", "relax_process"], [113, 5, 1, "", "respro_process"]], "autodeer.gui.main.Worker": [[113, 1, 1, "", "run"]], "autodeer.gui.main.WorkerSignals": [[113, 3, 1, "", "error"], [113, 3, 1, "", "finished"], [113, 3, 1, "", "progress"], [113, 3, 1, "", "result"]], "autodeer.gui.main.autoDEERUI": [[113, 1, 1, "", "RunAdvancedAutoDEER"], [113, 1, 1, "", "RunAutoDEER"], [113, 1, 1, "", "RunFullyAutoDEER"], [113, 1, 1, "", "advanced_mode_inputs"], [113, 1, 1, "", "change_LO"], [113, 1, 1, "", "check_CP"], [113, 1, 1, "", "check_T2"], [113, 1, 1, "", "connect_spectrometer"], [113, 1, 1, "", "create_fieldsweep_figure"], [113, 1, 1, "", "create_relax_figure"], [113, 1, 1, "", "create_report"], [113, 1, 1, "", "create_respro_figure"], [113, 1, 1, "", "fsweep_toolbar"], [113, 1, 1, "", "load_epr_file"], [113, 1, 1, "", "load_folder"], [113, 1, 1, "", "load_spectrometer_config"], [113, 1, 1, "", "optimise_pulses"], [113, 1, 1, "", "optimise_pulses_button"], [113, 1, 1, "", "raise_warning"], [113, 1, 1, "", "refresh_T2"], [113, 1, 1, "", "refresh_fieldsweep_after_fit"], [113, 1, 1, "", "refresh_relax"], [113, 1, 1, "", "refresh_relax_figure"], [113, 1, 1, "", "refresh_respro"], [113, 1, 1, "", "relax_toolbar"], [113, 1, 1, "", "respro_toolbar"], [113, 1, 1, "", "save_data"], [113, 1, 1, "", "select_resonator"], [113, 1, 1, "", "set_spectrometer_connected_light"], [113, 1, 1, "", "timeout"], [113, 1, 1, "", "update_T2"], [113, 1, 1, "", "update_fieldsweep"], [113, 1, 1, "", "update_longdeer"], [113, 1, 1, "", "update_optimise_pulses_figure"], [113, 1, 1, "", "update_quickdeer"], [113, 1, 1, "", "update_relax"], [113, 1, 1, "", "update_relax2D"], [113, 1, 1, "", "update_reptime"], [113, 1, 1, "", "update_respro"]], "autodeer.gui.quickdeer": [[117, 0, 1, "", "DEERplot"], [117, 6, 1, "", "app"], [117, 5, 1, "", "deeranalysis_process"], [117, 5, 1, "", "get_Vexp"], [117, 6, 1, "", "package_directory"]], "autodeer.gui.quickdeer.DEERplot": [[117, 1, 1, "", "clearLayout"], [117, 1, 1, "", "create_figure"], [117, 1, 1, "", "process_deeranalysis"], [117, 1, 1, "", "refresh_deer"], [117, 1, 1, "", "setup_inputs"], [117, 1, 1, "", "toolbar"], [117, 1, 1, "", "update_analysis_table"], [117, 1, 1, "", "update_figure"], [117, 1, 1, "", "update_fit_result"], [117, 1, 1, "", "update_inputs_from_dataset"]], "autodeer.gui.tools": [[121, 0, 1, "", "Worker"], [121, 0, 1, "", "WorkerSignals"], [121, 5, 1, "", "fill_table"], [121, 5, 1, "", "getCIstring"], [121, 5, 1, "", "get_sequence_rows"], [121, 5, 1, "", "list_str_to_type"], [121, 5, 1, "", "load_epr_file"], [121, 5, 1, "", "param_in_MHz"], [121, 5, 1, "", "param_in_us"], [121, 5, 1, "", "pyqt_table_from_dict"], [121, 5, 1, "", "read_table"], [121, 5, 1, "", "str_to_list_type"], [121, 5, 1, "", "test_SNR"]], "autodeer.gui.tools.Worker": [[121, 1, 1, "", "run"]], "autodeer.gui.tools.WorkerSignals": [[121, 3, 1, "", "error"], [121, 3, 1, "", "finished"], [121, 3, 1, "", "result"]], "autodeer.hardware": [[126, 4, 0, "-", "Bruker_AWG"], [139, 4, 0, "-", "Bruker_MPFU"], [147, 4, 0, "-", "Bruker_tools"], [160, 4, 0, "-", "ETH_awg"], [163, 4, 0, "-", "ETH_awg_load"], [165, 4, 0, "-", "XeprAPI_link"], [185, 4, 0, "-", "dummy"], [194, 4, 0, "-", "dummy_xepr"], [200, 4, 0, "-", "xepr_experiments"]], "autodeer.hardware.Bruker_AWG": [[126, 0, 1, "", "BrukerAWG"], [126, 5, 1, "", "get_specjet_data"], [126, 5, 1, "", "test_if_MPFU_compatability"]], "autodeer.hardware.Bruker_AWG.BrukerAWG": [[126, 1, 1, "", "_launch_complex_thread"], [126, 1, 1, "", "acquire_dataset"], [126, 1, 1, "", "calc_d0"], [126, 1, 1, "", "calc_d0_from_Hahn_Echo"], [126, 1, 1, "", "connect"], [126, 1, 1, "", "isrunning"], [126, 1, 1, "", "launch"], [126, 1, 1, "", "setup"], [126, 1, 1, "", "terminate"], [126, 1, 1, "", "tune_nutation"], [126, 1, 1, "", "tune_pulse"], [126, 1, 1, "", "tune_rectpulse"]], "autodeer.hardware.Bruker_MPFU": [[139, 0, 1, "", "BrukerMPFU"], [139, 5, 1, "", "ELDORtune"], [139, 5, 1, "", "MPFUtune"], [139, 5, 1, "", "_MPFU_channels"], [139, 5, 1, "", "get_specjet_data"], [139, 6, 1, "", "hw_log"], [139, 5, 1, "", "step_parameters"], [139, 5, 1, "", "test_if_MPFU_compatability"], [139, 5, 1, "", "tune_phase"], [139, 5, 1, "", "tune_power"]], "autodeer.hardware.Bruker_MPFU.BrukerMPFU": [[139, 1, 1, "", "_launch_complex_thread"], [139, 1, 1, "", "acquire_dataset"], [139, 1, 1, "", "calc_d0"], [139, 1, 1, "", "calc_d0_from_Hahn_Echo"], [139, 1, 1, "", "connect"], [139, 1, 1, "", "isrunning"], [139, 1, 1, "", "launch"], [139, 1, 1, "", "setup"], [139, 1, 1, "", "terminate"], [139, 1, 1, "", "tune"], [139, 1, 1, "", "tune_pulse"], [139, 1, 1, "", "tune_rectpulse"]], "autodeer.hardware.Bruker_tools": [[147, 6, 1, "", "MODULE_DIR"], [147, 0, 1, "", "PSPhaseCycle"], [147, 0, 1, "", "PSparvar"], [147, 0, 1, "", "PulseSpel"], [147, 5, 1, "", "_addAWGPulse"], [147, 5, 1, "", "build_unique_progtable"], [147, 5, 1, "", "calc_rel_positions"], [147, 5, 1, "", "change_dimensions"], [147, 5, 1, "", "check_variable"], [147, 5, 1, "", "convert_progtable"], [147, 5, 1, "", "get_arange"], [147, 6, 1, "", "header"], [147, 6, 1, "", "possible_delays"], [147, 6, 1, "", "possible_pulses"], [147, 6, 1, "", "possible_vars"], [147, 5, 1, "", "run_general"], [147, 5, 1, "", "write_pulsespel_file"]], "autodeer.hardware.Bruker_tools.PSPhaseCycle": [[147, 1, 1, "", "_MPFU"], [147, 1, 1, "", "__str__"], [147, 1, 1, "", "_detect"], [147, 1, 1, "", "_main"]], "autodeer.hardware.Bruker_tools.PSparvar": [[147, 1, 1, "", "checkPulseSpel"]], "autodeer.hardware.Bruker_tools.PulseSpel": [[147, 1, 1, "", "_ExpDefs"], [147, 1, 1, "", "__str__"], [147, 1, 1, "", "_addAWGPulse"], [147, 1, 1, "", "_addDef"], [147, 1, 1, "", "_addExp"], [147, 1, 1, "", "_addPhaseCycle"], [147, 1, 1, "", "_addScanLoop"], [147, 1, 1, "", "_check_sequence"], [147, 1, 1, "", "_cmpl_Exp"], [147, 1, 1, "", "_cmpl_def"], [147, 1, 1, "", "_new_delay"], [147, 1, 1, "", "_new_pulse"], [147, 1, 1, "", "_new_var"], [147, 1, 1, "", "save"]], "autodeer.hardware.ETH_awg": [[160, 0, 1, "", "ETH_awg_interface"], [160, 5, 1, "", "bg_thread"], [160, 6, 1, "", "log"]], "autodeer.hardware.ETH_awg.ETH_awg_interface": [[160, 1, 1, "", "_build_exp_struct"], [160, 1, 1, "", "_build_parvar"], [160, 1, 1, "", "_build_phase_cycle"], [160, 1, 1, "", "_build_pulse"], [160, 1, 1, "", "acquire_dataset"], [160, 1, 1, "", "acquire_dataset_from_matlab"], [160, 1, 1, "", "connect"], [160, 1, 1, "", "isrunning"], [160, 1, 1, "", "launch"], [160, 1, 1, "", "launch_long"], [160, 1, 1, "", "launch_normal"], [160, 2, 1, "", "savefolder"], [160, 1, 1, "", "terminate"], [160, 1, 1, "", "tune"], [160, 1, 1, "", "tune_pulse"], [160, 1, 1, "", "tune_rectpulse"]], "autodeer.hardware.ETH_awg_load": [[163, 5, 1, "", "calc_percieved_freq"], [163, 5, 1, "", "digitally_upconvert"], [163, 5, 1, "", "find_max_pulse_length"], [163, 5, 1, "", "match_filter_dc"], [163, 5, 1, "", "scipy_filter_dc"], [163, 5, 1, "", "uwb_eval_match"], [163, 5, 1, "", "uwb_load"]], "autodeer.hardware.XeprAPI_link": [[165, 0, 1, "", "XeprAPILink"], [165, 6, 1, "", "hw_log"], [165, 6, 1, "", "xepr_path"]], "autodeer.hardware.XeprAPI_link.XeprAPILink": [[165, 1, 1, "", "_get_Xepr_global"], [165, 1, 1, "", "_get_cur_exp_global"], [165, 1, 1, "", "_set_Xepr_global"], [165, 1, 1, "", "_set_cur_exp_global"], [165, 1, 1, "", "_set_cur_exp_param"], [165, 1, 1, "", "_set_hidden_param"], [165, 1, 1, "", "_xepr_retry"], [165, 1, 1, "", "abort_exp"], [165, 1, 1, "", "acquire_dataset"], [165, 1, 1, "", "acquire_scan"], [165, 1, 1, "", "acquire_scan_2d"], [165, 1, 1, "", "acquire_scan_at"], [165, 1, 1, "", "compile_PulseSpel_def"], [165, 1, 1, "", "compile_PulseSpel_prg"], [165, 1, 1, "", "connect"], [165, 1, 1, "", "find_Xepr"], [165, 1, 1, "", "find_cur_exp"], [165, 1, 1, "", "find_hidden"], [165, 1, 1, "", "get_Acquisition_mode"], [165, 1, 1, "", "get_ELDOR_freq"], [165, 1, 1, "", "get_MW_amp"], [165, 1, 1, "", "get_PhaseCycle"], [165, 1, 1, "", "get_PulseSpel_def_filename"], [165, 1, 1, "", "get_PulseSpel_def_filepath"], [165, 1, 1, "", "get_PulseSpel_exp_filename"], [165, 1, 1, "", "get_PulseSpel_exp_filepath"], [165, 1, 1, "", "get_PulseSpel_experiment"], [165, 1, 1, "", "get_PulseSpel_phase_cycling"], [165, 1, 1, "", "get_ReplaceMode"], [165, 1, 1, "", "get_attenuator"], [165, 1, 1, "", "get_config_file"], [165, 1, 1, "", "get_counterfreq"], [165, 1, 1, "", "get_field"], [165, 1, 1, "", "get_freq"], [165, 1, 1, "", "get_hidden_param"], [165, 1, 1, "", "get_param"], [165, 1, 1, "", "get_phase"], [165, 1, 1, "", "get_spec_config"], [165, 1, 1, "", "get_sweep_width"], [165, 1, 1, "", "get_video_bandwidth"], [165, 1, 1, "", "get_video_gain"], [165, 1, 1, "", "is_exp_running"], [165, 1, 1, "", "pause_exp"], [165, 1, 1, "", "rerun_exp"], [165, 1, 1, "", "run_exp"], [165, 1, 1, "", "save_PulseSpel_def"], [165, 1, 1, "", "save_PulseSpel_exp"], [165, 1, 1, "", "set_Acquisition_mode"], [165, 1, 1, "", "set_ELDOR_freq"], [165, 1, 1, "", "set_MW_amp"], [165, 1, 1, "", "set_PhaseCycle"], [165, 1, 1, "", "set_PulseSpel_def_filepath"], [165, 1, 1, "", "set_PulseSpel_exp_filepath"], [165, 1, 1, "", "set_PulseSpel_experiment"], [165, 1, 1, "", "set_PulseSpel_phase_cycling"], [165, 1, 1, "", "set_PulseSpel_var"], [165, 1, 1, "", "set_ReplaceMode"], [165, 1, 1, "", "set_attenuator"], [165, 1, 1, "", "set_config_file"], [165, 1, 1, "", "set_field"], [165, 1, 1, "", "set_freq"], [165, 1, 1, "", "set_hidden_param"], [165, 1, 1, "", "set_param"], [165, 1, 1, "", "set_phase"], [165, 1, 1, "", "set_sweep_width"], [165, 1, 1, "", "set_video_bandwidth"], [165, 1, 1, "", "set_video_gain"], [165, 1, 1, "", "stop_exp"], [165, 1, 1, "", "xepr_save"]], "autodeer.hardware.dummy": [[185, 5, 1, "", "_gen_ESEEM"], [185, 5, 1, "", "_similate_respro"], [185, 5, 1, "", "_simulate_2D_relax"], [185, 5, 1, "", "_simulate_CP"], [185, 5, 1, "", "_simulate_T2"], [185, 5, 1, "", "_simulate_deer"], [185, 5, 1, "", "_simulate_field_sweep"], [185, 5, 1, "", "_simulate_reptimescan"], [185, 5, 1, "", "add_noise"], [185, 5, 1, "", "add_phaseshift"], [185, 0, 1, "", "dummyInterface"], [185, 6, 1, "", "hw_log"], [185, 6, 1, "", "rng"], [185, 5, 1, "", "val_in_ns"], [185, 5, 1, "", "val_in_us"]], "autodeer.hardware.dummy.dummyInterface": [[185, 1, 1, "", "acquire_dataset"], [185, 1, 1, "", "isrunning"], [185, 1, 1, "", "launch"], [185, 1, 1, "", "terminate"], [185, 1, 1, "", "tune_pulse"], [185, 1, 1, "", "tune_rectpulse"]], "autodeer.hardware.dummy_xepr": [[194, 0, 1, "", "dummy_api"], [194, 0, 1, "", "dummy_cur_exp"], [194, 0, 1, "", "dummy_dataset"], [194, 0, 1, "", "dummy_hidden"], [194, 0, 1, "", "dummy_param"], [194, 0, 1, "", "dummy_xepr"], [194, 6, 1, "", "hardware_meta"], [194, 6, 1, "", "hw_log"]], "autodeer.hardware.dummy_xepr.dummy_api": [[194, 1, 1, "", "abort_exp"], [194, 1, 1, "", "acquire_scan"], [194, 1, 1, "", "acquire_scan_2d"], [194, 1, 1, "", "acquire_scan_at"], [194, 1, 1, "", "compile_PulseSpel_def"], [194, 1, 1, "", "compile_PulseSpel_prg"], [194, 1, 1, "", "find_Xepr"], [194, 1, 1, "", "is_exp_running"], [194, 1, 1, "", "run_exp"], [194, 1, 1, "", "set_PulseSpel_var"], [194, 1, 1, "", "stop_exp"]], "autodeer.hardware.dummy_xepr.dummy_cur_exp": [[194, 1, 1, "", "__getitem__"], [194, 1, 1, "", "aqExpRun"], [194, 1, 1, "", "getParam"]], "autodeer.hardware.dummy_xepr.dummy_hidden": [[194, 1, 1, "", "__getitem__"], [194, 1, 1, "", "getParam"]], "autodeer.hardware.dummy_xepr.dummy_param": [[194, 2, 1, "", "value"]], "autodeer.hardware.dummy_xepr.dummy_xepr": [[194, 0, 1, "", "XeprCmds"], [194, 1, 1, "", "XeprDataset"], [194, 1, 1, "", "XeprExperiment"]], "autodeer.hardware.dummy_xepr.dummy_xepr.XeprCmds": [[194, 1, 1, "", "aqExpSelect"], [194, 1, 1, "", "aqPgCompile"], [194, 1, 1, "", "aqPgDefLoad"], [194, 1, 1, "", "aqPgDefSaveAs"], [194, 1, 1, "", "aqPgLoad"], [194, 1, 1, "", "aqPgSaveAs"], [194, 1, 1, "", "aqPgShowPrg"], [194, 1, 1, "", "vpSave"]], "autodeer.hardware.xepr_experiments": [[200, 5, 1, "", "CP_run"], [200, 5, 1, "", "CalibrateFreq"], [200, 0, 1, "", "DEER"], [200, 5, 1, "", "DEER5p_run"], [200, 0, 1, "", "ELDORtune"], [200, 6, 1, "", "MODULE_DIR"], [200, 0, 1, "", "MPFUtune"], [200, 0, 1, "", "PulseProfile"], [200, 5, 1, "", "get_nutations"]], "autodeer.hardware.xepr_experiments.DEER": [[200, 1, 1, "", "run_4p"], [200, 1, 1, "", "run_5p"], [200, 1, 1, "", "run_CP"]], "autodeer.hardware.xepr_experiments.ELDORtune": [[200, 1, 1, "", "_get_exp"], [200, 1, 1, "", "_setup_exp"], [200, 1, 1, "", "find_min"], [200, 1, 1, "", "tune"]], "autodeer.hardware.xepr_experiments.MPFUtune": [[200, 1, 1, "", "_setup_echo"], [200, 1, 1, "", "calc_d0"], [200, 1, 1, "", "tune"], [200, 1, 1, "", "tune_phase"], [200, 1, 1, "", "tune_power"]], "autodeer.hardware.xepr_experiments.PulseProfile": [[200, 1, 1, "", "_freq_sweep"], [200, 1, 1, "", "_setup_exp"]], "autodeer.pulses": [[211, 0, 1, "", "ChirpPulse"], [211, 0, 1, "", "Delay"], [211, 0, 1, "", "Detection"], [211, 0, 1, "", "GaussianPulse"], [211, 0, 1, "", "HSPulse"], [211, 0, 1, "", "Pulse"], [211, 0, 1, "", "RectPulse"], [211, 0, 1, "", "SincPulse"], [211, 5, 1, "", "build_default_pulses"]], "autodeer.pulses.ChirpPulse": [[211, 1, 1, "", "func"]], "autodeer.pulses.GaussianPulse": [[211, 1, 1, "", "func"]], "autodeer.pulses.HSPulse": [[211, 1, 1, "", "func"]], "autodeer.pulses.Pulse": [[211, 1, 1, "", "__str__"], [211, 1, 1, "", "_addPhaseCycle"], [211, 1, 1, "", "_buildFMAM"], [211, 1, 1, "", "_calc_fft"], [211, 1, 1, "", "_from_dict"], [211, 1, 1, "", "_from_json"], [211, 1, 1, "", "_pcyc_str"], [211, 1, 1, "", "_to_dict"], [211, 1, 1, "", "_to_json"], [211, 1, 1, "", "build_shape"], [211, 1, 1, "", "build_table"], [211, 1, 1, "", "copy"], [211, 1, 1, "", "exciteprofile"], [211, 1, 1, "", "isDelayFocused"], [211, 1, 1, "", "isPulseFocused"], [211, 1, 1, "", "is_static"], [211, 1, 1, "", "load"], [211, 1, 1, "", "plot"], [211, 1, 1, "", "plot_fft"], [211, 1, 1, "", "save"]], "autodeer.pulses.RectPulse": [[211, 1, 1, "", "func"]], "autodeer.pulses.SincPulse": [[211, 1, 1, "", "func"]], "autodeer.reporter": [[214, 0, 1, "", "Reporter"], [214, 0, 1, "", "SvgFlowable"], [214, 5, 1, "", "combo_figure"], [214, 5, 1, "", "create_report"], [214, 6, 1, "", "package_dir"], [214, 6, 1, "", "styles"]], "autodeer.reporter.Reporter": [[214, 1, 1, "", "_build"], [214, 1, 1, "", "add_code_block"], [214, 1, 1, "", "add_figure"], [214, 1, 1, "", "add_new_section"], [214, 1, 1, "", "add_page_break"], [214, 1, 1, "", "add_space"], [214, 1, 1, "", "add_table"], [214, 1, 1, "", "add_text"], [214, 1, 1, "", "add_title"], [214, 1, 1, "", "footer"], [214, 1, 1, "", "header"]], "autodeer.reporter.SvgFlowable": [[214, 1, 1, "", "draw"], [214, 1, 1, "", "wrap"]], "autodeer.sequences": [[230, 0, 1, "", "CarrPurcellSequence"], [230, 0, 1, "", "DEERSequence"], [230, 0, 1, "", "FieldSweepSequence"], [230, 0, 1, "", "HahnEchoSequence"], [230, 0, 1, "", "RefocusedEcho2DSequence"], [230, 0, 1, "", "ReptimeScan"], [230, 0, 1, "", "ResonatorProfileSequence"], [230, 0, 1, "", "Sequence"], [230, 0, 1, "", "T2RelaxationSequence"], [230, 0, 1, "", "TWTProfileSequence"]], "autodeer.sequences.CarrPurcellSequence": [[230, 1, 1, "", "_build_sequence"]], "autodeer.sequences.DEERSequence": [[230, 1, 1, "", "add_ESEEM_avg"], [230, 1, 1, "", "five_pulse"], [230, 1, 1, "", "four_pulse"], [230, 1, 1, "", "nDEER_CP"], [230, 1, 1, "", "select_pcyc"], [230, 1, 1, "", "seven_pulse"], [230, 1, 1, "", "simulate"], [230, 1, 1, "", "three_pulse"]], "autodeer.sequences.RefocusedEcho2DSequence": [[230, 1, 1, "", "_build_sequence"]], "autodeer.sequences.ResonatorProfileSequence": [[230, 1, 1, "", "_build_sequence"]], "autodeer.sequences.Sequence": [[230, 1, 1, "", "__str__"], [230, 1, 1, "", "_buildPhaseCycle"], [230, 1, 1, "", "_checkRect"], [230, 1, 1, "", "_convert_to_delay"], [230, 1, 1, "", "_convert_to_pulses"], [230, 1, 1, "", "_estimate_time"], [230, 1, 1, "", "_from_dict"], [230, 1, 1, "", "_from_json"], [230, 1, 1, "", "_to_dict"], [230, 1, 1, "", "_to_json"], [230, 1, 1, "", "addPulse"], [230, 1, 1, "", "convert"], [230, 1, 1, "", "copy"], [230, 1, 1, "", "evolution"], [230, 1, 1, "", "isDelayFocused"], [230, 1, 1, "", "isPulseFocused"], [230, 1, 1, "", "load"], [230, 1, 1, "", "plot"], [230, 1, 1, "", "plot_pulse_exc"], [230, 1, 1, "", "save"], [230, 2, 1, "", "seqtable_steps"], [230, 1, 1, "", "shift_detfreq_to_zero"]], "autodeer.sequences.TWTProfileSequence": [[230, 1, 1, "", "_build_sequence"]], "autodeer.tools": [[231, 5, 1, "", "eprload"], [231, 6, 1, "", "log"], [231, 5, 1, "", "progress_bar"], [231, 5, 1, "", "progress_bar_frac"]], "autodeer.utils": [[232, 5, 1, "", "autoEPRDecoder"], [232, 5, 1, "", "build_table"], [232, 5, 1, "", "gcd"], [232, 5, 1, "", "round_step"], [232, 5, 1, "", "save_file"], [232, 5, 1, "", "sop"], [232, 5, 1, "", "transpose_dict_of_list"], [232, 5, 1, "", "transpose_list_of_dicts"], [232, 5, 1, "", "val_in_ns"], [232, 5, 1, "", "val_in_us"]], "dummyInterface": [[184, 1, 1, "", "acquire_dataset"], [184, 1, 1, "", "isrunning"], [184, 1, 1, "", "launch"], [184, 1, 1, "", "terminate"], [184, 1, 1, "", "tune_pulse"], [184, 1, 1, "", "tune_rectpulse"]], "dummy_api": [[187, 1, 1, "", "abort_exp"], [187, 1, 1, "", "acquire_scan"], [187, 1, 1, "", "acquire_scan_2d"], [187, 1, 1, "", "acquire_scan_at"], [187, 1, 1, "", "compile_PulseSpel_def"], [187, 1, 1, "", "compile_PulseSpel_prg"], [187, 1, 1, "", "find_Xepr"], [187, 1, 1, "", "is_exp_running"], [187, 1, 1, "", "run_exp"], [187, 1, 1, "", "set_PulseSpel_var"], [187, 1, 1, "", "stop_exp"]], "dummy_cur_exp": [[188, 1, 1, "", "__getitem__"], [188, 1, 1, "", "aqExpRun"], [188, 1, 1, "", "getParam"]], "dummy_hidden": [[190, 1, 1, "", "__getitem__"], [190, 1, 1, "", "getParam"]], "dummy_param": [[191, 2, 1, "", "value"]], "dummy_xepr": [[192, 0, 1, "", "XeprCmds"], [192, 1, 1, "", "XeprDataset"], [192, 1, 1, "", "XeprExperiment"]], "dummy_xepr.XeprCmds": [[192, 1, 1, "", "aqExpSelect"], [192, 1, 1, "", "aqPgCompile"], [192, 1, 1, "", "aqPgDefLoad"], [192, 1, 1, "", "aqPgDefSaveAs"], [192, 1, 1, "", "aqPgLoad"], [192, 1, 1, "", "aqPgSaveAs"], [192, 1, 1, "", "aqPgShowPrg"], [192, 1, 1, "", "vpSave"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "module", "Python module"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:module", "5": "py:function", "6": "py:data"}, "terms": {"": [23, 25, 32, 34, 35, 36, 62, 63, 73, 74, 90, 91, 133, 151, 156, 157, 160, 161, 162, 175, 176, 201, 207, 208, 211, 221, 222, 236, 242], "0": [8, 12, 14, 16, 18, 19, 20, 23, 25, 28, 29, 31, 35, 36, 37, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 72, 73, 74, 82, 83, 85, 86, 88, 90, 91, 92, 95, 96, 117, 123, 125, 128, 129, 131, 133, 135, 138, 139, 140, 141, 145, 148, 149, 150, 151, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 169, 170, 172, 174, 175, 176, 177, 180, 186, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 221, 222, 223, 226, 230, 239, 240, 242, 244, 246, 248], "00": 242, "0028087": 239, "00bbd6": 64, "01": 246, "015": 239, "02": [239, 242], "025": 239, "03": [48, 49, 50, 201, 242, 244], "05": [12, 40, 44, 48, 49, 50, 201], "08": [25, 239], "08737812e": 242, "1": [3, 4, 8, 12, 14, 17, 18, 19, 22, 23, 25, 26, 29, 35, 36, 40, 44, 47, 48, 49, 50, 52, 56, 58, 59, 62, 63, 67, 69, 73, 74, 82, 84, 85, 88, 90, 91, 94, 96, 99, 104, 113, 121, 122, 125, 126, 127, 128, 133, 138, 139, 140, 148, 149, 151, 153, 156, 157, 160, 161, 162, 164, 165, 167, 168, 169, 172, 175, 176, 179, 183, 186, 196, 198, 200, 201, 202, 203, 206, 207, 208, 211, 216, 217, 221, 222, 225, 229, 230, 232, 238, 239, 240, 243, 244, 247, 248], "10": [23, 31, 35, 61, 62, 63, 72, 73, 90, 123, 131, 133, 155, 156, 161, 174, 175, 201, 207, 221, 239, 242, 246], "100": [4, 13, 17, 39, 56, 81, 84, 93, 99, 139, 166, 168, 178, 183, 198, 200, 201, 215, 216, 224, 229, 230, 236, 239, 246, 248], "1000": [25, 36, 48, 49, 50, 74, 91, 102, 103, 112, 157, 162, 176, 201, 208, 211, 222, 239, 240], "10000": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "100000000": 25, "100n": 248, "10400": 239, "11": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232, 239], "119": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "12": [201, 211, 239, 242], "120": 239, "1201": 239, "12181": 239, "12182": 239, "12183": 239, "12220": [246, 248], "12220g": 251, "128": [14, 28, 29, 54, 82, 88, 148, 153, 167, 172, 200, 201, 202, 205, 206, 210, 211, 239, 248], "13": 239, "13570": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "13582": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "14": 239, "15": [239, 240, 242], "16": [17, 28, 37, 58, 59, 84, 92, 102, 103, 112, 135, 139, 145, 158, 168, 177, 196, 197, 198, 199, 200, 201, 205, 209, 211, 216, 223, 230, 236, 239, 240, 242, 248], "168": 244, "16n": [17, 84, 168, 201, 216, 230], "16step_4p": [17, 84, 168, 201, 216, 230, 240], "16step_5p": [17, 84, 168, 201, 216, 230, 239, 240], "17400": 239, "178": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "180": 246, "19": [25, 238, 240], "192": 244, "1d": [22, 25, 26, 38, 41, 44, 201], "1e": [25, 239, 242], "1e3": [239, 240, 246], "1e4": 242, "1e8": 242, "1mhz": 244, "1st": [17, 84, 168, 201, 216, 230], "2": [17, 18, 23, 31, 32, 34, 35, 36, 48, 49, 50, 61, 62, 63, 72, 73, 74, 84, 90, 91, 104, 121, 122, 123, 125, 126, 127, 131, 133, 138, 139, 147, 151, 155, 156, 157, 160, 161, 162, 164, 165, 168, 174, 175, 176, 186, 197, 198, 199, 200, 201, 207, 208, 211, 216, 221, 222, 230, 232, 239, 240, 242, 244, 247, 248], "20": [18, 29, 88, 125, 138, 153, 164, 165, 172, 186, 201, 206, 211, 236, 239, 242], "200": [55, 98, 102, 103, 112, 125, 138, 164, 165, 182, 186, 196, 200, 201, 228, 230, 239, 248], "2000": [51, 95, 180, 201, 226, 230, 239], "2006": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "2008": [52, 67, 69, 96, 201], "2009": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "200n": 248, "2013": [238, 240], "2014": 238, "2015": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 240], "2017": 240, "2021": 238, "2024": 238, "203": 244, "2050": 244, "217": 239, "2172": 239, "23200": 239, "24": 239, "2400": 239, "24000": 239, "25": [18, 25, 201], "2500": 239, "256": 200, "2600": 239, "265": 242, "2800": 239, "2d": [18, 38, 39, 41, 44, 58, 59, 93, 125, 138, 147, 164, 165, 178, 186, 187, 194, 201, 224, 230, 236, 254], "2e2": 248, "2e3": [239, 240], "2x2": [201, 214], "3": [3, 4, 6, 7, 8, 10, 17, 18, 32, 34, 36, 38, 41, 44, 51, 74, 84, 91, 95, 125, 138, 139, 147, 157, 162, 164, 165, 168, 176, 180, 186, 200, 201, 208, 211, 216, 222, 226, 230, 238, 239, 240, 242, 248], "30": [18, 22, 25, 26, 52, 67, 69, 96, 139, 198, 200, 201, 239, 246], "3000": 239, "30th": 238, "31": 239, "32": [17, 28, 48, 49, 50, 84, 168, 201, 205, 211, 216, 230, 239, 240, 248], "320": 239, "32000": 239, "32e3": 239, "32step_7p": [17, 84, 168, 201, 216, 230, 240], "33": [48, 49, 50, 201, 239, 242, 244], "332": 239, "3339": [32, 34], "34": [48, 49, 50, 201, 239, 242, 246, 248], "35": [48, 49, 50, 201, 242, 244], "36": [48, 49, 50, 201, 239], "38": 239, "3e3": [246, 248], "3ghz": [51, 95, 180, 201, 226, 230], "4": [17, 18, 52, 58, 59, 67, 69, 84, 96, 168, 200, 201, 216, 230, 239, 242, 251], "40": [55, 98, 182, 201, 228, 230, 239], "400": [122, 126, 151, 160, 184, 185, 197, 198, 199, 200, 248], "4000000": [199, 200], "4095": [200, 244], "42": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "42a399": [44, 64, 201], "49": 239, "4_dev": 239, "4pdeer": [18, 38, 41, 44, 201, 236], "4puls": [38, 41, 44, 58, 59, 201], "4u": [18, 201], "5": [12, 17, 40, 44, 45, 48, 49, 50, 58, 59, 84, 151, 160, 168, 200, 201, 212, 214, 216, 230, 239, 241, 242, 244], "50": [17, 84, 102, 103, 112, 168, 196, 200, 201, 216, 230, 239, 240], "500": [51, 95, 180, 201, 226, 230, 239], "501": 239, "50k": 239, "512": 239, "52260651e": 242, "55": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "550": 139, "5600": 239, "5800": 239, "5e3": 239, "5pdeer": [18, 38, 41, 44, 201, 236], "5puls": [38, 41, 44, 58, 59, 201], "5u": [18, 201], "6": [29, 54, 88, 153, 172, 201, 206, 210, 211, 239, 240, 242], "60": [102, 103, 112], "6000": 239, "6000000": [196, 197, 198, 200], "650": 242, "6614": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "6625": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "67652": 244, "680": [198, 200], "6e3": 248, "6u": 248, "7": [17, 60, 84, 168, 201, 216, 230, 239], "70": 244, "700": [197, 199, 200], "747": 239, "770": 239, "7800": 239, "8": [4, 17, 84, 168, 201, 216, 230, 239, 240, 242, 244, 251], "80": [196, 200, 239, 242], "800": 239, "8000": 239, "82": 242, "85625754e": 242, "8n": [17, 84, 168, 201, 216, 230], "8step_3p": [17, 84, 168, 201, 216, 230, 240], "9": [42, 44, 46, 201, 238, 239], "90": [236, 246], "91334739e": 242, "92378391e": 242, "976": 242, "99": [18, 201], "A": [15, 16, 18, 20, 23, 24, 25, 31, 35, 36, 47, 52, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 83, 86, 90, 91, 94, 96, 98, 100, 122, 123, 126, 127, 129, 131, 133, 139, 141, 147, 150, 151, 155, 156, 157, 160, 161, 162, 170, 174, 175, 176, 179, 182, 184, 185, 198, 199, 200, 201, 204, 207, 208, 211, 214, 218, 221, 222, 225, 228, 230, 231, 232, 238, 239, 240, 241, 242, 243, 246, 247, 248, 251, 253], "As": [241, 242, 253], "At": [236, 237, 241], "BE": [19, 85, 128, 140, 149, 169, 201, 203, 211, 217], "By": [23, 30, 33, 34, 35, 55, 62, 63, 73, 89, 90, 98, 130, 133, 154, 156, 161, 173, 175, 182, 201, 207, 220, 221, 228, 230], "For": [18, 201, 236, 239, 243, 244, 246, 247, 248, 249, 253], "IF": [151, 160], "If": [12, 17, 18, 23, 31, 32, 34, 35, 36, 38, 40, 41, 43, 44, 48, 49, 50, 53, 58, 59, 61, 62, 63, 72, 73, 74, 75, 84, 90, 91, 97, 122, 123, 125, 126, 127, 131, 133, 136, 138, 139, 146, 147, 151, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 174, 175, 176, 181, 186, 201, 207, 208, 211, 216, 221, 222, 227, 230, 236, 240, 246, 253], "In": [238, 239, 244, 246, 248], "It": [48, 49, 50, 151, 160, 201, 234, 236, 239, 240, 241, 248, 249, 251, 253], "No": [78, 101, 103, 104, 110, 113, 116, 120, 121, 127, 139, 248], "On": [238, 241, 242, 246, 247, 251, 253], "One": [238, 240, 244, 251], "That": 251, "The": [0, 12, 13, 14, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 68, 69, 70, 72, 73, 74, 75, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 112, 113, 115, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 237, 239, 240, 241, 242, 244, 246, 247, 248, 251, 255], "There": [58, 59, 125, 138, 164, 165, 186, 239, 243, 246, 248, 250, 251, 255], "These": [125, 138, 164, 165, 186, 187, 194, 236, 244, 246, 251], "To": [0, 58, 59, 237, 238, 248, 251], "WILL": [19, 85, 128, 140, 149, 169, 201, 203, 211, 217], "With": [38, 41, 44, 201, 240], "_": 246, "__add__": [15, 23, 35, 62, 63, 65, 69, 73, 90, 133, 156, 161, 175, 201, 207, 221], "__eq__": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "__getitem__": [188, 190, 194], "__init__": 248, "__main__": [104, 201, 233], "__mul__": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "__o": [15, 23, 35, 62, 63, 65, 69, 73, 90, 133, 156, 161, 175, 201, 207, 221], "__rmul__": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "__str__": [36, 43, 53, 74, 75, 91, 97, 124, 132, 134, 136, 142, 144, 146, 147, 157, 159, 162, 176, 181, 201, 208, 211, 222, 227, 230], "__sub__": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "__version__": [60, 201], "_addawgpuls": [124, 134, 144, 147], "_adddef": [124, 134, 144, 147], "_addexp": [124, 134, 144, 147], "_addphasecycl": [36, 74, 91, 124, 134, 144, 147, 157, 162, 176, 201, 208, 211, 222], "_addscanloop": [124, 134, 144, 147], "_arg": [213, 214], "_build": [45, 201, 212, 214], "_build_exp_struct": [151, 160], "_build_method": [102, 103, 112], "_build_parvar": [151, 160], "_build_phase_cycl": [151, 160], "_build_puls": [151, 160], "_build_sequ": [13, 39, 51, 56, 81, 93, 95, 99, 166, 178, 180, 183, 201, 215, 224, 226, 229, 230], "_buildfmam": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 248], "_buildphasecycl": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230], "_calc_fft": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "_check_sequ": [124, 134, 144, 147], "_checkrect": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230], "_cmpl_def": [124, 134, 144, 147], "_cmpl_exp": [124, 134, 144, 147], "_convert_to_delai": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230], "_convert_to_puls": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230], "_data_transpos": [58, 59], "_description_": [12, 16, 17, 18, 22, 25, 26, 40, 44, 52, 57, 58, 59, 66, 67, 68, 69, 83, 84, 96, 100, 104, 121, 125, 138, 143, 147, 151, 160, 163, 164, 165, 168, 186, 199, 200, 201, 216, 230, 231, 232], "_detect": [132, 142, 147], "_estimate_tim": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230], "_expdef": [124, 134, 144, 147], "_freq_sweep": [199, 200], "_from_dict": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "_from_json": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "_gen_eseem": 185, "_get_cur_exp_glob": [125, 138, 164, 165, 186], "_get_exp": [197, 200], "_get_xepr_glob": [125, 138, 164, 165, 186], "_launch_complex_thread": [122, 126, 127, 139], "_main": [132, 142, 147], "_mpfu": [132, 142, 147], "_mpfu_channel": 139, "_new_delai": [124, 134, 144, 147], "_new_puls": [124, 134, 144, 147], "_new_var": [124, 134, 144, 147], "_pcyc_str": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "_process_fit": [48, 49, 50, 201], "_set_cur_exp_glob": [125, 138, 164, 165, 186], "_set_cur_exp_param": [125, 138, 164, 165, 186], "_set_hidden_param": [125, 138, 164, 165, 186], "_set_xepr_glob": [125, 138, 164, 165, 186], "_setup_echo": [198, 200], "_setup_exp": [197, 199, 200], "_similate_respro": 185, "_simulate_2d_relax": 185, "_simulate_cp": 185, "_simulate_d": 185, "_simulate_field_sweep": 185, "_simulate_reptimescan": 185, "_simulate_t2": 185, "_smooth": [38, 41, 44, 201], "_stability_check": [58, 59], "_summary_": [125, 138, 164, 165, 186], "_to_dict": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "_to_json": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "_type_": [13, 16, 17, 18, 27, 30, 31, 37, 39, 51, 54, 55, 58, 59, 61, 63, 66, 69, 72, 81, 83, 84, 87, 89, 92, 93, 95, 98, 104, 121, 123, 130, 131, 135, 145, 147, 151, 152, 154, 155, 158, 160, 166, 168, 171, 173, 174, 177, 178, 180, 182, 198, 199, 200, 201, 209, 210, 211, 215, 216, 219, 220, 223, 224, 226, 228, 230], "_version": [201, 233], "_xepr_retri": [125, 138, 164, 165, 186], "a4": [45, 201, 212, 214], "a_shift": 18, "ab": 139, "abil": [241, 243], "abl": 237, "abort": [125, 138, 164, 165, 186, 187, 194], "abort_exp": [125, 138, 164, 165, 186, 187, 194], "about": [20, 70, 86, 129, 141, 150, 170, 201, 204, 211, 218, 239, 246, 248], "abov": [17, 32, 34, 48, 49, 50, 58, 59, 84, 168, 201, 216, 230, 237, 240, 248], "absolut": [52, 57, 67, 68, 69, 96, 100, 201], "accept": 251, "acces": 246, "access": [246, 251, 255], "accumul": [43, 53, 56, 75, 97, 99, 136, 146, 159, 181, 183, 201, 227, 229, 230], "accur": 246, "achiev": [18, 201, 236], "acquir": [31, 61, 63, 72, 122, 123, 125, 126, 127, 131, 138, 139, 151, 155, 160, 164, 165, 174, 184, 185, 186, 187, 194, 201, 246], "acquire_dataset": [31, 61, 63, 72, 122, 123, 125, 126, 127, 131, 138, 139, 151, 155, 160, 164, 165, 174, 184, 185, 186, 201, 239, 246], "acquire_dataset_from_matlab": [151, 160], "acquire_scan": [125, 138, 164, 165, 186, 187, 194], "acquire_scan_2d": [125, 138, 164, 165, 186, 187, 194], "acquire_scan_at": [125, 138, 164, 165, 186, 187, 194], "acquisit": 147, "acquisition_mod": 147, "across": [17, 84, 168, 201, 216, 230, 236, 244], "act": [33, 34], "activ": [234, 243, 246, 249], "actual": [33, 34, 194, 246], "ad": [18, 23, 30, 31, 32, 34, 35, 36, 44, 55, 61, 62, 63, 72, 73, 74, 89, 90, 91, 98, 122, 123, 126, 127, 130, 131, 133, 139, 154, 155, 156, 157, 161, 162, 163, 173, 174, 175, 176, 182, 184, 185, 201, 207, 208, 211, 214, 220, 221, 222, 228, 230, 239, 240, 243, 246, 248, 251, 254], "add": [36, 43, 53, 74, 75, 91, 97, 136, 146, 157, 159, 162, 176, 181, 201, 208, 211, 222, 227, 230, 238, 248, 251], "add_axi": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "add_code_block": [45, 201, 212, 214], "add_eseem_avg": [17, 84, 168, 201, 216, 230], "add_figur": [45, 201, 212, 214], "add_new_entri": [105, 106, 108], "add_new_sect": [45, 201, 212, 214], "add_nois": 185, "add_page_break": [45, 201, 212, 214], "add_phaseshift": 185, "add_spac": [45, 201, 212, 214], "add_tabl": [45, 201, 212, 214], "add_text": [45, 201, 212, 214], "add_titl": [45, 201, 212, 214], "addit": [240, 242, 246, 247, 248], "addition": [234, 236, 241, 253], "addpuls": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230, 248], "addpulsesprog": 248, "adjust": [125, 138, 164, 165, 186, 236, 241, 246], "administr": 251, "advanc": [80, 104, 111, 113, 239, 243, 246, 254], "advanced_mode_input": [80, 104, 111, 113], "advantag": [240, 248], "advent": 240, "after": [18, 122, 125, 126, 127, 138, 139, 164, 165, 186, 187, 194, 201, 238, 240, 243, 246, 251], "again": 236, "aic": 242, "aim": [237, 251], "aim_mnr": [18, 201], "aim_tim": [18, 201], "aimtim": [18, 201], "akin": 241, "al": [52, 67, 69, 96, 201, 240], "alert": 251, "algorithm": [52, 67, 69, 96, 201, 254], "algorithum": 234, "align": [58, 59], "all": [8, 17, 20, 34, 36, 43, 53, 58, 59, 70, 74, 75, 84, 86, 91, 97, 129, 136, 141, 146, 147, 150, 151, 157, 159, 160, 162, 163, 168, 170, 176, 181, 198, 200, 201, 204, 208, 211, 216, 218, 222, 227, 230, 236, 237, 239, 240, 241, 246, 247, 248, 249, 251, 253], "allow": [32, 34, 194, 236, 239, 240, 241, 243, 246, 247, 248, 255], "alogoithm": 239, "along": [18, 58, 59, 201, 241, 246], "alreadi": [125, 138, 164, 165, 186], "also": [147, 236, 237, 241, 243, 246, 248, 249, 251, 255], "alwai": [236, 237, 240, 246, 251], "am": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 248], "amount": 18, "amp_hahn": [151, 160], "amp_nut": [239, 246], "amp_var": 147, "amplifi": [125, 138, 164, 165, 186, 251], "amplitud": [14, 19, 29, 36, 74, 82, 85, 88, 91, 128, 140, 148, 149, 153, 157, 162, 167, 169, 172, 176, 201, 202, 203, 206, 208, 211, 217, 222, 243, 246], "an": [17, 18, 31, 32, 34, 36, 43, 44, 53, 56, 58, 59, 61, 63, 72, 74, 75, 84, 91, 97, 99, 104, 121, 122, 123, 126, 127, 131, 136, 139, 146, 147, 151, 155, 157, 159, 160, 162, 168, 174, 176, 181, 183, 188, 190, 194, 201, 208, 211, 216, 222, 227, 229, 230, 234, 236, 237, 238, 239, 240, 243, 244, 246, 247, 248, 249, 251], "analogu": [244, 247], "analys": [241, 243, 246, 249, 253], "analysi": [12, 18, 22, 25, 26, 34, 36, 38, 40, 41, 42, 44, 46, 48, 49, 50, 52, 67, 69, 74, 91, 96, 157, 162, 176, 201, 208, 211, 214, 222, 232, 243, 249], "analyz": [18, 38, 41, 42, 44, 46, 201], "andrin": [36, 74, 91, 151, 157, 160, 162, 163, 176, 201, 208, 211, 222], "angl": [37, 92, 135, 145, 158, 177, 201, 209, 211, 223], "ani": [23, 35, 58, 59, 62, 63, 73, 90, 125, 133, 138, 151, 156, 160, 161, 164, 165, 175, 186, 187, 194, 201, 207, 221, 237, 238, 241, 251], "annot": [4, 10], "anoth": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 244, 251], "anyth": [78, 101, 103, 104, 110, 113, 116, 120, 121, 234, 238, 251], "api": [147, 196, 197, 198, 199, 200, 239, 254], "api_doc": 246, "app": [79, 113, 117], "appear": 241, "append": [32, 34], "appli": [58, 59, 139, 236, 243], "applic": [18, 32, 34, 104, 121, 201], "appraoch": 236, "approach": [246, 247, 248, 249], "appropri": [246, 251], "approxim": [18, 197, 198, 199, 200, 236], "aqexprun": [188, 194], "aqexpselect": [192, 193, 194], "aqpgcompil": [192, 193, 194], "aqpgdefload": [192, 193, 194], "aqpgdefsavea": [192, 193, 194], "aqpgload": [192, 193, 194], "aqpgsavea": [192, 193, 194], "aqpgshowprg": [192, 193, 194], "ar": [18, 32, 34, 36, 38, 41, 43, 44, 53, 58, 59, 74, 75, 78, 91, 97, 101, 103, 104, 110, 113, 116, 120, 121, 136, 139, 146, 147, 157, 159, 162, 163, 176, 181, 201, 208, 211, 222, 227, 230, 232, 236, 238, 239, 240, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255], "arang": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 248], "arbitari": [14, 19, 29, 36, 74, 82, 85, 88, 91, 128, 140, 148, 149, 153, 157, 162, 167, 169, 172, 176, 201, 202, 203, 206, 208, 211, 217, 222], "arg": [3, 6, 7, 18, 25, 36, 44, 74, 77, 80, 91, 102, 103, 104, 109, 111, 112, 113, 115, 119, 121, 125, 127, 137, 138, 139, 157, 162, 164, 165, 176, 186, 201, 208, 211, 222], "argument": [32, 34, 36, 74, 77, 91, 102, 103, 104, 109, 112, 113, 115, 119, 121, 137, 157, 162, 176, 201, 208, 211, 222, 246], "aris": 251, "around": [151, 160, 234, 239], "arrai": [36, 58, 59, 74, 91, 147, 157, 162, 176, 201, 208, 211, 222], "arthur": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "ascii": 251, "asctim": [32, 34], "asp": [52, 67, 69, 96, 201], "associ": [198, 200], "assum": [48, 49, 50, 58, 59, 201], "astronom": [52, 67, 69, 96, 201], "attempt": 238, "attenu": [139, 198, 200, 251], "attribut": [3, 8, 23, 32, 34, 35, 62, 63, 73, 90, 122, 126, 127, 133, 156, 161, 175, 207, 221, 248], "auto": [1, 18, 58, 59, 201, 233, 247], "autoapi": [3, 8, 254], "autoapi_opt": [3, 8], "autod": [0, 80, 109, 110, 111, 122, 127, 151, 184, 187, 233, 236, 237, 238, 239, 240, 241, 242, 244, 246, 248, 249, 251, 255], "autodeer_4hr": 239, "autodeer_fieldsweep": 239, "autodeer_work": [104, 201, 233], "autodeersign": [101, 103], "autodeerui": [80, 104, 111, 113], "autodeerwork": [102, 103, 112], "autoepr": [31, 61, 63, 72, 123, 131, 155, 174, 184, 185, 201, 234, 240, 246, 247, 248], "autoeprdecod": [201, 232], "autom": [234, 243, 246, 249, 254], "automat": [58, 59, 243, 246, 253], "autosav": [31, 61, 63, 72, 122, 123, 126, 127, 131, 139, 155, 174, 184, 185, 201, 251], "avail": [32, 34, 78, 101, 103, 104, 110, 113, 116, 120, 121, 246], "availi": [18, 201, 254], "avali": [12, 18, 40, 44, 201, 236], "averag": [12, 13, 17, 18, 25, 27, 30, 38, 39, 40, 41, 43, 44, 47, 51, 53, 55, 56, 75, 81, 84, 87, 89, 93, 94, 95, 97, 98, 99, 102, 103, 112, 130, 136, 146, 151, 152, 154, 159, 160, 166, 168, 171, 173, 178, 179, 180, 181, 182, 183, 201, 215, 216, 219, 220, 224, 225, 226, 227, 228, 229, 230, 239, 240, 246, 248], "awai": [243, 249], "awg": [102, 103, 112, 122, 124, 126, 134, 144, 147, 151, 160, 201, 211, 236, 239, 240, 242, 243, 244, 247, 248, 249, 251, 254], "awg_freq": [151, 160], "ax": [12, 14, 18, 22, 25, 26, 28, 29, 36, 37, 38, 40, 41, 42, 44, 46, 48, 49, 50, 54, 74, 76, 82, 88, 91, 92, 135, 145, 148, 153, 157, 158, 162, 167, 172, 176, 177, 201, 202, 205, 206, 208, 209, 210, 211, 222, 223, 239, 246, 248], "ax_id": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "axes_label": [76, 201], "axi": [13, 18, 22, 23, 25, 26, 35, 36, 39, 48, 49, 50, 58, 59, 62, 63, 73, 74, 81, 90, 91, 93, 133, 147, 156, 157, 161, 162, 166, 175, 176, 178, 201, 207, 208, 211, 215, 221, 222, 224, 230, 232, 239, 248], "axid": [122, 126, 127, 139, 151, 160], "axis_id": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 248], "b": [13, 17, 18, 25, 27, 30, 36, 39, 43, 47, 51, 53, 55, 56, 74, 75, 81, 84, 87, 89, 91, 93, 94, 95, 97, 98, 99, 122, 126, 127, 130, 136, 139, 146, 147, 151, 152, 154, 157, 159, 160, 162, 166, 168, 171, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 201, 208, 211, 215, 216, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 239, 240, 246, 248], "b0": [13, 17, 27, 30, 39, 47, 51, 55, 81, 84, 87, 89, 93, 94, 95, 98, 122, 126, 127, 130, 139, 151, 152, 154, 160, 166, 168, 171, 173, 178, 179, 180, 182, 201, 215, 216, 219, 220, 224, 225, 226, 228, 230, 239, 248], "b_shift": 18, "back": [249, 250, 251], "backend": 234, "background": [18, 122, 126, 127, 139, 151, 160, 201, 239], "background_func": 18, "backup": 238, "bahrenberg": [58, 59], "banana": 242, "band": [236, 243], "bandwidth": [125, 138, 164, 165, 186, 248], "base": [3, 13, 14, 16, 17, 18, 19, 20, 27, 28, 29, 30, 32, 33, 34, 36, 37, 39, 42, 44, 46, 47, 51, 52, 54, 55, 56, 57, 66, 67, 68, 69, 70, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 126, 127, 128, 129, 130, 135, 137, 139, 140, 141, 145, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 194, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 236, 237, 238, 243, 244, 246, 247, 249, 254], "bashrc": 238, "basic": [33, 34, 240, 246, 247, 251], "becaus": [236, 238], "becom": [238, 251], "been": [125, 138, 151, 160, 164, 165, 186, 187, 194, 236, 238, 240, 243, 244, 246, 247, 249, 251], "befor": [31, 32, 34, 61, 63, 72, 123, 131, 155, 174, 201, 236, 238, 239, 240, 244, 246, 247, 251, 253], "begin": [125, 138, 164, 165, 186, 187, 194], "being": [31, 61, 63, 72, 123, 131, 151, 155, 160, 174, 201, 236, 248], "beliv": [125, 138, 164, 165, 186], "below": [240, 241], "best": [18, 201], "beta": [29, 88, 153, 172, 201, 206, 211, 234], "better": [122, 126, 127, 139, 251], "between": [17, 18, 48, 49, 50, 51, 84, 95, 168, 180, 199, 200, 201, 216, 226, 230, 238, 239, 240, 243, 244, 246, 248], "beyond": 239, "bg_thread": [122, 126, 127, 139, 160], "bic": 242, "big": 251, "biolog": 243, "biomolecul": 240, "bit": [58, 59, 242, 244], "blank": [4, 241], "block": [8, 246], "book": 241, "bool": [12, 17, 18, 22, 23, 25, 26, 31, 35, 36, 38, 40, 41, 43, 44, 53, 58, 59, 61, 62, 63, 72, 73, 74, 75, 84, 90, 91, 97, 123, 125, 126, 131, 133, 136, 138, 139, 143, 146, 147, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 174, 175, 176, 181, 185, 186, 200, 201, 207, 208, 211, 216, 221, 222, 227, 230], "borbat": 240, "both": [18, 39, 43, 48, 49, 50, 53, 58, 59, 75, 93, 97, 125, 136, 138, 146, 147, 159, 164, 165, 178, 181, 186, 198, 200, 201, 224, 227, 230, 236, 241, 243, 244, 246, 247, 248, 249, 251], "bottom": [201, 214, 241], "bound": [139, 198, 200], "box": [80, 104, 111, 113, 121, 241], "branch": 237, "bridg": [125, 138, 164, 165, 186, 242, 244, 247], "bridge12": 242, "brief": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "britt": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "bruker": [58, 59, 122, 126, 127, 139, 147, 151, 160, 194, 237, 238, 242, 243, 246, 249, 253, 254], "bruker_awg": [195, 201, 233], "bruker_mpfu": [195, 201, 233], "bruker_tool": [195, 201, 233], "brukerawg": [122, 126, 244, 246], "brukermpfu": [127, 139, 244], "brute": [18, 201], "bspline_extra": 49, "bug": 250, "build": [13, 17, 18, 25, 27, 30, 36, 39, 51, 55, 56, 74, 81, 84, 87, 89, 91, 93, 95, 98, 99, 130, 152, 154, 157, 162, 166, 168, 171, 173, 176, 178, 180, 182, 183, 201, 208, 211, 215, 216, 219, 220, 222, 224, 226, 228, 229, 230, 234, 240, 244, 247, 248, 251], "build__lowpass_butter_filt": 18, "build_default_puls": [201, 211], "build_shap": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "build_spectrum": 25, "build_tabl": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "build_unique_progt": 147, "built": [0, 234, 239, 243, 246, 247, 248, 249, 251], "butter": 163, "butterworth": 18, "button": [234, 236, 241, 243, 246, 249, 250, 253], "bw": [242, 248], "bwidth": [27, 51, 87, 95, 152, 171, 180, 201, 219, 226, 230, 239], "byte": [213, 214], "bytesio": 214, "c": 147, "c243": [242, 244], "ca": 238, "cach": [122, 126, 151, 160, 246], "caclul": [58, 59], "cal": [242, 244], "calc_correction_factor": [18, 201], "calc_d0": [122, 126, 127, 139, 198, 200], "calc_d0_from_hahn_echo": [122, 126, 127, 139], "calc_deer_set": [18, 201, 254], "calc_gyro": [22, 25, 26, 201, 239], "calc_identifi": 18, "calc_noise_level": [22, 25, 26, 201], "calc_optimal_deer_frq": 239, "calc_optimal_reptim": [42, 44, 46, 201], "calc_overlap": 49, "calc_percieved_freq": 163, "calc_rel_posit": 147, "calcat": [18, 201], "calcuat": [49, 147], "calcul": [12, 18, 22, 25, 26, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 53, 58, 59, 75, 97, 125, 136, 138, 146, 159, 164, 165, 181, 186, 201, 227, 230, 236, 239, 241, 251, 254], "calculate_noise_level": [58, 59], "calculate_optim": [58, 59], "calculate_snr_threshold": [58, 59], "calibr": [242, 244, 247], "calibratefreq": 200, "call": [32, 34, 151, 160, 240, 248, 255], "callback": [77, 102, 103, 104, 109, 112, 113, 115, 119, 121, 137], "can": [23, 32, 33, 34, 35, 36, 58, 59, 62, 63, 73, 74, 90, 91, 122, 125, 126, 127, 133, 138, 139, 143, 147, 156, 157, 161, 162, 164, 165, 175, 176, 186, 187, 194, 198, 200, 201, 207, 208, 211, 221, 222, 234, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 253, 255], "cannot": [23, 35, 36, 43, 53, 58, 59, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "canva": [45, 201, 212, 214], "carefulli": 251, "cari": 236, "carr": [12, 13, 18, 40, 44, 81, 166, 201, 215, 230, 236, 240], "carri": [32, 34, 236], "carrpurcel": 239, "carrpurcellanalysi": [12, 18, 40, 44, 201, 239, 246], "carrpurcellsequ": [13, 81, 166, 201, 215, 230, 239], "case": [33, 34, 58, 59, 238], "caus": [238, 247, 251], "caution": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "caveat": 247, "cd": 238, "ceil": 49, "center": [241, 242], "centr": [20, 70, 86, 129, 141, 150, 170, 201, 204, 211, 218, 243], "central": [43, 53, 56, 75, 97, 99, 122, 126, 136, 146, 151, 159, 160, 181, 183, 201, 227, 229, 230, 239], "certif": 238, "chage": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "challeng": [238, 240], "chang": [32, 34, 125, 138, 143, 147, 151, 160, 164, 165, 186, 187, 194, 240, 244, 246, 248, 249, 250, 251], "change_dimens": 147, "change_lo": [80, 104, 111, 113], "change_log_level": 34, "channel": [32, 34, 125, 138, 139, 147, 164, 165, 186, 197, 198, 199, 200, 242, 244, 251], "characteris": 236, "charecteris": 236, "chart": [213, 214], "cheby2": 163, "check": [12, 36, 40, 43, 44, 52, 53, 58, 59, 67, 69, 74, 75, 91, 96, 97, 136, 143, 146, 147, 157, 159, 162, 176, 181, 201, 208, 211, 222, 227, 230, 238, 240, 246, 251], "check_cp": [80, 104, 111, 113], "check_decai": [12, 40, 44, 201], "check_t2": [80, 104, 111, 113], "check_vari": 147, "checkpulsespel": [143, 147], "chem": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232, 240], "children": 8, "chip": 248, "chirp": [236, 240, 249], "chirppuls": [14, 82, 148, 167, 201, 202, 211, 248], "chnannel": [125, 138, 164, 165, 186], "choos": [17, 84, 147, 151, 160, 168, 201, 216, 230, 241], "chose": 236, "chosen": [139, 198, 200, 240, 241], "clarifi": 236, "class": [3, 5, 8, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 246, 247, 248, 254], "classmethod": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "clean": 0, "clear": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 246], "clear_cach": 246, "clear_log": [105, 106, 108], "clearlayout": [107, 114, 117], "click": [241, 250, 253], "clone": 237, "close": 238, "closest": [58, 59], "cmap": [44, 58, 59, 201], "code": [17, 45, 84, 168, 194, 201, 212, 214, 216, 230, 234, 240, 246], "coeffic": [125, 138, 164, 165, 186], "coher": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 248], "collect": [198, 200], "color": [44, 201, 233], "colormap": [58, 59], "com": [237, 244, 245], "combin": 246, "combo_figur": [201, 214], "come": [236, 238, 246, 248], "command": [34, 125, 127, 138, 139, 164, 165, 186, 240, 248], "common": [201, 232, 236, 238, 246], "commonli": [151, 160], "commun": [241, 251], "comp": [201, 232], "compact": [18, 201, 239], "compat": 147, "compens": [236, 249], "compil": 147, "compile_pulsespel_def": [125, 138, 164, 165, 186, 187, 194], "compile_pulsespel_prg": [125, 138, 164, 165, 186, 187, 194], "complet": [58, 59, 234, 236, 238, 241, 242, 244, 246, 253], "complex": 163, "complic": 246, "compon": 247, "comprehens": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "compress": 163, "comput": [25, 32, 34, 36, 57, 68, 69, 74, 91, 100, 157, 162, 176, 201, 208, 211, 222, 238, 244], "computefreq2field": 25, "computeintens": 25, "condit": [31, 61, 63, 72, 123, 131, 155, 174, 201], "conduct": 246, "confer": [52, 67, 69, 96, 201], "config": [238, 241, 244, 253], "config_fil": [122, 125, 126, 127, 138, 139, 164, 165, 184, 185, 186], "configur": [122, 125, 126, 127, 138, 139, 164, 165, 186, 253], "conflict": 238, "connect": [31, 61, 63, 72, 122, 123, 125, 126, 127, 131, 138, 139, 151, 155, 160, 164, 165, 174, 184, 185, 186, 201, 239, 247, 251], "connect_spectromet": [80, 104, 111, 113], "consid": [234, 247, 248], "consist": [246, 248], "consol": 238, "constant": [23, 35, 58, 59, 62, 63, 73, 90, 133, 143, 147, 156, 161, 175, 201, 207, 221], "construct": [32, 34], "consum": 240, "conta": 147, "contact": [234, 245, 247], "contain": [1, 23, 35, 36, 43, 48, 49, 50, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 147, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 213, 214, 221, 222, 227, 230, 233, 240, 241, 246, 248, 253], "content": 8, "continu": [57, 68, 69, 100, 201, 238], "contour": [38, 41, 44, 58, 59, 201], "control": [151, 160, 239, 243, 247, 249], "convers": [125, 138, 164, 165, 186], "convert": [32, 34, 43, 53, 75, 97, 136, 146, 147, 159, 181, 200, 201, 213, 214, 227, 230, 232, 244, 247, 248], "convert_progt": 147, "coordin": [58, 59], "copi": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "core": [34, 48, 49, 50, 113, 117, 201, 242, 251], "core_logg": 251, "corespond": 238, "corner": [58, 59, 241], "correct": [18, 125, 138, 139, 164, 165, 186, 201, 240, 246], "correctli": 238, "correctphas": [21, 71, 76, 201], "correctphaseful": [21, 71, 76, 201], "correspond": [36, 74, 91, 157, 162, 176, 188, 190, 194, 201, 208, 211, 222], "could": [251, 253], "count": 4, "counter": [125, 138, 164, 165, 186], "coupl": [32, 34, 247], "cours": 247, "cp": [12, 18, 40, 44, 201, 236], "cp_data": 239, "cp_run": 200, "cpdecai": [18, 201], "cpseq": 239, "creat": [17, 18, 23, 25, 32, 34, 35, 36, 38, 41, 44, 58, 59, 62, 63, 73, 74, 80, 84, 90, 91, 104, 111, 113, 122, 126, 127, 133, 139, 151, 156, 157, 160, 161, 162, 168, 175, 176, 201, 207, 208, 211, 214, 216, 221, 222, 230, 232, 240, 246, 251], "create_bahrenberg_plot": [58, 59], "create_dataset_from_ax": [76, 201], "create_dataset_from_bruk": [76, 201], "create_dataset_from_sequ": [76, 201], "create_fieldsweep_figur": [80, 104, 111, 113], "create_figur": [107, 114, 117], "create_nmodel": 25, "create_relax_figur": [80, 104, 111, 113], "create_report": [80, 104, 111, 113, 214], "create_respro_figur": [80, 104, 111, 113], "create_slice_plot": [58, 59], "create_twod_plot": [58, 59], "creation": [32, 34], "criteria": [15, 16, 18, 31, 52, 57, 61, 63, 65, 66, 67, 68, 72, 83, 96, 100, 123, 131, 143, 147, 155, 174, 201, 233, 239, 246, 249], "criterion": [18, 31, 61, 63, 72, 123, 131, 155, 174, 201], "critic": [32, 34, 251], "cross": 18, "csv": [58, 59], "cur_exp_inst": [125, 138, 164, 165, 186], "current": [32, 34, 38, 41, 42, 43, 44, 46, 53, 75, 97, 125, 136, 138, 146, 147, 151, 159, 160, 164, 165, 181, 186, 187, 188, 190, 194, 201, 227, 230, 237, 240, 241, 244, 247, 249], "custom": [239, 255], "customis": 241, "cutoff": [18, 201], "cvx": 242, "cycl": [17, 36, 58, 59, 74, 84, 91, 147, 157, 162, 168, 176, 201, 208, 211, 216, 222, 230, 239, 248], "d": [32, 34, 52, 67, 69, 96, 147, 201, 232], "d0": [122, 124, 126, 127, 134, 139, 144, 147, 196, 197, 198, 199, 200, 242, 253], "d1": 147, "d10": 147, "d11": 147, "d12": 147, "d13": 147, "d14": 147, "d15": 147, "d2": 147, "d3": 147, "d4": 147, "d5": 147, "d6": 147, "d61b00": 64, "d7": 147, "d8": 147, "d95b6f": [44, 64, 201], "dai": 251, "daili": 251, "danger": 251, "data": [2, 8, 12, 18, 22, 25, 26, 31, 36, 38, 40, 41, 44, 52, 58, 59, 61, 63, 67, 69, 72, 74, 76, 78, 91, 96, 101, 102, 103, 104, 110, 112, 113, 116, 120, 121, 123, 125, 131, 138, 155, 157, 162, 163, 164, 165, 174, 176, 185, 186, 187, 194, 201, 208, 211, 214, 222, 231, 236, 239, 241, 243, 249, 253, 254], "dataarrai": [22, 25, 26, 44, 201, 231], "datafil": [58, 59], "dataset": [12, 18, 22, 25, 26, 31, 38, 40, 41, 42, 44, 46, 48, 49, 50, 58, 59, 61, 63, 72, 80, 104, 111, 113, 117, 122, 123, 125, 126, 127, 131, 138, 139, 151, 155, 160, 164, 165, 174, 184, 185, 186, 187, 194, 197, 200, 201, 233, 239, 246], "date": [32, 34, 237, 238, 249, 251], "datefmt": [32, 34], "david": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "db": [125, 138, 164, 165, 186], "dc": [17, 84, 168, 201, 216, 230, 240, 248], "dct": [36, 43, 53, 74, 75, 91, 97, 136, 146, 157, 159, 162, 176, 181, 201, 208, 211, 222, 227, 230, 232], "deadtim": [196, 200, 240], "debug": [32, 34, 242, 251], "decai": [12, 18, 40, 44, 58, 59, 201, 236], "decid": 246, "decim": 49, "declar": 248, "decoher": [58, 59, 254], "decoupl": [13, 81, 166, 201, 215, 230], "decreas": 248, "deep": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "deer": [16, 17, 18, 58, 59, 66, 69, 83, 84, 168, 196, 200, 201, 214, 216, 230, 234, 241, 243, 244, 249, 253, 254], "deer5p_run": 200, "deer_analysi": [201, 233], "deer_set": [102, 103, 112], "deeranalysi": [18, 201, 239], "deeranalysis_plot": [18, 201, 239], "deeranalysis_plot_pub": [18, 201], "deeranalysis_process": 117, "deercriteria": [16, 66, 69, 83, 201, 239], "deerlab": [18, 52, 58, 59, 67, 69, 96, 201, 214, 236, 237, 242, 243], "deerload": [58, 59], "deerplot": [107, 114, 117], "deersequ": [17, 84, 168, 201, 216, 230, 239, 240], "def": [147, 248], "default": [12, 16, 17, 18, 20, 22, 23, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 83, 84, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 123, 125, 129, 130, 131, 133, 135, 136, 138, 139, 141, 145, 146, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 170, 173, 174, 175, 176, 177, 179, 180, 181, 182, 186, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 214, 216, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 238, 239, 242, 246, 251], "defenc": 251, "defin": [15, 16, 33, 34, 52, 57, 65, 66, 67, 68, 69, 78, 83, 96, 100, 101, 103, 104, 110, 113, 116, 120, 121, 201, 239, 248], "definit": [147, 239, 244], "deg": 200, "degre": [200, 251], "delai": [12, 17, 19, 36, 38, 40, 41, 43, 44, 51, 53, 55, 58, 59, 74, 75, 84, 85, 91, 95, 97, 98, 128, 136, 140, 143, 146, 147, 149, 157, 159, 162, 168, 169, 176, 180, 181, 182, 201, 203, 208, 211, 216, 217, 222, 226, 227, 228, 230, 236, 239, 240, 243, 248, 253], "delat": 18, "demonstr": 248, "den": 231, "denot": [151, 160], "depend": [18, 32, 34, 43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230, 237, 238, 240, 247, 248], "dependeci": 238, "deprec": [19, 85, 128, 140, 149, 169, 201, 203, 211, 217], "depth": [185, 240], "dersnr": [52, 67, 69, 96, 201], "describ": [32, 34, 38, 41, 42, 43, 44, 46, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230, 248], "descript": [15, 23, 35, 52, 57, 62, 63, 65, 67, 68, 69, 73, 90, 96, 100, 133, 156, 161, 175, 201, 207, 221, 239, 240], "design": [0, 236, 243, 247, 249], "desir": [18, 33, 34, 201], "desktop": 251, "destin": [33, 34], "det": [242, 244, 248], "det_ev": [239, 240], "det_frq": [22, 25, 26, 196, 200, 201], "det_window": 239, "detail": [58, 59, 199, 200, 236, 246, 255], "detect": [20, 22, 25, 26, 36, 44, 70, 74, 86, 91, 125, 129, 138, 141, 150, 151, 157, 160, 162, 164, 165, 170, 176, 186, 187, 194, 201, 204, 208, 211, 214, 218, 222, 236, 239, 248, 251], "detect_eseem": [44, 201], "determin": [32, 33, 34, 236, 243], "deuteron": [17, 44, 84, 168, 201, 216, 230], "dev": 237, "devel": 238, "develop": [163, 194, 234, 236, 237, 238, 240, 246, 247, 248, 250, 255], "deviat": [18, 58, 59], "diagnal": [58, 59], "diagram": [3, 213, 214], "dict": [18, 23, 35, 36, 62, 63, 73, 74, 76, 90, 91, 103, 104, 106, 121, 133, 147, 151, 156, 157, 160, 161, 162, 163, 175, 176, 198, 200, 201, 207, 208, 211, 214, 221, 222], "dictat": [58, 59], "dictformat": [32, 34], "dictionari": [32, 34, 36, 74, 91, 147, 151, 157, 160, 162, 176, 198, 200, 201, 208, 211, 214, 222, 232, 246, 248], "didn": 251, "differ": [23, 35, 48, 49, 50, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 238, 240, 244, 246, 249, 251], "differenti": 244, "dig_rat": [151, 160], "digit": [244, 247], "digitally_upconvert": 163, "digits": [151, 160], "dim": [13, 23, 35, 39, 55, 62, 63, 73, 81, 90, 93, 98, 133, 139, 147, 156, 161, 166, 175, 178, 182, 201, 207, 215, 221, 224, 228, 230, 239], "dimens": [147, 251], "dimension": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "dimesnion": 147, "diod": [200, 244], "dip": 239, "dipolar": [18, 201, 240], "direct": [36, 58, 59, 74, 91, 157, 162, 176, 201, 208, 211, 222], "directli": [15, 16, 23, 35, 52, 57, 58, 59, 62, 63, 65, 66, 67, 68, 69, 73, 83, 90, 96, 100, 133, 156, 161, 175, 201, 207, 221, 244], "directori": [238, 253], "disadvantag": 240, "discontinu": 238, "discuss": [250, 251], "dispatch": [33, 34], "displai": [3, 4, 6, 7, 8, 10, 241, 253], "distanc": [18, 201, 236, 240, 243, 246], "distribut": [18, 201, 236, 246], "dividor": [201, 232], "dnp": 248, "do": [33, 34, 237, 238, 239, 244, 247, 248], "doc": [45, 201, 212, 214, 237, 254], "docstr": [3, 4, 6, 7, 8, 10], "document": [1, 36, 58, 59, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232, 233, 234, 254], "doe": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 151, 156, 157, 159, 160, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230, 241, 247], "doesn": [58, 59], "doll": [36, 74, 91, 151, 157, 160, 162, 163, 176, 201, 208, 211, 222, 240, 242], "dolla": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "domain": [18, 36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 236, 246], "don": 241, "done": [58, 59, 125, 138, 147, 164, 165, 186, 187, 194, 238, 240, 241, 244, 246, 247, 248, 249, 253], "doubl": [12, 40, 44, 201, 240, 243], "down": [244, 248, 251], "download": 237, "draw": [213, 214], "dsc": [58, 59], "dsl": 246, "dstribut": 238, "dt": [17, 84, 102, 103, 112, 168, 196, 200, 201, 216, 230, 236, 239, 240, 242, 244], "dta": 163, "due": [58, 59, 247], "dummi": [194, 195, 201, 233], "dummy_api": [187, 194], "dummy_cur_exp": [188, 194], "dummy_dataset": [189, 194], "dummy_hidden": [190, 194], "dummy_param": [188, 190, 191, 194], "dummy_xepr": [192, 195, 201, 233], "dummyinterfac": [184, 185], "durand": [52, 67, 69, 96, 201], "durat": [18, 246], "dure": 243, "dynam": [13, 23, 35, 62, 63, 73, 81, 90, 133, 156, 161, 166, 175, 201, 207, 215, 221, 230, 238, 246], "e": [32, 34, 36, 43, 53, 56, 58, 59, 74, 75, 91, 97, 99, 136, 146, 147, 151, 157, 159, 160, 162, 176, 181, 183, 198, 200, 201, 208, 211, 222, 227, 229, 230, 232, 237, 240, 244, 246, 248, 251], "e1ae38": [64, 201], "e580": [242, 244], "each": [18, 23, 35, 36, 38, 41, 44, 62, 63, 73, 74, 90, 91, 133, 139, 147, 156, 157, 161, 162, 175, 176, 201, 207, 208, 211, 221, 222, 232, 246, 248, 251, 255], "earlier": 251, "easi": [243, 244, 249], "easier": 251, "easiest": 255, "easili": [238, 241, 246], "easyspin": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "echo": [17, 18, 30, 38, 39, 41, 44, 47, 51, 55, 58, 59, 84, 89, 93, 94, 95, 98, 130, 139, 154, 168, 173, 178, 179, 180, 182, 198, 199, 200, 201, 214, 216, 220, 224, 225, 226, 228, 230, 236, 238, 239, 240, 246, 248], "edf": [27, 87, 152, 171, 201, 214, 219, 230, 236, 239], "edit": 237, "effect": [18, 125, 138, 164, 165, 186, 187, 194, 240], "effic": 236, "effici": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "eith": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "either": [12, 13, 18, 22, 25, 26, 27, 30, 32, 34, 38, 39, 40, 41, 43, 44, 51, 53, 55, 75, 81, 87, 89, 93, 95, 97, 98, 130, 136, 139, 146, 151, 152, 154, 159, 160, 166, 171, 173, 178, 180, 181, 182, 198, 200, 201, 215, 219, 220, 224, 226, 227, 228, 230, 234, 236, 246, 249, 251, 253], "eldor": [125, 138, 164, 165, 186, 197, 199, 200], "eldortun": [139, 197, 200], "electron": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 240, 243], "element": [23, 35, 38, 41, 44, 62, 63, 73, 90, 133, 151, 156, 160, 161, 175, 201, 207, 221, 244, 246], "elexsi": [122, 126, 127, 139, 243, 247, 249], "elif": 8, "els": [3, 4, 7, 8], "elspin": 25, "email": 251, "emin": 238, "emit": [32, 33, 34], "empti": [33, 34], "enabl": 234, "encod": 251, "encrypt": 238, "end": [125, 138, 164, 165, 186, 187, 194, 199, 200, 249, 251], "end_criteria": [102, 103, 112], "end_sign": [15, 65, 69, 201], "end_tim": [57, 68, 69, 100, 201], "endblock": 8, "endfor": [3, 6, 7, 8, 10], "endif": [3, 4, 6, 7, 8, 10], "endor": 248, "engin": [151, 160], "enough": [58, 59], "enter": 241, "enterpris": 238, "entir": 243, "entri": [105, 106, 108, 241], "enviro": 238, "epoch": [57, 68, 69, 100, 201], "epr": [36, 74, 91, 157, 162, 176, 194, 201, 208, 211, 222, 232, 243, 246, 248, 249], "epraccessor": [21, 71, 76, 201], "eprload": [201, 231], "equal": [246, 247, 251], "equalto": 8, "equip": 251, "equival": [125, 138, 164, 165, 186, 248], "erot": 25, "error": [31, 32, 34, 61, 63, 72, 78, 101, 103, 104, 110, 113, 116, 120, 121, 123, 131, 155, 174, 201, 251], "escap": 11, "eseem": [17, 44, 84, 168, 201, 216, 230], "eseem_avg": [17, 84, 168, 201, 216, 230], "eseem_depth": 185, "espin": [24, 25], "establish": [234, 236], "estim": [43, 52, 53, 67, 69, 75, 96, 97, 122, 126, 127, 136, 139, 146, 159, 181, 201, 227, 230, 239, 253], "estimated_snr": [58, 59], "estr": 163, "et": [52, 67, 69, 96, 201, 240], "etc": [47, 94, 179, 201, 225, 230, 238, 239, 242, 249, 251], "eth": [151, 160, 239, 242], "eth_awg": [195, 201, 233, 239], "eth_awg_interfac": [151, 160, 239], "eth_awg_load": [195, 201, 233], "even": [240, 249, 251], "event": [20, 32, 33, 34, 70, 86, 129, 141, 150, 170, 201, 204, 211, 218, 239, 248], "everi": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 244, 246, 247], "everyth": [34, 251], "evo": 236, "evolut": [18, 43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230, 240], "exampl": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 237, 239, 244, 246, 248], "exc": [18, 201], "exc_limit": 239, "exc_puls": [18, 201, 239, 240], "exce": 236, "except": [32, 34, 58, 59, 241, 251], "exciat": [18, 36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "excit": [18, 36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 239, 240, 243, 248], "exciteprofil": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "exclud": [48, 49, 50, 201], "exctyp": [78, 101, 103, 104, 110, 113, 116, 120, 121], "excut": 237, "exeperi": [188, 190, 194], "exist": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230, 237, 243, 249], "exp": [58, 59, 147], "exp_typ": [18, 185, 201], "expand": [237, 240, 247, 249], "experi": [15, 16, 18, 22, 25, 26, 31, 38, 41, 42, 43, 44, 46, 52, 53, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 72, 75, 80, 83, 96, 97, 100, 104, 111, 113, 122, 123, 125, 126, 127, 131, 136, 138, 139, 146, 147, 151, 155, 159, 160, 164, 165, 174, 181, 184, 185, 186, 187, 194, 197, 199, 200, 201, 227, 230, 231, 238, 239, 242, 243, 246, 248, 249, 251], "experienc": 243, "experiment": [12, 14, 19, 29, 36, 40, 43, 44, 53, 54, 56, 74, 75, 82, 85, 88, 91, 97, 99, 128, 136, 140, 146, 148, 149, 153, 157, 159, 162, 167, 169, 172, 176, 181, 183, 201, 202, 203, 206, 208, 210, 211, 217, 222, 227, 229, 230, 246, 249], "explantori": 255, "exponenti": [12, 40, 44, 201], "export": 238, "express": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230], "exptyp": [18, 201], "extend": [2, 5, 9, 240], "extens": 0, "extent": 18, "extern": [32, 34], "extra": [18, 58, 59, 151, 160, 201, 238, 246, 248, 251], "extra_param": [76, 201], "extract": [48, 49, 50, 188, 190, 194, 201, 240], "eyekron": 25, "f": [18, 32, 34, 52, 67, 69, 96, 201], "f243_awg": 242, "f_axi": 18, "f_diff_threshold": [48, 49, 50, 201], "f_lim": [48, 49, 50, 201], "fact": [32, 34], "factor": [18, 201], "fals": [17, 18, 23, 35, 36, 38, 41, 44, 48, 49, 50, 58, 59, 62, 63, 73, 74, 80, 84, 90, 91, 104, 111, 113, 122, 124, 125, 126, 127, 132, 133, 134, 138, 139, 142, 144, 147, 156, 157, 161, 162, 164, 165, 168, 175, 176, 186, 201, 207, 208, 211, 216, 221, 222, 230, 239, 242, 244, 248], "far": [48, 49, 50, 201, 248], "fashion": 247, "fc": 163, "fc_guess": [48, 49, 50, 201], "featur": [194, 241, 243, 247, 250, 251], "fedora": 238, "feel": [234, 251], "fet": 244, "few": [238, 239, 246, 247], "fft": [21, 48, 49, 50, 71, 76, 201], "field": [13, 17, 18, 22, 25, 26, 27, 30, 39, 43, 47, 51, 53, 55, 56, 75, 81, 84, 87, 89, 93, 94, 95, 97, 98, 99, 122, 125, 126, 127, 130, 136, 138, 139, 146, 151, 152, 154, 159, 160, 164, 165, 166, 168, 171, 173, 178, 179, 180, 181, 182, 183, 186, 200, 201, 214, 215, 216, 219, 220, 224, 225, 226, 227, 228, 229, 230, 236, 241, 248, 249, 251], "fieldsweep": [18, 22, 26, 43, 48, 49, 50, 53, 75, 97, 113, 136, 146, 159, 181, 201, 227, 230, 233, 239], "fieldsweep_fit": 113, "fieldsweepanalysi": [18, 22, 25, 26, 48, 49, 50, 201, 214, 239], "fieldsweepsequ": [27, 87, 152, 171, 201, 219, 230, 239], "fig": [12, 18, 22, 25, 26, 38, 40, 41, 42, 44, 46, 48, 49, 50, 201], "figur": [12, 18, 22, 25, 26, 38, 40, 41, 44, 45, 48, 49, 50, 58, 59, 201, 212, 214], "file": [23, 32, 34, 35, 36, 43, 53, 58, 59, 62, 63, 73, 74, 75, 90, 91, 97, 122, 125, 126, 127, 133, 136, 138, 139, 146, 147, 151, 156, 157, 159, 160, 161, 162, 163, 164, 165, 175, 176, 181, 186, 201, 207, 208, 211, 221, 222, 227, 230, 231, 241, 246, 249, 251, 253], "filenam": [21, 23, 32, 34, 35, 36, 43, 53, 62, 63, 71, 73, 74, 75, 76, 80, 90, 91, 97, 104, 111, 113, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "filenotfounderror": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "filepath": [45, 76, 124, 134, 144, 147, 201, 212, 214], "fill": [58, 59, 248, 250], "fill_tabl": [104, 121], "filter": [18, 33, 34, 163, 201], "filter_puls": 163, "filter_typ": 163, "filter_width": 163, "final": [201, 214, 239, 248, 249, 253], "final_freq": 248, "find": [18, 58, 59, 125, 138, 164, 165, 186, 239, 251], "find_cur_exp": [125, 138, 164, 165, 186], "find_hidden": [125, 138, 164, 165, 186], "find_longest_puls": 18, "find_max": [22, 25, 26, 201], "find_max_pulse_length": 163, "find_min": [197, 200], "find_optim": [12, 38, 40, 41, 44, 201, 239], "find_xepr": [125, 138, 164, 165, 186, 187, 194], "finish": [31, 57, 61, 63, 68, 69, 72, 78, 100, 101, 103, 104, 110, 113, 116, 120, 121, 123, 125, 131, 138, 155, 164, 165, 174, 186, 187, 194, 201, 241], "first": [17, 23, 35, 48, 49, 50, 62, 63, 73, 84, 90, 133, 151, 156, 160, 161, 168, 175, 201, 207, 216, 221, 230, 236, 238, 239, 240, 241, 246, 251, 253], "fit": [12, 18, 22, 25, 26, 40, 42, 44, 46, 48, 49, 50, 58, 59, 200, 201, 214, 234, 236, 239, 242, 244, 246], "fit_result": [18, 201], "fitresult": [18, 80, 104, 107, 111, 113, 114, 117, 201, 214], "fitter": 236, "five": [17, 84, 168, 201, 216, 230, 239, 240, 243, 251], "five_puls": [17, 84, 168, 201, 216, 230, 239, 240], "fix": [240, 250], "flaot": [37, 92, 135, 145, 158, 177, 201, 209, 211, 223], "flavour": 247, "flip": [37, 58, 59, 92, 135, 145, 158, 177, 201, 209, 211, 223], "flipangl": [36, 37, 74, 91, 92, 135, 145, 157, 158, 162, 176, 177, 201, 208, 209, 211, 222, 223, 239, 248], "float": [12, 13, 14, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 62, 63, 68, 69, 70, 73, 74, 75, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 122, 125, 126, 128, 129, 130, 133, 135, 136, 138, 139, 140, 141, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "floor": 49, "flowabl": [45, 201, 212, 213, 214], "fm": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 248], "fmt": [32, 34], "fn": [77, 104, 109, 113, 115, 119, 121, 137], "fob": 239, "focus": [36, 43, 53, 74, 75, 91, 97, 136, 146, 157, 159, 162, 176, 181, 201, 208, 211, 222, 227, 230, 248], "folder": [34, 241, 251, 253], "folder_path": [80, 104, 111, 113], "follow": [0, 36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 236, 242, 251], "foot": 247, "footer": [45, 201, 212, 214], "fork": 250, "form": [239, 240, 243, 246, 248, 249, 250], "format": [32, 33, 34, 241, 242, 251], "format_exc": [78, 101, 103, 104, 110, 113, 116, 120, 121], "formatexcept": [32, 34], "formatt": [32, 33, 34], "formattim": [32, 34], "found": [122, 126, 127, 139, 237, 248, 253], "four": [17, 84, 168, 201, 216, 230, 243, 251], "four_puls": [17, 84, 168, 201, 216, 230, 240], "fpump": 239, "fraction": [18, 201], "fraquelli": [52, 67, 69, 96, 201], "free": [234, 236, 238, 240, 246], "freed": 240, "freq": [20, 22, 25, 26, 28, 36, 37, 54, 70, 74, 86, 91, 92, 125, 129, 135, 138, 139, 141, 145, 150, 157, 158, 162, 164, 165, 170, 176, 177, 185, 186, 201, 204, 205, 208, 209, 210, 211, 218, 222, 223, 239, 242, 244, 246, 248], "frequenc": [13, 14, 17, 18, 20, 22, 25, 26, 27, 28, 29, 30, 36, 37, 39, 43, 47, 48, 49, 50, 51, 53, 54, 55, 56, 70, 74, 75, 81, 82, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 122, 125, 126, 129, 130, 135, 136, 138, 141, 145, 146, 148, 150, 151, 152, 153, 154, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 186, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 239, 240, 241, 242, 244, 247, 248], "frequneci": [43, 53, 56, 75, 97, 99, 136, 146, 159, 181, 183, 201, 227, 229, 230], "freudl": [52, 67, 69, 96, 201], "freuenci": [125, 138, 164, 165, 186], "friendli": 234, "from": [0, 12, 18, 23, 31, 35, 36, 38, 40, 41, 43, 44, 45, 53, 58, 59, 61, 62, 63, 72, 73, 74, 75, 77, 78, 90, 91, 97, 101, 102, 103, 104, 109, 110, 112, 113, 115, 116, 119, 120, 121, 123, 125, 131, 133, 136, 137, 138, 146, 147, 155, 156, 157, 159, 161, 162, 164, 165, 174, 175, 176, 181, 184, 185, 186, 188, 190, 194, 200, 201, 207, 208, 211, 212, 214, 221, 222, 227, 230, 232, 236, 239, 240, 241, 243, 244, 246, 248, 249, 251, 254], "front": 194, "fsweep": 239, "fsweep_analysi": [113, 239], "fsweep_result": [101, 103], "fsweep_toolbar": [80, 104, 111, 113], "ftol": 242, "ftp": 238, "full": [18, 28, 32, 34, 58, 59, 125, 138, 147, 164, 165, 186, 187, 194, 201, 205, 211, 236, 238, 246, 247, 248, 249], "full_nam": 3, "full_output": [18, 201], "fulli": [234, 236, 243, 249, 253], "fullnam": 11, "fullpath": [125, 138, 164, 165, 186], "func": [14, 28, 29, 36, 37, 54, 74, 82, 88, 91, 92, 125, 135, 138, 145, 148, 153, 157, 158, 162, 164, 165, 167, 172, 176, 177, 186, 201, 202, 205, 206, 208, 209, 210, 211, 222, 223, 248], "func1": 49, "func2": 49, "funcnam": [32, 34], "function": [6, 8, 20, 32, 36, 54, 58, 59, 70, 74, 77, 86, 91, 102, 103, 109, 112, 115, 119, 125, 129, 137, 138, 141, 150, 151, 157, 162, 164, 165, 170, 176, 186, 187, 194, 204, 208, 210, 218, 222, 236, 246, 248, 251, 254, 255], "fundament": [238, 247], "furo": 0, "further": [194, 240, 247], "futur": [18, 201, 241, 249], "fwhm": [28, 201, 205, 211], "fwidth": [51, 95, 180, 201, 226, 230], "g": [22, 24, 25, 26, 32, 34, 36, 74, 91, 157, 162, 176, 198, 199, 200, 201, 208, 211, 222, 240, 246], "gain": [125, 138, 151, 160, 164, 165, 186], "galleri": 0, "gap": 242, "gate": 239, "gauss": [18, 27, 43, 51, 53, 56, 75, 87, 95, 97, 99, 122, 125, 126, 136, 138, 146, 151, 152, 159, 160, 164, 165, 171, 180, 181, 183, 186, 201, 219, 226, 227, 229, 230, 239], "gaussian": [18, 28, 201, 205, 211], "gaussianpuls": [28, 201, 205, 211], "gcc": 238, "gcd": [201, 232], "gener": [1, 14, 17, 18, 19, 20, 22, 23, 25, 26, 29, 34, 35, 36, 45, 52, 54, 58, 59, 62, 63, 67, 69, 70, 73, 74, 82, 84, 85, 86, 88, 90, 91, 96, 122, 126, 128, 129, 133, 140, 141, 147, 148, 149, 150, 151, 153, 156, 157, 160, 161, 162, 163, 167, 168, 169, 170, 172, 175, 176, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 218, 221, 222, 230, 231, 232, 233, 234, 236, 240, 241, 244, 246, 247, 248, 251, 253], "generalis": 249, "georgieva": 240, "get": [32, 34, 125, 138, 151, 160, 164, 165, 186, 248, 250, 251], "get_acquisition_mod": [125, 138, 164, 165, 186], "get_all_ax": [76, 201], "get_all_fixed_param": [76, 201], "get_arang": 147, "get_attenu": [125, 138, 164, 165, 186], "get_axi": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "get_config_fil": [125, 138, 164, 165, 186], "get_counterfreq": [125, 138, 164, 165, 186], "get_eldor_freq": [125, 138, 164, 165, 186], "get_field": [125, 138, 164, 165, 186], "get_freq": [125, 138, 164, 165, 186], "get_hidden_param": [125, 138, 164, 165, 186], "get_mw_amp": [125, 138, 164, 165, 186], "get_nut": 200, "get_param": [125, 138, 164, 165, 186], "get_phas": [125, 138, 164, 165, 186], "get_phasecycl": [125, 138, 164, 165, 186], "get_pulsespel_def_filenam": [125, 138, 164, 165, 186], "get_pulsespel_def_filepath": [125, 138, 164, 165, 186], "get_pulsespel_exp_filenam": [125, 138, 164, 165, 186], "get_pulsespel_exp_filepath": [125, 138, 164, 165, 186], "get_pulsespel_experi": [125, 138, 164, 165, 186], "get_pulsespel_phase_cycl": [125, 138, 164, 165, 186], "get_replacemod": [125, 138, 164, 165, 186], "get_sequence_row": [104, 121], "get_spec_config": [125, 138, 164, 165, 186], "get_specjet_data": [126, 139], "get_sweep_width": [125, 138, 164, 165, 186], "get_vexp": 117, "get_video_bandwidth": [125, 138, 164, 165, 186], "get_video_gain": [125, 138, 164, 165, 186], "getcistr": [104, 121], "getlogg": 251, "getmessag": [32, 34], "getparam": [188, 190, 194], "ghz": [13, 17, 18, 22, 25, 26, 27, 30, 39, 47, 48, 49, 50, 51, 55, 81, 84, 87, 89, 93, 94, 95, 98, 122, 125, 126, 130, 138, 151, 152, 154, 160, 164, 165, 166, 168, 171, 173, 178, 179, 180, 182, 186, 199, 200, 201, 215, 216, 219, 220, 224, 225, 226, 228, 230, 239, 242, 244, 248], "gig": 237, "git": [237, 244], "github": [237, 240, 244, 250], "give": [48, 49, 50, 147, 201, 236, 240, 243, 247], "given": [12, 18, 22, 25, 26, 36, 38, 40, 41, 44, 48, 49, 50, 57, 58, 59, 68, 69, 74, 91, 100, 122, 126, 127, 139, 147, 151, 157, 160, 162, 176, 188, 190, 194, 198, 199, 200, 201, 208, 211, 222, 240, 246, 253], "gn": 25, "go": [247, 250], "gone": 251, "graph": [241, 244], "graphic": [234, 236, 254, 255], "greatest": [201, 232], "green": [241, 253], "grid": [18, 201], "gsa": [151, 160, 242], "guass": [13, 17, 27, 30, 39, 47, 51, 55, 81, 84, 87, 89, 93, 94, 95, 98, 130, 152, 154, 166, 168, 171, 173, 178, 179, 180, 182, 201, 215, 216, 219, 220, 224, 225, 226, 228, 230], "guass_broaden": 25, "guess": [122, 126, 127, 139, 239, 241], "gui": [80, 109, 110, 111, 201, 233, 234, 239, 254, 255], "guid": 247, "gunn": [200, 244], "gunnar": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "gyro": [102, 103, 112, 151, 160, 199, 200], "gyro_exp": [239, 240], "gyro_n": 239, "gyromagnet": [22, 25, 26, 199, 200, 201, 239], "gz": 238, "h": [236, 240], "h5": 241, "ha": [12, 23, 35, 40, 44, 62, 63, 73, 80, 90, 104, 111, 113, 125, 133, 138, 151, 156, 160, 161, 164, 165, 175, 186, 187, 194, 201, 207, 221, 236, 238, 239, 241, 243, 244, 246, 247, 251], "haas": [52, 67, 69, 96, 201], "hahn": [30, 47, 51, 55, 58, 59, 89, 94, 95, 98, 130, 139, 154, 173, 179, 180, 182, 198, 199, 200, 201, 220, 225, 226, 228, 230, 236, 246, 248], "hahnecho": 248, "hahnechosequ": [27, 30, 47, 55, 87, 89, 94, 98, 130, 152, 154, 171, 173, 179, 182, 201, 219, 220, 225, 228, 230, 246, 248], "half": [28, 201, 205, 211], "ham": 25, "ham_ez": 25, "ham_nz": 25, "hand": [58, 59, 241], "handl": 147, "handler": [33, 34, 77, 102, 103, 104, 109, 112, 113, 115, 119, 121, 137], "happen": 251, "hard": 236, "hard_logg": 251, "hardwar": [34, 187, 201, 233, 237, 239, 243, 244, 246, 249, 251], "hardware_meta": 194, "hardware_wait": 139, "harwar": [34, 251], "hat": 238, "have": [48, 49, 50, 194, 201, 236, 238, 239, 240, 244, 246, 248, 249, 251], "hdf5": 241, "header": [45, 104, 121, 147, 201, 212, 214], "height": [45, 201, 212, 214], "hello": 251, "here": [122, 126, 127, 139, 238, 239, 244, 246, 247, 248, 251], "hh": 239, "hidden": [192, 194], "high": [234, 240, 251], "higher": [236, 240, 244], "hold": [125, 138, 164, 165, 186], "holder": 242, "home": [243, 247, 249], "hook": [52, 67, 69, 96, 201], "host": 237, "hour": [12, 18, 38, 40, 41, 44, 201, 236], "how": [18, 31, 32, 34, 57, 58, 59, 61, 63, 68, 69, 72, 100, 123, 131, 139, 151, 155, 160, 174, 201, 236, 238, 239, 247, 248, 251], "howev": [238, 243, 246, 247, 248, 251], "hspuls": [29, 88, 153, 172, 201, 206, 211], "html": [0, 36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "http": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232, 237, 238, 244], "hugo": 194, "human": [32, 34, 244], "hw_log": [139, 165, 185, 194], "hybrid": [242, 244], "hyperboilc": [29, 88, 153, 172, 201, 206, 211], "hyperbol": 236, "i": [0, 4, 6, 7, 8, 17, 18, 23, 25, 30, 31, 32, 33, 34, 35, 36, 38, 41, 43, 44, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 67, 68, 69, 72, 73, 74, 75, 84, 89, 90, 91, 94, 96, 97, 98, 99, 100, 104, 121, 122, 123, 125, 126, 127, 130, 131, 133, 136, 138, 139, 146, 147, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 173, 174, 175, 176, 179, 181, 182, 183, 186, 187, 194, 198, 200, 201, 207, 208, 211, 214, 216, 220, 221, 222, 225, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 251, 253, 255], "id": [8, 32, 34, 124, 134, 143, 144, 147, 151, 160, 239], "ideal": [197, 198, 199, 200], "idenitifi": 139, "ident": 25, "identifi": [18, 125, 138, 164, 165, 186, 187, 194, 201, 236, 251], "identifyroi": [18, 201], "ifgain": [151, 160, 239], "ignor": 18, "ii": [122, 126, 127, 139, 243, 247, 249], "imaginari": [18, 139, 198, 200], "immedi": [31, 61, 63, 72, 122, 123, 126, 127, 131, 139, 155, 174, 184, 185, 201, 246, 251], "implement": [33, 34, 243, 248], "import": [8, 18, 58, 59, 201, 236, 239, 244, 246, 248, 251, 253], "import_data": [58, 59], "import_dataset": [58, 59], "improv": [240, 254], "includ": [18, 25, 58, 59, 147, 201, 236, 240, 242, 243, 248, 253], "incoher": [197, 199, 200], "incompat": 244, "increas": [36, 47, 55, 74, 91, 94, 98, 157, 162, 176, 179, 182, 201, 208, 211, 222, 225, 228, 230, 236, 238, 248], "indent": [3, 4, 6, 7, 8, 10], "independ": [234, 242, 243, 246, 249], "index": 8, "indic": [78, 101, 103, 104, 110, 113, 116, 120, 121, 241], "individu": [248, 251], "info": [32, 34, 242, 251], "infom": [18, 58, 59, 139, 201, 242, 246, 247, 248, 253], "inform": [32, 34, 246, 247, 248], "inherit": [3, 23, 35, 62, 63, 73, 77, 90, 102, 103, 104, 109, 112, 113, 115, 119, 121, 133, 137, 156, 161, 175, 201, 207, 221, 248], "init": 248, "init_d": [201, 214], "init_freq": 248, "initi": [23, 32, 33, 34, 35, 62, 63, 73, 90, 122, 126, 127, 133, 139, 156, 161, 175, 201, 207, 214, 221, 239, 240, 241, 242, 247, 248, 251, 254], "initialis": [31, 61, 63, 72, 77, 102, 103, 104, 109, 112, 113, 115, 119, 121, 122, 123, 126, 127, 131, 137, 139, 155, 174, 184, 185, 201, 239], "initializt": [213, 214], "input": [18, 58, 59, 147, 201, 241], "insatl": 238, "insid": 239, "instal": 244, "instanc": [32, 33, 34, 188, 190, 194, 248], "instead": [18, 201, 240, 248], "instruct": [0, 238, 255], "int": [12, 13, 17, 18, 23, 25, 27, 30, 31, 35, 36, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 67, 69, 72, 73, 74, 75, 78, 81, 84, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 110, 113, 116, 120, 121, 122, 123, 125, 126, 130, 131, 133, 136, 138, 139, 146, 147, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 186, 191, 194, 197, 198, 199, 200, 201, 207, 208, 210, 211, 215, 216, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230], "integ": [143, 147], "integr": [234, 243, 249, 251], "intellig": 249, "intend": [33, 34], "intens": 25, "inter": [12, 19, 38, 40, 41, 44, 85, 128, 140, 149, 169, 201, 203, 211, 217, 236, 240, 243, 253], "interced": 239, "interest": [18, 201, 236, 245], "interfac": [31, 33, 34, 61, 63, 72, 102, 103, 112, 122, 123, 126, 127, 131, 139, 151, 155, 160, 174, 184, 185, 201, 234, 236, 242, 246, 248, 254, 255], "intergr": [18, 201], "intern": [58, 59], "interpret": [32, 34, 151, 160], "interpuls": [17, 51, 55, 84, 95, 98, 168, 180, 182, 201, 216, 226, 228, 230], "interv": 246, "intial": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "introduc": [17, 84, 168, 201, 216, 230], "intuit": 234, "invers": 240, "invert": [58, 59], "invert_sign": [58, 59], "investig": 251, "involv": [240, 246], "inward": 240, "io": 214, "ip": [238, 244], "is_exp_run": [125, 138, 164, 165, 186, 187, 194], "is_stat": [23, 35, 36, 62, 63, 73, 74, 90, 91, 133, 156, 157, 161, 162, 175, 176, 201, 207, 208, 211, 221, 222], "isdelayfocus": [36, 43, 53, 74, 75, 91, 97, 136, 146, 157, 159, 162, 176, 181, 201, 208, 211, 222, 227, 230], "iso8601": [32, 34], "ispulsefocus": [36, 43, 53, 74, 75, 91, 97, 136, 146, 157, 159, 162, 176, 181, 201, 208, 211, 222, 227, 230], "isrun": [31, 61, 63, 72, 122, 123, 126, 127, 131, 139, 151, 155, 160, 174, 184, 185, 201, 239], "issu": [32, 34, 151, 160, 238, 247, 250, 251], "iter": [139, 198, 200], "itn": [43, 53, 56, 75, 97, 99, 136, 146, 159, 181, 183, 201, 227, 229, 230], "its": [201, 232, 238, 248], "itself": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 249], "j": [36, 52, 67, 69, 74, 91, 96, 157, 162, 176, 201, 208, 211, 222, 232, 240], "jeschk": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 240], "jeschkelab": 237, "join": 250, "json": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "jsonstr": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "june": 238, "just": [32, 34, 48, 49, 50, 147, 201, 239, 247, 248], "k": [52, 67, 69, 96, 201], "kamp": [52, 67, 69, 96, 201], "kara": 194, "keep": [240, 246], "keep_run": [31, 61, 63, 72, 123, 131, 155, 174, 201], "kei": [18, 36, 45, 74, 91, 124, 134, 144, 147, 157, 162, 176, 201, 208, 211, 212, 214, 222, 246, 247], "kept": [241, 251], "keyword": [36, 58, 59, 74, 77, 91, 102, 103, 104, 109, 112, 113, 115, 119, 121, 137, 157, 162, 176, 201, 208, 211, 222], "kimbal": [52, 67, 69, 96, 201], "klass": [3, 8], "knot": 25, "know": [32, 34, 236], "knowledg": [32, 34], "known": [151, 160, 243, 246], "knownledg": 241, "kroneck": 25, "kroney": 25, "kummel": [52, 67, 69, 96, 201], "kwarg": [13, 14, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 36, 37, 39, 42, 43, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 70, 73, 74, 75, 77, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 109, 112, 113, 115, 119, 121, 122, 125, 126, 127, 129, 130, 133, 135, 136, 137, 138, 139, 141, 145, 146, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "lab": 241, "label": [236, 243], "languag": [244, 246], "larg": [249, 251], "larger": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "last": [3, 251], "later": [236, 237, 246, 249, 251], "latest": [237, 244], "launch": [31, 61, 63, 72, 122, 123, 126, 127, 131, 139, 151, 155, 160, 174, 184, 185, 201, 239, 246], "launch_long": [151, 160], "launch_norm": [151, 160], "layout": [107, 114, 117], "ld_library_path": 238, "least": 244, "leav": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "left": [201, 214, 241], "lenght": [12, 40, 44, 201], "length": [3, 8, 13, 14, 17, 19, 28, 29, 36, 37, 39, 48, 49, 50, 54, 74, 81, 82, 84, 85, 88, 91, 92, 93, 122, 126, 128, 135, 140, 143, 145, 147, 148, 149, 151, 153, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 215, 216, 217, 222, 223, 224, 230, 236, 239, 242, 248], "less": [18, 104, 121, 201, 236, 240, 246], "lett": 240, "levai": [52, 67, 69, 96, 201], "level": [12, 31, 32, 33, 34, 40, 44, 58, 59, 61, 63, 72, 102, 103, 112, 123, 131, 155, 174, 201, 248], "levelnam": [32, 34], "levelno": [32, 34], "lib": 238, "lib64": 238, "libdir": 238, "light": [241, 253], "like": [17, 32, 34, 84, 168, 201, 216, 230, 239, 240, 247, 248, 249, 251], "limit": [48, 49, 50, 201, 248], "lin_maxit": 242, "lin_tol": 242, "line": [32, 34], "linear": [14, 82, 148, 167, 201, 202, 211, 247, 248], "linearli": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "lineno": [32, 34], "link_obj": 3, "linux": 238, "list": [3, 8, 18, 23, 33, 34, 35, 36, 44, 45, 62, 63, 73, 74, 90, 91, 104, 121, 125, 133, 138, 147, 156, 157, 161, 162, 163, 164, 165, 175, 176, 186, 199, 200, 201, 207, 208, 211, 212, 214, 221, 222, 232, 242, 246, 248], "list_str_to_typ": [104, 121], "live": 253, "lo": [13, 17, 22, 25, 26, 27, 30, 39, 43, 47, 48, 49, 50, 51, 53, 55, 56, 75, 81, 84, 87, 89, 93, 94, 95, 97, 98, 99, 102, 103, 112, 122, 126, 127, 130, 136, 139, 146, 151, 152, 154, 159, 160, 166, 168, 171, 173, 178, 179, 180, 181, 182, 183, 184, 185, 201, 215, 216, 219, 220, 224, 225, 226, 227, 228, 229, 230, 239, 240, 246, 247, 248], "load": [23, 32, 34, 35, 36, 43, 53, 58, 59, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 163, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230, 231, 241, 246, 253], "load_epr_fil": [80, 104, 111, 113, 121], "load_fold": [80, 104, 111, 113], "load_spectrometer_config": [80, 104, 111, 113], "lobe": 248, "loc": 18, "local": [57, 68, 69, 100, 122, 126, 151, 160, 201, 238, 239, 242, 244], "locat": [18, 236], "log": [18, 31, 32, 33, 61, 63, 69, 72, 104, 123, 131, 155, 160, 174, 201, 231, 233, 242], "logdialog": [105, 106, 108], "logger": [32, 34], "logrecord": [32, 34], "lombardi": [52, 67, 69, 96, 201], "long": [57, 58, 59, 68, 69, 100, 151, 160, 201, 238, 240], "long_deer": [201, 214], "longdeer_result": [101, 103], "longdeer_upd": [101, 103], "longer": [125, 138, 164, 165, 186, 187, 194, 240, 251, 253], "longest": 18, "look": [246, 248], "loop": [3, 151, 160, 242], "lorentzian": [48, 49, 50, 201], "lower": [197, 198, 199, 200, 248], "lowest": 251, "lowpass": 18, "lt": 238, "m": [25, 52, 67, 69, 96, 201, 237, 244], "m8190a": 244, "maco": 237, "made": 239, "mag_logg": 251, "magent": [125, 138, 164, 165, 186, 251], "magentis": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "magn": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "magnet": [43, 53, 56, 75, 97, 99, 122, 125, 126, 136, 138, 146, 151, 159, 160, 164, 165, 181, 183, 186, 201, 227, 229, 230, 236, 251], "mai": [58, 59], "main": [58, 59, 104, 201, 233, 237, 246, 247, 248, 250, 251, 255], "major": 254, "make": [0, 32, 34, 238, 240, 248, 250], "manag": 238, "mani": [18, 58, 59, 139, 151, 160, 240, 246, 247, 248], "manufactu": 194, "manufactur": [242, 244], "map": [44, 201], "markup": 244, "mask": [18, 163], "match": [18, 163, 201, 254], "match_filter_dc": 163, "matfil": 163, "math": [199, 200, 236], "matlab": [151, 160, 163, 237, 241, 247], "matplotlib": [18, 22, 25, 26, 44, 48, 49, 50, 58, 59, 201, 239], "matrici": [201, 232], "matrix": [25, 201, 232], "max": [22, 25, 26, 191, 194, 201, 241, 242, 244], "max_nfev": 242, "max_tau": [102, 103, 112], "maxdepth": 8, "maximis": [18, 139, 198, 200, 201], "maximum": [12, 13, 18, 22, 25, 26, 28, 38, 39, 40, 41, 44, 47, 81, 93, 94, 139, 163, 166, 178, 179, 198, 200, 201, 205, 211, 215, 224, 225, 230, 236, 241, 251, 253], "maxit": [139, 198, 200], "mayb": 251, "me": 194, "mean": [247, 251], "meanwhil": 246, "measur": [12, 17, 31, 38, 40, 41, 44, 52, 57, 58, 59, 61, 63, 67, 68, 69, 72, 84, 96, 100, 122, 123, 126, 127, 131, 139, 155, 168, 174, 184, 185, 200, 201, 216, 230, 236, 240, 241, 243, 244, 246, 247, 249, 253, 254], "member": 3, "memori": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "mention": [32, 34], "merg": [48, 49, 50, 201], "messag": [32, 33, 34, 80, 104, 111, 113], "met": [31, 61, 63, 72, 123, 131, 155, 174, 201], "metadata": [58, 59], "method": [3, 7, 36, 58, 59, 74, 91, 122, 126, 151, 157, 160, 162, 176, 188, 190, 194, 208, 211, 222, 246, 247, 248], "mhz": [20, 25, 37, 70, 86, 92, 125, 129, 135, 138, 141, 145, 150, 158, 164, 165, 170, 177, 186, 201, 204, 209, 211, 218, 223], "micol": [52, 67, 69, 96, 201], "microsecond": [18, 201, 232], "microwav": [25, 125, 138, 164, 165, 186], "might": [246, 251], "millisecond": [32, 34], "mimimum": [52, 67, 69, 96, 201], "min": [191, 194, 242, 244], "min_tp": 242, "minim": 236, "minimis": [139, 198, 200], "minimum": [18, 201, 247], "minor": 241, "minut": [31, 61, 63, 72, 123, 131, 155, 174, 201, 246], "miss": 251, "mm": 239, "mnr": [18, 201, 240], "mock": [127, 139], "mode": [16, 66, 69, 83, 122, 125, 126, 138, 151, 160, 164, 165, 184, 185, 186, 201, 237, 239, 243, 246, 254], "model": [12, 16, 18, 25, 40, 44, 66, 69, 83, 194, 201, 236, 242, 244, 249], "moder": 240, "modern": [238, 243, 249], "modif": [239, 240], "modifi": [246, 255], "modul": [8, 9, 32, 36, 74, 91, 157, 162, 176, 201, 208, 222, 237, 240, 246, 251], "module_dir": [18, 147, 200], "moment": 236, "mono": [12, 40, 44, 201], "monochromat": [28, 37, 54, 92, 135, 145, 158, 177, 201, 205, 209, 210, 211, 223, 248], "more": [58, 59, 147, 151, 160, 234, 238, 239, 240, 246, 247, 251], "most": [151, 160, 194, 236, 238, 239, 247, 248, 251], "mostli": [163, 240, 255], "motor": [125, 138, 164, 165, 186], "move": [147, 240, 248, 251], "mpfu": [124, 127, 132, 134, 139, 142, 144, 147, 198, 200, 242, 243, 244, 247, 249], "mpfu_overwrit": [122, 126, 127, 139], "mpfutun": [139, 198, 200], "msec": [32, 34], "mt": 25, "mu": 236, "much": [234, 236, 238, 246, 251], "multi": 246, "multi_mod": [48, 49, 50, 201], "multilin": 4, "multipl": [18, 48, 49, 50, 201, 237, 238, 240, 243, 246, 249, 251], "multipli": [25, 248], "must": [18, 25, 48, 49, 50, 201, 236, 239, 241, 244, 246, 251, 253], "mutex": [102, 103, 112], "mutlipl": 246, "mw": 248, "mwfreq": 25, "mx": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "my": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 242, 246, 247], "myst": 0, "mz": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "n": [12, 13, 14, 17, 18, 19, 22, 23, 25, 26, 28, 29, 35, 36, 37, 38, 40, 41, 44, 51, 54, 62, 63, 73, 74, 81, 82, 84, 85, 88, 90, 91, 92, 95, 122, 126, 128, 133, 135, 140, 145, 148, 149, 151, 153, 156, 157, 158, 160, 161, 162, 166, 167, 168, 169, 172, 175, 176, 177, 180, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 221, 222, 223, 226, 230, 236, 239, 242, 244], "name": [4, 8, 15, 23, 32, 34, 35, 36, 43, 52, 53, 56, 57, 62, 63, 65, 67, 68, 69, 73, 74, 75, 90, 91, 96, 97, 99, 100, 104, 121, 125, 133, 136, 138, 146, 147, 151, 156, 157, 159, 160, 161, 162, 164, 165, 175, 176, 181, 183, 186, 188, 190, 194, 201, 207, 208, 211, 221, 222, 227, 229, 230, 236, 239, 240, 241, 242, 244, 246, 248, 251, 253], "nanosecond": [201, 232], "narrow": 240, "nativ": [241, 246, 247], "ndarrai": [18, 22, 23, 25, 26, 35, 36, 38, 41, 44, 47, 48, 49, 50, 62, 63, 73, 74, 90, 91, 94, 133, 156, 157, 161, 162, 163, 175, 176, 179, 201, 207, 208, 211, 221, 222, 225, 230, 232], "ndeer": [17, 18, 84, 168, 201, 216, 230, 243], "ndeer_cp": [17, 84, 168, 201, 216, 230, 240], "nearli": [236, 247, 248], "necessari": [238, 239, 241, 242], "need": [32, 34, 58, 59, 122, 126, 127, 139, 147, 151, 160, 188, 190, 194, 236, 237, 238, 240, 241, 242, 244, 246, 247, 248, 249, 251, 253], "nest": 8, "netcdf": [21, 71, 76, 201], "never": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 251], "new": [18, 125, 138, 147, 164, 165, 186, 201, 234, 238, 243, 248, 250, 254], "new_data": [102, 103, 112], "new_length": 147, "new_puls": [102, 103, 112, 248], "new_tau": 239, "newer": 244, "newli": 238, "next": [43, 53, 75, 97, 125, 136, 138, 146, 159, 164, 165, 181, 186, 187, 194, 201, 227, 230, 236, 248, 253], "nfft": [48, 49, 50, 201], "nitroxid": [25, 236], "nnlssolver": 242, "nois": [12, 18, 38, 40, 41, 44, 48, 49, 50, 52, 58, 59, 67, 69, 96, 201, 246], "noise_level": 185, "noisedens": [48, 49, 50, 201], "nomarlis": [22, 25, 26, 201], "nome": [58, 59], "non": [18, 36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 240, 247, 248], "none": [4, 6, 7, 8, 12, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 80, 83, 84, 85, 86, 90, 91, 92, 96, 97, 100, 102, 103, 104, 106, 107, 111, 112, 113, 114, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 174, 175, 176, 177, 181, 185, 186, 191, 192, 194, 200, 201, 203, 204, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 223, 227, 230, 231, 239, 248], "nonetheless": [244, 247], "norm": [12, 22, 25, 26, 38, 40, 41, 44, 58, 59, 201], "normal": [17, 18, 38, 41, 44, 58, 59, 84, 151, 160, 168, 201, 216, 230, 239, 240, 243, 246, 254], "normaldc": [17, 84, 168, 201, 216, 230], "normalis": [12, 21, 25, 38, 40, 41, 44, 52, 58, 59, 67, 69, 71, 76, 96, 201], "normalise_01": [18, 201], "note": [18, 125, 138, 164, 165, 186, 201, 251], "notebook": 239, "noth": [125, 138, 164, 165, 186], "notimplementederror": [33, 34], "notset": [33, 34], "now": [122, 126, 127, 139, 151, 160, 236, 238, 239, 241, 246, 248], "np": [18, 22, 23, 25, 26, 35, 36, 38, 41, 44, 47, 48, 49, 50, 62, 63, 73, 74, 90, 91, 94, 133, 156, 157, 161, 162, 163, 175, 176, 179, 201, 207, 208, 211, 221, 222, 225, 230, 239, 248], "npoint": 25, "nspin": [24, 25], "nu": [199, 200], "nu_fin": [199, 200], "nu_init": [199, 200], "nuanc": [58, 59], "nucspin": 25, "num": 231, "num_point": [196, 200, 239], "num_puls": 200, "num_ref_puls": [18, 201], "number": [12, 13, 17, 18, 23, 25, 27, 30, 32, 34, 35, 36, 38, 39, 40, 41, 43, 44, 47, 49, 51, 53, 55, 56, 58, 59, 62, 63, 73, 74, 75, 81, 84, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 122, 125, 126, 130, 133, 136, 138, 139, 146, 147, 151, 152, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 168, 171, 173, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 194, 198, 200, 201, 207, 208, 211, 215, 216, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 239, 240, 246], "numer": [32, 34], "numpi": [18, 25, 163, 201, 232, 239, 244, 248], "numpydoc": 0, "nut": 239, "nutat": [48, 49, 50, 51, 95, 180, 197, 199, 200, 201, 226, 230, 236, 246], "nx": [200, 248], "o": 238, "ob": [17, 84, 168, 201, 216, 230], "obj": [3, 4, 6, 7, 8, 10, 23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "obj_item": 8, "object": [3, 18, 23, 35, 36, 38, 41, 42, 43, 44, 46, 48, 49, 50, 53, 58, 59, 62, 63, 69, 73, 74, 75, 78, 90, 91, 97, 101, 103, 104, 110, 113, 116, 120, 121, 122, 126, 133, 136, 146, 151, 156, 157, 159, 160, 161, 162, 175, 176, 181, 197, 198, 199, 200, 201, 207, 208, 211, 221, 222, 227, 230, 246, 248, 249], "obsdc": [17, 84, 168, 201, 216, 230], "observ": [17, 84, 168, 201, 216, 230], "occur": [240, 251], "oe": 244, "off": [48, 49, 50, 201, 251], "offici": 238, "offset": [43, 53, 56, 75, 97, 99, 136, 146, 159, 181, 183, 201, 227, 229, 230, 248], "offset_freq": 163, "often": [31, 61, 63, 72, 123, 131, 155, 174, 201, 238, 240, 247, 248, 251, 255], "old": 238, "omit": [32, 34], "onc": [125, 138, 164, 165, 186, 187, 194, 238, 241, 249, 253], "one": [32, 34, 48, 49, 50, 151, 160, 201, 240, 246, 248, 249, 251], "ones": [238, 248], "onli": [15, 16, 18, 23, 35, 43, 52, 53, 57, 62, 63, 65, 66, 67, 68, 69, 73, 75, 83, 90, 96, 97, 100, 122, 125, 126, 127, 133, 136, 138, 139, 143, 146, 147, 151, 156, 159, 160, 161, 163, 164, 165, 175, 181, 186, 201, 207, 221, 227, 230, 236, 237, 240, 244, 246, 248, 249, 251, 254], "onlydet": [132, 142, 147], "open": [151, 160, 241], "openssl": 238, "openssldir": 238, "oper": [32, 34, 151, 160, 201, 232, 238], "operand": [32, 34], "optim": [12, 18, 38, 40, 41, 44, 58, 59, 139, 197, 198, 199, 200, 201, 236], "optimal_slice_plot": [58, 59], "optimal_tau1": [38, 41, 44, 201], "optimis": [18, 139, 198, 200, 201, 214, 234, 239, 240, 243], "optimise_puls": [18, 80, 104, 111, 113, 201], "optimise_pulses_button": [80, 104, 111, 113], "optimise_spectra_posit": [49, 201], "option": [12, 14, 16, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 52, 53, 54, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 82, 83, 84, 85, 86, 88, 90, 91, 92, 96, 97, 100, 123, 125, 128, 129, 131, 133, 135, 136, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 174, 175, 176, 177, 181, 186, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 221, 222, 223, 227, 230, 231, 232, 248, 253, 254], "order": [54, 201, 210, 211, 244], "order1": [29, 88, 153, 172, 201, 206, 211], "order2": [29, 88, 153, 172, 201, 206, 211], "org": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232, 238], "orient": 25, "origin": [18, 237, 240, 249], "orphan": 8, "oscil": [122, 126, 151, 160, 239], "oss": 238, "other": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 240, 248, 249, 253], "otherwis": [17, 18, 36, 74, 84, 91, 157, 162, 168, 176, 201, 208, 211, 216, 222, 230, 236, 246], "our": [238, 239, 248], "out": [32, 34, 58, 59, 80, 104, 111, 113, 236, 238, 248, 250], "output": [18, 58, 59, 201], "outsid": [238, 251], "over": [58, 59, 239, 240], "overlai": [48, 49, 50, 201], "overlap": [18, 49, 201, 214], "overload": [3, 6, 7], "own": [243, 246, 247, 255], "p": [17, 18, 84, 168, 201, 216, 230, 240, 246], "p0": 147, "p1": 147, "p10": 147, "p180": [122, 126, 151, 160, 239], "p2": 147, "p3": [17, 84, 147, 168, 201, 216, 230, 240], "p4": 147, "p5": [52, 67, 69, 96, 147, 201], "p6": 147, "p7": 147, "p8": 147, "p9": 147, "p90": [122, 126, 151, 160, 239], "p90_12_34": 246, "packag": [8, 36, 74, 91, 157, 162, 176, 208, 211, 222, 232, 234, 238, 239, 240, 246, 249], "package_dir": 214, "package_directori": [106, 113, 117], "pad": [36, 48, 49, 50, 74, 91, 157, 162, 176, 201, 208, 211, 222], "page": [1, 233, 250], "pages": [45, 201, 212, 214], "pair": [58, 59, 127, 139, 239], "par": [191, 194], "par1": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "par2": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "param": [43, 53, 75, 76, 97, 104, 121, 136, 146, 159, 181, 185, 201, 227, 230, 232], "param_in_mhz": [104, 121], "param_in_u": [104, 121], "param_nam": [125, 138, 164, 165, 186], "paramagnet": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "paramat": [58, 59, 246, 248], "paramet": [12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 109, 112, 113, 115, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 241, 243, 248, 249, 251, 253, 255], "params_width": [201, 232], "paramt": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 188, 190, 194, 201, 207, 221], "paremet": [58, 59, 188, 190, 194], "parent": [105, 106, 107, 108, 114, 117, 248], "parmet": [58, 59], "pars": 8, "parser": 0, "part": [3, 18], "particular": [58, 59], "parvar": [143, 147, 151, 160], "pass": [23, 35, 62, 63, 73, 77, 90, 102, 103, 104, 109, 112, 113, 115, 119, 121, 133, 137, 156, 161, 175, 201, 207, 221, 246, 248, 251], "passag": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "passiv": 25, "path": [23, 35, 36, 43, 53, 58, 59, 62, 63, 73, 74, 75, 90, 91, 97, 122, 125, 126, 127, 133, 136, 138, 139, 146, 147, 156, 157, 159, 161, 162, 164, 165, 175, 176, 181, 186, 192, 193, 194, 201, 207, 208, 211, 221, 222, 227, 230, 231, 232, 238, 241, 244], "pathnam": [32, 34], "pathwai": [240, 248], "patient": 234, "paus": [125, 138, 164, 165, 186, 247], "pause_and_wait": [102, 103, 112], "pause_exp": [125, 138, 164, 165, 186], "pcre": 238, "pcyc": [17, 36, 74, 84, 91, 157, 162, 168, 176, 201, 208, 211, 216, 222, 230, 248], "pcyc_str": 147, "pdf": [234, 241, 254], "pe12": [17, 84, 168, 201, 216, 230, 240], "pe12rp": [17, 84, 168, 201, 216, 230, 240], "pe12rpr3": [17, 84, 168, 201, 216, 230, 240], "pe1p0r2r3b": [17, 84, 168, 201, 216, 230, 240], "peak": [48, 49, 50, 201], "peldor": [17, 84, 168, 201, 216, 230, 243], "pent": 242, "pep02r3": [17, 84, 168, 201, 216, 230, 240], "per": [13, 17, 27, 30, 39, 43, 47, 51, 53, 55, 56, 58, 59, 75, 81, 84, 87, 89, 93, 94, 95, 97, 98, 99, 125, 130, 136, 138, 146, 152, 154, 159, 164, 165, 166, 168, 171, 173, 178, 179, 180, 181, 182, 183, 186, 187, 194, 201, 215, 216, 219, 220, 224, 225, 226, 227, 228, 229, 230, 239, 251], "perfom": [47, 94, 179, 201, 225, 230, 238], "perform": [18, 201, 239, 247], "period": 246, "perl": 238, "phase": [17, 18, 36, 58, 59, 74, 84, 91, 139, 147, 157, 162, 168, 176, 185, 198, 200, 201, 208, 211, 216, 222, 230, 239, 248], "phasecycl": 147, "phy": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232, 240], "physcial": [151, 160], "physic": 248, "pi": [58, 59, 122, 126, 151, 160, 197, 198, 199, 200, 239, 240, 246, 248], "pi2_puls": [239, 246], "pi_puls": [239, 246], "piec": [246, 251], "pip": [0, 237, 244], "placehold": [33, 34], "plan": 237, "platypu": [213, 214], "pleas": [0, 234, 240, 245, 247], "plot": [12, 18, 22, 25, 26, 36, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 53, 58, 59, 74, 75, 91, 97, 136, 139, 146, 157, 159, 162, 176, 181, 201, 208, 211, 214, 222, 227, 230, 239, 246], "plot1d": [38, 41, 44, 201], "plot2d": [38, 41, 44, 201], "plot_1drelax": [44, 201], "plot_fft": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "plot_optimal_deer_frq": 239, "plot_overlap": [18, 201], "plot_pulse_exc": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230], "plt": 239, "plu": 237, "po": [58, 59], "point": [13, 17, 18, 25, 27, 30, 36, 39, 43, 47, 51, 53, 55, 56, 58, 59, 74, 75, 81, 84, 87, 89, 91, 93, 94, 95, 97, 98, 99, 130, 136, 146, 152, 154, 157, 159, 162, 166, 168, 171, 173, 176, 178, 179, 180, 181, 182, 183, 200, 201, 208, 211, 215, 216, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 251], "pol": [125, 138, 164, 165, 186], "polynom": [125, 138, 164, 165, 186, 242], "polynomi": [200, 244], "pop": [80, 104, 111, 113, 251], "porgram": 241, "port": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "portion": [32, 34], "posit": [18, 23, 35, 37, 43, 53, 62, 63, 73, 75, 90, 92, 97, 122, 125, 126, 133, 135, 136, 138, 139, 145, 146, 147, 151, 156, 158, 159, 160, 161, 164, 165, 175, 177, 181, 186, 197, 198, 199, 200, 201, 207, 209, 211, 221, 223, 227, 230, 248], "possibl": [18, 58, 59, 147, 201, 236, 246, 248, 249, 250], "possible_delai": 147, "possible_puls": 147, "possible_var": 147, "possibli": 194, "post": 231, "potenti": 244, "power": [48, 49, 50, 197, 198, 199, 200, 201, 236, 242, 246, 248, 251], "pre": [32, 34, 238, 240, 248], "precis": [18, 104, 121, 125, 138, 164, 165, 186, 201, 239, 243], "predict": 236, "prefer": [58, 59, 241, 242, 244, 253], "prefix": 238, "premis": 240, "preparatori": [32, 34], "present": [238, 240], "press": [236, 241, 249], "pretend": 194, "prevent": 251, "previou": 147, "pribitz": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "primari": 240, "primarili": [236, 251], "primary_color": [64, 201], "print": [239, 246, 248, 251], "pritn": 246, "privat": [3, 58, 59], "privileg": 238, "problem": [238, 251], "procedur": 249, "process": [32, 34, 58, 59, 78, 101, 103, 104, 110, 113, 116, 120, 121, 234, 241, 243, 246, 249, 255], "process_deeranalysi": [107, 114, 117], "process_nut": [48, 49, 50, 201, 239], "product": 25, "prof_data": [48, 49, 50, 201], "prof_frq": [48, 49, 50, 201], "profil": [18, 36, 48, 49, 50, 51, 56, 74, 91, 95, 99, 102, 103, 112, 157, 162, 176, 180, 183, 199, 200, 201, 208, 211, 214, 222, 226, 229, 230, 246, 247, 249], "prog": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 239], "program": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 234, 240, 241, 251, 255], "progress": [23, 30, 35, 55, 62, 63, 73, 78, 89, 90, 98, 101, 103, 104, 110, 113, 116, 120, 121, 130, 133, 151, 154, 156, 160, 161, 173, 175, 182, 201, 207, 220, 221, 228, 230, 231, 234, 239, 243, 248, 253], "progress_bar": 231, "progress_bar_frac": 231, "progtabl": 147, "project": [234, 247, 250], "properti": [3, 6, 7, 10, 21, 23, 35, 43, 53, 62, 63, 71, 73, 75, 76, 90, 97, 133, 136, 146, 151, 156, 159, 160, 161, 175, 181, 191, 194, 201, 207, 221, 227, 230], "propos": 251, "protein": 243, "protocol": 255, "proton": [17, 44, 84, 168, 201, 216, 230, 240], "provid": [18, 48, 49, 50, 188, 190, 194, 201, 236, 237, 239, 247, 255], "ps_file": 147, "ps_length": [197, 198, 199, 200], "psparvar": [143, 147], "psphasecycl": [132, 142, 147], "public": [18, 201], "pull": [237, 240, 250], "puls": [12, 13, 14, 17, 18, 19, 20, 23, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 51, 53, 54, 55, 56, 58, 59, 62, 63, 70, 73, 74, 75, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 103, 104, 111, 112, 113, 122, 125, 126, 127, 128, 129, 130, 133, 135, 136, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 236, 239, 242, 243, 244, 246, 247, 249, 251, 253], "pulse0_tp": [48, 49, 50, 201], "pulse_num": [124, 134, 144, 147], "pulseprofil": [199, 200], "pulsespel": [124, 134, 143, 144, 147, 243, 246, 247, 248, 249], "pump": [17, 18, 84, 168, 201, 216, 230, 236, 239, 240], "pump_frq": [196, 200], "pump_puls": [18, 201, 239, 240], "purcel": [12, 13, 18, 40, 44, 81, 166, 201, 215, 230, 236, 240], "push": [234, 243, 246], "py": [3, 4, 6, 7, 10], "pydata": 0, "pyenv": 238, "pypi": [237, 244], "pyplot": 239, "pyqt6": [33, 34, 77, 78, 101, 102, 103, 104, 105, 106, 107, 108, 112, 114, 115, 116, 117, 119, 120, 121, 137], "pyqt_table_from_dict": [104, 121], "pytest": 237, "python": [0, 2, 5, 9, 58, 59, 163, 234, 237, 241, 243, 244, 246, 247, 248, 249, 251], "python2": 238, "q": [236, 242], "qdialog": [105, 106, 108], "qmainwindow": [80, 104, 111, 113], "qmutex": 103, "qobject": [33, 34, 78, 101, 103, 104, 110, 113, 116, 120, 121], "qrunnabl": [77, 102, 103, 104, 109, 112, 113, 115, 119, 121, 137], "qtcore": [33, 34, 77, 78, 101, 102, 103, 104, 109, 110, 112, 113, 115, 116, 119, 120, 121, 137], "qtloghandl": [33, 34], "qtwidget": [105, 106, 107, 108, 114, 117], "qualiti": [234, 246], "quick": [58, 59], "quickdeer": [104, 201, 233], "quickdeer_result": [101, 103], "quickdeer_upd": [101, 103], "qunatum": [201, 232], "qwaitcondit": 103, "qwidget": [106, 107, 114, 117], "r": [4, 18, 36, 52, 67, 69, 74, 91, 96, 139, 157, 162, 176, 198, 200, 201, 208, 211, 222, 232, 240], "r_limit": [48, 49, 50, 201], "radian": [37, 92, 135, 145, 158, 177, 201, 209, 211, 223], "rais": [23, 31, 33, 34, 35, 36, 43, 53, 61, 62, 63, 72, 73, 74, 75, 90, 91, 97, 104, 121, 123, 131, 133, 136, 146, 147, 155, 156, 157, 159, 161, 162, 174, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230, 231], "raise_warn": [80, 104, 111, 113], "rang": [25, 122, 126, 151, 160, 236, 241, 243], "rate": 242, "ratio": [12, 18, 22, 25, 26, 38, 40, 41, 44, 52, 67, 69, 96, 199, 200, 201, 239], "raw": [33, 34], "re": [36, 74, 91, 125, 138, 157, 162, 164, 165, 176, 186, 201, 208, 211, 222, 242, 244], "re_dim": [17, 84, 168, 201, 216, 230], "re_step": [17, 84, 168, 201, 216, 230], "reach": [236, 246], "read": [125, 138, 164, 165, 186, 241, 247], "read_tabl": [104, 121], "readabl": 244, "readi": [18, 201], "readili": 249, "real": [18, 139, 198, 200], "reason": [238, 239], "recent": [125, 138, 151, 160, 164, 165, 186, 187, 194], "reciev": 241, "recomend": [151, 160], "recommen": 241, "recommend": [18, 201, 238, 244, 247, 248, 255], "record": [32, 33, 34, 251], "recoveri": [42, 44, 46, 201, 236], "rectangular": [13, 17, 27, 30, 37, 39, 43, 51, 53, 55, 75, 81, 84, 87, 89, 92, 93, 95, 97, 98, 122, 126, 130, 135, 136, 145, 146, 151, 152, 154, 158, 159, 160, 166, 168, 171, 173, 177, 178, 180, 181, 182, 201, 209, 211, 215, 216, 219, 220, 223, 224, 226, 227, 228, 230, 236, 239, 246, 248], "rectpuls": [17, 37, 84, 92, 122, 126, 127, 135, 139, 145, 151, 158, 160, 168, 177, 201, 209, 211, 216, 223, 230, 239, 248], "red": 238, "reduc": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230, 240, 248], "reduced_seq": 139, "ref": [17, 84, 168, 201, 216, 230, 240, 248], "ref_puls": [18, 201, 239, 240], "refer": [52, 67, 69, 96, 241], "refocus": [13, 17, 18, 38, 39, 41, 44, 58, 59, 81, 84, 93, 166, 168, 178, 198, 200, 201, 215, 216, 224, 230, 236, 240], "refocused2d": [18, 201], "refocusedecho2d": 254, "refocusedecho2danalysi": [18, 38, 41, 44, 201, 254], "refocusedecho2dsequ": [39, 93, 178, 201, 224, 230, 254], "reformat": 147, "reforuml": 254, "refoucs": 236, "refous": 239, "refresh_d": [107, 114, 117], "refresh_fieldsweep_after_fit": [80, 104, 111, 113], "refresh_relax": [80, 104, 111, 113], "refresh_relax_figur": [80, 104, 111, 113], "refresh_respro": [80, 104, 111, 113], "refresh_t2": [80, 104, 111, 113], "refresh_tim": 242, "region": [18, 201, 236, 251], "regparam": 242, "regular": 246, "reim_color": 64, "rejectattr": [3, 8], "rejectionratio": 25, "rel": [32, 34, 147], "relat": [34, 251], "relativecr": [32, 34], "relax": [17, 18, 38, 41, 55, 84, 98, 102, 103, 112, 168, 182, 201, 214, 216, 228, 230, 233, 240, 254], "relax2d_result": [101, 103], "relax_process": 113, "relax_result": [101, 103], "relax_toolbar": [80, 104, 111, 113], "releas": [234, 238], "releat": 34, "reliabl": 254, "relib": 194, "remain": [17, 84, 168, 201, 216, 230, 240, 243], "rememb": 246, "remov": [18, 19, 85, 128, 140, 149, 169, 201, 203, 211, 217, 248], "remove_dynam": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "remove_echo": 18, "render": [3, 8, 213, 214], "repet": [122, 126, 151, 160], "repetit": [13, 17, 27, 30, 39, 43, 47, 51, 53, 55, 56, 58, 59, 75, 81, 84, 87, 89, 93, 94, 95, 97, 98, 99, 130, 136, 146, 152, 154, 159, 166, 168, 171, 173, 178, 179, 180, 181, 182, 183, 201, 215, 216, 219, 220, 224, 225, 226, 227, 228, 229, 230, 236, 239, 248], "repettit": [12, 40, 44, 201], "replacemod": 147, "report": [45, 201, 212, 233, 234, 241, 250, 251, 254], "reportlab": [45, 201, 212, 213, 214], "repositori": 238, "repres": [13, 14, 17, 19, 20, 23, 27, 28, 29, 30, 31, 35, 36, 37, 39, 43, 47, 53, 54, 55, 56, 61, 62, 63, 70, 72, 73, 74, 75, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 122, 123, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 244], "represent": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "reptim": [13, 17, 27, 30, 39, 42, 43, 44, 46, 47, 51, 53, 55, 56, 75, 81, 84, 87, 89, 93, 94, 95, 97, 98, 99, 102, 103, 112, 122, 126, 130, 136, 146, 151, 152, 154, 159, 160, 166, 168, 171, 173, 178, 179, 180, 181, 182, 183, 184, 185, 201, 215, 216, 219, 220, 224, 225, 226, 227, 228, 229, 230, 239, 240, 246, 248], "reptime_max": [47, 94, 179, 201, 225, 230], "reptime_scan_result": [101, 103], "reptimeanalysi": [42, 44, 46, 201], "reptimescan": [47, 94, 179, 201, 225, 230], "request": [240, 250], "requir": [17, 18, 58, 59, 84, 125, 138, 164, 165, 168, 186, 187, 194, 201, 216, 230, 236, 238, 241, 244, 246, 247, 248, 251, 253], "requr": [48, 49, 50, 201], "rerun_exp": [125, 138, 164, 165, 186], "resampl": 18, "resample_and_shift_vector": 18, "reset_bg_data": [122, 126, 127, 139], "reset_cur_exp": [122, 126, 127, 139, 151, 160], "resfield": 25, "reson": [18, 36, 48, 49, 50, 51, 56, 74, 91, 95, 99, 102, 103, 112, 157, 162, 176, 180, 183, 201, 208, 211, 214, 222, 226, 229, 230, 232, 240, 241, 242, 243, 246, 247, 249], "resonator_profil": [49, 201, 239], "resonatorprofil": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230], "resonatorprofileanalysi": [18, 48, 49, 50, 201, 214, 239], "resonatorprofilesequ": [51, 95, 180, 201, 226, 230, 239], "respect": [127, 139], "respons": [32, 34, 236, 238], "respro": [18, 201, 214, 233, 239], "respro_process": 113, "respro_result": [101, 103], "respro_toolbar": [80, 104, 111, 113], "restart": 251, "result": [18, 32, 34, 78, 101, 102, 103, 104, 110, 112, 113, 116, 120, 121, 201, 214, 253], "retrospect": 251, "return": [12, 16, 22, 23, 25, 26, 32, 34, 35, 36, 38, 40, 41, 43, 44, 48, 49, 50, 53, 58, 59, 62, 63, 66, 69, 73, 74, 75, 78, 83, 90, 91, 97, 101, 103, 104, 110, 113, 116, 120, 121, 122, 124, 125, 126, 127, 132, 133, 134, 136, 138, 139, 142, 143, 144, 146, 147, 151, 156, 157, 159, 160, 161, 162, 164, 165, 175, 176, 181, 185, 186, 188, 190, 194, 198, 199, 200, 207, 208, 211, 213, 214, 221, 222, 227, 230, 231, 232, 240, 246, 248], "return_annot": [3, 6, 7], "rewrit": 147, "rf": 248, "rfc": [32, 34], "rhel": 238, "right": [58, 59, 201, 214, 241], "risen": 251, "risk": 238, "rml": [213, 214], "rng": 185, "roger": [52, 67, 69, 96, 201], "roi": [18, 201, 236, 239], "root": 238, "rotat": 25, "roughli": 251, "round_step": [201, 232], "row": [38, 41, 44, 104, 121, 201], "rowcount": [104, 121], "rpseq": 239, "rst": [2, 5, 8, 9], "run": [0, 16, 66, 69, 77, 78, 83, 101, 102, 103, 104, 109, 110, 112, 113, 115, 116, 119, 120, 121, 125, 137, 138, 143, 147, 151, 160, 164, 165, 186, 187, 194, 199, 200, 201, 236, 239, 241, 243, 246, 249, 251, 253], "run_2d_relax": [102, 103, 112], "run_4p": [196, 200], "run_5p": [196, 200], "run_cp": [196, 200], "run_cp_relax": [102, 103, 112], "run_deer": [102, 103, 112], "run_exp": [125, 138, 164, 165, 186, 187, 194], "run_fsweep": [102, 103, 112], "run_gener": 147, "run_long_d": [102, 103, 112], "run_quick_d": [102, 103, 112], "run_reptime_opt": [102, 103, 112], "run_respro": [102, 103, 112], "run_t2_relax": [102, 103, 112], "runadvancedautod": [80, 104, 111, 113], "runautod": [80, 104, 111, 113], "runfullyautod": [80, 104, 111, 113], "runner": [77, 102, 103, 104, 109, 112, 113, 115, 119, 121, 137], "runtimeerror": [201, 231], "safe": 251, "safeti": 251, "same": [25, 240], "samepl": [58, 59], "sampl": [236, 240, 241, 242, 246, 253], "sampleconccombobox_opt": 113, "sampling_freq": 163, "sat": 194, "satisfi": 249, "satisifi": [31, 61, 63, 72, 123, 131, 155, 174, 201], "satur": [42, 44, 46, 201], "save": [21, 23, 35, 36, 43, 53, 62, 63, 71, 73, 74, 75, 76, 90, 91, 97, 124, 125, 133, 134, 136, 138, 139, 144, 146, 147, 151, 156, 157, 159, 160, 161, 162, 164, 165, 175, 176, 181, 186, 187, 194, 201, 207, 208, 211, 221, 222, 227, 230, 241, 251, 253], "save_data": [80, 104, 111, 113], "save_fil": [201, 232], "save_log_to_fil": [105, 106, 108], "save_path": 214, "save_pulsespel_def": [125, 138, 164, 165, 186], "save_pulsespel_exp": [125, 138, 164, 165, 186], "savefold": [151, 160], "savenam": [31, 61, 63, 72, 122, 123, 126, 127, 131, 139, 151, 155, 160, 174, 184, 185, 201, 239, 246], "sbin": 238, "scale": [14, 19, 29, 36, 74, 82, 85, 88, 91, 127, 128, 139, 140, 148, 149, 153, 157, 162, 167, 169, 172, 176, 201, 202, 203, 206, 208, 211, 217, 222, 239, 244, 246], "scan": [13, 17, 27, 30, 39, 43, 47, 51, 53, 55, 56, 58, 59, 75, 81, 84, 87, 89, 93, 94, 95, 97, 98, 99, 125, 130, 136, 138, 146, 152, 154, 159, 163, 164, 165, 166, 168, 171, 173, 178, 179, 180, 181, 182, 183, 186, 187, 194, 196, 200, 201, 215, 216, 219, 220, 224, 225, 226, 227, 228, 229, 230, 239, 246], "scan_num": [125, 138, 164, 165, 186, 187, 194], "scenario": 246, "schweiger": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "scientif": 241, "scipi": [139, 198, 200], "scipy_filter_dc": 163, "scope": 8, "screen": 241, "script": [58, 59, 125, 138, 139, 164, 165, 186, 187, 194, 198, 200, 243, 247, 248, 251], "se": [17, 84, 168, 201, 216, 230, 240], "search": [18, 188, 190, 194, 201], "secant": [29, 88, 153, 172, 201, 206, 211, 236], "second": [12, 17, 40, 43, 44, 49, 53, 57, 68, 69, 75, 84, 97, 100, 136, 146, 159, 168, 181, 201, 216, 227, 230, 240], "section": 241, "secur": 238, "see": [17, 84, 168, 201, 216, 230, 246], "seen": 246, "select": [17, 58, 59, 84, 168, 201, 216, 230, 241, 243, 246, 251], "select_pcyc": [17, 84, 168, 201, 216, 230, 239, 240], "select_reson": [80, 104, 111, 113], "selectattr": [3, 8], "self": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 124, 132, 133, 134, 136, 142, 144, 146, 147, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230, 248, 255], "sensit": [236, 240], "sent": 251, "separ": [247, 248, 251], "seper": [199, 200, 239], "seq": [126, 139, 147, 160, 239], "seqtable_step": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230], "sequec": 248, "sequenc": [12, 13, 17, 18, 21, 23, 27, 30, 31, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 51, 53, 55, 56, 61, 62, 63, 71, 72, 73, 74, 75, 76, 81, 84, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 104, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 136, 138, 139, 142, 143, 144, 146, 147, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 201, 207, 208, 211, 215, 216, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 233, 239, 240, 243, 244, 247, 249, 253], "sequr": [18, 201], "seri": [48, 49, 50, 52, 67, 69, 96, 201, 236], "serial": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "seriou": 251, "session": [151, 160, 247], "set": [3, 8, 18, 33, 34, 58, 59, 117, 125, 127, 138, 139, 147, 164, 165, 186, 187, 194, 201, 236, 238, 240, 244, 249, 251, 254], "set_2d_max_tau": [102, 103, 112], "set_acquisition_mod": [125, 138, 164, 165, 186], "set_attenu": [125, 138, 164, 165, 186], "set_config_fil": [125, 138, 164, 165, 186], "set_eldor_freq": [125, 138, 164, 165, 186], "set_field": [125, 138, 164, 165, 186], "set_freq": [125, 138, 164, 165, 186], "set_hidden_param": [125, 138, 164, 165, 186], "set_mw_amp": [125, 138, 164, 165, 186], "set_noise_mod": [102, 103, 112], "set_param": [125, 138, 164, 165, 186], "set_phas": [125, 138, 164, 165, 186], "set_phasecycl": [125, 138, 164, 165, 186], "set_pulsespel_def_filepath": [125, 138, 164, 165, 186], "set_pulsespel_exp_filepath": [125, 138, 164, 165, 186], "set_pulsespel_experi": [125, 138, 164, 165, 186], "set_pulsespel_phase_cycl": [125, 138, 164, 165, 186], "set_pulsespel_var": [125, 138, 164, 165, 186, 187, 194], "set_replacemod": [125, 138, 164, 165, 186], "set_snr_target": [58, 59], "set_snr_threshold": [58, 59], "set_spectrometer_connected_light": [80, 104, 111, 113], "set_sweep_width": [125, 138, 164, 165, 186], "set_time_target": [58, 59], "set_video_bandwidth": [125, 138, 164, 165, 186], "set_video_gain": [125, 138, 164, 165, 186], "setup": [34, 77, 102, 103, 104, 109, 112, 113, 115, 119, 121, 122, 126, 127, 137, 139, 199, 200, 236, 246, 251], "setup_input": [107, 114, 117], "setup_log": [34, 251], "seven": [17, 84, 168, 201, 216, 230, 243], "seven_puls": [17, 84, 168, 201, 216, 230, 240], "shade_color": 64, "shape": [54, 201, 210, 211, 236, 240, 249], "share": 238, "shell": 237, "shift": [18, 254], "shift_detfreq_to_zero": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230], "shift_pulse_freq": 18, "short": [17, 84, 168, 201, 216, 230, 240, 247], "short_nam": [3, 6, 7, 8, 10], "shortest": 236, "shot": [12, 13, 17, 27, 30, 38, 39, 40, 41, 43, 44, 47, 51, 53, 55, 56, 58, 59, 75, 81, 84, 87, 89, 93, 94, 95, 97, 98, 99, 102, 103, 112, 122, 126, 130, 136, 146, 151, 152, 154, 159, 160, 166, 168, 171, 173, 178, 179, 180, 181, 182, 183, 184, 185, 201, 215, 216, 219, 220, 224, 225, 226, 227, 228, 229, 230, 236, 239, 240, 246, 248], "should": [15, 16, 18, 31, 52, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 72, 83, 96, 100, 123, 131, 147, 155, 174, 197, 198, 199, 200, 201, 231, 236, 238, 239, 241, 247, 251, 253], "shouldn": 251, "show": [3, 4, 8, 18, 201, 239], "shrt": [58, 59], "side": [18, 241, 248], "sign": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 248], "signal": [12, 18, 33, 34, 38, 40, 41, 44, 52, 58, 59, 67, 69, 77, 78, 96, 101, 102, 103, 104, 109, 110, 112, 113, 115, 116, 119, 120, 121, 137, 201, 236, 240, 246], "signific": [244, 247], "similar": 247, "simpl": [52, 67, 69, 96, 201, 241, 242, 243, 244, 246, 248], "simplest": 248, "simpli": [246, 248], "simplifi": 243, "simplist": 248, "simul": [17, 36, 74, 84, 91, 157, 162, 168, 176, 201, 208, 211, 216, 222, 230, 232], "simultan": 244, "sinc": [54, 57, 68, 69, 100, 201, 210, 211, 244, 248, 251], "sincpuls": [54, 201, 210, 211], "singl": [48, 49, 50, 122, 126, 151, 160, 163, 201, 240, 247, 248, 249, 253], "site": 243, "size": [12, 25, 38, 40, 41, 44, 201, 213, 214, 236], "slack": 251, "sleep": 239, "slice": [58, 59], "slightli": [244, 253], "small": [17, 84, 168, 201, 216, 230, 240], "smallest": [43, 53, 75, 97, 136, 146, 159, 181, 201, 227, 230], "smith": [52, 67, 69, 96, 201], "smooth": [22, 25, 26, 38, 41, 44, 201], "snr": [21, 44, 52, 58, 59, 67, 69, 71, 76, 96, 104, 121, 201, 236, 240, 246], "snr_normal": [58, 59], "snr_target": [12, 22, 25, 26, 38, 40, 41, 44, 52, 67, 69, 96, 201, 239], "snr_threshold": [58, 59], "snrcriteria": [52, 67, 69, 96, 201, 246], "snrpshot": [58, 59], "so": [33, 34, 36, 48, 49, 50, 58, 59, 74, 91, 157, 162, 176, 201, 208, 211, 222, 236, 239, 244, 246, 248, 251], "softwar": [36, 52, 67, 69, 74, 91, 96, 157, 162, 163, 176, 201, 208, 211, 222, 232, 234, 238, 243, 251], "solv": 246, "some": [58, 59, 151, 160, 236, 238, 251], "someth": 251, "somewhat": 241, "soon": [19, 85, 128, 140, 149, 169, 201, 203, 211, 217, 245, 246, 250], "sop": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "sourc": [0, 18, 25, 32, 34, 44, 49, 59, 60, 63, 64, 69, 76, 79, 103, 104, 106, 113, 117, 121, 126, 139, 147, 160, 163, 165, 185, 194, 200, 201, 211, 214, 230, 231, 232, 238, 244, 247], "space": [36, 58, 59, 74, 91, 157, 162, 176, 201, 208, 211, 222], "special": [32, 34, 247], "specif": [31, 33, 34, 57, 61, 63, 68, 69, 72, 100, 123, 125, 131, 138, 151, 155, 160, 164, 165, 174, 186, 187, 194, 201, 238, 241, 243, 244, 246, 247, 248, 249, 253], "specifi": [13, 27, 30, 32, 33, 34, 36, 39, 51, 55, 58, 59, 74, 81, 87, 89, 91, 93, 95, 98, 130, 152, 154, 157, 162, 166, 171, 173, 176, 178, 180, 182, 201, 208, 211, 215, 219, 220, 222, 224, 226, 228, 230, 236, 240, 242, 246, 253], "spectra": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "spectral": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "spectromet": [20, 23, 31, 35, 61, 62, 63, 70, 72, 73, 86, 90, 122, 123, 125, 126, 127, 129, 131, 133, 138, 139, 141, 147, 150, 151, 155, 156, 160, 161, 163, 164, 165, 170, 174, 175, 184, 185, 186, 194, 197, 200, 201, 204, 207, 211, 218, 221, 234, 238, 239, 242, 243, 244, 246, 247, 248, 249], "spectrometerinfo": 214, "spectrometr": [198, 199, 200], "spectrometrist": 248, "spectromt": 194, "spectroscop": [52, 67, 69, 96, 201], "spectroscopi": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 240], "spectrum": [25, 236], "speed": [16, 66, 69, 83, 151, 160, 201, 239, 240], "spel": [125, 138, 147, 164, 165, 186], "spell": [125, 138, 164, 165, 186, 187, 194], "sphere": 238, "sphinx": 0, "sphinx_copybutton": 0, "sphinx_toolbox": 0, "spin": [25, 201, 232, 239, 240, 243], "spindler": 240, "spinsystem": [24, 25], "spintyp": [22, 25, 26, 201], "spinx": 0, "spline": [22, 25, 26, 201], "split": 247, "splitlin": 4, "srt": [196, 197, 198, 199, 200], "ss": 239, "ssl": 238, "stabil": 247, "stabl": [58, 59, 125, 138, 164, 165, 186], "stage": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "stand": 251, "standard": [58, 59, 139, 198, 200, 246, 248, 251], "standardis": 241, "start": [14, 19, 29, 36, 74, 82, 85, 88, 91, 122, 125, 126, 127, 128, 138, 139, 140, 147, 148, 149, 151, 153, 157, 160, 162, 164, 165, 167, 169, 172, 176, 186, 199, 200, 201, 202, 203, 206, 208, 211, 217, 222, 236, 239, 247], "startup": [32, 34], "state": [43, 53, 75, 80, 97, 104, 111, 113, 125, 136, 138, 146, 159, 164, 165, 181, 186, 201, 227, 230, 251], "static": [17, 23, 35, 36, 62, 63, 73, 74, 84, 90, 91, 133, 156, 157, 161, 162, 168, 175, 176, 201, 207, 208, 211, 216, 221, 222, 230, 239, 248], "statment": 248, "statu": [101, 103, 241, 253], "std": [18, 58, 59], "stefan": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "step": [12, 17, 32, 34, 38, 40, 41, 44, 55, 58, 59, 84, 98, 125, 138, 143, 147, 164, 165, 168, 182, 186, 187, 194, 199, 200, 201, 216, 228, 230, 232, 238, 239, 240, 243, 248], "step_paramet": 139, "stepper": [125, 138, 164, 165, 186, 200], "still": [125, 138, 164, 165, 186, 187, 194, 234, 241, 243, 246, 247, 249], "stoehr": [52, 67, 69, 96, 201], "stoher": [52, 67, 69, 96, 201], "stoll": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "stop": [102, 103, 112, 125, 138, 151, 160, 164, 165, 186, 187, 194, 251], "stop_exp": [125, 138, 164, 165, 186, 187, 194], "stop_flag": 160, "stope": 251, "store": [122, 126, 127, 139, 151, 160], "store_loc": [80, 104, 111, 113, 121], "str": [12, 16, 17, 18, 22, 23, 25, 26, 31, 32, 34, 35, 36, 38, 40, 41, 43, 44, 52, 53, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 83, 84, 90, 91, 96, 97, 99, 100, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 136, 138, 139, 142, 144, 146, 147, 151, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 174, 175, 176, 181, 183, 184, 185, 186, 194, 198, 200, 201, 207, 208, 211, 214, 216, 221, 222, 227, 229, 230, 231, 232], "str_to_list_typ": [104, 121], "streasm": [213, 214], "string": [4, 18, 32, 34, 58, 59, 104, 121, 147, 151, 160, 188, 190, 194, 201], "strongli": 247, "structur": 251, "stuck": 238, "style": [32, 34, 151, 160, 163, 214, 246, 254], "sub": 247, "subclass": [15, 16, 33, 34, 52, 57, 65, 66, 67, 68, 69, 83, 96, 100, 201, 247], "sublogg": 251, "submit": 250, "submodul": 8, "subpackag": 8, "subplot": [58, 59], "success": 253, "sudo": 238, "suggest": [238, 251], "suit": 241, "sum": [17, 36, 48, 49, 50, 74, 84, 91, 157, 162, 168, 176, 201, 208, 211, 216, 222, 230], "summari": [8, 201, 214, 241], "superimpos": [44, 201], "suppli": [32, 34, 77, 102, 103, 104, 109, 112, 113, 115, 119, 121, 137, 147], "support": [20, 70, 78, 86, 101, 103, 104, 110, 113, 116, 120, 121, 129, 141, 150, 170, 201, 204, 211, 218, 238, 240, 243, 246, 247, 249, 254], "svd": [38, 41, 44, 201], "svg": [213, 214], "svgflowabl": [213, 214], "sweep": [18, 22, 25, 26, 27, 51, 87, 95, 122, 125, 126, 127, 138, 139, 152, 164, 165, 171, 180, 186, 187, 194, 199, 200, 201, 214, 219, 226, 230, 236, 246, 249], "swept": [14, 29, 82, 88, 148, 153, 167, 172, 201, 202, 206, 211, 240], "switch": 251, "symetr": [20, 70, 86, 129, 141, 150, 170, 201, 204, 211, 218], "sypport": [18, 201], "system": [25, 32, 34, 52, 67, 69, 96, 201, 236, 238, 243, 249, 251], "t": [14, 18, 19, 20, 29, 36, 37, 52, 58, 59, 67, 69, 70, 74, 82, 85, 86, 88, 91, 92, 96, 128, 129, 135, 140, 141, 145, 148, 149, 150, 153, 157, 158, 162, 163, 167, 169, 170, 172, 176, 177, 185, 189, 194, 201, 202, 203, 204, 206, 208, 209, 211, 217, 218, 222, 223, 239, 241, 248, 251], "t2": [55, 98, 182, 201, 228, 230], "t2_process": 113, "t2_result": [101, 103], "t2relaxationsequ": [55, 98, 182, 201, 228, 230], "tab": 241, "tabl": [17, 36, 45, 74, 84, 91, 104, 121, 125, 138, 151, 157, 160, 162, 164, 165, 168, 176, 186, 201, 208, 211, 212, 214, 216, 222, 230, 240, 248], "take": [33, 34, 36, 74, 91, 125, 138, 151, 157, 160, 162, 164, 165, 176, 186, 187, 194, 201, 208, 211, 222, 238, 239, 248, 253], "taken": [12, 38, 40, 41, 44, 201], "tar": 238, "target": [12, 18, 38, 40, 41, 44, 58, 59, 139, 197, 198, 200, 201], "target_mnr": [18, 201], "target_shrt": [12, 40, 44, 201, 239], "target_step": [12, 38, 40, 41, 44, 201, 239], "target_tim": [12, 18, 38, 40, 41, 44, 201, 239], "tau": [13, 17, 39, 81, 84, 93, 166, 168, 178, 196, 199, 200, 201, 215, 216, 224, 230, 239, 240], "tau1": [16, 17, 18, 38, 41, 44, 51, 58, 59, 66, 69, 83, 84, 95, 168, 180, 196, 197, 198, 200, 201, 216, 226, 230, 239, 240], "tau2": [16, 17, 18, 38, 41, 44, 51, 58, 59, 66, 69, 83, 84, 95, 168, 180, 196, 197, 198, 200, 201, 216, 226, 230, 239, 240], "tau3": [16, 17, 18, 66, 69, 83, 84, 168, 201, 216, 230, 239, 240], "tau4": [17, 84, 168, 201, 216, 230, 240], "tau_": 236, "tau_1": 236, "tau_2": 236, "tau_valu": 139, "tck_": 49, "tcl": 238, "team": [238, 247], "techniqu": 243, "teleport": 251, "temperatur": [241, 251], "templat": [32, 34], "term": [238, 248], "termin": [15, 16, 31, 52, 57, 61, 63, 65, 66, 67, 68, 69, 72, 83, 96, 100, 122, 123, 126, 127, 131, 139, 151, 155, 160, 174, 184, 185, 201, 246], "terminate_at": [31, 61, 63, 72, 123, 131, 155, 174, 201, 239, 246], "test": [15, 31, 52, 57, 61, 63, 65, 67, 68, 69, 72, 96, 100, 123, 131, 155, 174, 201, 234, 238, 246], "test_if_mpfu_compat": [126, 139], "test_interv": [31, 61, 63, 72, 123, 131, 155, 174, 201, 246], "test_main": [104, 201, 233], "test_puls": [122, 126, 248], "test_snr": [104, 121], "test_tp": 139, "text": [18, 32, 34, 45, 201, 212, 214, 241], "textual": [32, 34], "than": [18, 104, 121, 147, 151, 160, 197, 198, 199, 200, 201, 236, 240, 246, 251], "thei": [32, 34, 48, 49, 50, 58, 59, 201, 236, 240, 246, 248, 249], "them": [17, 36, 74, 84, 91, 157, 162, 168, 176, 201, 208, 211, 216, 222, 230, 240, 247], "theme": 0, "thi": [1, 15, 16, 18, 19, 20, 23, 30, 31, 33, 34, 35, 36, 43, 47, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 83, 85, 86, 89, 90, 91, 94, 96, 97, 98, 99, 100, 102, 103, 104, 109, 112, 113, 115, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 146, 147, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 169, 170, 173, 174, 175, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 194, 197, 198, 199, 200, 201, 203, 204, 207, 208, 210, 211, 217, 218, 220, 221, 222, 225, 227, 228, 229, 230, 232, 233, 234, 236, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 253, 255], "think": [239, 248], "third": [240, 244], "thompson": [52, 67, 69, 96, 201], "thre": [101, 102, 103, 112], "thread": [32, 34, 77, 78, 102, 103, 104, 109, 110, 112, 113, 115, 116, 119, 120, 121, 122, 126, 127, 137, 139], "threadnam": [32, 34], "three": [239, 240, 242, 250], "three_puls": [17, 84, 168, 201, 216, 230], "threshold": [25, 44, 48, 49, 50, 58, 59, 201, 239, 246], "through": [58, 59, 77, 102, 103, 104, 109, 112, 113, 115, 119, 121, 125, 137, 138, 147, 164, 165, 186, 240, 243, 247], "thrown": [58, 59], "ti": 238, "time": [12, 13, 14, 17, 18, 19, 20, 27, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 43, 44, 47, 51, 53, 55, 56, 57, 58, 59, 68, 69, 70, 74, 75, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 104, 111, 113, 122, 126, 128, 129, 130, 135, 136, 140, 141, 145, 146, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 162, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 201, 202, 203, 204, 206, 208, 209, 211, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 239, 240, 241, 244, 246, 247, 248, 251, 253], "timecriteria": [57, 68, 69, 100, 201], "timei": [58, 59], "timeout": [80, 101, 103, 104, 111, 113], "timestamp": [31, 61, 63, 72, 122, 123, 126, 127, 131, 139, 155, 174, 184, 185, 201], "timex": [58, 59], "titl": [8, 45, 58, 59, 125, 138, 164, 165, 186, 192, 193, 194, 201, 212, 214], "titlesonli": 8, "tk": 238, "tmin": 117, "tmp": 251, "toctre": 8, "todai": 251, "togeth": [240, 246], "tol": [139, 198, 200], "toler": [139, 198, 200], "too": [151, 160, 251], "tool": [80, 104, 109, 110, 111, 113, 151, 160, 201, 233, 242], "toolbar": [107, 114, 117], "toolbox": [243, 249], "top": [58, 59, 201, 214, 241], "total": [12, 13, 17, 18, 20, 38, 39, 40, 41, 44, 58, 59, 70, 81, 84, 86, 93, 129, 141, 150, 166, 168, 170, 178, 201, 204, 211, 215, 216, 218, 224, 230, 239, 240], "total_shot": [58, 59], "tp": [14, 17, 19, 20, 28, 29, 36, 37, 54, 70, 74, 82, 84, 85, 86, 88, 91, 92, 122, 126, 127, 128, 129, 135, 139, 140, 141, 145, 148, 149, 150, 151, 153, 157, 158, 160, 162, 167, 168, 169, 170, 172, 176, 177, 184, 185, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 216, 217, 218, 222, 223, 230, 239, 246, 248], "trace": [17, 48, 49, 50, 84, 168, 201, 216, 230], "traceback": [78, 101, 103, 104, 110, 113, 116, 120, 121], "tradit": [243, 249], "train": 248, "transfer": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 249], "transient": [125, 138, 164, 165, 186], "transpose_dict_of_list": [201, 232], "transpose_list_of_dict": [201, 232], "trival": 246, "trivial": 246, "true": [4, 12, 18, 22, 25, 26, 31, 32, 34, 36, 38, 40, 41, 43, 44, 53, 61, 63, 72, 74, 75, 91, 97, 102, 103, 112, 122, 123, 125, 126, 127, 131, 136, 138, 139, 146, 147, 151, 155, 157, 159, 160, 162, 163, 164, 165, 174, 176, 181, 186, 200, 201, 208, 211, 222, 227, 230, 232, 239, 242, 244], "truli": 246, "truncat": 4, "try": [125, 138, 164, 165, 186, 250], "tun": [122, 126, 151, 160, 198, 200, 249], "tune": [47, 94, 122, 126, 127, 139, 151, 160, 179, 197, 198, 199, 200, 201, 225, 230, 239, 243], "tune_nut": [122, 126], "tune_phas": [139, 198, 200], "tune_pow": [139, 198, 200], "tune_puls": [102, 103, 112, 122, 126, 127, 139, 151, 160, 184, 185, 239, 246], "tune_rect": 246, "tune_rectpuls": [122, 126, 127, 139, 151, 160, 184, 185, 239], "tupl": [18, 48, 49, 50, 58, 59, 78, 101, 103, 104, 110, 113, 116, 120, 121, 147, 201], "turn": [201, 232, 238, 253], "two": [18, 23, 34, 35, 36, 48, 49, 50, 62, 63, 73, 74, 90, 91, 133, 147, 156, 157, 161, 162, 175, 176, 201, 207, 208, 211, 221, 222, 240, 244, 247, 248, 251, 255], "twod_experi": [201, 233], "twodexperimentanalysi": [58, 59], "twt": [56, 99, 183, 201, 229, 230, 247, 249], "twtprofilesequ": [56, 99, 183, 201, 229, 230], "txt": [58, 59], "type": [3, 4, 8, 10, 12, 17, 18, 21, 25, 38, 40, 41, 44, 63, 71, 76, 84, 104, 121, 126, 139, 147, 160, 163, 165, 168, 185, 188, 190, 191, 194, 198, 200, 201, 214, 216, 230, 231, 232, 238, 239, 242, 244, 247, 248, 253], "typeerror": [23, 35, 36, 43, 53, 62, 63, 73, 74, 75, 90, 91, 97, 133, 136, 146, 156, 157, 159, 161, 162, 175, 176, 181, 201, 207, 208, 211, 221, 222, 227, 230], "typic": [32, 34], "u": [12, 13, 17, 18, 23, 27, 30, 35, 38, 39, 40, 41, 43, 44, 47, 51, 53, 55, 56, 58, 59, 62, 63, 73, 75, 81, 84, 87, 89, 90, 93, 94, 95, 97, 98, 99, 122, 126, 130, 133, 136, 146, 151, 152, 154, 156, 159, 160, 161, 166, 168, 171, 173, 175, 178, 179, 180, 181, 182, 183, 201, 207, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 239, 240, 245], "uncert": [104, 121], "uncertainti": 251, "unchang": [127, 139], "unclear": 234, "underlin": 11, "uniqu": 139, "unit": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 239, 243, 249], "unitless": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 242], "unix": 251, "unknown": 236, "unless": [236, 251], "unlik": 248, "unnecessari": 251, "until": [125, 138, 164, 165, 186, 236, 238], "unwant": 248, "up": [77, 80, 102, 103, 104, 109, 111, 112, 113, 115, 119, 121, 137, 240, 248, 249, 251, 254], "updat": [58, 59, 238, 253, 254], "update_analysis_t": [107, 114, 117], "update_deerset": [102, 103, 112], "update_fieldsweep": [80, 104, 111, 113], "update_figur": [107, 114, 117], "update_fit_result": [107, 114, 117], "update_func": [16, 66, 69, 83, 107, 114, 117, 201], "update_gyro": [102, 103, 112], "update_inputs_from_dataset": [107, 114, 117], "update_lo": [102, 103, 112], "update_log_text": [105, 106, 108], "update_longd": [80, 104, 111, 113], "update_optimise_pulses_figur": [80, 104, 111, 113], "update_pulsespel": [122, 126, 127, 139], "update_quickd": [80, 104, 111, 113], "update_relax": [80, 104, 111, 113], "update_relax2d": [80, 104, 111, 113], "update_reptim": [80, 102, 103, 104, 111, 112, 113], "update_respro": [80, 104, 111, 113], "update_t2": [80, 104, 111, 113], "upgrad": [0, 244], "upon": [18, 31, 36, 61, 63, 72, 74, 91, 123, 131, 155, 157, 162, 163, 174, 176, 201, 208, 211, 222, 247], "uprog": 147, "us": [0, 13, 15, 16, 17, 18, 22, 23, 25, 26, 27, 30, 32, 33, 34, 35, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 62, 63, 65, 66, 67, 68, 69, 73, 81, 83, 84, 87, 89, 90, 93, 94, 95, 96, 98, 100, 122, 125, 126, 130, 133, 138, 139, 151, 152, 154, 156, 160, 161, 163, 164, 165, 166, 168, 171, 173, 175, 178, 179, 180, 182, 186, 187, 194, 197, 198, 199, 200, 201, 207, 215, 216, 219, 220, 221, 224, 225, 226, 228, 230, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 251, 253, 255], "useful": [58, 59], "user": [32, 34, 58, 59, 234, 239, 241, 242, 243, 246, 249, 251, 253, 254, 255], "user_input": [102, 103, 112], "userinput": 214, "usestim": [32, 34], "usr": 238, "usual": [32, 34], "utf": 251, "util": [201, 233], "uuid": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222], "uwb_ev": 163, "uwb_eval_match": 163, "uwb_load": 163, "v": [189, 194], "val": [125, 138, 164, 165, 186], "val_in_n": [185, 201, 232], "val_in_u": [185, 201, 232], "valid": [32, 34], "valu": [4, 17, 18, 23, 31, 32, 34, 35, 36, 52, 58, 59, 61, 62, 63, 67, 69, 72, 73, 74, 78, 84, 90, 91, 96, 101, 103, 104, 110, 113, 116, 120, 121, 122, 123, 125, 126, 127, 131, 133, 138, 139, 151, 155, 156, 157, 160, 161, 162, 164, 165, 168, 174, 175, 176, 184, 185, 186, 187, 191, 194, 198, 200, 201, 207, 208, 211, 216, 221, 222, 230, 232, 239, 246], "value_at_po": [58, 59], "value_at_tim": [58, 59], "valueerror": [147, 201, 231], "var": 147, "vari": [23, 35, 58, 59, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221, 236], "variabl": [36, 58, 59, 74, 91, 125, 138, 139, 147, 157, 162, 164, 165, 176, 186, 187, 194, 201, 208, 211, 222, 248], "variant": 243, "varieti": [243, 249], "vector": [18, 201], "verbos": [16, 18, 31, 49, 52, 61, 63, 66, 67, 69, 72, 83, 96, 123, 131, 151, 155, 160, 163, 174, 201, 239], "veri": [58, 59, 234, 244], "version": [22, 25, 26, 32, 33, 34, 163, 201, 231, 237, 238, 239, 244], "vertic": [18, 201], "via": 234, "video": [125, 138, 164, 165, 186, 242], "view": 248, "vim": 18, "virtual": [23, 35, 62, 63, 73, 90, 133, 156, 161, 175, 201, 207, 221], "visible_attribut": [3, 8], "visible_children": 8, "visible_class": [3, 8], "visible_funct": 8, "visible_method": 3, "visible_properti": 3, "visible_submodul": 8, "visible_subpackag": 8, "vol": [52, 67, 69, 96, 201], "voltag": 244, "vpsave": [192, 193, 194], "vre": 18, "w": [52, 67, 69, 96, 201, 242], "wa": [32, 34, 58, 59, 238, 240, 249, 251], "wai": [237, 238, 241, 244, 246, 248, 250, 255], "wait": [102, 103, 112, 125, 138, 164, 165, 186], "wait_condit": [107, 114, 117], "walk": [243, 249], "want": [32, 34, 238, 239, 246, 248], "warn": [19, 32, 34, 58, 59, 85, 128, 140, 149, 169, 201, 203, 211, 217, 251], "waveform": [18, 201], "waveform_precis": [18, 201], "we": [236, 237, 238, 239, 244, 246, 247, 248, 250, 251, 253], "wee": [58, 59], "week": 251, "weekli": 251, "well": [18, 201, 234, 239, 241, 248], "wget": 238, "what": [18, 201, 236, 237, 239, 247, 251], "whatev": [33, 34], "when": [32, 34, 236, 237, 239, 243, 244, 246, 247, 248, 251], "where": [32, 34, 55, 98, 182, 201, 228, 230, 236, 240, 246], "which": [17, 18, 32, 33, 34, 43, 48, 49, 50, 52, 53, 56, 58, 59, 67, 69, 75, 84, 96, 97, 99, 136, 146, 159, 168, 181, 183, 201, 216, 227, 229, 230, 236, 238, 240, 241, 246, 247, 248], "while": 239, "whilst": [34, 125, 138, 164, 165, 186, 187, 194, 240, 243, 244, 246, 249], "white": [52, 67, 69, 96, 201], "whole": 246, "whose": 18, "wide": [34, 241, 243], "wideband": 248, "wider": 248, "width": [4, 27, 28, 51, 87, 95, 125, 138, 152, 163, 164, 165, 171, 180, 186, 201, 205, 211, 219, 226, 230, 239], "win": 163, "window": [54, 79, 201, 210, 211], "wish": 241, "within": [239, 241], "without": [194, 248], "work": [17, 52, 67, 69, 84, 96, 125, 138, 151, 160, 164, 165, 168, 186, 187, 194, 201, 216, 230, 234, 236, 246, 247, 249, 253], "worker": [77, 78, 101, 102, 103, 104, 109, 110, 112, 113, 115, 116, 119, 120, 121, 137], "workersign": [78, 104, 110, 113, 116, 120, 121], "world": 194, "would": [17, 84, 168, 201, 216, 230, 240, 246], "wrap": [77, 102, 103, 104, 109, 112, 113, 115, 119, 121, 137, 213, 214], "write": [147, 243, 244, 246, 247, 248, 249], "write_pulsespel_fil": 147, "writen": 244, "written": [243, 249, 251], "wrong": [147, 251], "x": [13, 17, 36, 39, 49, 58, 59, 74, 81, 84, 91, 93, 139, 157, 162, 166, 168, 176, 178, 198, 200, 201, 208, 211, 215, 216, 222, 224, 230, 232, 239, 240, 242, 244], "xarrai": [22, 25, 26, 48, 49, 50, 201, 231], "xarray_obj": [21, 71, 76, 201], "xaxi": 25, "xepr": [125, 138, 147, 164, 165, 186, 194, 200, 244, 247], "xepr_experi": [195, 201, 233], "xepr_inst": [125, 138, 164, 165, 186], "xepr_path": 165, "xepr_sav": [125, 138, 164, 165, 186], "xeprapi": [238, 243, 244, 247, 249], "xeprapi_link": [187, 194, 195, 201, 233], "xeprapilink": [125, 138, 164, 165, 186, 187, 194, 197, 199, 200], "xeprcmd": [192, 193, 194], "xeprdataset": [192, 194], "xeprexperi": [192, 194], "xp": [17, 84, 168, 201, 216, 230, 240], "xr": [44, 48, 49, 50, 201], "xthe": 251, "xtol": 242, "xvf": 238, "xvii": [52, 67, 69, 96, 201], "y": [17, 25, 36, 39, 58, 59, 74, 84, 91, 93, 139, 157, 162, 168, 176, 178, 198, 200, 201, 208, 211, 216, 222, 224, 230, 232, 238, 239, 240, 242, 244], "yaml": [122, 126, 127, 139, 242, 244, 253], "year": 240, "yet": [234, 244], "yield": [32, 34], "you": [17, 32, 34, 84, 168, 201, 216, 230, 237, 238, 240, 241, 244, 245, 246, 247, 248, 250, 251, 253], "your": [32, 34, 239, 241, 244, 247, 250], "yum": 238, "z": [36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232], "zero": [36, 43, 48, 49, 50, 53, 56, 74, 75, 91, 97, 99, 136, 146, 157, 159, 162, 176, 181, 183, 201, 208, 211, 222, 227, 229, 230, 248], "zlib": 238, "zsh": 237, "z\u00fcrich": [151, 160], "\u03c0": 239}, "titles": ["Building the documentation", "API Reference", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.DEER_analysis</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.FieldSweep</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.Logging</span></code>", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.Relaxation</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.ResPro</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.TwoD_Experiment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer._version</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.colors</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.criteria</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.dataset</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.__main__</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.autoDEER_worker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.log</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.main</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.quickdeer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.test_main</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.gui.tools</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_AWG</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_MPFU</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.Bruker_tools</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.ETH_awg</span></code>", "&lt;no title&gt;", "References:", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.ETH_awg_load</span></code>", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.XeprAPI_link</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.dummy</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.dummy_xepr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.hardware.xepr_experiments</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.pulses</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.reporter</span></code>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "References:", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.sequences</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.tools</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">autodeer.utils</span></code>", "API Reference", "Welcome to autoDEER!", "API doc", "The Automated Algorithum", "Installation", "Installing Python", "Jupyter Interface", "DEER Variants", "GUI Interface", "Configuration File", "autoDEER", "Bruker Interface", "Creating a custom interface", "Getting Started", "Interfaces", "Creating a Custom Sequence", "autoEPR", "Contributing Guide", "Logging:", "Developing", "autoDEER GUI", "Release Notes", "Tutorial"], "titleterms": {"": 234, "0": 254, "01": 254, "04": 254, "1": [236, 246, 253], "2": [236, 246, 253], "2024": 254, "3": [236, 246, 253], "4": [236, 240, 246, 253], "5": [236, 240, 246], "6": 236, "7": [236, 238, 240, 254], "8": [236, 254], "The": [236, 238], "__main__": 79, "_version": 60, "advanc": [241, 253], "after": 241, "algorithum": 236, "an": [241, 253], "analysi": [235, 246, 253], "api": [1, 233, 235], "attribut": [18, 44, 69, 106, 113, 117, 139, 147, 160, 165, 185, 194, 200, 201, 214, 231], "autod": [18, 25, 34, 44, 49, 59, 60, 63, 64, 69, 76, 79, 103, 104, 106, 113, 117, 118, 121, 126, 139, 147, 160, 163, 165, 185, 194, 195, 200, 201, 211, 214, 230, 231, 232, 234, 243, 253], "autodeer_work": 103, "autoepr": 249, "autom": 236, "automat": 241, "bruker": [244, 247], "bruker_awg": 126, "bruker_mpfu": 139, "bruker_tool": 147, "brukermpfu": 242, "build": 0, "call": 251, "cento": 238, "chirp": 248, "class": [25, 34, 44, 49, 59, 63, 69, 76, 103, 104, 106, 113, 117, 121, 126, 139, 147, 160, 165, 185, 194, 200, 201, 211, 214, 230, 235], "color": 64, "configur": [242, 244], "connect": [241, 253], "content": [18, 25, 34, 44, 49, 59, 60, 63, 64, 69, 76, 79, 103, 104, 106, 113, 117, 121, 126, 139, 147, 160, 163, 165, 185, 194, 200, 201, 211, 214, 230, 231, 232], "contribut": 250, "creat": [245, 248], "criteria": [69, 235], "current": 248, "custom": [245, 247, 248], "cycl": 240, "data": 246, "dataset": 76, "deer": [236, 239, 240], "deer_analysi": 18, "defin": 246, "develop": 252, "doc": [0, 235], "document": 0, "dummi": 185, "dummy_xepr": 194, "dure": 241, "eth_awg": 160, "eth_awg_load": 163, "ethawg": 242, "exampl": 242, "experi": [236, 241, 253], "explain": 236, "faq": 238, "featur": [234, 249], "field": 239, "fieldsweep": [25, 236], "file": [242, 244], "final": 236, "first": 248, "from": 237, "fulli": 241, "function": [18, 25, 34, 44, 49, 76, 104, 113, 117, 121, 126, 139, 147, 160, 163, 185, 200, 201, 211, 214, 231, 232, 235], "get": [244, 246], "gui": [79, 103, 104, 106, 113, 117, 118, 121, 241, 253], "guid": 250, "hardwar": [126, 139, 147, 160, 163, 165, 185, 194, 195, 200], "i": [235, 248], "includ": 249, "initi": 236, "input": 236, "instal": [0, 237, 238], "interfac": [235, 239, 241, 244, 245, 247], "jupyt": 239, "kei": 234, "lab": 253, "level": 251, "limit": 236, "log": [34, 106, 251], "logger": 251, "main": [113, 235], "messag": 251, "method": [18, 201], "mode": [241, 253], "modul": [18, 25, 34, 44, 49, 59, 60, 63, 64, 69, 76, 79, 103, 106, 113, 117, 121, 126, 139, 147, 160, 163, 165, 185, 194, 200, 211, 214, 230, 231, 232, 235], "ndeer": 240, "next": 246, "note": 254, "o": 235, "optimis": [235, 236], "overview": 242, "packag": [0, 104, 201], "paramet": 236, "pdf": 253, "phase": 240, "plot": 235, "post": 251, "print": 253, "profil": [236, 239], "puls": [211, 235, 240, 248], "python": 238, "quickdeer": 117, "recommend": 241, "refer": [1, 36, 74, 91, 157, 162, 176, 201, 208, 211, 222, 232, 233, 240], "relax": [44, 236], "releas": 254, "report": [214, 253], "reson": [236, 239], "respro": 49, "return": [18, 201], "rollov": 251, "scan": 236, "script": 246, "select": 240, "sequenc": [230, 235, 236, 246, 248], "set": 246, "setup": 239, "shape": 248, "solut": 238, "sourc": 237, "spectromet": [241, 253], "srt": 236, "start": [241, 244, 246, 251, 253], "step": [236, 246], "stop": 246, "studi": 236, "submodul": [104, 195, 201], "subpackag": 201, "support": 248, "sweep": 239, "tba": 254, "termin": 235, "test_main": 118, "tool": [121, 231], "tune": 246, "tutori": 255, "twod_experi": 59, "up": 246, "us": 248, "user": 236, "util": [232, 235], "variant": 240, "version": [240, 254], "view": 253, "welcom": 234, "what": 248, "window": 238, "xepr_experi": 200, "xeprapi_link": 165, "your": [246, 248]}})